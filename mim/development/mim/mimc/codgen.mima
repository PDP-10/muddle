
<PACKAGE "CODGEN">

<ENTRY GEN CODE-GEN SEQ-GEN SEGMENT-STACK GOOD-TUPLE NO-KILL DELAY-KILL BASEF LADDR TRUE-FALSE SUBR-GEN BIND-CODE NPRUNE ARG? OPT? COND-GEN OR-GEN AND-GEN ASSIGNED?-GEN BIND-B ACT-B AUX1-B AUX2-B SMSUBR-CALL CALL-GEN T-NAME GASSIGNED?-GEN INTERFERE? INTERF-CHANGE SEGLABEL SEGCALLED COUNTMP SET-GEN PSEQ-GEN>

<USE "CHKDCL" "COMPDEC" "MIMGEN" "STRGEN" "MAPGEN" "MMQGEN" "BUILDL" "BITSGEN" "LNQGEN" "CARGEN" "NOTGEN" "ALLR" "SUBRTY" "NEWREP" "ADVMESS" "CASECOMP">

<SETG THE-UNBOUND <CHTYPE 0 T$UNBOUND>>

"	This file contains the major general codde generators.  These include
 variable access functions (LVAL, SETG etc.), FSUBRs (COND, AND, REPEAT)
 and a few assorted others."

" Main generator, dispatches to specific code generators. "

#WORD *27750327121*
<GFCN GEN ("VALUE" ANY NODE "OPTIONAL" ANY) NOD6 WHERE7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH 'DONT-CARE>
OPT5
		    <TEMP TEMP8>
		    <INTGO>
		    <FRAME 'GEN-DISPATCH>
		    <PUSH NOD6>
		    <PUSH WHERE7>
		    <DEAD WHERE7>
		    <CALL 'GEN-DISPATCH 2 = TEMP8>
		    <GEN-ASSIGNED? 'NPRUNE + BOOL10>
		    <PUTUV NOD6 5 () (TYPE LIST)>
		    <DEAD NOD6>
BOOL10
		    <RETURN TEMP8>
		    <DEAD TEMP8>
		    <END GEN>
" Generate a sequence of nodes flushing all values except the ladt."

#WORD *1036732747*
<GFCN SEQ-GEN ("VALUE" ANY <LIST [REST NODE]> ANY "OPTIONAL" ANY ANY ANY) L8 WHERE9 INPROG10 SINPROG11 INCODE-GEN12>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <TEMP (WSET14 %<>) TEMP21:LIST N26:LIST ND27 TEMP32 NX28>
		    <INTGO>
		    <SET TEMP21 L8 (TYPE LIST)>
		    <DEAD L8>
		    <LOOP>
MAP16
		    <INTGO>
		    <EMPL? TEMP21 + MAPAP19>
		    <SET N26 TEMP21>
		    <NTHL N26 1 = ND27 (TYPE NODE)>
		    <RESTL N26 1 = TEMP32 (TYPE LIST)>
		    <EMPL? TEMP32 + PHRASE31 (TYPE LIST)>
		    <DEAD TEMP32>
		    <RESTL N26 1 = TEMP32 (TYPE LIST)>
		    <NTHL TEMP32 1 = NX28 (TYPE NODE)>
		    <DEAD TEMP32>
		    <NTHUV NX28 1 = TEMP32 (TYPE FIX)>
		    <VEQUAL? TEMP32 90 - PHRASE34 (TYPE FIX)>
		    <DEAD TEMP32>
		    <NTHUV NX28 5 = NX28 (TYPE LIST)>
		    <EMPL? NX28 + PHRASE34>
		    <RESTL NX28 1 = TEMP32 (TYPE LIST)>
		    <EMPL? TEMP32 + PHRASE34>
		    <DEAD TEMP32>
		    <NTHL NX28 1 = TEMP32 (TYPE NODE)>
		    <DEAD NX28>
		    <NTHUV TEMP32 4 = TEMP32>
		    <EQUAL? TEMP32 '`ENDIF - PHRASE34>
		    <DEAD TEMP32>
		    <FRAME 'GEN>
		    <PUSH ND27>
		    <DEAD ND27>
		    <PUSH WHERE9>
		    <CALL 'GEN 2 = ND27>
		    <VEQUAL? WSET14 0 - PHRASE38>
		    <EQUAL? WHERE9 'FLUSHED + PHRASE38>
		    <GVAL 'NO-DATUM = TEMP32>
		    <EQUAL? TEMP32 ND27 + PHRASE38>
		    <DEAD TEMP32>
		    <GVAL 'POP-STACK = TEMP32>
		    <EQUAL? TEMP32 WHERE9 + PHRASE38>
		    <DEAD TEMP32>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH WHERE9>
		    <DEAD WHERE9>
		    <PUSH ND27>
		    <DEAD ND27>
		    <CALL 'FIXUP-TEMP 2 = WHERE9>
		    <SET WSET14 'T (TYPE ATOM)>
PHRASE38
		    <RESTL N26 1 = TEMP32 (TYPE LIST)>
		    <DEAD N26>
		    <RESTL TEMP32 1 = TEMP32 (TYPE LIST)>
		    <EMPL? TEMP32 + PHRASE53 (TYPE LIST)>
		    <DEAD TEMP32>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH WHERE9>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <JUMP + PHRASE53>
PHRASE34
		    <LENUV ND27 = TEMP32 (TYPE FIX)>
		    <LESS? TEMP32 8 + BOOL47 (TYPE FIX)>
		    <DEAD TEMP32>
		    <NTHUV ND27 8 = TEMP32>
		    <TYPE? TEMP32 <TYPE-CODE FALSE> - BOOL46>
		    <DEAD TEMP32>
BOOL47
		    <FRAME 'GETPROP>
		    <PUSH ND27>
		    <PUSH 'DONT-FLUSH-ME>
		    <CALL 'GETPROP 2 = TEMP32>
		    <TYPE? TEMP32 <TYPE-CODE FALSE> - BOOL46>
		    <DEAD TEMP32>
		    <GVAL 'DONT-FLUSH-ME = TEMP32>
		    <TYPE? TEMP32 <TYPE-CODE FALSE> + PHRASE53>
		    <DEAD TEMP32>
BOOL46
		    <FRAME 'GEN>
		    <PUSH ND27>
		    <DEAD ND27>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN 2>
		    <JUMP + PHRASE53>
PHRASE31
		    <NTHUV ND27 1 = TEMP32 (TYPE FIX)>
		    <VEQUAL? TEMP32 90 - PHRASE50 (TYPE FIX)>
		    <DEAD TEMP32>
		    <NTHUV ND27 5 = NX28 (TYPE LIST)>
		    <EMPL? NX28 + PHRASE50>
		    <RESTL NX28 1 = TEMP32 (TYPE LIST)>
		    <EMPL? TEMP32 + PHRASE50>
		    <DEAD TEMP32>
		    <NTHL NX28 1 = TEMP32 (TYPE NODE)>
		    <DEAD NX28>
		    <NTHUV TEMP32 4 = TEMP32>
		    <EQUAL? TEMP32 '`ENDIF - PHRASE50>
		    <DEAD TEMP32>
		    <FRAME 'GEN>
		    <PUSH ND27>
		    <DEAD ND27>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN 2>
		    <JUMP + PHRASE53>
PHRASE50
		    <FRAME 'GEN>
		    <PUSH ND27>
		    <DEAD ND27>
		    <PUSH WHERE9>
		    <DEAD WHERE9>
		    <CALL 'GEN 2 = WHERE9>
PHRASE53
		    <RESTL TEMP21 1 = TEMP21 (TYPE LIST)>
		    <JUMP + MAP16>
MAPAP19
		    <RETURN WHERE9>
		    <DEAD WHERE9>
		    <END SEQ-GEN>
" The main code generation entry (called from CDRIVE).  Sets up initial
 stack model, calls to generate code for the bindings and generates code for
 the function's body."

#WORD *31133576555*
<GFCN CODE-GEN ("VALUE" LIST NODE ANY) BASEF4 EXTRA-CODE5>
		    <TEMP TEMP3:LBIND TEMP27 TEMP28 K6 ATAG10:ATOM RTAG11:ATOM BNDTMP23:TEMP>
		    <INTGO>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <BBIND 'BASEF 'NODE %<> BASEF4>
		    <DEAD BASEF4>
		    <FIXBIND>
		    <NTHR 'BASEF 2 = TEMP28 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP28 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <DEAD TEMP28>
		    <NTHUV TEMP27 5 = K6 (TYPE LIST)>
		    <DEAD TEMP27>
		    <BBIND 'NO-KILL 'LIST 'FIX ()>
		    <BBIND 'KILL-LIST 'LIST 'FIX ()>
		    <FRAME 'MAKE-TAG>
		    <PUSH "AGAIN">
		    <CALL 'MAKE-TAG 1 = ATAG10>
		    <FRAME 'MAKE-TAG>
		    <PUSH "RETURN">
		    <CALL 'MAKE-TAG 1 = RTAG11>
		    <BBIND 'CODE-START 'LIST 'FIX EXTRA-CODE5>
		    <DEAD EXTRA-CODE5>
		    <NTHR 'CODE-START 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <BBIND 'CODE-PTR 'LIST 'FIX TEMP27>
		    <DEAD TEMP27>
		    <BBIND 'EVERY-TEMP 'LIST 'FIX ()>
		    <BBIND 'ARGS-NEXT 'LIST 'FIX>
		    <BBIND 'TMPS 'FORM 'FIX>
		    <BBIND 'TMPS-NEXT 'LIST 'FIX>
		    <BBIND 'STK 'FIX 'FIX 0>
		    <BBIND 'FREE-TEMPS <LIST [REST TEMP]> 'FIX ()>
		    <BBIND 'ALL-TEMPS-LIST 'LIST 'FIX ()>
		    <BBIND 'TMP-DEST 'ATOM 'FIX>
		    <BBIND 'SPECD 'ANY 'FIX>
		    <BBIND 'STKTMP 'ANY 'FIX>
		    <BBIND 'STK-CHARS7 'FIX 'FIX 0>
		    <BBIND 'STK-CHARS8 'FIX 'FIX 0>
		    <FRAME 'MIM-FCN>
		    <NTHR 'BASEF 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP27 4 = STACK>
		    <DEAD TEMP27>
		    <NTHR 'BASEF 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP27 9 = STACK>
		    <DEAD TEMP27>
		    <NTHR 'BASEF 2 = TEMP28 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP28 1 = TEMP28 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP28 12 = TEMP27>
		    <DEAD TEMP28>
		    <TYPE? TEMP27 <TYPE-CODE FALSE> - BOOL40>
		    <FRAME 'ACTIV?>
		    <NTHR 'BASEF 2 = TEMP28 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP28 1 = TEMP28 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP28 10 = STACK (TYPE LIST)>
		    <DEAD TEMP28>
		    <CALL 'ACTIV? 1 = TEMP27>
		    <VEQUAL? TEMP27 0 - BOOL40>
		    <FRAME 'GETPROP>
		    <NTHR 'BASEF 2 = TEMP28 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP28 1 = TEMP28 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP28 4 = STACK>
		    <DEAD TEMP28>
		    <PUSH 'FRAME>
		    <CALL 'GETPROP 2 = TEMP27>
		    <TYPE? TEMP27 <TYPE-CODE FALSE> - BOOL40>
		    <FRAME 'GETPROP>
		    <NTHR 'BASEF 2 = TEMP28 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP28 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP28>
		    <PUSH 'UNWIND>
		    <CALL 'GETPROP 2 = TEMP27>
BOOL40
		    <PUSH TEMP27>
		    <DEAD TEMP27>
		    <CALL 'MIM-FCN 3>
		    <FRAME 'MIM-TEMPS-HOLD>
		    <CALL 'MIM-TEMPS-HOLD 0>
		    <FRAME 'BIND-CODE>
		    <NTHR 'BASEF 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <PUSH %<>>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = BNDTMP23>
		    <PUSH BNDTMP23>
		    <CALL 'BIND-CODE 3 = TEMP27>
		    <NTHR 'SPECD 2 = TEMP28 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP28 1 TEMP27 (RECORD-TYPE LBIND)>
		    <DEAD TEMP28 TEMP27>
		    <NTHR 'BASEF 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP27 19 = TEMP27>
		    <TYPE? TEMP27 <TYPE-CODE FALSE> + PHRASE60>
		    <DEAD TEMP27>
		    <FRAME 'IEMIT>
		    <PUSH '`LOOP>
		    <CALL 'IEMIT 1>
PHRASE60
		    <FRAME 'LABEL-TAG>
		    <PUSH ATAG10>
		    <CALL 'LABEL-TAG 1>
		    <NTHR 'BASEF 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <PUTUV TEMP27 14 'DONT-CARE>
		    <DEAD TEMP27>
		    <NTHR 'BASEF 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <PUTUV TEMP27 15 'DONT-CARE>
		    <DEAD TEMP27>
		    <NTHR 'BASEF 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <PUTUV TEMP27 16 ATAG10>
		    <DEAD TEMP27 ATAG10>
		    <NTHR 'BASEF 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <PUTUV TEMP27 17 RTAG11>
		    <DEAD TEMP27>
		    <FRAME 'SEQ-GEN>
		    <PUSH K6>
		    <DEAD K6>
		    <PUSH 'DONT-CARE>
		    <PUSH %<>>
		    <PUSH %<>>
		    <PUSH 'T>
		    <CALL 'SEQ-GEN 5 = K6>
		    <GVAL 'NO-DATUM = TEMP27>
		    <EQUAL? K6 TEMP27 - PHRASE75>
		    <DEAD TEMP27>
		    <NTHR 'BASEF 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP27 15 = K6>
		    <DEAD TEMP27>
PHRASE75
		    <NTHR 'BASEF 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP27 15 = TEMP27>
		    <EQUAL? TEMP27 K6 + PHRASE79>
		    <DEAD TEMP27>
		    <FRAME 'MOVE-ARG>
		    <PUSH K6>
		    <DEAD K6>
		    <NTHR 'BASEF 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP27 15 = STACK>
		    <DEAD TEMP27>
		    <CALL 'MOVE-ARG 2 = K6>
PHRASE79
		    <FRAME 'LABEL-TAG>
		    <PUSH RTAG11>
		    <DEAD RTAG11>
		    <CALL 'LABEL-TAG 1>
		    <NTHR 'TMP-DEST 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <TYPE? TEMP27 <TYPE-CODE UNBOUND> + PHRASE87>
		    <DEAD TEMP27>
		    <NTHR 'TMPS-NEXT 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <NTHR 'TMP-DEST 2 = TEMP28 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP28 1 = TEMP28 (RECORD-TYPE LBIND)>
		    <CONS TEMP28 () = TEMP28>
		    <CONS '= TEMP28 = TEMP28>
		    <PUTREST TEMP27 TEMP28>
		    <DEAD TEMP27 TEMP28>
PHRASE87
		    <FRAME 'FREE-TEMP>
		    <PUSH K6>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <NTHR 'SPECD 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <TYPE? TEMP27 <TYPE-CODE FALSE> + PHRASE94>
		    <DEAD TEMP27>
		    <FRAME 'IEMIT>
		    <PUSH '`UNBIND>
		    <PUSH BNDTMP23>
		    <CALL 'IEMIT 2>
		    <FRAME 'FREE-TEMP>
		    <PUSH BNDTMP23>
		    <DEAD BNDTMP23>
		    <CALL 'FREE-TEMP 1>
PHRASE94
		    <NTHR 'STK-CHARS8 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <VEQUAL? TEMP27 0 + PHRASE100 (TYPE FIX)>
		    <DEAD TEMP27>
		    <NTHR 'STK-CHARS8 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <NTHR 'STK 2 = TEMP28 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP28 1 = TEMP28 (RECORD-TYPE LBIND)>
		    <ADD TEMP27 TEMP28 = TEMP27 (TYPE FIX)>
		    <DEAD TEMP28>
		    <NTHR 'STK-CHARS8 2 = TEMP28 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP28 1 TEMP27 (RECORD-TYPE LBIND)>
		    <DEAD TEMP28 TEMP27>
		    <NTHR 'STK-CHARS7 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <NTHR 'STK 2 = TEMP28 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP28 1 = TEMP28 (RECORD-TYPE LBIND)>
		    <ADD TEMP27 TEMP28 = TEMP27 (TYPE FIX)>
		    <DEAD TEMP28>
		    <NTHR 'STK-CHARS7 2 = TEMP28 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP28 1 TEMP27 (RECORD-TYPE LBIND)>
		    <DEAD TEMP28 TEMP27>
		    <NTHR 'STK 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP27 1 0 (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
PHRASE100
		    <NTHR 'STKTMP 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <TYPE? TEMP27 <TYPE-CODE UNBOUND> + PHRASE120>
		    <DEAD TEMP27>
		    <NTHR 'STK 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <VEQUAL? TEMP27 0 + PHRASE122 (TYPE FIX)>
		    <DEAD TEMP27>
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <NTHR 'STKTMP 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <NTHR 'STK 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <PUSH '=>
		    <NTHR 'STKTMP 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <CONS 'FIX () = TEMP27>
		    <CONS '`TYPE TEMP27 = STACK>
		    <DEAD TEMP27>
		    <CALL 'IEMIT 6>
		    <JUMP + PHRASE134>
PHRASE122
		    <NTHR 'STK-CHARS7 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <VEQUAL? TEMP27 0 + PHRASE134 (TYPE FIX)>
		    <DEAD TEMP27>
		    <FRAME 'IEMIT>
		    <PUSH '`IFSYS>
		    <PUSH "TOPS20">
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <NTHR 'STKTMP 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <NTHR 'STK-CHARS7 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <PUSH '=>
		    <NTHR 'STKTMP 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`ENDIF>
		    <PUSH "TOPS20">
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`IFSYS>
		    <PUSH "UNIX">
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <NTHR 'STKTMP 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <NTHR 'STK-CHARS8 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <PUSH '=>
		    <NTHR 'STKTMP 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`ENDIF>
		    <PUSH "UNIX">
		    <CALL 'IEMIT 2>
PHRASE134
		    <FRAME 'IEMIT>
		    <PUSH '`ADJ>
		    <NTHR 'STKTMP 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <CALL 'IEMIT 2>
		    <FRAME 'FREE-TEMP>
		    <NTHR 'STKTMP 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <CALL 'FREE-TEMP 1>
		    <JUMP + PHRASE171>
PHRASE120
		    <NTHR 'STK 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <VEQUAL? TEMP27 0 + PHRASE163 (TYPE FIX)>
		    <DEAD TEMP27>
		    <FRAME 'IEMIT>
		    <PUSH '`ADJ>
		    <NTHR 'STK 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <SUB 0 TEMP27 = STACK (TYPE FIX)>
		    <DEAD TEMP27>
		    <CALL 'IEMIT 2>
		    <JUMP + PHRASE171>
PHRASE163
		    <NTHR 'STK-CHARS8 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <VEQUAL? TEMP27 0 + PHRASE171 (TYPE FIX)>
		    <DEAD TEMP27>
		    <FRAME 'IEMIT>
		    <PUSH '`IFSYS>
		    <PUSH "TOPS20">
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`ADJ>
		    <NTHR 'STK-CHARS7 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <SUB 0 TEMP27 = STACK (TYPE FIX)>
		    <DEAD TEMP27>
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`ENDIF>
		    <PUSH "TOPS20">
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`IFSYS>
		    <PUSH "UNIX">
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`ADJ>
		    <NTHR 'STK-CHARS8 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <SUB 0 TEMP27 = STACK (TYPE FIX)>
		    <DEAD TEMP27>
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`ENDIF>
		    <PUSH "UNIX">
		    <CALL 'IEMIT 2>
PHRASE171
		    <FRAME 'MIM-RETURN>
		    <PUSH K6>
		    <DEAD K6>
		    <CALL 'MIM-RETURN 1>
		    <FRAME 'TYPIFY-TEMPS>
		    <NTHR 'EVERY-TEMP 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <CALL 'TYPIFY-TEMPS 1>
		    <FRAME 'IEMIT>
		    <PUSH '`END>
		    <NTHR 'BASEF 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP27 4 = TEMP27>
		    <CHTYPE TEMP27 <TYPE-CODE FCN-ATOM> = STACK>
		    <DEAD TEMP27>
		    <CALL 'IEMIT 2>
		    <NTHR 'CODE-START 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -153>
		    <RETURN TEMP27>
		    <DEAD TEMP27>
		    <END CODE-GEN>
" Generate code for setting up and binding agruments."

#WORD *137601750*
<GFCN BIND-CODE ("VALUE" ANY NODE "OPTIONAL" ANY ANY) NOD7 FORPROG8 BNDTMP9>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5 OPT6>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH #T$UNBOUND 0>
OPT6
		    <TEMP BST10:LIST TEMP3:LBIND (LARG12 %<>) (ANY-ARG13 %<>) (ANY-SPEC14 %<>) (OPTS?15 %<>) (OL16 ()) (TUP?18 %<>) TEMP28 TEMP27 SYM32 TEMP36 TEMP41>
		    <INTGO>
		    <NTHUV NOD7 10 = BST10 (TYPE LIST)>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <BBIND 'NPRUNE 'ANY 'FIX 'T>
		    <BBIND 'T-NAME 'ANY 'FIX>
		    <TYPE? FORPROG8 <TYPE-CODE FALSE> - PHRASE81>
		    <SET OL16 () (TYPE LIST)>
		    <SET TEMP28 () (TYPE LIST)>
		    <SET TEMP27 BST10 (TYPE LIST)>
		    <LOOP>
MAP22
		    <INTGO>
		    <EMPL? TEMP27 + MAPAP25>
		    <NTHL TEMP27 1 = SYM32>
		    <FRAME 'OPT?>
		    <PUSH SYM32>
		    <CALL 'OPT? 1 = TEMP36>
		    <VEQUAL? TEMP36 0 + PHRASE34>
		    <DEAD TEMP36>
		    <FRAME 'MAKE-TAG>
		    <PUSH "OPT">
		    <CALL 'MAKE-TAG 1 = TEMP36>
		    <JUMP + PHRASE38>
PHRASE34
		    <NTHUV SYM32 4 = TEMP41 (TYPE FIX)>
		    <DEAD SYM32>
		    <VEQUAL? TEMP41 4 - MAP23 (TYPE FIX)>
		    <DEAD TEMP41>
		    <NTHUV NOD7 20 = TUP?18 (TYPE FIX)>
		    <JUMP + MAP23>
PHRASE38
		    <CONS TEMP36 () = TEMP36 (TYPE LIST)>
		    <EMPL? OL16 - TAG43>
		    <SET OL16 TEMP36 (TYPE LIST)>
		    <JUMP + TAG44>
TAG43
		    <PUTREST TEMP28 TEMP36>
		    <DEAD TEMP28>
TAG44
		    <SET TEMP28 TEMP36 (TYPE LIST)>
		    <DEAD TEMP36>
MAP23
		    <RESTL TEMP27 1 = TEMP27 (TYPE LIST)>
		    <JUMP + MAP22>
MAPAP25
		    <EMPL? OL16 + PHRASE46 (TYPE LIST)>
		    <SET TEMP27 OL16>
		    <LOOP (TEMP27 VALUE)>
TAG47
		    <RESTL TEMP27 1 = TEMP36 (TYPE LIST)>
		    <EMPL? TEMP36 + TAG48>
		    <SET TEMP27 TEMP36>
		    <DEAD TEMP36>
		    <JUMP + TAG47>
TAG48
		    <FRAME 'MAKE-TAG>
		    <PUSH "OPT">
		    <CALL 'MAKE-TAG 1 = TEMP36>
		    <CONS TEMP36 () = TEMP36>
		    <PUTREST TEMP27 TEMP36>
		    <DEAD TEMP27 TEMP36>
		    <FRAME 'IEMIT>
		    <PUSH '`OPT-DISPATCH>
		    <NTHUV NOD7 21 = STACK (TYPE FIX)>
		    <PUSH TUP?18>
		    <DEAD TUP?18>
		    <SET TEMP41 3 (TYPE FIX)>
		    <SET TEMP36 OL16>
		    <LOOP (TEMP36 VALUE) (TEMP41 VALUE)>
TAG51
		    <INTGO>
		    <EMPL? TEMP36 + TAG50>
		    <NTHL TEMP36 1 = STACK>
		    <RESTL TEMP36 1 = TEMP36 (TYPE LIST)>
		    <ADD TEMP41 1 = TEMP41 (TYPE FIX)>
		    <JUMP + TAG51>
TAG50
		    <CALL 'IEMIT TEMP41>
		    <DEAD TEMP41>
PHRASE46
		    <SET TEMP41 BST10 (TYPE LIST)>
		    <LOOP>
MAP54
		    <INTGO>
		    <EMPL? TEMP41 + MAPAP57>
		    <NTHL TEMP41 1 = SYM32>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <NTHUV SYM32 2 = STACK (TYPE ATOM)>
		    <PUSH 'T>
		    <NTHUV SYM32 7 = STACK>
		    <CALL 'GEN-TEMP 4 = TUP?18>
		    <PUTUV SYM32 10 TUP?18>
		    <DEAD TUP?18>
		    <FRAME 'OPT?>
		    <PUSH SYM32>
		    <CALL 'OPT? 1 = TUP?18>
		    <VEQUAL? TUP?18 0 + PHRASE78>
		    <DEAD TUP?18>
		    <FRAME 'LABEL-TAG>
		    <NTHL OL16 1 = STACK>
		    <CALL 'LABEL-TAG 1>
		    <RESTL OL16 1 = OL16 (TYPE LIST)>
		    <NTHUV SYM32 3 = TUP?18>
		    <TYPE? TUP?18 <TYPE-CODE FALSE> - PHRASE71>
		    <DEAD TUP?18>
		    <NTHUV SYM32 4 = TUP?18 (TYPE FIX)>
		    <VEQUAL? TUP?18 9 + PHRASE71 (TYPE FIX)>
		    <DEAD TUP?18>
		    <NTHUV SYM32 4 = TUP?18 (TYPE FIX)>
		    <VEQUAL? TUP?18 8 + PHRASE71 (TYPE FIX)>
		    <DEAD TUP?18>
		    <NTHUV SYM32 9 = TUP?18 (TYPE NODE)>
		    <NTHUV TUP?18 1 = TUP?18 (TYPE FIX)>
		    <VEQUAL? TUP?18 2 + BOOL73 (TYPE FIX)>
		    <VEQUAL? TUP?18 10 - PHRASE71 (TYPE FIX)>
		    <DEAD TUP?18>
BOOL73
		    <FRAME 'GEN>
		    <NTHUV SYM32 9 = STACK (TYPE NODE)>
		    <DEAD SYM32>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'GEN 2>
		    <JUMP + PHRASE75>
PHRASE71
		    <FRAME 'PUSH>
		    <GVAL 'THE-UNBOUND = STACK>
		    <CALL 'PUSH 1>
PHRASE75
		    <RESTL OL16 1 = TUP?18 (TYPE LIST)>
		    <EMPL? TUP?18 - PHRASE78 (TYPE LIST)>
		    <DEAD TUP?18>
		    <FRAME 'LABEL-TAG>
		    <NTHL OL16 1 = STACK>
		    <CALL 'LABEL-TAG 1>
PHRASE78
		    <RESTL TEMP41 1 = TEMP41 (TYPE LIST)>
		    <JUMP + MAP54>
MAPAP57
		    <NTHUV NOD7 1 = TUP?18 (TYPE FIX)>
		    <VEQUAL? TUP?18 1 - PHRASE81 (TYPE FIX)>
		    <DEAD TUP?18>
		    <FRAME 'MIM-TEMPS-EMIT>
		    <CALL 'MIM-TEMPS-EMIT 0>
PHRASE81
		    <SET TUP?18 BST10 (TYPE LIST)>
		    <DEAD BST10>
		    <LOOP>
MAP86
		    <INTGO>
		    <EMPL? TUP?18 + MAPAP89>
		    <SET BST10 TUP?18>
		    <NTHL BST10 1 = OL16 (TYPE SYMTAB)>
		    <FRAME 'ARG?>
		    <PUSH OL16>
		    <CALL 'ARG? 1 = TEMP28>
		    <FRAME 'OPT?>
		    <PUSH OL16>
		    <CALL 'OPT? 1 = TEMP27>
		    <NTHUV OL16 15 = TEMP36>
		    <TYPE? TEMP36 <TYPE-CODE FALSE> - PHRASE105>
		    <DEAD TEMP36>
		    <NTHUV OL16 3 = TEMP36>
		    <TYPE? TEMP36 <TYPE-CODE FALSE> + PHRASE103>
		    <DEAD TEMP36>
		    <FRAME 'COMPILE-NOTE>
		    <PUSH "Special variable never used: ">
		    <NTHUV OL16 2 = STACK (TYPE ATOM)>
		    <CALL 'COMPILE-NOTE 2>
		    <JUMP + PHRASE105>
PHRASE103
		    <FRAME 'COMPILE-WARNING>
		    <PUSH "Variable never used: ">
		    <NTHUV OL16 2 = STACK (TYPE ATOM)>
		    <CALL 'COMPILE-WARNING 2>
PHRASE105
		    <VEQUAL? LARG12 0 - PHRASE108>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> - PHRASE108>
		    <TYPE? TEMP27 <TYPE-CODE FALSE> - PHRASE108>
		    <VEQUAL? ANY-SPEC14 0 + PHRASE111>
		    <VEQUAL? ANY-ARG13 0 + PHRASE111>
		    <FRAME 'GEN-FIX-BIND>
		    <CALL 'GEN-FIX-BIND 0>
PHRASE111
		    <SET LARG12 'T (TYPE ATOM)>
PHRASE108
		    <NTHUV OL16 10 = TEMP36>
		    <TYPE? TEMP36 <TYPE-CODE TEMP> + PHRASE115>
		    <DEAD TEMP36>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <NTHUV OL16 2 = STACK (TYPE ATOM)>
		    <PUSH 'T>
		    <NTHUV OL16 7 = STACK>
		    <CALL 'GEN-TEMP 4 = TEMP36>
		    <PUTUV OL16 10 TEMP36>
		    <DEAD TEMP36>
PHRASE115
		    <TYPE? TEMP27 <TYPE-CODE FALSE> + PHRASE118>
		    <VEQUAL? OPTS?15 0 - PHRASE118>
		    <SET OPTS?15 'T (TYPE ATOM)>
PHRASE118
		    <TYPE? BNDTMP9 <TYPE-CODE UNBOUND> + PHRASE121>
		    <NTHUV OL16 3 = TEMP36>
		    <TYPE? TEMP36 <TYPE-CODE FALSE> + PHRASE121>
		    <DEAD TEMP36>
		    <VEQUAL? ANY-SPEC14 0 - PHRASE121>
		    <SET ANY-SPEC14 'T (TYPE ATOM)>
		    <FRAME 'USE-TEMP>
		    <PUSH BNDTMP9>
		    <PUSH 'LBIND>
		    <CALL 'USE-TEMP 2>
		    <FRAME 'GET-BINDING>
		    <PUSH BNDTMP9>
		    <CALL 'GET-BINDING 1>
PHRASE121
		    <NTHUV OL16 10 = SYM32 (TYPE TEMP)>
		    <NTHUV OL16 12 = TEMP36>
		    <TYPE? TEMP36 <TYPE-CODE FALSE> + PHRASE126>
		    <DEAD TEMP36>
		    <SET TEMP36 'ANY (TYPE ATOM)>
		    <JUMP + PHRASE127>
PHRASE126
		    <NTHUV OL16 18 = TEMP36>
PHRASE127
		    <PUTUV SYM32 6 TEMP36>
		    <DEAD TEMP36>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> - BOOL130>
		    <TYPE? TEMP27 <TYPE-CODE FALSE> + PHRASE129>
BOOL130
		    <GEN-LVAL 'ARGS-NEXT = TEMP36>
		    <NTHUV SYM32 1 = TEMP41 (TYPE ATOM)>
		    <CONS TEMP41 () = TEMP41>
		    <GEN-SET 'ARGS-NEXT TEMP41>
		    <PUTREST TEMP36 TEMP41>
		    <DEAD TEMP36 TEMP41>
PHRASE129
		    <TYPE? TEMP28 <TYPE-CODE FALSE> - BOOL138>
		    <TYPE? TEMP27 <TYPE-CODE FALSE> + PHRASE137>
BOOL138
		    <SET ANY-ARG13 'T (TYPE ATOM)>
PHRASE137
		    <NTHUV SYM32 1 = TEMP36 (TYPE ATOM)>
		    <NTHR 'T-NAME 2 = TEMP41 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP41 1 TEMP36 (RECORD-TYPE LBIND)>
		    <DEAD TEMP41 TEMP36>
		    <FRAME 'BIND-GENERATE>
		    <PUSH OL16>
		    <PUSH FORPROG8>
		    <CALL 'BIND-GENERATE 2 = TEMP36>
		    <TYPE? TEMP36 <TYPE-CODE FALSE> + PHRASE142>
		    <DEAD TEMP36>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> - PHRASE142>
		    <DEAD TEMP28>
		    <TYPE? TEMP27 <TYPE-CODE FALSE> - PHRASE142>
		    <DEAD TEMP27>
		    <NTHUV OL16 3 = TEMP36>
		    <TYPE? TEMP36 <TYPE-CODE FALSE> - PHRASE142>
		    <DEAD TEMP36>
		    <GEN-LVAL 'TMPS-NEXT = TEMP36>
		    <NTHR 'T-NAME 2 = TEMP41 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP41 1 = TEMP41 (RECORD-TYPE LBIND)>
		    <CONS TEMP41 () = TEMP41>
		    <GEN-SET 'TMPS-NEXT TEMP41>
		    <PUTREST TEMP36 TEMP41>
		    <DEAD TEMP36 TEMP41>
		    <FRAME 'USE-TEMP>
		    <PUSH SYM32>
		    <FRAME 'ISTYPE?>
		    <NTHUV OL16 18 = STACK>
		    <DEAD OL16>
		    <CALL 'ISTYPE? 1 = STACK>
		    <CALL 'USE-TEMP 2>
		    <PUTUV SYM32 2 1 (TYPE FIX)>
		    <DEAD SYM32>
PHRASE142
		    <VEQUAL? LARG12 0 - PHRASE154>
		    <RESTL BST10 1 = TEMP36 (TYPE LIST)>
		    <DEAD BST10>
		    <EMPL? TEMP36 - PHRASE154 (TYPE LIST)>
		    <DEAD TEMP36>
		    <VEQUAL? ANY-SPEC14 0 + PHRASE157>
		    <VEQUAL? ANY-ARG13 0 + PHRASE157>
		    <FRAME 'GEN-FIX-BIND>
		    <CALL 'GEN-FIX-BIND 0>
PHRASE157
		    <SET LARG12 'T (TYPE ATOM)>
PHRASE154
		    <RESTL TUP?18 1 = TUP?18 (TYPE LIST)>
		    <JUMP + MAP86>
MAPAP89
		    <NTHUV NOD7 12 = TUP?18>
		    <TYPE? TUP?18 <TYPE-CODE FALSE> + PHRASE161>
		    <DEAD TUP?18>
		    <FRAME 'IEMIT>
		    <PUSH '`ACTIVATION>
		    <CALL 'IEMIT 1>
PHRASE161
		    <TYPE? BNDTMP9 <TYPE-CODE UNBOUND> + PHRASE164>
		    <VEQUAL? ANY-SPEC14 0 - PHRASE164>
		    <FRAME 'PUTPROP>
		    <PUSH NOD7>
		    <DEAD NOD7>
		    <PUSH 'UNWIND>
		    <CALL 'PUTPROP 2 = TUP?18>
		    <TYPE? TUP?18 <TYPE-CODE FALSE> + PHRASE164>
		    <DEAD TUP?18>
		    <FRAME 'USE-TEMP>
		    <PUSH BNDTMP9>
		    <PUSH 'LBIND>
		    <CALL 'USE-TEMP 2>
		    <FRAME 'GET-BINDING>
		    <PUSH BNDTMP9>
		    <CALL 'GET-BINDING 1>
PHRASE164
		    <SET TUP?18 ANY-SPEC14>
		    <DEAD ANY-SPEC14>
		    <VEQUAL? TUP?18 0 + PHRASE170>
		    <SET TUP?18 BNDTMP9>
		    <DEAD BNDTMP9>
PHRASE170
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -18>
		    <RETURN TUP?18>
		    <DEAD TUP?18>
		    <END BIND-CODE>
" Generate \"BIND\" binding code."

#WORD *37113541656*
<GFCN BIND-B ("VALUE" ATOM SYMTAB) SYM4>
		    <TEMP TEMP9 FTMP6>
		    <INTGO>
		    <NTHUV SYM4 3 = TEMP9>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> + PHRASE8>
		    <DEAD TEMP9>
		    <FRAME 'PREV-FRAME>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FRAME>
		    <CALL 'GEN-TEMP 1 = STACK>
		    <CALL 'PREV-FRAME 1 = FTMP6>
		    <FRAME 'SPECIAL-BINDING>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <PUSH 'T>
		    <PUSH FTMP6>
		    <CALL 'SPECIAL-BINDING 3>
		    <GEN-LVAL 'STK = TEMP9>
		    <ADD TEMP9 9 = TEMP9 (TYPE FIX)>
		    <GEN-SET 'STK TEMP9>
		    <DEAD TEMP9>
		    <FRAME 'FREE-TEMP>
		    <PUSH FTMP6>
		    <DEAD FTMP6>
		    <CALL 'FREE-TEMP 1>
		    <RETURN 'T>
PHRASE8
		    <FRAME 'PREV-FRAME>
		    <NTHUV SYM4 10 = STACK>
		    <CALL 'PREV-FRAME 1>
		    <FRAME 'USE-TEMP>
		    <NTHUV SYM4 10 = STACK (TYPE TEMP)>
		    <DEAD SYM4>
		    <CALL 'USE-TEMP 1>
		    <RETURN 'T>
		    <END BIND-B>
" Do code generation for normal  arguments."

#WORD *4177374232*
<GFCN NORM-B ("VALUE" ATOM SYMTAB) SYM4>
		    <TEMP TEMP7>
		    <INTGO>
		    <NTHUV SYM4 3 = TEMP7>
		    <TYPE? TEMP7 <TYPE-CODE FALSE> + PHRASE6>
		    <DEAD TEMP7>
		    <FRAME 'SPECIAL-BINDING>
		    <PUSH SYM4>
		    <PUSH %<>>
		    <NTHUV SYM4 10 = STACK>
		    <DEAD SYM4>
		    <CALL 'SPECIAL-BINDING 3>
		    <GEN-LVAL 'STK = TEMP7>
		    <ADD TEMP7 9 = TEMP7 (TYPE FIX)>
		    <GEN-SET 'STK TEMP7>
		    <DEAD TEMP7>
PHRASE6
		    <RETURN 'T>
		    <END NORM-B>
" Initialized optional argument binder."

#WORD *37501164407*
<GFCN OPT1-B ("VALUE" <OR ATOM FALSE> SYMTAB) SYM4>
		    <TEMP TEMP10>
		    <INTGO>
		    <NTHUV SYM4 3 = TEMP10>
		    <TYPE? TEMP10 <TYPE-CODE FALSE> - TAG13>
		    <DEAD TEMP10>
		    <NTHUV SYM4 9 = TEMP10 (TYPE NODE)>
		    <NTHUV TEMP10 1 = TEMP10 (TYPE FIX)>
		    <VEQUAL? TEMP10 2 - TAG12 (TYPE FIX)>
		    <RETURN %<>>
TAG12
		    <VEQUAL? TEMP10 10 - TAG13 (TYPE FIX)>
		    <DEAD TEMP10>
		    <RETURN %<>>
TAG13
		    <FRAME 'OPTBIND>
		    <PUSH SYM4>
		    <NTHUV SYM4 9 = STACK (TYPE NODE)>
		    <DEAD SYM4>
		    <CALL 'OPTBIND 2 = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
		    <END OPT1-B>
" Uninitialized optional argument binder."

#WORD *3414757261*
<GFCN OPT2-B ("VALUE" ATOM SYMTAB) SYM4>
		    <TEMP TEMP7>
		    <INTGO>
		    <NTHUV SYM4 3 = TEMP7>
		    <TYPE? TEMP7 <TYPE-CODE FALSE> + PHRASE6>
		    <DEAD TEMP7>
		    <FRAME 'OPTBIND>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <CALL 'OPTBIND 1>
PHRASE6
		    <RETURN 'T>
		    <END OPT2-B>
" Create a binding for either intitialized or unitialized optional."

#WORD *14505637637*
<GFCN OPTBIND ("VALUE" ATOM SYMTAB "OPTIONAL" NODE) SYM6 DVAL7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP GIVE8:ATOM DEF9 TMP11:TEMP>
		    <INTGO>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = GIVE8>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0>
		    <NTHUV SYM6 3 = DEF9>
		    <TYPE? DVAL7 <TYPE-CODE UNBOUND> - BOOL18>
		    <TYPE? DEF9 <TYPE-CODE FALSE> + PHRASE17>
BOOL18
		    <TYPE? DEF9 <TYPE-CODE FALSE> + PHRASE20>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = TMP11>
		    <FRAME 'IEMIT>
		    <PUSH '`SET>
		    <PUSH TMP11>
		    <PUSH 0>
		    <CALL 'IEMIT 3>
PHRASE20
		    <FRAME 'TEST-ARG>
		    <NTHUV SYM6 10 = STACK (TYPE TEMP)>
		    <PUSH GIVE8>
		    <CALL 'TEST-ARG 2>
		    <TYPE? DVAL7 <TYPE-CODE UNBOUND> + PHRASE25>
		    <FRAME 'GEN>
		    <PUSH DVAL7>
		    <DEAD DVAL7>
		    <NTHUV SYM6 10 = STACK>
		    <CALL 'GEN 2>
PHRASE25
		    <TYPE? DEF9 <TYPE-CODE FALSE> + PHRASE28>
		    <FRAME 'IEMIT>
		    <PUSH '`SET>
		    <PUSH TMP11>
		    <PUSH 1>
		    <CALL 'IEMIT 3>
		    <FRAME 'FREE-TEMP>
		    <NTHUV SYM6 10 = STACK>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
PHRASE28
		    <FRAME 'LABEL-TAG>
		    <PUSH GIVE8>
		    <DEAD GIVE8>
		    <CALL 'LABEL-TAG 1>
PHRASE17
		    <TYPE? DEF9 <TYPE-CODE FALSE> + PHRASE33>
		    <DEAD DEF9>
		    <FRAME 'SPECIAL-BINDING>
		    <PUSH SYM6>
		    <PUSH %<>>
		    <NTHUV SYM6 10 = STACK>
		    <DEAD SYM6>
		    <CALL 'SPECIAL-BINDING 3>
		    <GEN-LVAL 'STK = DEF9>
		    <ADD DEF9 9 = DEF9 (TYPE FIX)>
		    <GEN-SET 'STK DEF9>
		    <DEAD DEF9>
		    <FRAME 'IEMIT>
		    <PUSH '`VEQUAL?>
		    <PUSH TMP11>
		    <PUSH 0>
		    <PUSH '+>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = DEF9>
		    <PUSH DEF9>
		    <CALL 'IEMIT 5>
		    <FRAME 'GEN-FIX-BIND>
		    <CALL 'GEN-FIX-BIND 0>
		    <FRAME 'LABEL-TAG>
		    <PUSH DEF9>
		    <DEAD DEF9>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'FREE-TEMP>
		    <PUSH TMP11>
		    <DEAD TMP11>
		    <CALL 'FREE-TEMP 1>
PHRASE33
		    <RETURN 'T>
		    <END OPTBIND>
" Do a binding for a named activation."

#WORD *5356220577*
<GFCN ACT-B ("VALUE" ATOM SYMTAB) SYM4>
		    <TEMP TEMP9 FTMP6>
		    <INTGO>
		    <NTHUV SYM4 3 = TEMP9>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> + PHRASE8>
		    <DEAD TEMP9>
		    <FRAME 'CURRENT-FRAME>
		    <CALL 'CURRENT-FRAME 0 = FTMP6>
		    <FRAME 'SPECIAL-BINDING>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <PUSH 'T>
		    <PUSH FTMP6>
		    <CALL 'SPECIAL-BINDING 3>
		    <GEN-LVAL 'STK = TEMP9>
		    <ADD TEMP9 9 = TEMP9 (TYPE FIX)>
		    <GEN-SET 'STK TEMP9>
		    <DEAD TEMP9>
		    <FRAME 'FREE-TEMP>
		    <PUSH FTMP6>
		    <DEAD FTMP6>
		    <CALL 'FREE-TEMP 1>
		    <GEN-LVAL 'BASEF = TEMP9>
		    <PUTUV TEMP9 12 'T>
		    <DEAD TEMP9>
		    <RETURN 'T>
PHRASE8
		    <GEN-LVAL 'BASEF = TEMP9>
		    <NTHUV TEMP9 12 = TEMP9>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> - BOOL20>
		    <DEAD TEMP9>
		    <FRAME 'ACTIV?>
		    <GEN-LVAL 'BASEF = TEMP9>
		    <NTHUV TEMP9 10 = STACK (TYPE LIST)>
		    <DEAD TEMP9>
		    <CALL 'ACTIV? 1 = TEMP9>
		    <VEQUAL? TEMP9 0 + PHRASE19>
		    <DEAD TEMP9>
BOOL20
		    <GEN-LVAL 'BASEF = TEMP9>
		    <PUTUV TEMP9 12 'T>
		    <DEAD TEMP9>
		    <FRAME 'CURRENT-FRAME>
		    <NTHUV SYM4 10 = STACK>
		    <CALL 'CURRENT-FRAME 1>
		    <FRAME 'USE-TEMP>
		    <NTHUV SYM4 10 = STACK (TYPE TEMP)>
		    <DEAD SYM4>
		    <CALL 'USE-TEMP 1>
PHRASE19
		    <RETURN 'T>
		    <END ACT-B>
" Bind an \"AUX\" variable."

#WORD *35401215260*
<GFCN AUX1-B ("VALUE" ATOM SYMTAB "OPTIONAL" ANY) SYM6 FORCE-INIT7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH %<>>
OPT5
		    <TEMP TMP8 NOD12:NODE TY9 PT10>
		    <INTGO>
		    <NTHUV SYM6 10 = TMP8>
		    <NTHUV SYM6 9 = NOD12 (TYPE NODE)>
		    <FRAME 'ISTYPE?>
		    <NTHUV SYM6 18 = STACK>
		    <CALL 'ISTYPE? 1 = TY9>
		    <TYPE? TY9 <TYPE-CODE FALSE> + BOOL14>
		    <FRAME 'TYPEPRIM>
		    <PUSH TY9>
		    <CALL 'TYPEPRIM 1 = PT10>
		    <EQUAL? PT10 'FIX + BOOL16>
		    <EQUAL? PT10 'WORD + BOOL16>
		    <EQUAL? PT10 'LIST - BOOL14>
		    <DEAD PT10>
BOOL16
		    <NTHUV SYM6 12 = PT10>
		    <TYPE? PT10 <TYPE-CODE FALSE> + PHRASE19>
		    <DEAD PT10>
BOOL14
		    <SET TY9 %<> (TYPE FALSE)>
PHRASE19
		    <NTHUV SYM6 3 = PT10>
		    <TYPE? PT10 <TYPE-CODE FALSE> + PHRASE21>
		    <DEAD PT10>
		    <FRAME 'SPECIAL-BINDING>
		    <PUSH SYM6>
		    <DEAD SYM6>
		    <PUSH 'T>
		    <FRAME 'GEN>
		    <PUSH NOD12>
		    <DEAD NOD12>
		    <CALL 'GEN 1 = TMP8>
		    <PUSH TMP8>
		    <CALL 'SPECIAL-BINDING 3>
		    <GEN-LVAL 'STK = PT10>
		    <ADD PT10 9 = PT10 (TYPE FIX)>
		    <GEN-SET 'STK PT10>
		    <DEAD PT10>
		    <FRAME 'FREE-TEMP>
		    <PUSH TMP8>
		    <DEAD TMP8>
		    <CALL 'FREE-TEMP 1>
		    <RETURN 'T>
PHRASE21
		    <TYPE? FORCE-INIT7 <TYPE-CODE FALSE> - PHRASE29>
		    <DEAD FORCE-INIT7>
		    <NTHUV NOD12 1 = PT10 (TYPE FIX)>
		    <VEQUAL? PT10 2 - PHRASE29 (TYPE FIX)>
		    <DEAD PT10>
		    <FRAME 'USE-TEMP>
		    <PUSH TMP8>
		    <PUSH TY9>
		    <CALL 'USE-TEMP 2>
		    <TYPE? TY9 <TYPE-CODE FALSE> + PHRASE33>
		    <NTHUV TMP8 1 = STACK (TYPE ATOM)>
		    <DEAD TMP8>
		    <PUSH TY9>
		    <DEAD TY9>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = PT10>
		    <CHTYPE PT10 <TYPE-CODE ADECL> = PT10>
		    <JUMP + PHRASE35>
PHRASE33
		    <NTHUV TMP8 1 = PT10 (TYPE ATOM)>
		    <DEAD TMP8>
PHRASE35
		    <CONS PT10 () = PT10>
		    <FRAME 'ATOMCHK>
		    <NTHUV NOD12 4 = STACK>
		    <DEAD NOD12>
		    <CALL 'ATOMCHK 1 = TMP8>
		    <CONS TMP8 () = TMP8>
		    <PUTREST PT10 TMP8>
		    <DEAD TMP8>
		    <GEN-SET 'T-NAME PT10>
		    <DEAD PT10>
		    <RETURN 'T>
PHRASE29
		    <TYPE? TY9 <TYPE-CODE FALSE> + PHRASE42>
		    <NTHUV TMP8 1 = STACK (TYPE ATOM)>
		    <DEAD TMP8>
		    <PUSH TY9>
		    <DEAD TY9>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = PT10>
		    <CHTYPE PT10 <TYPE-CODE ADECL> = PT10>
		    <GEN-SET 'T-NAME PT10>
		    <DEAD PT10>
PHRASE42
		    <FRAME 'GEN>
		    <PUSH NOD12>
		    <DEAD NOD12>
		    <NTHUV SYM6 10 = STACK>
		    <DEAD SYM6>
		    <CALL 'GEN 2>
		    <RETURN 'T>
		    <END AUX1-B>
" Do a binding for an uninitialized \"AUX\" "

#WORD *15246034310*
<GFCN AUX2-B ("VALUE" <OR ATOM !<FALSE> FIX> SYMTAB ANY) SYM4 FP5>
		    <TEMP TEMP9>
		    <INTGO>
		    <NTHUV SYM4 3 = TEMP9>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> + PHRASE8>
		    <DEAD TEMP9>
		    <FRAME 'SPECIAL-BINDING>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <PUSH 'T>
		    <CALL 'SPECIAL-BINDING 2>
		    <GEN-LVAL 'STK = TEMP9>
		    <ADD TEMP9 9 = TEMP9 (TYPE FIX)>
		    <GEN-SET 'STK TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
PHRASE8
		    <TYPE? FP5 <TYPE-CODE FALSE> + PHRASE15>
		    <DEAD FP5>
		    <NTHUV SYM4 12 = TEMP9>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> + PHRASE15>
		    <DEAD TEMP9>
		    <FRAME 'SET-SYM>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <GVAL 'THE-UNBOUND = STACK>
		    <PUSH 'T>
		    <CALL 'SET-SYM 3>
		    <RETURN 'T>
PHRASE15
		    <NTHUV SYM4 12 = TEMP9>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> - PHRASE19>
		    <NTHUV SYM4 10 = TEMP9 (TYPE TEMP)>
		    <DEAD SYM4>
		    <PUTUV TEMP9 4 %<>>
		    <PUTUV TEMP9 2 0 (TYPE FIX)>
		    <DEAD TEMP9>
		    <SET TEMP9 %<> (TYPE FALSE)>
PHRASE19
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END AUX2-B>
" Do a \"TUPLE\" binding."

#WORD *16453444313*
<GFCN TUPL-B ("VALUE" ATOM SYMTAB) SYM4>
		    <TEMP TMP1-5 TEMP10>
		    <INTGO>
		    <NTHUV SYM4 10 = TMP1-5>
		    <FRAME 'GET-ARG-TUPLE>
		    <PUSH TMP1-5>
		    <CALL 'GET-ARG-TUPLE 1>
		    <NTHUV SYM4 3 = TEMP10>
		    <TYPE? TEMP10 <TYPE-CODE FALSE> + PHRASE9>
		    <DEAD TEMP10>
		    <FRAME 'SPECIAL-BINDING>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <PUSH 'T>
		    <PUSH TMP1-5>
		    <DEAD TMP1-5>
		    <CALL 'SPECIAL-BINDING 3>
		    <GEN-LVAL 'STK = TEMP10>
		    <ADD TEMP10 9 = TEMP10 (TYPE FIX)>
		    <GEN-SET 'STK TEMP10>
		    <DEAD TEMP10>
PHRASE9
		    <RETURN 'T>
		    <END TUPL-B>
" Dispatch table for binding generation code."

#WORD *21301774502*
<GFCN BIND-GENERATE ("VALUE" <OR ATOM FALSE FIX> SYMTAB ANY) SYM4 FORPROG5>
		    <TEMP COD6>
		    <INTGO>
		    <NTHUV SYM4 4 = COD6 (TYPE FIX)>
		    <DISPATCH COD6 1 CASE9 CASE10 CASE11 CASE12 CASE13 CASE14 CASE15 CASE16 CASE17 CASE18 CASE19 CASE20 CASE21>
		    <DEAD COD6>
		    <RETURN %<>>
CASE9
		    <FRAME 'ACT-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <CALL 'ACT-B 1 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
CASE10
		    <FRAME 'AUX1-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <PUSH FORPROG5>
		    <DEAD FORPROG5>
		    <CALL 'AUX1-B 2 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
CASE11
		    <FRAME 'AUX2-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <PUSH FORPROG5>
		    <DEAD FORPROG5>
		    <CALL 'AUX2-B 2 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
CASE12
		    <FRAME 'TUPL-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <CALL 'TUPL-B 1 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
CASE13
		    <FRAME 'NORM-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <CALL 'NORM-B 1 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
CASE14
		    <FRAME 'OPT1-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <CALL 'OPT1-B 1 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
CASE15
		    <FRAME 'OPT1-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <CALL 'OPT1-B 1 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
CASE16
		    <FRAME 'OPT2-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <CALL 'OPT2-B 1 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
CASE17
		    <FRAME 'OPT2-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <CALL 'OPT2-B 1 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
CASE18
		    <FRAME 'NORM-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <CALL 'NORM-B 1 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
CASE19
		    <FRAME 'BIND-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <CALL 'BIND-B 1 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
CASE20
		    <FRAME 'NORM-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <CALL 'NORM-B 1 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
CASE21
		    <FRAME 'NORM-B>
		    <PUSH SYM4>
		    <DEAD SYM4>
		    <CALL 'NORM-B 1 = COD6>
		    <RETURN COD6>
		    <DEAD COD6>
		    <END BIND-GENERATE>
" Appliacation of a form could still be an NTH."

#WORD *626521543*
<GFCN FORM-F-GEN ("VALUE" ANY NODE ANY) NOD4 WHERE5>
		    <TEMP K6:LIST TEMP11 TY7>
		    <INTGO>
		    <NTHUV NOD4 5 = K6 (TYPE LIST)>
		    <FRAME 'ISTYPE?>
		    <NTHL K6 1 = TEMP11 (TYPE NODE)>
		    <NTHUV TEMP11 3 = TY7>
		    <DEAD TEMP11>
		    <PUSH TY7>
		    <CALL 'ISTYPE? 1 = TEMP11>
		    <VEQUAL? TEMP11 'FIX - PHRASE9>
		    <DEAD TEMP11>
		    <PUTUV NOD4 4 'INTH>
		    <NTHUV NOD4 9 = TEMP11>
		    <PUTUV NOD4 1 TEMP11>
		    <DEAD TEMP11>
		    <GVAL 'NTH = TEMP11>
		    <PUTUV NOD4 9 TEMP11>
		    <DEAD TEMP11>
		    <NTHUV NOD4 1 = TEMP11 (TYPE FIX)>
		    <VEQUAL? TEMP11 79 + BOOL14 (TYPE FIX)>
		    <DEAD TEMP11>
		    <NTHUV NOD4 1 = TEMP11 (TYPE FIX)>
		    <VEQUAL? TEMP11 27 - PHRASE13 (TYPE FIX)>
		    <DEAD TEMP11>
BOOL14
		    <NTHL K6 1 = TEMP11>
		    <CONS TEMP11 () = TEMP11>
		    <RESTL K6 1 = TY7 (TYPE LIST)>
		    <DEAD K6>
		    <NTHL TY7 1 = TY7>
		    <CONS TY7 TEMP11 = K6>
		    <DEAD TY7 TEMP11>
PHRASE13
		    <PUTUV NOD4 5 K6 (TYPE LIST)>
		    <DEAD K6>
		    <FRAME 'GEN>
		    <PUSH NOD4>
		    <DEAD NOD4>
		    <PUSH WHERE5>
		    <DEAD WHERE5>
		    <CALL 'GEN 2 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE9
		    <TYPE? TY7 <TYPE-CODE FALSE> + PHRASE17>
		    <DEAD TY7>
		    <FRAME 'FORM-GEN>
		    <PUSH NOD4>
		    <DEAD NOD4>
		    <PUSH WHERE5>
		    <DEAD WHERE5>
		    <CALL 'FORM-GEN 2 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE17
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Non-applicabe object type ">
		    <NTHUV NOD4 4 = STACK>
		    <PUSH NOD4>
		    <DEAD NOD4>
		    <CALL 'COMPILE-ERROR 3 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
		    <END FORM-F-GEN>
" Generate a call to EVAL for uncompilable FORM."

#WORD *6517466001*
<GFCN FORM-GEN ("VALUE" ANY NODE ANY) NOD4 WHERE5>
		    <TEMP>
		    <INTGO>
		    <EQUAL? WHERE5 'DONT-CARE - PHRASE7>
		    <FRAME 'GEN-TEMP>
		    <CALL 'GEN-TEMP 0 = WHERE5>
PHRASE7
		    <FRAME 'START-FRAME>
		    <PUSH 'EVAL>
		    <CALL 'START-FRAME 1>
		    <FRAME 'PUSH>
		    <FRAME 'REFERENCE>
		    <NTHUV NOD4 4 = STACK>
		    <DEAD NOD4>
		    <CALL 'REFERENCE 1 = STACK>
		    <CALL 'PUSH 1>
		    <FRAME 'MSUBR-CALL>
		    <PUSH 'EVAL>
		    <PUSH 1>
		    <PUSH WHERE5>
		    <CALL 'MSUBR-CALL 3>
		    <RETURN WHERE5>
		    <DEAD WHERE5>
		    <END FORM-GEN>
" Generate code for LIST/VECTOR etc. evaluation."

<GDECL (COPIERS) <UVECTOR [REST ATOM]>>

#WORD *15031765770*
<GFCN COPY-GEN ("VALUE" ANY NODE ANY) NOD4 WHERE5>
		    <TEMP (I6:FIX 0) ARGS7:LIST TEMP3:LBIND TEMP18 INAME10 SEGTMP11 TEMP22 STACK?16 TEMP35 N37:NODE>
		    <INTGO>
		    <NTHUV NOD4 5 = ARGS7 (TYPE LIST)>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP18>
		    <BBIND 'SEGLABEL 'ANY 'FIX TEMP18>
		    <DEAD TEMP18>
		    <NTHUV NOD4 4 = INAME10>
		    <BBIND 'COUNTMP 'ANY 'FIX>
		    <BBIND 'SEGCALLED 'ANY 'FIX %<>>
		    <NTHUV NOD4 2 = TEMP18>
		    <TYPE? TEMP18 <TYPE-CODE NODE> - TAG25>
		    <NTHUV TEMP18 1 = TEMP22 (TYPE FIX)>
		    <VEQUAL? TEMP22 98 - TAG23 (TYPE FIX)>
		    <DEAD TEMP22>
		    <SET TEMP18 'T (TYPE ATOM)>
		    <JUMP + TAG27>
TAG23
		    <NTHUV TEMP18 1 = TEMP22 (TYPE FIX)>
		    <VEQUAL? TEMP22 37 - TAG25 (TYPE FIX)>
		    <DEAD TEMP22>
		    <NTHUV TEMP18 2 = TEMP18>
		    <TYPE? TEMP18 <TYPE-CODE NODE> - TAG25>
		    <NTHUV TEMP18 1 = TEMP22 (TYPE FIX)>
		    <DEAD TEMP18>
		    <VEQUAL? TEMP22 98 - TAG25 (TYPE FIX)>
		    <DEAD TEMP22>
		    <SET TEMP18 'T (TYPE ATOM)>
		    <JUMP + TAG27>
TAG25
		    <EQUAL? INAME10 'TUPLE - TAG26>
		    <SET TEMP18 'T (TYPE ATOM)>
		    <JUMP + TAG27>
TAG26
		    <SET TEMP18 %<> (TYPE FALSE)>
TAG27
		    <SET STACK?16 TEMP18>
		    <DEAD TEMP18>
		    <SET TEMP35 0 (TYPE FIX)>
		    <SET TEMP18 ARGS7 (TYPE LIST)>
		    <LOOP>
MAP29
		    <INTGO>
		    <EMPL? TEMP18 + MAPAP32>
		    <NTHL TEMP18 1 = N37>
		    <NTHUV N37 1 = TEMP22 (TYPE FIX)>
		    <DEAD N37>
		    <VEQUAL? TEMP22 3 - PHRASE39 (TYPE FIX)>
		    <DEAD TEMP22>
		    <SET TEMP22 0 (TYPE FIX)>
		    <JUMP + PHRASE41>
PHRASE39
		    <SET TEMP22 1 (TYPE FIX)>
PHRASE41
		    <ADD TEMP35 TEMP22 = TEMP35>
		    <DEAD TEMP22>
		    <RESTL TEMP18 1 = TEMP18 (TYPE LIST)>
		    <JUMP + MAP29>
MAPAP32
		    <SET I6 TEMP35>
		    <DEAD TEMP35>
		    <LOOP>
AGAIN46
		    <INTGO>
		    <EMPL? ARGS7 + EXIT44 (TYPE LIST)>
		    <NTHL ARGS7 1 = N37 (TYPE NODE)>
		    <NTHUV N37 1 = TEMP35 (TYPE FIX)>
		    <VEQUAL? TEMP35 3 - PHRASE50 (TYPE FIX)>
		    <DEAD TEMP35>
		    <TYPE? SEGTMP11 <TYPE-CODE UNBOUND> - PHRASE52>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = SEGTMP11>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = TEMP35>
		    <NTHR 'COUNTMP 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP22 1 TEMP35 (RECORD-TYPE LBIND)>
		    <DEAD TEMP22 TEMP35>
		    <FRAME 'SET-TEMP>
		    <NTHR 'COUNTMP 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP35>
		    <PUSH I6>
		    <PUSH (`TYPE FIX)>
		    <CALL 'SET-TEMP 3>
PHRASE52
		    <FRAME 'GEN>
		    <NTHUV N37 5 = TEMP35 (TYPE LIST)>
		    <DEAD N37>
		    <NTHL TEMP35 1 = N37 (TYPE NODE)>
		    <DEAD TEMP35>
		    <PUSH N37>
		    <PUSH SEGTMP11>
		    <CALL 'GEN 2 = TEMP18>
		    <FRAME 'STRUCTYP-SEG>
		    <NTHUV N37 3 = STACK>
		    <CALL 'STRUCTYP-SEG 1 = TEMP22>
		    <NTHUV NOD4 4 = TEMP35>
		    <EQUAL? TEMP35 'LIST - PHRASE63>
		    <DEAD TEMP35>
		    <RESTL ARGS7 1 = TEMP35 (TYPE LIST)>
		    <EMPL? TEMP35 - PHRASE63 (TYPE LIST)>
		    <DEAD TEMP35>
		    <TYPE? TEMP22 <TYPE-CODE FALSE> + BOOL65>
		    <EQUAL? TEMP22 'LIST - PHRASE63>
BOOL65
		    <GVAL 'NO-DATUM = TEMP35>
		    <EQUAL? TEMP35 TEMP18 + PHRASE63>
		    <DEAD TEMP35>
		    <EQUAL? WHERE5 'DONT-CARE - PHRASE67>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'LIST>
		    <CALL 'GEN-TEMP 1 = WHERE5>
		    <JUMP + PHRASE69>
PHRASE67
		    <TYPE? WHERE5 <TYPE-CODE TEMP> - PHRASE69>
		    <FRAME 'USE-TEMP>
		    <PUSH WHERE5>
		    <PUSH 'LIST>
		    <CALL 'USE-TEMP 2>
PHRASE69
		    <FRAME 'SEGMENT-LIST>
		    <PUSH SEGTMP11>
		    <NTHR 'COUNTMP 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP35>
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <PUSH WHERE5>
		    <NTHR 'SEGLABEL 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP35>
		    <PUSH TEMP18>
		    <DEAD TEMP18>
		    <CALL 'SEGMENT-LIST 6>
		    <FRAME 'FREE-TEMP>
		    <PUSH SEGTMP11>
		    <DEAD SEGTMP11>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'FREE-TEMP>
		    <NTHR 'COUNTMP 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP35>
		    <CALL 'FREE-TEMP 1>
		    <JUMP + PHRASE192>
PHRASE63
		    <GVAL 'NO-DATUM = TEMP35>
		    <EQUAL? TEMP35 TEMP18 + PHRASE80>
		    <DEAD TEMP35 TEMP18>
		    <EQUAL? TEMP22 'MULTI + PHRASE80>
		    <FRAME 'SEGMENT-STACK>
		    <PUSH SEGTMP11>
		    <NTHR 'COUNTMP 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP35>
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <FRAME 'ISTYPE?>
		    <NTHUV N37 3 = STACK>
		    <DEAD N37>
		    <CALL 'ISTYPE? 1 = STACK>
		    <NTHR 'SEGLABEL 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP35>
		    <CALL 'SEGMENT-STACK 5>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP35>
		    <NTHR 'SEGLABEL 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP22 1 TEMP35 (RECORD-TYPE LBIND)>
		    <DEAD TEMP22 TEMP35>
		    <JUMP + PHRASE100>
PHRASE80
		    <NTHR 'SEGCALLED 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = TEMP35 (RECORD-TYPE LBIND)>
		    <TYPE? TEMP35 <TYPE-CODE FALSE> + PHRASE100>
		    <DEAD TEMP35>
		    <FRAME 'LABEL-TAG>
		    <NTHR 'SEGLABEL 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP35>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP35>
		    <NTHR 'SEGLABEL 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP22 1 TEMP35 (RECORD-TYPE LBIND)>
		    <DEAD TEMP22 TEMP35>
		    <JUMP + PHRASE100>
PHRASE50
		    <FRAME 'GEN>
		    <NTHL ARGS7 1 = STACK (TYPE NODE)>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'GEN 2>
PHRASE100
		    <RESTL ARGS7 1 = ARGS7 (TYPE LIST)>
		    <JUMP + AGAIN46>
EXIT44
		    <TYPE? SEGTMP11 <TYPE-CODE UNBOUND> + PHRASE106>
		    <FRAME 'FREE-TEMP>
		    <PUSH SEGTMP11>
		    <CALL 'FREE-TEMP 1>
		    <TYPE? STACK?16 <TYPE-CODE FALSE> - PHRASE106>
		    <FRAME 'FREE-TEMP>
		    <NTHR 'COUNTMP 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP35>
		    <CALL 'FREE-TEMP 1>
PHRASE106
		    <EQUAL? WHERE5 'DONT-CARE - PHRASE111>
		    <FRAME 'GEN-TEMP>
		    <PUSH INAME10>
		    <CALL 'GEN-TEMP 1 = WHERE5>
		    <JUMP + PHRASE113>
PHRASE111
		    <TYPE? WHERE5 <TYPE-CODE TEMP> - PHRASE113>
		    <FRAME 'USE-TEMP>
		    <PUSH WHERE5>
		    <PUSH INAME10>
		    <CALL 'USE-TEMP 2>
PHRASE113
		    <EQUAL? INAME10 'VECTOR - PHRASE116>
		    <FRAME 'GEN-VECTOR>
		    <TYPE? SEGTMP11 <TYPE-CODE UNBOUND> + PHRASE119>
		    <NTHR 'COUNTMP 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = TEMP35 (RECORD-TYPE LBIND)>
		    <JUMP + PHRASE122>
PHRASE119
		    <SET TEMP35 I6>
PHRASE122
		    <PUSH TEMP35>
		    <DEAD TEMP35>
		    <PUSH WHERE5>
		    <PUSH STACK?16>
		    <CALL 'GEN-VECTOR 3>
		    <JUMP + PHRASE144>
PHRASE116
		    <EQUAL? INAME10 'LIST - PHRASE123>
		    <FRAME 'GEN-LIST>
		    <TYPE? SEGTMP11 <TYPE-CODE UNBOUND> + PHRASE126>
		    <NTHR 'COUNTMP 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = TEMP35 (RECORD-TYPE LBIND)>
		    <JUMP + PHRASE129>
PHRASE126
		    <SET TEMP35 I6>
PHRASE129
		    <PUSH TEMP35>
		    <DEAD TEMP35>
		    <PUSH WHERE5>
		    <CALL 'GEN-LIST 2>
		    <JUMP + PHRASE144>
PHRASE123
		    <EQUAL? INAME10 'UVECTOR - PHRASE130>
		    <FRAME 'GEN-UVECTOR>
		    <TYPE? SEGTMP11 <TYPE-CODE UNBOUND> + PHRASE133>
		    <NTHR 'COUNTMP 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = TEMP35 (RECORD-TYPE LBIND)>
		    <JUMP + PHRASE136>
PHRASE133
		    <SET TEMP35 I6>
PHRASE136
		    <PUSH TEMP35>
		    <DEAD TEMP35>
		    <PUSH WHERE5>
		    <PUSH STACK?16>
		    <CALL 'GEN-UVECTOR 3>
		    <JUMP + PHRASE144>
PHRASE130
		    <EQUAL? INAME10 'TUPLE - PHRASE137>
		    <FRAME 'GEN-TUPLE>
		    <TYPE? SEGTMP11 <TYPE-CODE UNBOUND> + PHRASE140>
		    <NTHR 'COUNTMP 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = TEMP35 (RECORD-TYPE LBIND)>
		    <JUMP + PHRASE143>
PHRASE140
		    <SET TEMP35 I6>
PHRASE143
		    <PUSH TEMP35>
		    <DEAD TEMP35>
		    <PUSH WHERE5>
		    <CALL 'GEN-TUPLE 2>
		    <JUMP + PHRASE144>
PHRASE137
		    <FRAME 'ERROR>
		    <PUSH "NOT READY YET">
		    <CALL 'ERROR 1>
PHRASE144
		    <TYPE? STACK?16 <TYPE-CODE FALSE> + PHRASE192>
		    <DEAD STACK?16>
		    <TYPE? SEGTMP11 <TYPE-CODE UNBOUND> + PHRASE149>
		    <DEAD SEGTMP11>
		    <EQUAL? INAME10 'UVECTOR + PHRASE151>
		    <DEAD INAME10>
		    <FRAME 'IEMIT>
		    <PUSH '`LSH>
		    <NTHR 'COUNTMP 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP35>
		    <PUSH 1>
		    <PUSH '=>
		    <NTHR 'COUNTMP 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP22 1 = TEMP22 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP22 2 = TEMP22 (TYPE FIX)>
		    <GRTR? TEMP22 1 + TAG159 (TYPE FIX)>
		    <DEAD TEMP22>
		    <SET TEMP35 %<> (TYPE FALSE)>
		    <JUMP + PHRASE156>
TAG159
		    <FRAME 'FREE-TEMP>
		    <NTHR 'COUNTMP 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP22 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP22>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = TEMP35>
		    <NTHR 'COUNTMP 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP22 1 TEMP35 (RECORD-TYPE LBIND)>
		    <DEAD TEMP22>
PHRASE156
		    <PUSH TEMP35>
		    <DEAD TEMP35>
		    <CALL 'IEMIT 5>
PHRASE151
		    <FRAME 'FREE-TEMP>
		    <NTHR 'COUNTMP 2 = TEMP35 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP35 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP35>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <GEN-ASSIGNED? 'STKTMP - PHRASE172>
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <GEN-LVAL 'STKTMP = STACK>
		    <NTHR 'COUNTMP 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP22 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP22>
		    <PUSH '=>
		    <GEN-LVAL 'STKTMP = STACK>
		    <CALL 'IEMIT 5>
		    <JUMP + PHRASE180>
PHRASE172
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <PUSH 0>
		    <NTHR 'COUNTMP 2 = TEMP18 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP18 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP18>
		    <PUSH '=>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = TEMP18>
		    <GEN-SET 'STKTMP TEMP18>
		    <PUSH TEMP18>
		    <DEAD TEMP18>
		    <CALL 'IEMIT 5>
PHRASE180
		    <GEN-LVAL 'STK = TEMP18>
		    <ADD TEMP18 2 = TEMP18 (TYPE FIX)>
		    <GEN-SET 'STK TEMP18>
		    <DEAD TEMP18>
		    <JUMP + PHRASE192>
PHRASE149
		    <GEN-LVAL 'STK = TEMP18>
		    <EQUAL? INAME10 'UVECTOR + PHRASE198>
		    <DEAD INAME10>
		    <LSH I6 1 = I6 (TYPE FIX)>
PHRASE198
		    <ADD TEMP18 I6 = TEMP18 (TYPE FIX)>
		    <DEAD I6>
		    <ADD TEMP18 2 = TEMP18 (TYPE FIX)>
		    <GEN-SET 'STK TEMP18>
		    <DEAD TEMP18>
PHRASE192
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -27>
		    <RETURN WHERE5>
		    <DEAD WHERE5>
		    <END COPY-GEN>
"Generate code for a call to a SUBR."

#WORD *31706506554*
<GFCN SUBR-GEN ("VALUE" ANY NODE ANY) NOD4 WHERE5>
		    <TEMP N6>
		    <INTGO>
		    <NTHUV NOD4 2 = N6>
		    <TYPE? N6 <TYPE-CODE NODE> - PHRASE9>
		    <NTHUV N6 1 = N6 (TYPE FIX)>
		    <VEQUAL? N6 3 - PHRASE9 (TYPE FIX)>
		    <DEAD N6>
		    <FRAME 'STRUCTYP-SEG>
		    <NTHUV NOD4 3 = STACK>
		    <CALL 'STRUCTYP-SEG 1 = N6>
		    <EQUAL? N6 'MULTI + BOOL12>
		    <TYPE? N6 <TYPE-CODE FALSE> - PHRASE9>
		    <DEAD N6>
BOOL12
		    <GEN-SET 'SEGCALLED 'T>
		    <FRAME 'COMP-SUBR-CALL>
		    <PUSH NOD4>
		    <NTHUV NOD4 5 = STACK (TYPE LIST)>
		    <DEAD NOD4>
		    <PUSH WHERE5>
		    <DEAD WHERE5>
		    <GEN-LVAL 'COUNTMP = STACK>
		    <GEN-LVAL 'SEGLABEL = STACK>
		    <CALL 'COMP-SUBR-CALL 5 = N6>
		    <RETURN N6>
		    <DEAD N6>
PHRASE9
		    <FRAME 'COMP-SUBR-CALL>
		    <PUSH NOD4>
		    <NTHUV NOD4 5 = STACK (TYPE LIST)>
		    <DEAD NOD4>
		    <PUSH WHERE5>
		    <DEAD WHERE5>
		    <PUSH %<>>
		    <PUSH %<>>
		    <CALL 'COMP-SUBR-CALL 5 = N6>
		    <RETURN N6>
		    <DEAD N6>
		    <END SUBR-GEN>
" Compile call to a SUBR that doesn't compile or PUSHJ."

#WORD *1577076423*
<GFCN COMP-SUBR-CALL ("VALUE" ANY NODE <LIST [REST NODE]> ANY ANY ANY) N4 OBJ5 W6 PARENT-COUNT7 PARENT-LABEL8>
		    <TEMP (I9:FIX 0) SEGTMP10 TEMP3:LBIND TEMP20 SUBR14 (SLNT17 0) TEMP26 TEMP42 N44:NODE TEMP52>
		    <INTGO>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <BBIND 'COUNTMP 'ANY 'FIX>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP20>
		    <BBIND 'SEGLABEL 'ANY 'FIX TEMP20>
		    <DEAD TEMP20>
		    <NTHUV N4 4 = SUBR14>
		    <BBIND 'SEGCALLED 'ANY 'FIX %<>>
		    <NTHUV N4 2 = TEMP20>
		    <TYPE? TEMP20 <TYPE-CODE NODE> + TAG23>
		    <SET TEMP20 %<> (TYPE FALSE)>
		    <JUMP + TAG33>
TAG23
		    <NTHUV TEMP20 1 = TEMP26 (TYPE FIX)>
		    <VEQUAL? TEMP26 98 - TAG27 (TYPE FIX)>
		    <DEAD TEMP26>
		    <SET TEMP20 'T (TYPE ATOM)>
		    <JUMP + TAG33>
TAG27
		    <NTHUV TEMP20 1 = TEMP26 (TYPE FIX)>
		    <VEQUAL? TEMP26 37 + TAG29 (TYPE FIX)>
		    <DEAD TEMP26>
		    <SET TEMP20 %<> (TYPE FALSE)>
		    <JUMP + TAG33>
TAG29
		    <NTHUV TEMP20 2 = TEMP20>
		    <TYPE? TEMP20 <TYPE-CODE NODE> + TAG30>
		    <SET TEMP20 %<> (TYPE FALSE)>
		    <JUMP + TAG33>
TAG30
		    <NTHUV TEMP20 1 = TEMP26 (TYPE FIX)>
		    <DEAD TEMP20>
		    <VEQUAL? TEMP26 98 - TAG32 (TYPE FIX)>
		    <DEAD TEMP26>
		    <SET TEMP20 'T (TYPE ATOM)>
		    <JUMP + TAG33>
TAG32
		    <SET TEMP20 %<> (TYPE FALSE)>
TAG33
		    <SET TEMP42 0 (TYPE FIX)>
		    <SET TEMP26 OBJ5 (TYPE LIST)>
		    <LOOP>
MAP35
		    <INTGO>
		    <EMPL? TEMP26 + MAPAP38>
		    <NTHL TEMP26 1 = N44>
		    <NTHUV N44 1 = I9 (TYPE FIX)>
		    <VEQUAL? I9 3 - PHRASE46 (TYPE FIX)>
		    <DEAD I9>
		    <SET SLNT17 %<> (TYPE FALSE)>
		    <SET I9 0 (TYPE FIX)>
		    <JUMP + PHRASE48>
PHRASE46
		    <EQUAL? SUBR14 'STRING - PHRASE50>
		    <TYPE? SLNT17 <TYPE-CODE FIX> - PHRASE50>
		    <NTHUV N44 1 = TEMP52 (TYPE FIX)>
		    <VEQUAL? TEMP52 2 - PHRASE50 (TYPE FIX)>
		    <DEAD TEMP52>
		    <NTHUV N44 4 = TEMP52>
		    <DEAD N44>
		    <LENUS TEMP52 = TEMP52 (TYPE FIX)>
		    <ADD TEMP52 SLNT17 = SLNT17 (TYPE FIX)>
		    <DEAD TEMP52>
		    <JUMP + PHRASE53>
PHRASE50
		    <SET SLNT17 %<> (TYPE FALSE)>
PHRASE53
		    <SET I9 1 (TYPE FIX)>
PHRASE48
		    <ADD TEMP42 I9 = TEMP42>
		    <DEAD I9>
		    <RESTL TEMP26 1 = TEMP26 (TYPE LIST)>
		    <JUMP + MAP35>
MAPAP38
		    <SET I9 TEMP42>
		    <DEAD TEMP42>
		    <SET TEMP26 [LIST VECTOR UVECTOR TUPLE BYTES STRING] (TYPE VECTOR)>
		    <TYPE? SUBR14 <TYPE-CODE ATOM> - TAG56>
		    <LOOP (SUBR14 VALUE) (TEMP26 LENGTH VALUE)>
TAG57
		    <NTHUV TEMP26 1 = TEMP42>
		    <VEQUAL? TEMP42 SUBR14 + PHRASE63>
		    <DEAD TEMP42>
		    <RESTUV TEMP26 1 = TEMP26 (TYPE VECTOR)>
		    <EMPUV? TEMP26 - TAG57>
TAG56
		    <TYPE? PARENT-COUNT7 <TYPE-CODE FALSE> + PHRASE60>
		    <FRAME 'IEMIT>
		    <PUSH '`SFRAME>
		    <FRAME 'FORM>
		    <PUSH 'QUOTE>
		    <PUSH SUBR14>
		    <CALL 'FORM 2 = STACK>
		    <CALL 'IEMIT 2>
		    <JUMP + PHRASE63>
PHRASE60
		    <FRAME 'START-FRAME>
		    <PUSH SUBR14>
		    <CALL 'START-FRAME 1>
PHRASE63
		    <SET TEMP26 OBJ5 (TYPE LIST)>
		    <DEAD OBJ5>
		    <LOOP>
MAP66
		    <INTGO>
		    <EMPL? TEMP26 + MAPAP69>
		    <NTHL TEMP26 1 = N44>
		    <NTHUV N44 1 = TEMP52 (TYPE FIX)>
		    <VEQUAL? TEMP52 3 - PHRASE74 (TYPE FIX)>
		    <DEAD TEMP52>
		    <TYPE? SEGTMP10 <TYPE-CODE UNBOUND> - PHRASE76>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = SEGTMP10>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = TEMP52>
		    <NTHR 'COUNTMP 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP42 1 TEMP52 (RECORD-TYPE LBIND)>
		    <DEAD TEMP42 TEMP52>
		    <FRAME 'SET-TEMP>
		    <NTHR 'COUNTMP 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP52>
		    <PUSH I9>
		    <PUSH (`TYPE FIX)>
		    <CALL 'SET-TEMP 3>
PHRASE76
		    <FRAME 'GEN>
		    <NTHUV N44 5 = TEMP52 (TYPE LIST)>
		    <DEAD N44>
		    <NTHL TEMP52 1 = N44 (TYPE NODE)>
		    <DEAD TEMP52>
		    <PUSH N44>
		    <PUSH SEGTMP10>
		    <CALL 'GEN 2 = TEMP42>
		    <GVAL 'NO-DATUM = TEMP52>
		    <EQUAL? TEMP52 TEMP42 + PHRASE87>
		    <DEAD TEMP52 TEMP42>
		    <FRAME 'STRUCTYP-SEG>
		    <NTHUV N44 3 = STACK>
		    <CALL 'STRUCTYP-SEG 1 = TEMP52>
		    <EQUAL? TEMP52 'MULTI + PHRASE87>
		    <DEAD TEMP52>
		    <FRAME 'SEGMENT-STACK>
		    <PUSH SEGTMP10>
		    <NTHR 'COUNTMP 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP52>
		    <FRAME 'STRUCTYP>
		    <NTHUV N44 3 = STACK>
		    <CALL 'STRUCTYP 1 = STACK>
		    <FRAME 'ISTYPE?>
		    <NTHUV N44 3 = STACK>
		    <DEAD N44>
		    <CALL 'ISTYPE? 1 = STACK>
		    <NTHR 'SEGLABEL 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP52>
		    <CALL 'SEGMENT-STACK 5>
		    <JUMP + PHRASE97>
PHRASE87
		    <NTHR 'SEGCALLED 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = TEMP52 (RECORD-TYPE LBIND)>
		    <TYPE? TEMP52 <TYPE-CODE FALSE> + PHRASE97>
		    <DEAD TEMP52>
		    <FRAME 'LABEL-TAG>
		    <NTHR 'SEGLABEL 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP52>
		    <CALL 'LABEL-TAG 1>
PHRASE97
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP52>
		    <NTHR 'SEGLABEL 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP42 1 TEMP52 (RECORD-TYPE LBIND)>
		    <DEAD TEMP42 TEMP52>
		    <JUMP + PHRASE106>
PHRASE74
		    <FRAME 'GEN>
		    <PUSH N44>
		    <DEAD N44>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'GEN 2>
PHRASE106
		    <RESTL TEMP26 1 = TEMP26 (TYPE LIST)>
		    <JUMP + MAP66>
MAPAP69
		    <TYPE? SEGTMP10 <TYPE-CODE UNBOUND> + PHRASE112>
		    <FRAME 'FREE-TEMP>
		    <PUSH SEGTMP10>
		    <DEAD SEGTMP10>
		    <CALL 'FREE-TEMP 1>
		    <TYPE? TEMP20 <TYPE-CODE FALSE> - PHRASE112>
		    <FRAME 'FREE-TEMP>
		    <NTHR 'COUNTMP 2 = TEMP26 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP26 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP26>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
PHRASE112
		    <EQUAL? W6 'DONT-CARE - PHRASE117>
		    <FRAME 'GEN-TEMP>
		    <NTHUV N4 3 = STACK>
		    <DEAD N4>
		    <CALL 'GEN-TEMP 1 = W6>
		    <JUMP + PHRASE119>
PHRASE117
		    <TYPE? W6 <TYPE-CODE TEMP> - PHRASE119>
		    <FRAME 'USE-TEMP>
		    <PUSH W6>
		    <NTHUV N4 3 = STACK>
		    <DEAD N4>
		    <CALL 'USE-TEMP 2>
PHRASE119
		    <TYPE? PARENT-COUNT7 <TYPE-CODE FALSE> + PHRASE122>
		    <FRAME 'SEG-SUBR-CALL>
		    <PUSH SUBR14>
		    <DEAD SUBR14>
		    <NTHR 'COUNTMP 2 = TEMP26 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP26 1 = TEMP26 (RECORD-TYPE LBIND)>
		    <TYPE? TEMP26 <TYPE-CODE UNBOUND> + PHRASE125>
		    <DEAD TEMP26>
		    <NTHR 'COUNTMP 2 = TEMP26 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP26 1 = TEMP26 (RECORD-TYPE LBIND)>
		    <JUMP + PHRASE128>
PHRASE125
		    <SET TEMP26 I9>
		    <DEAD I9>
PHRASE128
		    <PUSH TEMP26>
		    <DEAD TEMP26>
		    <PUSH W6>
		    <PUSH PARENT-COUNT7>
		    <DEAD PARENT-COUNT7>
		    <PUSH PARENT-LABEL8>
		    <DEAD PARENT-LABEL8>
		    <CALL 'SEG-SUBR-CALL 5>
		    <JUMP + PHRASE129>
PHRASE122
		    <FRAME 'SMSUBR-CALL>
		    <PUSH SUBR14>
		    <DEAD SUBR14>
		    <NTHR 'COUNTMP 2 = TEMP26 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP26 1 = TEMP26 (RECORD-TYPE LBIND)>
		    <TYPE? TEMP26 <TYPE-CODE UNBOUND> + PHRASE132>
		    <DEAD TEMP26>
		    <NTHR 'COUNTMP 2 = TEMP26 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP26 1 = TEMP26 (RECORD-TYPE LBIND)>
		    <JUMP + PHRASE135>
PHRASE132
		    <SET TEMP26 I9>
		    <DEAD I9>
PHRASE135
		    <PUSH TEMP26>
		    <DEAD TEMP26>
		    <PUSH W6>
		    <PUSH TEMP20>
		    <DEAD TEMP20>
		    <PUSH SLNT17>
		    <DEAD SLNT17>
		    <CALL 'SMSUBR-CALL 5>
PHRASE129
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -27>
		    <RETURN W6>
		    <DEAD W6>
		    <END COMP-SUBR-CALL>
""

#WORD *3576772202*
<GFCN SEGMENT-STACK ("VALUE" <LIST ANY> ANY ANY ANY ANY "OPTIONAL" ANY) SEGTMP6 COUNTMP7 SEGTYP8 SEGTYP2-9 TG1-10>
		    <OPT-DISPATCH 4 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP TG2-11 TEMP20:LIST TEMP21:ATOM>
		    <INTGO>
		    <TYPE? TG1-10 <TYPE-CODE UNBOUND> - TAG13>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TG1-10>
TAG13
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TG2-11>
		    <TYPE? SEGTYP8 <TYPE-CODE FALSE> - PHRASE18>
		    <FRAME 'IEMIT>
		    <PUSH '`LOOP>
		    <CONS 'LENGTH () = TEMP20>
		    <CONS 'VALUE TEMP20 = TEMP20>
		    <CONS 'TYPE TEMP20 = TEMP20>
		    <NTHUV SEGTMP6 1 = TEMP21 (TYPE ATOM)>
		    <CONS TEMP21 TEMP20 = STACK>
		    <DEAD TEMP21 TEMP20>
		    <CONS 'VALUE () = TEMP20>
		    <NTHUV COUNTMP7 1 = TEMP21 (TYPE ATOM)>
		    <CONS TEMP21 TEMP20 = STACK>
		    <DEAD TEMP21 TEMP20>
		    <CALL 'IEMIT 3>
		    <JUMP + PHRASE24>
PHRASE18
		    <EQUAL? SEGTYP8 'LIST - PHRASE22>
		    <FRAME 'IEMIT>
		    <PUSH '`LOOP>
		    <CONS 'VALUE () = TEMP20>
		    <NTHUV SEGTMP6 1 = TEMP21 (TYPE ATOM)>
		    <CONS TEMP21 TEMP20 = STACK>
		    <DEAD TEMP21 TEMP20>
		    <CONS 'VALUE () = TEMP20>
		    <NTHUV COUNTMP7 1 = TEMP21 (TYPE ATOM)>
		    <CONS TEMP21 TEMP20 = STACK>
		    <DEAD TEMP21 TEMP20>
		    <CALL 'IEMIT 3>
		    <JUMP + PHRASE24>
PHRASE22
		    <FRAME 'IEMIT>
		    <PUSH '`LOOP>
		    <CONS 'LENGTH () = TEMP20>
		    <CONS 'VALUE TEMP20 = TEMP20>
		    <NTHUV SEGTMP6 1 = TEMP21 (TYPE ATOM)>
		    <CONS TEMP21 TEMP20 = STACK>
		    <DEAD TEMP21 TEMP20>
		    <CONS 'VALUE () = TEMP20>
		    <NTHUV COUNTMP7 1 = TEMP21 (TYPE ATOM)>
		    <CONS TEMP21 TEMP20 = STACK>
		    <DEAD TEMP21 TEMP20>
		    <CALL 'IEMIT 3>
PHRASE24
		    <FRAME 'LABEL-TAG>
		    <PUSH TG2-11>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'IEMIT>
		    <PUSH '`INTGO>
		    <CALL 'IEMIT 1>
		    <TYPE? SEGTYP8 <TYPE-CODE FALSE> + PHRASE29>
		    <FRAME 'EMPTY-CHECK>
		    <PUSH SEGTYP8>
		    <PUSH SEGTMP6>
		    <PUSH SEGTYP2-9>
		    <PUSH 'T>
		    <PUSH TG1-10>
		    <CALL 'EMPTY-CHECK 5>
		    <JUMP + PHRASE31>
PHRASE29
		    <FRAME 'IEMIT>
		    <PUSH '`EMPTY?>
		    <PUSH SEGTMP6>
		    <PUSH '+>
		    <PUSH TG1-10>
		    <CALL 'IEMIT 4>
PHRASE31
		    <TYPE? SEGTYP8 <TYPE-CODE FALSE> + PHRASE34>
		    <FRAME 'NTH-DO>
		    <PUSH SEGTYP8>
		    <PUSH SEGTMP6>
		    <GVAL 'POP-STACK = STACK>
		    <PUSH 1>
		    <PUSH SEGTYP2-9>
		    <CALL 'NTH-DO 5>
		    <FRAME 'REST-DO>
		    <PUSH SEGTYP8>
		    <DEAD SEGTYP8>
		    <PUSH SEGTMP6>
		    <PUSH SEGTMP6>
		    <DEAD SEGTMP6>
		    <PUSH 1>
		    <PUSH SEGTYP2-9>
		    <DEAD SEGTYP2-9>
		    <CALL 'REST-DO 5>
		    <JUMP + PHRASE37>
PHRASE34
		    <FRAME 'IEMIT>
		    <PUSH '`NTH1>
		    <PUSH SEGTMP6>
		    <PUSH '=>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'IEMIT 4>
		    <FRAME 'IEMIT>
		    <PUSH '`REST1>
		    <PUSH SEGTMP6>
		    <PUSH '=>
		    <PUSH SEGTMP6>
		    <DEAD SEGTMP6>
		    <CALL 'IEMIT 4>
PHRASE37
		    <FRAME 'IEMIT>
		    <PUSH '`ADD>
		    <PUSH COUNTMP7>
		    <PUSH 1>
		    <PUSH '=>
		    <PUSH COUNTMP7>
		    <DEAD COUNTMP7>
		    <CONS 'FIX () = TEMP20>
		    <CONS '`TYPE TEMP20 = STACK>
		    <DEAD TEMP20>
		    <CALL 'IEMIT 6>
		    <FRAME 'BRANCH-TAG>
		    <PUSH TG2-11>
		    <DEAD TG2-11>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH TG1-10>
		    <DEAD TG1-10>
		    <CALL 'LABEL-TAG 1 = TEMP20>
		    <RETURN TEMP20>
		    <DEAD TEMP20>
		    <END SEGMENT-STACK>
#WORD *27652335472*
<GFCN SEGMENT-LIST ("VALUE" ANY ANY ANY ANY ANY "OPTIONAL" ANY ANY) SEGTMP7 COUNTMP8 LIST?9 W10 TGX11 RES12>
		    <OPT-DISPATCH 4 %<> OPT4 OPT5 OPT6>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <PUSH %<>>
OPT6
		    <TEMP TG1-13 TG2-14 TG3-15 TG4-16 OTMP17:TEMP>
		    <INTGO>
		    <TYPE? TGX11 <TYPE-CODE UNBOUND> - TAG18>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TGX11>
TAG18
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TG1-13>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TG2-14>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TG3-15>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TG4-16>
		    <FRAME 'GEN-TEMP>
		    <CALL 'GEN-TEMP 0 = OTMP17>
		    <TYPE? LIST?9 <TYPE-CODE FALSE> - PHRASE27>
		    <FRAME 'IEMIT>
		    <PUSH '`TYPE>
		    <PUSH SEGTMP7>
		    <PUSH '=>
		    <PUSH OTMP17>
		    <CALL 'IEMIT 4>
		    <FRAME 'IEMIT>
		    <PUSH '`AND>
		    <PUSH OTMP17>
		    <PUSH 7>
		    <PUSH '=>
		    <PUSH OTMP17>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`VEQUAL?>
		    <PUSH OTMP17>
		    <PUSH 1>
		    <PUSH '+>
		    <PUSH TG1-13>
		    <CALL 'IEMIT 5>
		    <FRAME 'SEGMENT-STACK>
		    <PUSH SEGTMP7>
		    <PUSH COUNTMP8>
		    <PUSH %<>>
		    <PUSH %<>>
		    <CALL 'SEGMENT-STACK 4>
		    <FRAME 'GEN-LIST>
		    <PUSH COUNTMP8>
		    <PUSH W10>
		    <CALL 'GEN-LIST 2>
		    <FRAME 'BRANCH-TAG>
		    <PUSH TG2-14>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH TGX11>
		    <DEAD TGX11>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'SET-TEMP>
		    <PUSH SEGTMP7>
		    <PUSH 0>
		    <CALL 'SET-TEMP 2>
		    <FRAME 'LABEL-TAG>
		    <PUSH TG1-13>
		    <DEAD TG1-13>
		    <CALL 'LABEL-TAG 1>
PHRASE27
		    <FRAME 'IEMIT>
		    <PUSH '`LOOP>
		    <CALL 'IEMIT 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH TG4-16>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'IEMIT>
		    <PUSH '`VEQUAL?>
		    <PUSH COUNTMP8>
		    <PUSH 0>
		    <PUSH '+>
		    <PUSH TG3-15>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`POP>
		    <PUSH '=>
		    <PUSH OTMP17>
		    <CALL 'IEMIT 3>
		    <FRAME 'IEMIT>
		    <PUSH '`CONS>
		    <PUSH OTMP17>
		    <PUSH SEGTMP7>
		    <PUSH '=>
		    <PUSH SEGTMP7>
		    <PUSH (`TYPE LIST)>
		    <CALL 'IEMIT 6>
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <PUSH COUNTMP8>
		    <PUSH 1>
		    <PUSH '=>
		    <PUSH COUNTMP8>
		    <DEAD COUNTMP8>
		    <PUSH (`TYPE FIX)>
		    <CALL 'IEMIT 6>
		    <FRAME 'BRANCH-TAG>
		    <PUSH TG4-16>
		    <DEAD TG4-16>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH TG3-15>
		    <DEAD TG3-15>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'FREE-TEMP>
		    <PUSH OTMP17>
		    <DEAD OTMP17>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <PUSH SEGTMP7>
		    <DEAD SEGTMP7>
		    <PUSH W10>
		    <CALL 'MOVE-ARG 2>
		    <TYPE? LIST?9 <TYPE-CODE FALSE> - PHRASE48>
		    <DEAD LIST?9>
		    <FRAME 'LABEL-TAG>
		    <PUSH TG2-14>
		    <DEAD TG2-14>
		    <CALL 'LABEL-TAG 1>
PHRASE48
		    <RETURN W10>
		    <DEAD W10>
		    <END SEGMENT-LIST>
<GDECL (SUBRS TEMPLATES) VECTOR>

#WORD *16266424377*
<GFCN SIDES ("VALUE" <OR ATOM FALSE> <LIST [REST NODE]>) L4>
		    <TEMP TEMP14 TEMP11:LIST TEMP19>
		    <INTGO>
		    <SET TEMP14 %<> (TYPE FALSE)>
		    <SET TEMP11 L4 (TYPE LIST)>
		    <DEAD L4>
		    <LOOP>
MAP6
		    <INTGO>
		    <EMPL? TEMP11 + MAPAP9>
		    <NTHL TEMP11 1 = TEMP14>
		    <NTHUV TEMP14 1 = TEMP19 (TYPE FIX)>
		    <VEQUAL? TEMP19 2 - PHRASE18 (TYPE FIX)>
		    <DEAD TEMP19>
		    <SET TEMP14 %<> (TYPE FALSE)>
		    <JUMP + PHRASE20>
PHRASE18
		    <NTHUV TEMP14 1 = TEMP19 (TYPE FIX)>
		    <VEQUAL? TEMP19 52 + TAG23 (TYPE FIX)>
		    <DEAD TEMP19>
		    <NTHUV TEMP14 8 = TEMP14>
		    <CHTYPE TEMP14 <TYPE-CODE LIST> = TEMP14>
		    <EMPL? TEMP14 + TAG22>
		    <LOOP (TEMP14 VALUE)>
TAG24
		    <NTHL TEMP14 1 = TEMP19>
		    <TYPE? TEMP19 <TYPE-CODE ATOM> - TAG25>
		    <VEQUAL? TEMP19 'ALL + TAG23>
		    <DEAD TEMP19>
TAG25
		    <RESTL TEMP14 1 = TEMP14 (TYPE LIST)>
		    <EMPL? TEMP14 - TAG24>
TAG22
		    <SET TEMP14 %<> (TYPE FALSE)>
		    <JUMP + PHRASE20>
TAG23
		    <RETURN 'T>
PHRASE20
		    <RESTL TEMP11 1 = TEMP11 (TYPE LIST)>
		    <JUMP + MAP6>
MAPAP9
		    <RETURN TEMP14>
		    <DEAD TEMP14>
		    <END SIDES>
" Generate code for a COND."

#WORD *31673133744*
<GFCN COND-GEN ("VALUE" ANY NODE ANY "OPTIONAL" ANY ANY ANY) NOD8 W9 NOTF10 BRANCH11 DIR12>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <TEMP RW14 COND16:ATOM (WSET18 %<>) KK19:LIST SDIR20 TEMP29 TEMP44 LAST42 BR46 PRED-TRUE48 K49 PR50 NO-SEQ51 LEAVE52 BRNCHED58 PRT59 BR2-56 PRT2-57 LOCN15>
		    <INTGO>
		    <SET RW14 W9>
		    <FRAME 'MAKE-TAG>
		    <PUSH "COND">
		    <CALL 'MAKE-TAG 1 = COND16>
		    <NTHUV NOD8 5 = KK19 (TYPE LIST)>
		    <SET SDIR20 DIR12>
		    <TYPE? NOTF10 <TYPE-CODE FALSE> + TAG25>
		    <TYPE? DIR12 <TYPE-CODE FALSE> - TAG24>
		    <DEAD DIR12>
		    <SET DIR12 'T (TYPE ATOM)>
		    <JUMP + TAG25>
TAG24
		    <SET DIR12 %<> (TYPE FALSE)>
TAG25
		    <GVAL 'POP-STACK = TEMP29>
		    <EQUAL? TEMP29 W9 + BOOL28>
		    <DEAD TEMP29>
		    <TYPE? W9 <TYPE-CODE TEMP> - PHRASE27>
		    <NTHUV W9 5 = TEMP29>
		    <TYPE? TEMP29 <TYPE-CODE FALSE> + PHRASE27>
		    <DEAD TEMP29>
		    <NTHUV W9 5 = TEMP29>
		    <EQUAL? TEMP29 'ANY + PHRASE27>
		    <DEAD TEMP29>
BOOL28
		    <SET W9 'DONT-CARE (TYPE ATOM)>
PHRASE27
		    <SET TEMP29 KK19 (TYPE LIST)>
		    <DEAD KK19>
		    <LOOP>
MAP32
		    <INTGO>
		    <EMPL? TEMP29 + MAPAP35>
		    <SET KK19 TEMP29>
		    <RESTL KK19 1 = TEMP44 (TYPE LIST)>
		    <EMPL? TEMP44 - TAG43 (TYPE LIST)>
		    <DEAD TEMP44>
		    <SET LAST42 'T (TYPE ATOM)>
		    <JUMP + TAG45>
TAG43
		    <SET LAST42 %<> (TYPE FALSE)>
TAG45
		    <NTHL KK19 1 = BR46 (TYPE NODE)>
		    <SET PRED-TRUE48 %<> (TYPE FALSE)>
		    <NTHUV BR46 5 = K49 (TYPE LIST)>
		    <NTHUV BR46 4 = PR50 (TYPE NODE)>
		    <SET NO-SEQ51 %<> (TYPE FALSE)>
		    <SET LEAVE52 %<> (TYPE FALSE)>
		    <SET BRNCHED58 %<> (TYPE FALSE)>
		    <NTHUV PR50 3 = PRT59>
		    <VEQUAL? LAST42 0 - PHRASE62>
		    <FRAME 'TYPE-OK?>
		    <PUSH PRT59>
		    <PUSH 'FALSE>
		    <CALL 'TYPE-OK? 2 = TEMP44>
		    <TYPE? TEMP44 <TYPE-CODE FALSE> + PHRASE62>
		    <DEAD TEMP44>
		    <FRAME 'TYPE-OK?>
		    <RESTL KK19 1 = TEMP44 (TYPE LIST)>
		    <NTHL TEMP44 1 = BR2-56 (TYPE NODE)>
		    <DEAD TEMP44>
		    <NTHUV BR2-56 4 = TEMP44 (TYPE NODE)>
		    <NTHUV TEMP44 3 = PRT2-57>
		    <DEAD TEMP44>
		    <PUSH PRT2-57>
		    <PUSH 'FALSE>
		    <CALL 'TYPE-OK? 2 = TEMP44>
		    <TYPE? TEMP44 <TYPE-CODE FALSE> - PHRASE62>
		    <DEAD TEMP44>
		    <NTHUV BR2-56 5 = TEMP44 (TYPE LIST)>
		    <DEAD BR2-56>
		    <EMPL? TEMP44 - BOOL67 (TYPE LIST)>
		    <TYPE? PRT2-57 <TYPE-CODE FALSE> + BOOL66>
		    <DEAD PRT2-57>
BOOL67
		    <EMPL? TEMP44 + PHRASE62 (TYPE LIST)>
		    <LOOP (TEMP44 VALUE)>
TAG69
		    <RESTL TEMP44 1 = PRT2-57 (TYPE LIST)>
		    <EMPL? PRT2-57 + TAG71>
		    <SET TEMP44 PRT2-57>
		    <DEAD PRT2-57>
		    <JUMP + TAG69>
TAG71
		    <NTHL TEMP44 1 = PRT2-57>
		    <DEAD TEMP44>
		    <NTHUV PRT2-57 3 = PRT2-57>
		    <TYPE? PRT2-57 <TYPE-CODE FALSE> - PHRASE62>
		    <DEAD PRT2-57>
BOOL66
		    <FRAME 'COND-COMPLAIN>
		    <PUSH "Predicate assumed true to avoid type mismatch">
		    <PUSH PR50>
		    <CALL 'COND-COMPLAIN 2>
		    <SET PRED-TRUE48 'T (TYPE ATOM)>
PHRASE62
		    <EMPL? K49 - PHRASE74 (TYPE LIST)>
		    <FRAME 'TYPE-OK?>
		    <PUSH PRT59>
		    <PUSH 'FALSE>
		    <CALL 'TYPE-OK? 2 = PRT2-57>
		    <TYPE? PRT2-57 <TYPE-CODE FALSE> - TAG80>
		    <DEAD PRT2-57>
		    <SET PRED-TRUE48 'T (TYPE ATOM)>
TAG80
		    <VEQUAL? PRED-TRUE48 0 - BOOL77>
		    <VEQUAL? LAST42 0 + PHRASE76>
BOOL77
		    <VEQUAL? LAST42 0 - PHRASE82>
		    <FRAME 'COND-COMPLAIN>
		    <PUSH "NON REACHABLE COND CLAUSE(S) ">
		    <RESTL KK19 1 = PRT2-57 (TYPE LIST)>
		    <DEAD KK19>
		    <NTHL PRT2-57 1 = STACK (TYPE NODE)>
		    <DEAD PRT2-57>
		    <CALL 'COND-COMPLAIN 2>
PHRASE82
		    <VEQUAL? PRED-TRUE48 0 + PHRASE85>
		    <DEAD PRED-TRUE48>
		    <TYPE? BRANCH11 <TYPE-CODE FALSE> + PHRASE85>
		    <FRAME 'GEN>
		    <PUSH PR50>
		    <DEAD PR50>
		    <EQUAL? RW14 'FLUSHED - PHRASE89>
		    <SET PRT2-57 'FLUSHED (TYPE ATOM)>
		    <JUMP + PHRASE90>
PHRASE89
		    <SET PRT2-57 W9>
PHRASE90
		    <PUSH PRT2-57>
		    <DEAD PRT2-57>
		    <CALL 'GEN 2 = LOCN15>
		    <VEQUAL? WSET18 0 - PHRASE92>
		    <DEAD WSET18>
		    <GVAL 'NO-DATUM = PRT2-57>
		    <EQUAL? PRT2-57 LOCN15 + PHRASE92>
		    <DEAD PRT2-57>
		    <EQUAL? RW14 'FLUSHED + PHRASE92>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH W9>
		    <DEAD W9>
		    <PUSH LOCN15>
		    <DEAD LOCN15>
		    <CALL 'FIXUP-TEMP 2 = W9>
PHRASE92
		    <TYPE? DIR12 <TYPE-CODE FALSE> + MAPAP35>
		    <DEAD DIR12>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH11>
		    <DEAD BRANCH11>
		    <CALL 'BRANCH-TAG 1>
		    <JUMP + MAPAP35>
PHRASE85
		    <TYPE? BRANCH11 <TYPE-CODE FALSE> + PHRASE98>
		    <VEQUAL? LAST42 0 + PHRASE98>
		    <DEAD LAST42>
		    <FRAME 'PRED-BRANCH-GEN>
		    <PUSH BRANCH11>
		    <DEAD BRANCH11>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH SDIR20>
		    <DEAD SDIR20>
		    <EQUAL? RW14 'FLUSHED - PHRASE102>
		    <SET PRT2-57 'FLUSHED (TYPE ATOM)>
		    <JUMP + PHRASE109>
PHRASE102
		    <VEQUAL? WSET18 0 - BOOL104>
		    <DEAD WSET18>
		    <TYPE? W9 <TYPE-CODE TEMP> - PHRASE103>
		    <NTHUV W9 2 = TEMP44 (TYPE FIX)>
		    <VEQUAL? TEMP44 0 - PHRASE103 (TYPE FIX)>
		    <DEAD TEMP44>
BOOL104
		    <SET PRT2-57 W9>
		    <JUMP + PHRASE109>
PHRASE103
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W9>
		    <SET PRT2-57 W9>
PHRASE109
		    <PUSH PRT2-57>
		    <DEAD PRT2-57>
		    <PUSH NOTF10>
		    <DEAD NOTF10>
		    <CALL 'PRED-BRANCH-GEN 5>
		    <JUMP + MAPAP35>
PHRASE98
		    <FRAME 'GEN>
		    <PUSH PR50>
		    <DEAD PR50>
		    <EQUAL? RW14 'FLUSHED - PHRASE114>
		    <SET PRT2-57 'FLUSHED (TYPE ATOM)>
		    <JUMP + PHRASE115>
PHRASE114
		    <SET PRT2-57 W9>
PHRASE115
		    <PUSH PRT2-57>
		    <DEAD PRT2-57>
		    <CALL 'GEN 2 = LOCN15>
		    <VEQUAL? WSET18 0 - MAPAP35>
		    <DEAD WSET18>
		    <GVAL 'NO-DATUM = PRT2-57>
		    <EQUAL? PRT2-57 LOCN15 + MAPAP35>
		    <DEAD PRT2-57>
		    <EQUAL? RW14 'FLUSHED + MAPAP35>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH W9>
		    <DEAD W9>
		    <PUSH LOCN15>
		    <DEAD LOCN15>
		    <CALL 'FIXUP-TEMP 2 = W9>
		    <JUMP + MAPAP35>
PHRASE76
		    <TYPE? PRT59 <TYPE-CODE FALSE> - PHRASE120>
		    <FRAME 'COND-COMPLAIN>
		    <PUSH "Predicate assumed FALSE to satisfy type constraint ">
		    <PUSH PR50>
		    <CALL 'COND-COMPLAIN 2>
		    <FRAME 'GEN>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN 2>
		    <JUMP + PHRASE151>
PHRASE120
		    <FRAME 'ISTYPE?>
		    <PUSH PRT59>
		    <DEAD PRT59>
		    <CALL 'ISTYPE? 1 = PRT2-57>
		    <VEQUAL? PRT2-57 'FALSE - PHRASE123>
		    <DEAD PRT2-57>
		    <FRAME 'GEN>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN 2>
		    <JUMP + PHRASE151>
PHRASE123
		    <EQUAL? RW14 'FLUSHED - PHRASE126>
		    <FRAME 'PRED-BRANCH-GEN>
		    <TYPE? BRANCH11 <TYPE-CODE FALSE> + PHRASE129>
		    <TYPE? SDIR20 <TYPE-CODE FALSE> + PHRASE129>
		    <SET PRT2-57 BRANCH11>
		    <JUMP + PHRASE131>
PHRASE129
		    <SET PRT2-57 COND16>
PHRASE131
		    <PUSH PRT2-57>
		    <DEAD PRT2-57>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH 'T>
		    <PUSH 'FLUSHED>
		    <PUSH NOTF10>
		    <CALL 'PRED-BRANCH-GEN 5>
		    <JUMP + PHRASE151>
PHRASE126
		    <TYPE? BRANCH11 <TYPE-CODE FALSE> + PHRASE134>
		    <TYPE? SDIR20 <TYPE-CODE FALSE> + PHRASE134>
		    <FRAME 'FREE-TEMP>
		    <FRAME 'PRED-BRANCH-GEN>
		    <PUSH BRANCH11>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH 'T>
		    <PUSH 'FLUSHED>
		    <PUSH NOTF10>
		    <CALL 'PRED-BRANCH-GEN 5 = STACK>
		    <CALL 'FREE-TEMP 1>
		    <JUMP + PHRASE151>
PHRASE134
		    <FRAME 'PRED-BRANCH-GEN>
		    <PUSH COND16>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH 'T>
		    <VEQUAL? WSET18 0 - BOOL142>
		    <DEAD WSET18>
		    <TYPE? W9 <TYPE-CODE TEMP> - PHRASE141>
		    <NTHUV W9 2 = TEMP44 (TYPE FIX)>
		    <VEQUAL? TEMP44 0 - PHRASE141 (TYPE FIX)>
		    <DEAD TEMP44>
BOOL142
		    <SET WSET18 'T (TYPE ATOM)>
		    <SET TEMP44 W9>
		    <JUMP + PHRASE146>
PHRASE141
		    <SET WSET18 'T (TYPE ATOM)>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W9>
		    <SET TEMP44 W9>
PHRASE146
		    <PUSH TEMP44>
		    <DEAD TEMP44>
		    <PUSH NOTF10>
		    <CALL 'PRED-BRANCH-GEN 5 = LOCN15>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH LOCN15>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <JUMP + PHRASE151>
PHRASE74
		    <FRAME 'MAKE-TAG>
		    <PUSH "PHRASE">
		    <CALL 'MAKE-TAG 1 = BR2-56>
		    <SET TEMP44 K49>
		    <LOOP (TEMP44 VALUE)>
TAG153
		    <RESTL TEMP44 1 = PRT2-57 (TYPE LIST)>
		    <EMPL? PRT2-57 + TAG154>
		    <SET TEMP44 PRT2-57>
		    <DEAD PRT2-57>
		    <JUMP + TAG153>
TAG154
		    <NTHL TEMP44 1 = PRT2-57>
		    <DEAD TEMP44>
		    <NTHUV PRT2-57 3 = TEMP44>
		    <DEAD PRT2-57>
		    <FRAME 'ISTYPE?>
		    <PUSH PRT59>
		    <CALL 'ISTYPE? 1 = PRT2-57>
		    <VEQUAL? PRT2-57 'FALSE + BOOL158>
		    <DEAD PRT2-57>
		    <TYPE? TEMP44 <TYPE-CODE FALSE> - BOOL158>
		    <DEAD TEMP44>
		    <FRAME 'COND-COMPLAIN>
		    <PUSH "Predicate assumed FALSE to satisfy type constraibnt">
		    <PUSH PR50>
		    <CALL 'COND-COMPLAIN 2>
		    <JUMP + BOOL157>
BOOL158
		    <FRAME 'ISTYPE?>
		    <PUSH PRT59>
		    <CALL 'ISTYPE? 1 = PRT2-57>
		    <VEQUAL? PRT2-57 'FALSE - PHRASE156>
		    <DEAD PRT2-57>
		    <FRAME 'COND-COMPLAIN>
		    <PUSH "COND PREDICATE ALWAYS FALSE">
		    <PUSH PR50>
		    <CALL 'COND-COMPLAIN 2>
BOOL157
		    <TYPE? BRANCH11 <TYPE-CODE FALSE> + PHRASE165>
		    <VEQUAL? LAST42 0 + PHRASE165>
		    <TYPE? DIR12 <TYPE-CODE FALSE> - PHRASE165>
		    <FRAME 'GEN>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH W9>
		    <CALL 'GEN 2 = LOCN15>
		    <VEQUAL? WSET18 0 - PHRASE169>
		    <GVAL 'NO-DATUM = PRT2-57>
		    <EQUAL? PRT2-57 LOCN15 + PHRASE169>
		    <DEAD PRT2-57>
		    <EQUAL? RW14 'FLUSHED + PHRASE169>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH W9>
		    <DEAD W9>
		    <PUSH LOCN15>
		    <DEAD LOCN15>
		    <CALL 'FIXUP-TEMP 2 = W9>
		    <SET LOCN15 W9>
		    <SET WSET18 'T (TYPE ATOM)>
PHRASE169
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH11>
		    <CALL 'BRANCH-TAG 1>
		    <JUMP + PHRASE185>
PHRASE165
		    <VEQUAL? LAST42 0 + PHRASE175>
		    <EQUAL? RW14 'FLUSHED + PHRASE175>
		    <FRAME 'GEN>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH W9>
		    <CALL 'GEN 2 = LOCN15>
		    <VEQUAL? WSET18 0 - PHRASE182>
		    <GVAL 'NO-DATUM = PRT2-57>
		    <EQUAL? PRT2-57 LOCN15 + PHRASE182>
		    <DEAD PRT2-57>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH W9>
		    <DEAD W9>
		    <PUSH LOCN15>
		    <DEAD LOCN15>
		    <CALL 'FIXUP-TEMP 2 = W9>
		    <SET LOCN15 W9>
		    <SET WSET18 'T (TYPE ATOM)>
		    <JUMP + PHRASE182>
PHRASE175
		    <FRAME 'GEN>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN 2 = LOCN15>
PHRASE182
		    <EQUAL? PRT59 'NO-RETURN + PHRASE185>
		    <DEAD PRT59>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BR2-56>
		    <CALL 'BRANCH-TAG 1>
PHRASE185
		    <SET NO-SEQ51 'T (TYPE ATOM)>
		    <JUMP + PHRASE226>
PHRASE156
		    <FRAME 'TYPE-OK?>
		    <PUSH 'FALSE>
		    <PUSH PRT59>
		    <DEAD PRT59>
		    <CALL 'TYPE-OK? 2 = PRT2-57>
		    <TYPE? PRT2-57 <TYPE-CODE FALSE> + PHRASE187>
		    <DEAD PRT2-57>
		    <VEQUAL? PRED-TRUE48 0 - PHRASE187>
		    <DEAD PRED-TRUE48>
		    <VEQUAL? LAST42 0 + PHRASE191>
		    <TYPE? DIR12 <TYPE-CODE FALSE> - PHRASE191>
		    <TYPE? BRANCH11 <TYPE-CODE FALSE> + PHRASE191>
		    <FRAME 'PRED-BRANCH-GEN>
		    <PUSH BRANCH11>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH %<>>
		    <EQUAL? RW14 'FLUSHED - PHRASE195>
		    <SET PRT2-57 'FLUSHED (TYPE ATOM)>
		    <JUMP + PHRASE202>
PHRASE195
		    <VEQUAL? WSET18 0 - BOOL197>
		    <DEAD WSET18>
		    <TYPE? W9 <TYPE-CODE TEMP> - PHRASE196>
		    <NTHUV W9 2 = TEMP44 (TYPE FIX)>
		    <VEQUAL? TEMP44 0 - PHRASE196 (TYPE FIX)>
		    <DEAD TEMP44>
BOOL197
		    <SET WSET18 'T (TYPE ATOM)>
		    <SET PRT2-57 W9>
		    <JUMP + PHRASE202>
PHRASE196
		    <SET WSET18 'T (TYPE ATOM)>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W9>
		    <SET PRT2-57 W9>
PHRASE202
		    <PUSH PRT2-57>
		    <DEAD PRT2-57>
		    <PUSH NOTF10>
		    <CALL 'PRED-BRANCH-GEN 5 = LOCN15>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH LOCN15>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <JUMP + PHRASE226>
PHRASE191
		    <VEQUAL? LAST42 0 + PHRASE205>
		    <TYPE? BRANCH11 <TYPE-CODE FALSE> + PHRASE205>
		    <FRAME 'FREE-TEMP>
		    <FRAME 'PRED-BRANCH-GEN>
		    <PUSH BR2-56>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH %<>>
		    <PUSH 'FLUSHED>
		    <CALL 'PRED-BRANCH-GEN 4 = STACK>
		    <CALL 'FREE-TEMP 1>
		    <JUMP + PHRASE226>
PHRASE205
		    <VEQUAL? LAST42 0 + PHRASE209>
		    <EQUAL? RW14 'FLUSHED + PHRASE209>
		    <FRAME 'PRED-BRANCH-GEN>
		    <PUSH BR2-56>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH %<>>
		    <EQUAL? RW14 'FLUSHED - PHRASE213>
		    <SET PRT2-57 'FLUSHED (TYPE ATOM)>
		    <JUMP + PHRASE219>
PHRASE213
		    <VEQUAL? WSET18 0 - BOOL215>
		    <DEAD WSET18>
		    <TYPE? W9 <TYPE-CODE TEMP> - PHRASE214>
		    <NTHUV W9 2 = TEMP44 (TYPE FIX)>
		    <VEQUAL? TEMP44 0 - PHRASE214 (TYPE FIX)>
		    <DEAD TEMP44>
BOOL215
		    <SET WSET18 'T (TYPE ATOM)>
		    <SET PRT2-57 W9>
		    <JUMP + PHRASE219>
PHRASE214
		    <SET WSET18 'T (TYPE ATOM)>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W9>
		    <SET PRT2-57 W9>
PHRASE219
		    <PUSH PRT2-57>
		    <DEAD PRT2-57>
		    <CALL 'PRED-BRANCH-GEN 4 = LOCN15>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH LOCN15>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <JUMP + PHRASE226>
PHRASE209
		    <FRAME 'PRED-BRANCH-GEN>
		    <PUSH BR2-56>
		    <PUSH PR50>
		    <DEAD PR50>
		    <PUSH %<>>
		    <PUSH 'FLUSHED>
		    <CALL 'PRED-BRANCH-GEN 4>
		    <JUMP + PHRASE226>
PHRASE187
		    <CONS PR50 K49 = K49>
		    <DEAD PR50>
		    <VEQUAL? LAST42 0 - PHRASE226>
		    <SET LEAVE52 'T (TYPE ATOM)>
		    <FRAME 'COND-COMPLAIN>
		    <PUSH "NON REACHABLE COND CLAUSE(S)">
		    <RESTL KK19 1 = PRT2-57 (TYPE LIST)>
		    <DEAD KK19>
		    <NTHL PRT2-57 1 = STACK (TYPE NODE)>
		    <DEAD PRT2-57>
		    <CALL 'COND-COMPLAIN 2>
PHRASE226
		    <TYPE? BRANCH11 <TYPE-CODE FALSE> + PHRASE229>
		    <VEQUAL? NO-SEQ51 0 - PHRASE281>
		    <FRAME 'TYPE-OK?>
		    <SET PR50 K49>
		    <LOOP (PR50 VALUE)>
TAG235
		    <RESTL PR50 1 = PRT2-57 (TYPE LIST)>
		    <EMPL? PRT2-57 + TAG236>
		    <SET PR50 PRT2-57>
		    <DEAD PRT2-57>
		    <JUMP + TAG235>
TAG236
		    <NTHL PR50 1 = PR50>
		    <NTHUV PR50 3 = STACK>
		    <PUSH 'FALSE>
		    <CALL 'TYPE-OK? 2 = PRT2-57>
		    <TYPE? PRT2-57 <TYPE-CODE FALSE> - TAG237>
		    <DEAD PRT2-57>
		    <SET PRED-TRUE48 'T (TYPE ATOM)>
		    <JUMP + BOOL233>
TAG237
		    <SET PRED-TRUE48 %<> (TYPE FALSE)>
		    <FRAME 'TYPE-OK?>
		    <NTHUV PR50 3 = STACK>
		    <DEAD PR50>
		    <PUSH <NOT FALSE>>
		    <CALL 'TYPE-OK? 2 = PRT2-57>
		    <TYPE? PRT2-57 <TYPE-CODE FALSE> - PHRASE232>
		    <DEAD PRT2-57>
BOOL233
		    <TYPE? NOTF10 <TYPE-CODE FALSE> + PHRASE240>
		    <FRAME 'SEQ-GEN>
		    <PUSH K49>
		    <PUSH 'FLUSHED>
		    <CALL 'SEQ-GEN 2>
		    <EQUAL? RW14 'FLUSHED - PHRASE243>
		    <GVAL 'NO-DATUM = LOCN15>
		    <JUMP + PHRASE260>
PHRASE243
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <VEQUAL? PRED-TRUE48 0 - TAG247>
		    <SET PRT2-57 'T (TYPE ATOM)>
		    <JUMP + TAG248>
TAG247
		    <SET PRT2-57 %<> (TYPE FALSE)>
TAG248
		    <PUSH PRT2-57>
		    <DEAD PRT2-57>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W9>
		    <CALL 'MOVE-ARG 2 = LOCN15>
		    <VEQUAL? WSET18 0 - PHRASE260>
		    <GVAL 'NO-DATUM = PRT2-57>
		    <EQUAL? PRT2-57 LOCN15 + PHRASE260>
		    <DEAD PRT2-57>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH W9>
		    <DEAD W9>
		    <PUSH LOCN15>
		    <DEAD LOCN15>
		    <CALL 'FIXUP-TEMP 2 = W9>
		    <SET LOCN15 W9>
		    <SET WSET18 'T (TYPE ATOM)>
		    <JUMP + PHRASE260>
PHRASE240
		    <FRAME 'SEQ-GEN>
		    <PUSH K49>
		    <EQUAL? RW14 'FLUSHED + BOOL257>
		    <EQUAL? SDIR20 PRED-TRUE48 + PHRASE256>
BOOL257
		    <SET PRT2-57 'FLUSHED (TYPE ATOM)>
		    <JUMP + PHRASE258>
PHRASE256
		    <SET PRT2-57 W9>
PHRASE258
		    <PUSH PRT2-57>
		    <DEAD PRT2-57>
		    <CALL 'SEQ-GEN 2 = LOCN15>
		    <VEQUAL? WSET18 0 - PHRASE260>
		    <EQUAL? RW14 'FLUSHED + PHRASE260>
		    <GVAL 'NO-DATUM = PRT2-57>
		    <EQUAL? PRT2-57 LOCN15 + PHRASE260>
		    <DEAD PRT2-57>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH W9>
		    <DEAD W9>
		    <PUSH LOCN15>
		    <DEAD LOCN15>
		    <CALL 'FIXUP-TEMP 2 = W9>
		    <SET LOCN15 W9>
		    <SET WSET18 'T (TYPE ATOM)>
PHRASE260
		    <EQUAL? PRED-TRUE48 SDIR20 - PHRASE281>
		    <DEAD PRED-TRUE48>
		    <SET BRNCHED58 'T (TYPE ATOM)>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH11>
		    <CALL 'BRANCH-TAG 1>
		    <JUMP + PHRASE281>
PHRASE232
		    <FRAME 'PSEQ-GEN>
		    <PUSH K49>
		    <EQUAL? RW14 'FLUSHED - PHRASE269>
		    <SET PRT2-57 'FLUSHED (TYPE ATOM)>
		    <JUMP + PHRASE270>
PHRASE269
		    <SET PRT2-57 W9>
PHRASE270
		    <PUSH PRT2-57>
		    <DEAD PRT2-57>
		    <PUSH BRANCH11>
		    <PUSH SDIR20>
		    <PUSH NOTF10>
		    <CALL 'PSEQ-GEN 5 = LOCN15>
		    <VEQUAL? WSET18 0 - PHRASE281>
		    <GVAL 'NO-DATUM = PRT2-57>
		    <EQUAL? PRT2-57 LOCN15 + PHRASE281>
		    <DEAD PRT2-57>
		    <EQUAL? RW14 'FLUSHED + PHRASE281>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH W9>
		    <DEAD W9>
		    <PUSH LOCN15>
		    <DEAD LOCN15>
		    <CALL 'FIXUP-TEMP 2 = W9>
		    <SET LOCN15 W9>
		    <SET WSET18 'T (TYPE ATOM)>
		    <JUMP + PHRASE281>
PHRASE229
		    <VEQUAL? NO-SEQ51 0 - PHRASE281>
		    <FRAME 'PSEQ-GEN>
		    <PUSH K49>
		    <EQUAL? RW14 'FLUSHED - PHRASE278>
		    <SET PRT2-57 'FLUSHED (TYPE ATOM)>
		    <JUMP + PHRASE279>
PHRASE278
		    <SET PRT2-57 W9>
PHRASE279
		    <PUSH PRT2-57>
		    <DEAD PRT2-57>
		    <PUSH BRANCH11>
		    <PUSH SDIR20>
		    <PUSH NOTF10>
		    <CALL 'PSEQ-GEN 5 = LOCN15>
		    <VEQUAL? WSET18 0 - PHRASE281>
		    <GVAL 'NO-DATUM = PRT2-57>
		    <EQUAL? PRT2-57 LOCN15 + PHRASE281>
		    <DEAD PRT2-57>
		    <EQUAL? RW14 'FLUSHED + PHRASE281>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH W9>
		    <DEAD W9>
		    <PUSH LOCN15>
		    <DEAD LOCN15>
		    <CALL 'FIXUP-TEMP 2 = W9>
		    <SET LOCN15 W9>
		    <SET WSET18 'T (TYPE ATOM)>
PHRASE281
		    <VEQUAL? LAST42 0 - BOOL291>
		    <DEAD LAST42>
		    <SET PRT2-57 K49>
		    <DEAD K49>
		    <LOOP (PRT2-57 VALUE)>
TAG287
		    <RESTL PRT2-57 1 = TEMP44 (TYPE LIST)>
		    <EMPL? TEMP44 + TAG288>
		    <SET PRT2-57 TEMP44>
		    <DEAD TEMP44>
		    <JUMP + TAG287>
TAG288
		    <NTHL PRT2-57 1 = TEMP44>
		    <DEAD PRT2-57>
		    <NTHUV TEMP44 3 = TEMP44>
		    <EQUAL? TEMP44 'NO-RETURN + BOOL291>
		    <DEAD TEMP44>
		    <VEQUAL? NO-SEQ51 0 - BOOL289>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH LOCN15>
		    <CALL 'DEALLOCATE-TEMP 1>
BOOL289
		    <VEQUAL? BRNCHED58 0 - BOOL291>
		    <DEAD BRNCHED58>
		    <VEQUAL? NO-SEQ51 0 - BOOL291>
		    <DEAD NO-SEQ51>
		    <FRAME 'BRANCH-TAG>
		    <PUSH COND16>
		    <CALL 'BRANCH-TAG 1>
BOOL291
		    <FRAME 'LABEL-TAG>
		    <PUSH BR2-56>
		    <DEAD BR2-56>
		    <CALL 'LABEL-TAG 1>
PHRASE151
		    <GEN-ASSIGNED? 'NPRUNE + PHRASE295>
		    <PUTUV BR46 5 () (TYPE LIST)>
		    <DEAD BR46>
PHRASE295
		    <VEQUAL? LEAVE52 0 - MAPAP35>
		    <DEAD LEAVE52>
		    <RESTL TEMP29 1 = TEMP29 (TYPE LIST)>
		    <JUMP + MAP32>
MAPAP35
		    <GEN-ASSIGNED? 'NPRUNE + PHRASE300>
		    <PUTUV NOD8 5 () (TYPE LIST)>
PHRASE300
		    <FRAME 'LABEL-TAG>
		    <PUSH COND16>
		    <DEAD COND16>
		    <CALL 'LABEL-TAG 1>
		    <NTHUV NOD8 3 = WSET18>
		    <DEAD NOD8>
		    <EQUAL? WSET18 'NO-RETURN - PHRASE304>
		    <DEAD WSET18>
		    <GVAL 'NO-DATUM = RW14>
		    <RETURN RW14>
		    <DEAD RW14>
PHRASE304
		    <FRAME 'MOVE-ARG>
		    <PUSH W9>
		    <DEAD W9>
		    <PUSH RW14>
		    <DEAD RW14>
		    <CALL 'MOVE-ARG 2 = RW14>
		    <RETURN RW14>
		    <DEAD RW14>
		    <END COND-GEN>
#WORD *30112743110*
<GFCN FIXUP-TEMP ("VALUE" ANY ANY ANY) W4 LOCN5>
		    <TEMP TEMP9>
		    <INTGO>
		    <TYPE? LOCN5 <TYPE-CODE TEMP> - PHRASE7>
		    <NTHUV LOCN5 2 = TEMP9 (TYPE FIX)>
		    <GRTR? TEMP9 1 + PHRASE7 (TYPE FIX)>
		    <DEAD TEMP9>
		    <RETURN LOCN5>
		    <DEAD LOCN5>
PHRASE7
		    <EQUAL? LOCN5 W4 - PHRASE12>
		    <DEAD W4>
		    <RETURN LOCN5>
		    <DEAD LOCN5>
PHRASE12
		    <FRAME 'MOVE-ARG>
		    <PUSH LOCN5>
		    <DEAD LOCN5>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = STACK>
		    <CALL 'MOVE-ARG 2 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END FIXUP-TEMP>
#WORD *30565162235*
<GFCN PSEQ-GEN ("VALUE" ANY <LIST [REST NODE]> ANY ANY ANY ANY) L4 W5 B6 D7 NF8>
		    <TEMP (WSET9 %<>) TEMP17:LIST N22:LIST ND23 TEMP28 NX24>
		    <INTGO>
		    <SET TEMP17 L4 (TYPE LIST)>
		    <DEAD L4>
		    <LOOP>
MAP12
		    <INTGO>
		    <EMPL? TEMP17 + MAPAP15>
		    <SET N22 TEMP17>
		    <NTHL N22 1 = ND23 (TYPE NODE)>
		    <RESTL N22 1 = TEMP28 (TYPE LIST)>
		    <EMPL? TEMP28 + PHRASE27 (TYPE LIST)>
		    <DEAD TEMP28>
		    <RESTL N22 1 = TEMP28 (TYPE LIST)>
		    <NTHL TEMP28 1 = NX24 (TYPE NODE)>
		    <DEAD TEMP28>
		    <NTHUV NX24 1 = TEMP28 (TYPE FIX)>
		    <VEQUAL? TEMP28 90 - PHRASE30 (TYPE FIX)>
		    <DEAD TEMP28>
		    <NTHUV NX24 5 = NX24 (TYPE LIST)>
		    <EMPL? NX24 + PHRASE30>
		    <RESTL NX24 1 = TEMP28 (TYPE LIST)>
		    <EMPL? TEMP28 + PHRASE30>
		    <DEAD TEMP28>
		    <NTHL NX24 1 = TEMP28 (TYPE NODE)>
		    <DEAD NX24>
		    <NTHUV TEMP28 4 = TEMP28>
		    <EQUAL? TEMP28 '`ENDIF - PHRASE30>
		    <DEAD TEMP28>
		    <FRAME 'GEN>
		    <PUSH ND23>
		    <DEAD ND23>
		    <PUSH W5>
		    <CALL 'GEN 2 = ND23>
		    <VEQUAL? WSET9 0 - PHRASE34>
		    <EQUAL? W5 'FLUSHED + PHRASE34>
		    <GVAL 'NO-DATUM = TEMP28>
		    <EQUAL? TEMP28 ND23 + PHRASE34>
		    <DEAD TEMP28>
		    <GVAL 'POP-STACK = TEMP28>
		    <EQUAL? TEMP28 W5 + PHRASE34>
		    <DEAD TEMP28>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH ND23>
		    <DEAD ND23>
		    <CALL 'FIXUP-TEMP 2 = W5>
		    <SET WSET9 'T (TYPE ATOM)>
PHRASE34
		    <RESTL N22 1 = TEMP28 (TYPE LIST)>
		    <DEAD N22>
		    <RESTL TEMP28 1 = TEMP28 (TYPE LIST)>
		    <EMPL? TEMP28 + PHRASE53 (TYPE LIST)>
		    <DEAD TEMP28>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH W5>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <JUMP + PHRASE53>
PHRASE30
		    <LENUV ND23 = TEMP28 (TYPE FIX)>
		    <LESS? TEMP28 8 + BOOL43 (TYPE FIX)>
		    <DEAD TEMP28>
		    <NTHUV ND23 8 = TEMP28>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> - BOOL42>
		    <DEAD TEMP28>
BOOL43
		    <FRAME 'GETPROP>
		    <PUSH ND23>
		    <PUSH 'DONT-FLUSH-ME>
		    <CALL 'GETPROP 2 = TEMP28>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> - BOOL42>
		    <DEAD TEMP28>
		    <GVAL 'DONT-FLUSH-ME = TEMP28>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> + PHRASE53>
		    <DEAD TEMP28>
BOOL42
		    <FRAME 'GEN>
		    <PUSH ND23>
		    <DEAD ND23>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN 2>
		    <JUMP + PHRASE53>
PHRASE27
		    <NTHUV ND23 1 = TEMP28 (TYPE FIX)>
		    <VEQUAL? TEMP28 90 - PHRASE46 (TYPE FIX)>
		    <DEAD TEMP28>
		    <NTHUV ND23 5 = NX24 (TYPE LIST)>
		    <EMPL? NX24 + PHRASE46>
		    <RESTL NX24 1 = TEMP28 (TYPE LIST)>
		    <EMPL? TEMP28 + PHRASE46>
		    <DEAD TEMP28>
		    <NTHL NX24 1 = TEMP28 (TYPE NODE)>
		    <DEAD NX24>
		    <NTHUV TEMP28 4 = TEMP28>
		    <EQUAL? TEMP28 '`ENDIF - PHRASE46>
		    <DEAD TEMP28>
		    <FRAME 'GEN>
		    <PUSH ND23>
		    <DEAD ND23>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN 2>
		    <JUMP + PHRASE53>
PHRASE46
		    <TYPE? B6 <TYPE-CODE FALSE> + PHRASE51>
		    <FRAME 'PRED-BRANCH-GEN>
		    <PUSH B6>
		    <PUSH ND23>
		    <DEAD ND23>
		    <PUSH D7>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF8>
		    <CALL 'PRED-BRANCH-GEN 5 = W5>
		    <JUMP + PHRASE53>
PHRASE51
		    <FRAME 'GEN>
		    <PUSH ND23>
		    <DEAD ND23>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'GEN 2 = W5>
PHRASE53
		    <RESTL TEMP17 1 = TEMP17 (TYPE LIST)>
		    <JUMP + MAP12>
MAPAP15
		    <RETURN W5>
		    <DEAD W5>
		    <END PSEQ-GEN>
#WORD *32576046403*
<GFCN COND-COMPLAIN ("VALUE" ATOM ANY NODE) MSG4 N1-5>
		    <TEMP TEMP7:ATOM>
		    <INTGO>
		    <FRAME 'COMPILE-NOTE>
		    <PUSH MSG4>
		    <DEAD MSG4>
		    <PUSH N1-5>
		    <DEAD N1-5>
		    <CALL 'COMPILE-NOTE 2 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END COND-COMPLAIN>
" Generate code for OR use BOOL-GEN to do work."

#WORD *12135620715*
<GFCN OR-GEN ("VALUE" ANY NODE ANY "OPTIONAL" ANY ANY ANY) NOD8 WHERE9 NF10 BR11 DIR12>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH 'T>
OPT7
		    <TEMP TEMP14>
		    <INTGO>
		    <FRAME 'BOOL-GEN>
		    <PUSH NOD8>
		    <NTHUV NOD8 5 = STACK (TYPE LIST)>
		    <DEAD NOD8>
		    <PUSH 'T>
		    <PUSH WHERE9>
		    <DEAD WHERE9>
		    <PUSH NF10>
		    <DEAD NF10>
		    <PUSH BR11>
		    <DEAD BR11>
		    <PUSH DIR12>
		    <DEAD DIR12>
		    <CALL 'BOOL-GEN 7 = TEMP14>
		    <RETURN TEMP14>
		    <DEAD TEMP14>
		    <END OR-GEN>
" Generate code for AND use BOOL-GEN to do work."

#WORD *17245412614*
<GFCN AND-GEN ("VALUE" ANY NODE ANY "OPTIONAL" ANY ANY ANY) NOD8 WHERE9 NF10 BR11 DIR12>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <TEMP TEMP14>
		    <INTGO>
		    <FRAME 'BOOL-GEN>
		    <PUSH NOD8>
		    <NTHUV NOD8 5 = STACK (TYPE LIST)>
		    <DEAD NOD8>
		    <PUSH %<>>
		    <PUSH WHERE9>
		    <DEAD WHERE9>
		    <PUSH NF10>
		    <DEAD NF10>
		    <PUSH BR11>
		    <DEAD BR11>
		    <PUSH DIR12>
		    <DEAD DIR12>
		    <CALL 'BOOL-GEN 7 = TEMP14>
		    <RETURN TEMP14>
		    <DEAD TEMP14>
		    <END AND-GEN>
#WORD *11635224174*
<GFCN BOOL-GEN ("VALUE" ANY NODE <LIST [REST NODE]> ANY ANY ANY <OR ATOM FALSE> ANY) NOD4 PREDS5 RESULT6 W7 NOTF8 BRANCH9 DIR10>
		    <TEMP RW11 BOOL12:ATOM FLUSH13 (WSET14 %<>) TEMP24 FLS15 SRES17 RTF16 LOCN18 BRN57:LIST BR58 LAST59 RT63 RTFL64 TEMP69 TY65>
		    <INTGO>
		    <SET RW11 W7>
		    <FRAME 'MAKE-TAG>
		    <PUSH "BOOL">
		    <CALL 'MAKE-TAG 1 = BOOL12>
		    <EQUAL? RW11 'FLUSHED - TAG21>
		    <SET FLUSH13 'T (TYPE ATOM)>
		    <JUMP + TAG22>
TAG21
		    <SET FLUSH13 %<> (TYPE FALSE)>
TAG22
		    <TYPE? BRANCH9 <TYPE-CODE FALSE> + TAG25>
		    <SET TEMP24 %<> (TYPE FALSE)>
		    <JUMP + BOOL23>
TAG25
		    <SET TEMP24 FLUSH13>
BOOL23
		    <SET FLS15 TEMP24>
		    <DEAD TEMP24>
		    <GVAL 'POP-STACK = TEMP24>
		    <EQUAL? TEMP24 W7 + BOOL28>
		    <DEAD TEMP24>
		    <TYPE? W7 <TYPE-CODE TEMP> - PHRASE27>
		    <NTHUV W7 5 = TEMP24>
		    <TYPE? TEMP24 <TYPE-CODE FALSE> + PHRASE27>
		    <DEAD TEMP24>
		    <NTHUV W7 5 = TEMP24>
		    <EQUAL? TEMP24 'ANY + PHRASE27>
		    <DEAD TEMP24>
BOOL28
		    <SET W7 'DONT-CARE (TYPE ATOM)>
PHRASE27
		    <TYPE? NOTF8 <TYPE-CODE FALSE> + TAG33>
		    <TYPE? RESULT6 <TYPE-CODE FALSE> - TAG32>
		    <DEAD RESULT6>
		    <SET RESULT6 'T (TYPE ATOM)>
		    <JUMP + TAG33>
TAG32
		    <SET RESULT6 %<> (TYPE FALSE)>
TAG33
		    <SET SRES17 RESULT6>
		    <VEQUAL? FLUSH13 0 + TAG35>
		    <SET RTF16 %<> (TYPE FALSE)>
		    <JUMP + BOOL34>
TAG35
		    <EQUAL? SRES17 DIR10 + TAG36>
		    <SET RTF16 %<> (TYPE FALSE)>
		    <JUMP + BOOL34>
TAG36
		    <FRAME 'TYPE-OK?>
		    <NTHUV NOD4 3 = STACK>
		    <PUSH 'FALSE>
		    <CALL 'TYPE-OK? 2 = RTF16>
BOOL34
		    <TYPE? DIR10 <TYPE-CODE FALSE> + TAG41>
		    <TYPE? RESULT6 <TYPE-CODE FALSE> - TAG40>
		    <DEAD RESULT6>
		    <SET RESULT6 'T (TYPE ATOM)>
		    <JUMP + TAG41>
TAG40
		    <SET RESULT6 %<> (TYPE FALSE)>
TAG41
		    <EMPL? PREDS5 - PHRASE43 (TYPE LIST)>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH RESULT6>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W7>
		    <CALL 'MOVE-ARG 2>
		    <JUMP + MAPAP51>
PHRASE43
		    <SET TEMP24 PREDS5 (TYPE LIST)>
		    <LOOP>
MAP48
		    <INTGO>
		    <EMPL? TEMP24 + MAPAP51>
		    <SET BRN57 TEMP24>
		    <NTHL BRN57 1 = BR58 (TYPE NODE)>
		    <RESTL BRN57 1 = LOCN18 (TYPE LIST)>
		    <EMPL? LOCN18 - TAG60 (TYPE LIST)>
		    <DEAD LOCN18>
		    <SET LAST59 'T (TYPE ATOM)>
		    <JUMP + TAG62>
TAG60
		    <SET LAST59 %<> (TYPE FALSE)>
TAG62
		    <NTHUV BR58 3 = RT63>
		    <SET RTFL64 %<> (TYPE FALSE)>
		    <TYPE? FLUSH13 <TYPE-CODE FALSE> + PHRASE78>
		    <VEQUAL? LAST59 0 - PHRASE78>
		    <RESTL BRN57 1 = TEMP69 (TYPE LIST)>
		    <RESTL TEMP69 1 = LOCN18 (TYPE LIST)>
		    <DEAD TEMP69>
		    <EMPL? LOCN18 - PHRASE78 (TYPE LIST)>
		    <DEAD LOCN18>
		    <FRAME 'ISTYPE?>
		    <RESTL BRN57 1 = LOCN18 (TYPE LIST)>
		    <NTHL LOCN18 1 = LOCN18 (TYPE NODE)>
		    <NTHUV LOCN18 3 = TY65>
		    <DEAD LOCN18>
		    <PUSH TY65>
		    <CALL 'ISTYPE? 1 = LOCN18>
		    <VEQUAL? LOCN18 'FALSE - BOOL71>
		    <DEAD LOCN18>
		    <TYPE? SRES17 <TYPE-CODE FALSE> - BOOL71>
		    <SET TY65 'FALSE (TYPE ATOM)>
		    <JUMP + BOOL70>
BOOL71
		    <TYPE? SRES17 <TYPE-CODE FALSE> + PHRASE78>
		    <FRAME 'TYPE-OK?>
		    <PUSH TY65>
		    <PUSH 'FALSE>
		    <CALL 'TYPE-OK? 2 = LOCN18>
		    <TYPE? LOCN18 <TYPE-CODE FALSE> - PHRASE78>
		    <DEAD LOCN18>
BOOL70
		    <RESTL BRN57 1 = TEMP69 (TYPE LIST)>
		    <NTHL TEMP69 1 = TEMP69 (TYPE NODE)>
		    <LENUV TEMP69 = TEMP69 (TYPE FIX)>
		    <LESS? TEMP69 8 + BOOL75 (TYPE FIX)>
		    <DEAD TEMP69>
		    <RESTL BRN57 1 = TEMP69 (TYPE LIST)>
		    <NTHL TEMP69 1 = TEMP69 (TYPE NODE)>
		    <NTHUV TEMP69 8 = TEMP69>
		    <TYPE? TEMP69 <TYPE-CODE FALSE> - PHRASE78>
		    <DEAD TEMP69>
BOOL75
		    <EQUAL? TY65 'FALSE - PHRASE77>
		    <DEAD TY65>
		    <SET RT63 'ATOM (TYPE ATOM)>
		    <JUMP + PHRASE78>
PHRASE77
		    <SET RT63 'FALSE (TYPE ATOM)>
PHRASE78
		    <FRAME 'TYPE-OK?>
		    <PUSH RT63>
		    <PUSH 'FALSE>
		    <CALL 'TYPE-OK? 2 = TEMP69>
		    <TYPE? TEMP69 <TYPE-CODE FALSE> + PHRASE80>
		    <DEAD TEMP69>
		    <FRAME 'ISTYPE?>
		    <PUSH RT63>
		    <DEAD RT63>
		    <CALL 'ISTYPE? 1 = TEMP69>
		    <VEQUAL? TEMP69 'FALSE - TAG83>
		    <DEAD TEMP69>
		    <SET RTFL64 'T (TYPE ATOM)>
		    <JUMP + PHRASE80>
TAG83
		    <TYPE? BRANCH9 <TYPE-CODE FALSE> - BOOL87>
		    <TYPE? FLS15 <TYPE-CODE FALSE> + PHRASE86>
		    <VEQUAL? LAST59 0 - PHRASE86>
BOOL87
		    <VEQUAL? LAST59 0 + PHRASE90>
		    <DEAD LAST59>
		    <FRAME 'PRED-BRANCH-GEN>
		    <PUSH BRANCH9>
		    <PUSH BR58>
		    <DEAD BR58>
		    <PUSH DIR10>
		    <TYPE? FLUSH13 <TYPE-CODE FALSE> + PHRASE93>
		    <SET TEMP69 'FLUSHED (TYPE ATOM)>
		    <JUMP + PHRASE99>
PHRASE93
		    <VEQUAL? WSET14 0 - BOOL95>
		    <DEAD WSET14>
		    <TYPE? W7 <TYPE-CODE TEMP> - PHRASE94>
		    <NTHUV W7 2 = LOCN18 (TYPE FIX)>
		    <VEQUAL? LOCN18 0 - PHRASE94 (TYPE FIX)>
		    <DEAD LOCN18>
BOOL95
		    <SET WSET14 'T (TYPE ATOM)>
		    <SET TEMP69 W7>
		    <JUMP + PHRASE99>
PHRASE94
		    <SET WSET14 'T (TYPE ATOM)>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W7>
		    <SET TEMP69 W7>
PHRASE99
		    <PUSH TEMP69>
		    <DEAD TEMP69>
		    <PUSH NOTF8>
		    <CALL 'PRED-BRANCH-GEN 5>
		    <JUMP + PHRASE166>
PHRASE90
		    <FRAME 'PRED-BRANCH-GEN>
		    <TYPE? FLS15 <TYPE-CODE FALSE> + PHRASE104>
		    <SET TEMP69 BOOL12>
		    <JUMP + PHRASE106>
PHRASE104
		    <TYPE? RESULT6 <TYPE-CODE FALSE> + PHRASE105>
		    <SET TEMP69 BOOL12>
		    <JUMP + PHRASE106>
PHRASE105
		    <SET TEMP69 BRANCH9>
PHRASE106
		    <PUSH TEMP69>
		    <DEAD TEMP69>
		    <PUSH BR58>
		    <DEAD BR58>
		    <PUSH SRES17>
		    <TYPE? FLUSH13 <TYPE-CODE FALSE> - BOOL109>
		    <TYPE? RTF16 <TYPE-CODE FALSE> - PHRASE108>
BOOL109
		    <SET TEMP69 'FLUSHED (TYPE ATOM)>
		    <JUMP + PHRASE115>
PHRASE108
		    <VEQUAL? WSET14 0 - BOOL111>
		    <DEAD WSET14>
		    <TYPE? W7 <TYPE-CODE TEMP> - PHRASE110>
		    <NTHUV W7 2 = LOCN18 (TYPE FIX)>
		    <VEQUAL? LOCN18 0 - PHRASE110 (TYPE FIX)>
		    <DEAD LOCN18>
BOOL111
		    <SET WSET14 'T (TYPE ATOM)>
		    <SET TEMP69 W7>
		    <JUMP + PHRASE115>
PHRASE110
		    <SET WSET14 'T (TYPE ATOM)>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W7>
		    <SET TEMP69 W7>
PHRASE115
		    <PUSH TEMP69>
		    <DEAD TEMP69>
		    <PUSH NOTF8>
		    <CALL 'PRED-BRANCH-GEN 5 = LOCN18>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH LOCN18>
		    <DEAD LOCN18>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <JUMP + PHRASE166>
PHRASE86
		    <VEQUAL? LAST59 0 + PHRASE118>
		    <DEAD LAST59>
		    <FRAME 'GEN>
		    <PUSH BR58>
		    <DEAD BR58>
		    <PUSH W7>
		    <CALL 'GEN 2 = LOCN18>
		    <TYPE? FLUSH13 <TYPE-CODE FALSE> - PHRASE166>
		    <GVAL 'NO-DATUM = TEMP69>
		    <EQUAL? TEMP69 LOCN18 + PHRASE166>
		    <DEAD TEMP69>
		    <VEQUAL? WSET14 0 - PHRASE166>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH W7>
		    <DEAD W7>
		    <PUSH LOCN18>
		    <DEAD LOCN18>
		    <CALL 'FIXUP-TEMP 2 = W7>
		    <SET WSET14 'T (TYPE ATOM)>
		    <JUMP + PHRASE166>
PHRASE118
		    <FRAME 'PRED-BRANCH-GEN>
		    <PUSH BOOL12>
		    <PUSH BR58>
		    <DEAD BR58>
		    <PUSH DIR10>
		    <TYPE? FLUSH13 <TYPE-CODE FALSE> + PHRASE127>
		    <SET TEMP69 'FLUSHED (TYPE ATOM)>
		    <JUMP + PHRASE133>
PHRASE127
		    <VEQUAL? WSET14 0 - BOOL129>
		    <DEAD WSET14>
		    <TYPE? W7 <TYPE-CODE TEMP> - PHRASE128>
		    <NTHUV W7 2 = LOCN18 (TYPE FIX)>
		    <VEQUAL? LOCN18 0 - PHRASE128 (TYPE FIX)>
		    <DEAD LOCN18>
BOOL129
		    <SET WSET14 'T (TYPE ATOM)>
		    <SET TEMP69 W7>
		    <JUMP + PHRASE133>
PHRASE128
		    <SET WSET14 'T (TYPE ATOM)>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W7>
		    <SET TEMP69 W7>
PHRASE133
		    <PUSH TEMP69>
		    <DEAD TEMP69>
		    <PUSH NOTF8>
		    <CALL 'PRED-BRANCH-GEN 5 = LOCN18>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH LOCN18>
		    <DEAD LOCN18>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <JUMP + PHRASE166>
PHRASE80
		    <TYPE? NOTF8 <TYPE-CODE FALSE> + PHRASE139>
		    <VEQUAL? RTFL64 0 - TAG140>
		    <DEAD RTFL64>
		    <SET RTFL64 'T (TYPE ATOM)>
		    <JUMP + TAG141>
TAG140
		    <SET RTFL64 %<> (TYPE FALSE)>
TAG141
		    <SET TEMP69 RTFL64>
		    <JUMP + PHRASE142>
PHRASE139
		    <SET TEMP69 RTFL64>
PHRASE142
		    <EQUAL? SRES17 TEMP69 - BOOL137>
		    <DEAD TEMP69>
		    <VEQUAL? LAST59 0 + PHRASE136>
BOOL137
		    <VEQUAL? LAST59 0 - PHRASE144>
		    <DEAD LAST59>
		    <FRAME 'COMPILE-NOTE>
		    <PUSH "NON REACHABLE AND/OR CLAUSE">
		    <RESTL BRN57 1 = TEMP69 (TYPE LIST)>
		    <DEAD BRN57>
		    <NTHL TEMP69 1 = STACK (TYPE NODE)>
		    <DEAD TEMP69>
		    <CALL 'COMPILE-NOTE 2>
PHRASE144
		    <TYPE? BRANCH9 <TYPE-CODE FALSE> + PHRASE147>
		    <FRAME 'GEN>
		    <PUSH BR58>
		    <EQUAL? DIR10 RTFL64 + PHRASE150>
		    <SET TEMP69 W7>
		    <JUMP + PHRASE151>
PHRASE150
		    <SET TEMP69 'FLUSHED (TYPE ATOM)>
PHRASE151
		    <PUSH TEMP69>
		    <DEAD TEMP69>
		    <CALL 'GEN 2 = LOCN18>
		    <TYPE? FLUSH13 <TYPE-CODE FALSE> - PHRASE153>
		    <DEAD FLUSH13>
		    <GVAL 'NO-DATUM = TEMP69>
		    <EQUAL? TEMP69 LOCN18 + PHRASE153>
		    <DEAD TEMP69>
		    <VEQUAL? WSET14 0 - PHRASE153>
		    <DEAD WSET14>
		    <EQUAL? DIR10 RTFL64 + PHRASE153>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH W7>
		    <DEAD W7>
		    <PUSH LOCN18>
		    <DEAD LOCN18>
		    <CALL 'FIXUP-TEMP 2 = W7>
PHRASE153
		    <EQUAL? DIR10 RTFL64 + MAPAP51>
		    <DEAD DIR10 RTFL64>
		    <NTHUV BR58 3 = TEMP69>
		    <DEAD BR58>
		    <EQUAL? TEMP69 'NO-RETURN + MAPAP51>
		    <DEAD TEMP69>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH9>
		    <CALL 'BRANCH-TAG 1>
		    <JUMP + MAPAP51>
PHRASE147
		    <FRAME 'GEN>
		    <PUSH BR58>
		    <DEAD BR58>
		    <PUSH W7>
		    <CALL 'GEN 2 = LOCN18>
		    <TYPE? FLUSH13 <TYPE-CODE FALSE> - MAPAP51>
		    <DEAD FLUSH13>
		    <GVAL 'NO-DATUM = TEMP69>
		    <EQUAL? TEMP69 LOCN18 + MAPAP51>
		    <DEAD TEMP69>
		    <VEQUAL? WSET14 0 - MAPAP51>
		    <DEAD WSET14>
		    <FRAME 'FIXUP-TEMP>
		    <PUSH W7>
		    <DEAD W7>
		    <PUSH LOCN18>
		    <DEAD LOCN18>
		    <CALL 'FIXUP-TEMP 2 = W7>
		    <JUMP + MAPAP51>
PHRASE136
		    <LENUV BR58 = TEMP69 (TYPE FIX)>
		    <LESS? TEMP69 8 + BOOL169 (TYPE FIX)>
		    <DEAD TEMP69>
		    <NTHUV BR58 8 = TEMP69>
		    <TYPE? TEMP69 <TYPE-CODE FALSE> + BOOL169>
		    <DEAD TEMP69>
		    <VEQUAL? BRN57 PREDS5 - PHRASE168>
		    <DEAD BRN57>
BOOL169
		    <FRAME 'COMPILE-NOTE>
		    <PUSH "PREDICATE ALWAYS ">
		    <VEQUAL? RTFL64 0 + PHRASE173>
		    <DEAD RTFL64>
		    <SET TEMP69 "FALSE" (TYPE STRING)>
		    <JUMP + PHRASE174>
PHRASE173
		    <SET TEMP69 "TRUE" (TYPE STRING)>
PHRASE174
		    <PUSH TEMP69>
		    <DEAD TEMP69>
		    <PUSH " IN AND/OR">
		    <UBLOCK <TYPE-CODE STRING> 3 = STACK (TYPE STRING)>
		    <PUSH BR58>
		    <CALL 'COMPILE-NOTE 2>
PHRASE168
		    <FRAME 'GEN>
		    <PUSH BR58>
		    <DEAD BR58>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN 2>
PHRASE166
		    <RESTL TEMP24 1 = TEMP24 (TYPE LIST)>
		    <JUMP + MAP48>
MAPAP51
		    <GEN-ASSIGNED? 'NPRUNE + PHRASE177>
		    <PUTUV NOD4 5 () (TYPE LIST)>
PHRASE177
		    <TYPE? BRANCH9 <TYPE-CODE FALSE> + BOOL181>
		    <DEAD BRANCH9>
		    <TYPE? RESULT6 <TYPE-CODE FALSE> + PHRASE180>
		    <DEAD RESULT6>
BOOL181
		    <FRAME 'LABEL-TAG>
		    <PUSH BOOL12>
		    <DEAD BOOL12>
		    <CALL 'LABEL-TAG 1>
PHRASE180
		    <NTHUV NOD4 3 = FLUSH13>
		    <DEAD NOD4>
		    <EQUAL? FLUSH13 'NO-RETURN - PHRASE184>
		    <DEAD FLUSH13>
		    <GVAL 'NO-DATUM = RW11>
		    <RETURN RW11>
		    <DEAD RW11>
PHRASE184
		    <FRAME 'MOVE-ARG>
		    <PUSH W7>
		    <DEAD W7>
		    <PUSH RW11>
		    <DEAD RW11>
		    <CALL 'MOVE-ARG 2 = RW11>
		    <RETURN RW11>
		    <DEAD RW11>
		    <END BOOL-GEN>
" Generate code for ASSIGNED?"

#WORD *24455747457*
<GFCN ASSIGNED?-GEN ("VALUE" ANY NODE ANY "OPTIONAL" ANY ANY ANY ANY) N9 W10 NF11 BR12 DIR13 SETF14>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7 OPT8>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <PUSH %<>>
OPT8
		    <TEMP A15 SDIR16 FLS17 (GLOBAL20 'T) TEMP37>
		    <INTGO>
		    <NTHUV N9 4 = A15>
		    <SET SDIR16 DIR13>
		    <EQUAL? W10 'FLUSHED - TAG21>
		    <SET FLS17 'T (TYPE ATOM)>
		    <JUMP + TAG22>
TAG21
		    <SET FLS17 %<> (TYPE FALSE)>
TAG22
		    <EQUAL? W10 'DONT-CARE - PHRASE24>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W10>
PHRASE24
		    <TYPE? NF11 <TYPE-CODE FALSE> + TAG29>
		    <DEAD NF11>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG28>
		    <DEAD DIR13>
		    <SET DIR13 'T (TYPE ATOM)>
		    <JUMP + TAG29>
TAG28
		    <SET DIR13 %<> (TYPE FALSE)>
TAG29
		    <TYPE? SETF14 <TYPE-CODE FALSE> + PHRASE31>
		    <DEAD SETF14>
		    <FRAME 'DEALLOCATE-TEMP>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <TYPE? SDIR16 <TYPE-CODE FALSE> - TAG35>
		    <SET TEMP37 'T (TYPE ATOM)>
		    <JUMP + TAG36>
TAG35
		    <SET TEMP37 %<> (TYPE FALSE)>
TAG36
		    <PUSH TEMP37>
		    <DEAD TEMP37>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W10>
		    <CALL 'MOVE-ARG 2 = STACK>
		    <CALL 'DEALLOCATE-TEMP 1>
PHRASE31
		    <TYPE? BR12 <TYPE-CODE FALSE> + PHRASE39>
		    <VEQUAL? FLS17 0 - PHRASE39>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG41>
		    <DEAD DIR13>
		    <SET DIR13 'T (TYPE ATOM)>
		    <JUMP + PHRASE39>
TAG41
		    <SET DIR13 %<> (TYPE FALSE)>
PHRASE39
		    <TYPE? A15 <TYPE-CODE SYMTAB> - PHRASE45>
		    <NTHUV A15 3 = TEMP37>
		    <TYPE? TEMP37 <TYPE-CODE FALSE> - PHRASE45>
		    <DEAD TEMP37>
		    <FRAME 'LADDR>
		    <PUSH A15>
		    <DEAD A15>
		    <CALL 'LADDR 1 = A15>
		    <TYPE? BR12 <TYPE-CODE FALSE> + PHRASE49>
		    <VEQUAL? FLS17 0 + PHRASE49>
		    <DEAD FLS17>
		    <FRAME 'GEN-TYPE?>
		    <PUSH A15>
		    <DEAD A15>
		    <PUSH 'UNBOUND>
		    <PUSH BR12>
		    <DEAD BR12>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG52>
		    <DEAD DIR13>
		    <SET TEMP37 'T (TYPE ATOM)>
		    <JUMP + TAG53>
TAG52
		    <SET TEMP37 %<> (TYPE FALSE)>
TAG53
		    <PUSH TEMP37>
		    <DEAD TEMP37>
		    <CALL 'GEN-TYPE? 4>
		    <RETURN 'FLUSHED>
PHRASE49
		    <TYPE? BR12 <TYPE-CODE FALSE> + PHRASE54>
		    <FRAME 'GEN-TYPE?>
		    <PUSH A15>
		    <DEAD A15>
		    <PUSH 'UNBOUND>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = FLS17>
		    <PUSH FLS17>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG57>
		    <DEAD DIR13>
		    <SET TEMP37 'T (TYPE ATOM)>
		    <JUMP + TAG58>
TAG57
		    <SET TEMP37 %<> (TYPE FALSE)>
TAG58
		    <PUSH TEMP37>
		    <DEAD TEMP37>
		    <CALL 'GEN-TYPE? 4>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH SDIR16>
		    <DEAD SDIR16>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W10>
		    <DEAD W10>
		    <CALL 'MOVE-ARG 2 = W10>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BR12>
		    <DEAD BR12>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH FLS17>
		    <DEAD FLS17>
		    <CALL 'LABEL-TAG 1>
		    <RETURN W10>
		    <DEAD W10>
PHRASE54
		    <FRAME 'GEN-TYPE?>
		    <PUSH A15>
		    <DEAD A15>
		    <PUSH 'UNBOUND>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = BR12>
		    <PUSH BR12>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG67>
		    <DEAD DIR13>
		    <SET TEMP37 'T (TYPE ATOM)>
		    <JUMP + TAG68>
TAG67
		    <SET TEMP37 %<> (TYPE FALSE)>
TAG68
		    <PUSH TEMP37>
		    <DEAD TEMP37>
		    <CALL 'GEN-TYPE? 4>
		    <FRAME 'TRUE-FALSE>
		    <PUSH N9>
		    <DEAD N9>
		    <PUSH BR12>
		    <DEAD BR12>
		    <PUSH W10>
		    <DEAD W10>
		    <CALL 'TRUE-FALSE 3 = TEMP37>
		    <RETURN TEMP37>
		    <DEAD TEMP37>
PHRASE45
		    <TYPE? A15 <TYPE-CODE SYMTAB> - PHRASE72>
		    <NTHUV A15 4 = TEMP37 (TYPE FIX)>
		    <VEQUAL? TEMP37 -1 + PHRASE74 (TYPE FIX)>
		    <DEAD TEMP37>
		    <SET GLOBAL20 %<> (TYPE FALSE)>
PHRASE74
		    <NTHUV A15 2 = A15 (TYPE ATOM)>
		    <JUMP + PHRASE77>
PHRASE72
		    <FRAME 'GEN>
		    <NTHUV N9 5 = TEMP37 (TYPE LIST)>
		    <NTHL TEMP37 1 = STACK (TYPE NODE)>
		    <DEAD TEMP37>
		    <CALL 'GEN 1 = A15>
PHRASE77
		    <TYPE? BR12 <TYPE-CODE FALSE> + PHRASE80>
		    <VEQUAL? FLS17 0 + PHRASE80>
		    <DEAD FLS17>
		    <FRAME 'ASS-GEN>
		    <PUSH A15>
		    <PUSH BR12>
		    <DEAD BR12>
		    <PUSH DIR13>
		    <DEAD DIR13>
		    <PUSH GLOBAL20>
		    <DEAD GLOBAL20>
		    <CALL 'ASS-GEN 4>
		    <FRAME 'FREE-TEMP>
		    <PUSH A15>
		    <DEAD A15>
		    <CALL 'FREE-TEMP 1>
		    <RETURN 'FLUSHED>
PHRASE80
		    <TYPE? BR12 <TYPE-CODE FALSE> + PHRASE84>
		    <FRAME 'ASS-GEN>
		    <PUSH A15>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = FLS17>
		    <PUSH FLS17>
		    <PUSH DIR13>
		    <DEAD DIR13>
		    <PUSH GLOBAL20>
		    <DEAD GLOBAL20>
		    <CALL 'ASS-GEN 4>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH SDIR16>
		    <DEAD SDIR16>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W10>
		    <DEAD W10>
		    <CALL 'MOVE-ARG 2 = W10>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BR12>
		    <DEAD BR12>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH FLS17>
		    <DEAD FLS17>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'FREE-TEMP>
		    <PUSH A15>
		    <DEAD A15>
		    <CALL 'FREE-TEMP 1>
		    <RETURN W10>
		    <DEAD W10>
PHRASE84
		    <FRAME 'ASS-GEN>
		    <PUSH A15>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = BR12>
		    <PUSH BR12>
		    <PUSH DIR13>
		    <DEAD DIR13>
		    <PUSH GLOBAL20>
		    <DEAD GLOBAL20>
		    <CALL 'ASS-GEN 4>
		    <FRAME 'FREE-TEMP>
		    <PUSH A15>
		    <DEAD A15>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'TRUE-FALSE>
		    <PUSH N9>
		    <DEAD N9>
		    <PUSH BR12>
		    <DEAD BR12>
		    <PUSH W10>
		    <DEAD W10>
		    <CALL 'TRUE-FALSE 3 = TEMP37>
		    <RETURN TEMP37>
		    <DEAD TEMP37>
		    <END ASSIGNED?-GEN>
#WORD *10225133337*
<GFCN GASSIGNED?-GEN ("VALUE" ANY NODE ANY "OPTIONAL" ANY ANY ANY ANY) N9 W10 NF11 BR12 DIR13 SETF14>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7 OPT8>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <PUSH %<>>
OPT8
		    <TEMP A15 SDIR16 NM17 FLS18>
		    <INTGO>
		    <SET SDIR16 DIR13>
		    <NTHUV N9 4 = NM17>
		    <EQUAL? W10 'FLUSHED - TAG21>
		    <SET FLS18 'T (TYPE ATOM)>
		    <JUMP + TAG22>
TAG21
		    <SET FLS18 %<> (TYPE FALSE)>
TAG22
		    <EQUAL? W10 'DONT-CARE - PHRASE24>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W10>
PHRASE24
		    <TYPE? NF11 <TYPE-CODE FALSE> + TAG29>
		    <DEAD NF11>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG28>
		    <DEAD DIR13>
		    <SET DIR13 'T (TYPE ATOM)>
		    <JUMP + TAG29>
TAG28
		    <SET DIR13 %<> (TYPE FALSE)>
TAG29
		    <TYPE? SETF14 <TYPE-CODE FALSE> + PHRASE31>
		    <DEAD SETF14>
		    <FRAME 'DEALLOCATE-TEMP>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <TYPE? SDIR16 <TYPE-CODE FALSE> - TAG35>
		    <SET A15 'T (TYPE ATOM)>
		    <JUMP + TAG36>
TAG35
		    <SET A15 %<> (TYPE FALSE)>
TAG36
		    <PUSH A15>
		    <DEAD A15>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W10>
		    <CALL 'MOVE-ARG 2 = STACK>
		    <CALL 'DEALLOCATE-TEMP 1>
PHRASE31
		    <TYPE? BR12 <TYPE-CODE FALSE> + PHRASE39>
		    <VEQUAL? FLS18 0 - PHRASE39>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG41>
		    <DEAD DIR13>
		    <SET DIR13 'T (TYPE ATOM)>
		    <JUMP + PHRASE39>
TAG41
		    <SET DIR13 %<> (TYPE FALSE)>
PHRASE39
		    <FRAME 'GEN>
		    <NTHUV N9 5 = A15 (TYPE LIST)>
		    <NTHL A15 1 = STACK (TYPE NODE)>
		    <DEAD A15>
		    <CALL 'GEN 1 = A15>
		    <TYPE? BR12 <TYPE-CODE FALSE> + PHRASE46>
		    <VEQUAL? FLS18 0 + PHRASE46>
		    <DEAD FLS18>
		    <FRAME 'GEN-GASS>
		    <PUSH A15>
		    <DEAD A15>
		    <PUSH BR12>
		    <DEAD BR12>
		    <PUSH DIR13>
		    <DEAD DIR13>
		    <PUSH NM17>
		    <DEAD NM17>
		    <CALL 'GEN-GASS 4>
		    <RETURN 'FLUSHED>
PHRASE46
		    <TYPE? BR12 <TYPE-CODE FALSE> + PHRASE49>
		    <FRAME 'GEN-GASS>
		    <PUSH A15>
		    <DEAD A15>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = A15>
		    <PUSH A15>
		    <PUSH DIR13>
		    <DEAD DIR13>
		    <PUSH NM17>
		    <DEAD NM17>
		    <CALL 'GEN-GASS 4>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH SDIR16>
		    <DEAD SDIR16>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W10>
		    <DEAD W10>
		    <CALL 'MOVE-ARG 2 = W10>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BR12>
		    <DEAD BR12>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH A15>
		    <DEAD A15>
		    <CALL 'LABEL-TAG 1>
		    <RETURN W10>
		    <DEAD W10>
PHRASE49
		    <FRAME 'GEN-GASS>
		    <PUSH A15>
		    <DEAD A15>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = BR12>
		    <PUSH BR12>
		    <PUSH DIR13>
		    <DEAD DIR13>
		    <PUSH NM17>
		    <DEAD NM17>
		    <CALL 'GEN-GASS 4>
		    <FRAME 'TRUE-FALSE>
		    <PUSH N9>
		    <DEAD N9>
		    <PUSH BR12>
		    <DEAD BR12>
		    <PUSH W10>
		    <DEAD W10>
		    <CALL 'TRUE-FALSE 3 = A15>
		    <RETURN A15>
		    <DEAD A15>
		    <END GASSIGNED?-GEN>
#WORD *25772771354*
<GFCN TRUE-FALSE ("VALUE" ANY NODE ATOM ANY "OPTIONAL" ANY) N6 B7 W8 THIS9>
		    <OPT-DISPATCH 3 %<> OPT4 OPT5>
OPT4
		    <PUSH 'T>
OPT5
		    <TEMP RW10 B2-11:ATOM TEMP21>
		    <INTGO>
		    <SET RW10 W8>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = B2-11>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH THIS9>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W8>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'BRANCH-TAG>
		    <PUSH B2-11>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH B7>
		    <DEAD B7>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <TYPE? THIS9 <TYPE-CODE FALSE> - TAG19>
		    <DEAD THIS9>
		    <SET TEMP21 'T (TYPE ATOM)>
		    <JUMP + TAG20>
TAG19
		    <SET TEMP21 %<> (TYPE FALSE)>
TAG20
		    <PUSH TEMP21>
		    <DEAD TEMP21>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W8>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'LABEL-TAG>
		    <PUSH B2-11>
		    <DEAD B2-11>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH W8>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <PUSH W8>
		    <DEAD W8>
		    <PUSH RW10>
		    <DEAD RW10>
		    <CALL 'MOVE-ARG 2 = TEMP21>
		    <RETURN TEMP21>
		    <DEAD TEMP21>
		    <END TRUE-FALSE>
" Generate code for LVAL."

#WORD *20340106636*
<GFCN LVAL-GEN ("VALUE" ANY NODE ANY) NOD4 WHERE5>
		    <TEMP SYM6 (ADDR8 %<>) TT7 TEMP35 LL63:LIST>
		    <INTGO>
		    <NTHUV NOD4 4 = SYM6 (TYPE SYMTAB)>
		    <NTHUV NOD4 7 = TT7 (TYPE LIST)>
		    <EMPL? TT7 + PHRASE13>
		    <RESTL TT7 1 = ADDR8 (TYPE LIST)>
		    <EMPL? ADDR8 + PHRASE13>
		    <RESTL ADDR8 1 = ADDR8 (TYPE LIST)>
		    <EMPL? ADDR8 - PHRASE13>
		    <DEAD ADDR8>
		    <RESTL TT7 1 = ADDR8 (TYPE LIST)>
		    <DEAD TT7>
		    <NTHL ADDR8 1 = TT7>
		    <DEAD ADDR8>
		    <JUMP + PHRASE15>
PHRASE13
		    <SET TT7 'T (TYPE ATOM)>
PHRASE15
		    <NTHUV NOD4 3 = ADDR8>
		    <EQUAL? ADDR8 'NO-RETURN - PHRASE17>
		    <DEAD ADDR8>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Variable referenced before initialization: ">
		    <NTHUV SYM6 2 = STACK (TYPE ATOM)>
		    <PUSH NOD4>
		    <DEAD NOD4>
		    <CALL 'COMPILE-ERROR 3>
PHRASE17
		    <FRAME 'MOVE-ARG>
		    <NTHUV SYM6 3 = ADDR8>
		    <TYPE? ADDR8 <TYPE-CODE FALSE> + PHRASE21>
		    <DEAD ADDR8>
		    <NTHUV SYM6 4 = ADDR8 (TYPE FIX)>
		    <VEQUAL? ADDR8 -1 + PHRASE21 (TYPE FIX)>
		    <DEAD ADDR8>
		    <TYPE? WHERE5 <TYPE-CODE TEMP> - PHRASE26>
		    <SET ADDR8 WHERE5>
		    <JUMP + PHRASE28>
PHRASE26
		    <GVAL 'POP-STACK = ADDR8>
		    <EQUAL? ADDR8 WHERE5 - PHRASE27>
		    <DEAD ADDR8>
		    <SET ADDR8 WHERE5>
		    <JUMP + PHRASE28>
PHRASE27
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = ADDR8>
PHRASE28
		    <TYPE? ADDR8 <TYPE-CODE TEMP> - PHRASE31>
		    <FRAME 'USE-TEMP>
		    <PUSH ADDR8>
		    <NTHUV SYM6 7 = STACK>
		    <CALL 'USE-TEMP 2>
PHRASE31
		    <FRAME 'GET-VALUE-X>
		    <NTHUV SYM6 2 = STACK (TYPE ATOM)>
		    <DEAD SYM6>
		    <PUSH ADDR8>
		    <CALL 'GET-VALUE-X 2>
		    <JUMP + PHRASE70>
PHRASE21
		    <NTHUV SYM6 3 = TEMP35>
		    <TYPE? TEMP35 <TYPE-CODE FALSE> + PHRASE34>
		    <DEAD TEMP35>
		    <TYPE? WHERE5 <TYPE-CODE TEMP> - PHRASE37>
		    <SET ADDR8 WHERE5>
		    <JUMP + PHRASE38>
PHRASE37
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = ADDR8>
PHRASE38
		    <FRAME 'USE-TEMP>
		    <PUSH ADDR8>
		    <CALL 'USE-TEMP 1>
		    <FRAME 'START-FRAME>
		    <PUSH 'LVAL>
		    <CALL 'START-FRAME 1>
		    <FRAME 'PUSH-CONSTANT>
		    <NTHUV SYM6 2 = STACK (TYPE ATOM)>
		    <DEAD SYM6>
		    <CALL 'PUSH-CONSTANT 1>
		    <FRAME 'MSUBR-CALL>
		    <PUSH 'LVAL>
		    <PUSH 1>
		    <PUSH ADDR8>
		    <CALL 'MSUBR-CALL 3>
		    <JUMP + PHRASE70>
PHRASE34
		    <FRAME 'LADDR>
		    <PUSH SYM6>
		    <CALL 'LADDR 1 = ADDR8>
		    <TYPE? ADDR8 <TYPE-CODE TEMP> - PHRASE70>
		    <GVAL 'DEATH = TEMP35>
		    <TYPE? TEMP35 <TYPE-CODE FALSE> + MAPAP54>
		    <DEAD TEMP35>
		    <TYPE? TT7 <TYPE-CODE FALSE> - MAPAP54>
		    <DEAD TT7>
		    <NTHUV SYM6 3 = TEMP35>
		    <TYPE? TEMP35 <TYPE-CODE FALSE> - MAPAP54>
		    <DEAD TEMP35>
		    <GEN-LVAL 'NO-KILL = TT7>
		    <LOOP>
MAP51
		    <INTGO>
		    <EMPL? TT7 + PHRASE70>
		    <NTHL TT7 1 = LL63>
		    <NTHL LL63 1 = TEMP35>
		    <EQUAL? TEMP35 SYM6 - BOOL64>
		    <DEAD TEMP35>
		    <RESTL LL63 1 = TEMP35 (TYPE LIST)>
		    <DEAD LL63>
		    <PUTL TEMP35 1 'T>
		    <DEAD TEMP35>
		    <JUMP + MAPAP54>
BOOL64
		    <RESTL TT7 1 = TT7 (TYPE LIST)>
		    <JUMP + MAP51>
MAPAP54
		    <NTHUV ADDR8 2 = SYM6 (TYPE FIX)>
		    <VEQUAL? SYM6 0 - PHRASE66 (TYPE FIX)>
		    <FRAME 'USE-TEMP>
		    <PUSH ADDR8>
		    <CALL 'USE-TEMP 1>
		    <JUMP + PHRASE70>
PHRASE66
		    <ADD SYM6 1 = SYM6 (TYPE FIX)>
		    <PUTUV ADDR8 2 SYM6 (TYPE FIX)>
		    <DEAD SYM6>
PHRASE70
		    <PUSH ADDR8>
		    <DEAD ADDR8>
		    <PUSH WHERE5>
		    <DEAD WHERE5>
		    <CALL 'MOVE-ARG 2 = TT7>
		    <RETURN TT7>
		    <DEAD TT7>
		    <END LVAL-GEN>
#WORD *32424226610*
<GFCN DELAY-KILL ("VALUE" ATOM <LIST [REST !<LIST SYMTAB <OR ATOM FALSE>>]> <LIST [REST !<LIST SYMTAB <OR ATOM FALSE>>]>) L1-4 L2-5>
		    <TEMP TEMP16 TT6>
		    <INTGO>
		    <LOOP>
AGAIN12
		    <INTGO>
		    <VEQUAL? L1-4 L2-5 + BOOL15>
		    <GVAL 'DEATH = TEMP16>
		    <TYPE? TEMP16 <TYPE-CODE FALSE> - PHRASE14>
		    <DEAD TEMP16>
BOOL15
		    <RETURN 'T>
PHRASE14
		    <NTHL L1-4 1 = TT6 (TYPE LIST)>
		    <RESTL TT6 1 = TEMP16 (TYPE LIST)>
		    <NTHL TEMP16 1 = TEMP16>
		    <TYPE? TEMP16 <TYPE-CODE FALSE> + PHRASE18>
		    <DEAD TEMP16>
		    <NTHL TT6 1 = TEMP16 (TYPE SYMTAB)>
		    <DEAD TT6>
		    <NTHUV TEMP16 10 = TT6>
		    <DEAD TEMP16>
		    <FRAME 'FREE-TEMP>
		    <PUSH TT6>
		    <DEAD TT6>
		    <CALL 'FREE-TEMP 1>
PHRASE18
		    <RESTL L1-4 1 = L1-4 (TYPE LIST)>
		    <JUMP + AGAIN12>
		    <END DELAY-KILL>
" Generate LVAL for free variable."

#WORD *632041036*
<GFCN FLVAL-GEN ("VALUE" ANY NODE ANY) NOD4 WHERE5>
		    <TEMP TMP6 T1-7>
		    <INTGO>
		    <EQUAL? WHERE5 'DONT-CARE - PHRASE9>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = TMP6>
		    <JUMP + PHRASE11>
PHRASE9
		    <SET TMP6 WHERE5>
PHRASE11
		    <TYPE? TMP6 <TYPE-CODE TEMP> - PHRASE13>
		    <FRAME 'USE-TEMP>
		    <PUSH TMP6>
		    <CALL 'USE-TEMP 1>
PHRASE13
		    <NTHUV NOD4 4 = T1-7>
		    <TYPE? T1-7 <TYPE-CODE SYMTAB> - PHRASE16>
		    <NTHUV T1-7 2 = T1-7 (TYPE ATOM)>
		    <JUMP + PHRASE19>
PHRASE16
		    <NTHUV NOD4 5 = T1-7 (TYPE LIST)>
		    <NTHL T1-7 1 = T1-7 (TYPE NODE)>
		    <NTHUV T1-7 1 = T1-7 (TYPE FIX)>
		    <VEQUAL? T1-7 2 - PHRASE17 (TYPE FIX)>
		    <DEAD T1-7>
		    <NTHUV NOD4 5 = T1-7 (TYPE LIST)>
		    <DEAD NOD4>
		    <NTHL T1-7 1 = T1-7 (TYPE NODE)>
		    <NTHUV T1-7 4 = T1-7>
		    <JUMP + PHRASE19>
PHRASE17
		    <FRAME 'GEN>
		    <NTHUV NOD4 5 = T1-7 (TYPE LIST)>
		    <DEAD NOD4>
		    <NTHL T1-7 1 = STACK (TYPE NODE)>
		    <DEAD T1-7>
		    <CALL 'GEN 1 = T1-7>
PHRASE19
		    <FRAME 'GET-VALUE-X>
		    <PUSH T1-7>
		    <PUSH TMP6>
		    <PUSH 'T>
		    <CALL 'GET-VALUE-X 3>
		    <FRAME 'FREE-TEMP>
		    <PUSH T1-7>
		    <DEAD T1-7>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <PUSH TMP6>
		    <DEAD TMP6>
		    <PUSH WHERE5>
		    <DEAD WHERE5>
		    <CALL 'MOVE-ARG 2 = T1-7>
		    <RETURN T1-7>
		    <DEAD T1-7>
		    <END FLVAL-GEN>
#WORD *31521364741*
<GFCN FSET-GEN ("VALUE" ANY NODE ANY) NOD4 WHERE5>
		    <TEMP (TEM7 %<>) TEMP11 TEMP12 T1-8>
		    <INTGO>
		    <NTHUV NOD4 9 = TEMP11>
		    <GVAL 'SET = TEMP12>
		    <EQUAL? TEMP11 TEMP12 - PHRASE10>
		    <DEAD TEMP11 TEMP12>
		    <NTHUV NOD4 5 = TEMP12 (TYPE LIST)>
		    <RESTL TEMP12 1 = TEMP12 (TYPE LIST)>
		    <NTHL TEMP12 1 = TEM7 (TYPE NODE)>
		    <DEAD TEMP12>
PHRASE10
		    <NTHUV NOD4 4 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE SYMTAB> - PHRASE14>
		    <NTHUV TEMP11 2 = TEMP11 (TYPE ATOM)>
		    <JUMP + PHRASE19>
PHRASE14
		    <NTHUV NOD4 5 = TEMP12 (TYPE LIST)>
		    <DEAD NOD4>
		    <NTHL TEMP12 1 = T1-8 (TYPE NODE)>
		    <DEAD TEMP12>
		    <NTHUV T1-8 1 = TEMP12 (TYPE FIX)>
		    <VEQUAL? TEMP12 2 - PHRASE15 (TYPE FIX)>
		    <DEAD TEMP12>
		    <NTHUV T1-8 4 = TEMP11>
		    <DEAD T1-8>
		    <JUMP + PHRASE19>
PHRASE15
		    <FRAME 'GEN>
		    <PUSH T1-8>
		    <DEAD T1-8>
		    <CALL 'GEN 1 = TEMP11>
		    <TYPE? TEM7 <TYPE-CODE FALSE> + PHRASE19>
		    <FRAME 'INTERF-CHANGE>
		    <PUSH TEMP11>
		    <DEAD TEMP11>
		    <PUSH TEM7>
		    <CALL 'INTERF-CHANGE 2 = TEMP11>
PHRASE19
		    <TYPE? TEM7 <TYPE-CODE FALSE> + PHRASE22>
		    <FRAME 'GEN>
		    <PUSH TEM7>
		    <DEAD TEM7>
		    <TYPE? WHERE5 <TYPE-CODE TEMP> - PHRASE25>
		    <SET TEMP12 WHERE5>
		    <JUMP + PHRASE26>
PHRASE25
		    <SET TEMP12 'DONT-CARE (TYPE ATOM)>
PHRASE26
		    <PUSH TEMP12>
		    <DEAD TEMP12>
		    <CALL 'GEN 2 = T1-8>
		    <JUMP + PHRASE27>
PHRASE22
		    <GVAL 'THE-UNBOUND = T1-8>
PHRASE27
		    <FRAME 'SET-VALUE>
		    <PUSH TEMP11>
		    <PUSH T1-8>
		    <DEAD T1-8>
		    <PUSH 'T>
		    <CALL 'SET-VALUE 3 = T1-8>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP11>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <GVAL 'THE-UNBOUND = TEMP12>
		    <EQUAL? TEMP12 T1-8 - PHRASE32>
		    <DEAD TEMP12>
		    <SET TEMP12 TEMP11>
		    <DEAD TEMP11>
		    <JUMP + PHRASE33>
PHRASE32
		    <SET TEMP12 T1-8>
		    <DEAD T1-8>
PHRASE33
		    <PUSH TEMP12>
		    <DEAD TEMP12>
		    <PUSH WHERE5>
		    <DEAD WHERE5>
		    <CALL 'MOVE-ARG 2 = TEMP12>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
		    <END FSET-GEN>
" Generate code for an internal SET."

#WORD *21500464461*
<GFCN SET-GEN ("VALUE" ANY NODE ANY "OPTIONAL" ANY ANY ANY) NOD8 WHERE9 NOTF10 BRANCH11 DIR12>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <TEMP (SYM13 %<>) TEMP20 NM19 TEMP38>
		    <INTGO>
		    <NTHUV NOD8 4 = SYM13 (TYPE SYMTAB)>
		    <NTHUV NOD8 9 = TEMP20>
		    <NTHUV TEMP20 2 = NM19>
		    <DEAD TEMP20>
		    <NTHUV SYM13 3 = TEMP20>
		    <TYPE? TEMP20 <TYPE-CODE FALSE> + PHRASE22>
		    <DEAD TEMP20>
		    <NTHUV SYM13 4 = TEMP20 (TYPE FIX)>
		    <VEQUAL? TEMP20 -1 + PHRASE22 (TYPE FIX)>
		    <DEAD TEMP20>
		    <EQUAL? NM19 'SET - PHRASE27>
		    <DEAD NM19>
		    <FRAME 'GEN>
		    <NTHUV NOD8 5 = TEMP20 (TYPE LIST)>
		    <DEAD NOD8>
		    <RESTL TEMP20 1 = TEMP20 (TYPE LIST)>
		    <NTHL TEMP20 1 = STACK (TYPE NODE)>
		    <DEAD TEMP20>
		    <TYPE? WHERE9 <TYPE-CODE TEMP> - PHRASE30>
		    <SET TEMP20 WHERE9>
		    <JUMP + PHRASE31>
PHRASE30
		    <SET TEMP20 'DONT-CARE (TYPE ATOM)>
PHRASE31
		    <PUSH TEMP20>
		    <DEAD TEMP20>
		    <CALL 'GEN 2 = TEMP20>
		    <FRAME 'SET-VALUE>
		    <NTHUV SYM13 2 = STACK (TYPE ATOM)>
		    <DEAD SYM13>
		    <PUSH TEMP20>
		    <CALL 'SET-VALUE 2>
		    <JUMP + PHRASE33>
PHRASE27
		    <FRAME 'SET-VALUE>
		    <NTHUV SYM13 2 = STACK (TYPE ATOM)>
		    <GVAL 'THE-UNBOUND = STACK>
		    <CALL 'SET-VALUE 2>
		    <NTHUV SYM13 2 = TEMP20 (TYPE ATOM)>
		    <DEAD SYM13>
PHRASE33
		    <FRAME 'MOVE-ARG>
		    <PUSH TEMP20>
		    <DEAD TEMP20>
		    <PUSH WHERE9>
		    <DEAD WHERE9>
		    <CALL 'MOVE-ARG 2 = TEMP20>
		    <RETURN TEMP20>
		    <DEAD TEMP20>
PHRASE22
		    <NTHUV SYM13 3 = TEMP38>
		    <TYPE? TEMP38 <TYPE-CODE FALSE> + PHRASE36>
		    <DEAD TEMP38>
		    <EQUAL? NM19 'UNASSIGN - PHRASE36>
		    <FRAME 'START-FRAME>
		    <PUSH 'UNASSIGN>
		    <CALL 'START-FRAME 1>
		    <FRAME 'PUSH-CONSTANT>
		    <NTHUV SYM13 2 = STACK (TYPE ATOM)>
		    <DEAD SYM13>
		    <CALL 'PUSH-CONSTANT 1>
		    <EQUAL? WHERE9 'DONT-CARE - PHRASE42>
		    <FRAME 'GEN-TEMP>
		    <NTHUV NOD8 3 = STACK>
		    <DEAD NOD8>
		    <CALL 'GEN-TEMP 1 = WHERE9>
		    <JUMP + PHRASE44>
PHRASE42
		    <TYPE? WHERE9 <TYPE-CODE TEMP> - PHRASE44>
		    <FRAME 'USE-TEMP>
		    <PUSH WHERE9>
		    <NTHUV NOD8 3 = STACK>
		    <DEAD NOD8>
		    <CALL 'USE-TEMP 2>
PHRASE44
		    <FRAME 'MSUBR-CALL>
		    <PUSH 'UNASSIGN>
		    <PUSH 1>
		    <PUSH WHERE9>
		    <CALL 'MSUBR-CALL 3>
		    <EQUAL? WHERE9 'FLUSHED - PHRASE48>
		    <GVAL 'NO-DATUM = TEMP20>
		    <RETURN TEMP20>
		    <DEAD TEMP20>
PHRASE48
		    <RETURN WHERE9>
		    <DEAD WHERE9>
PHRASE36
		    <NTHUV SYM13 3 = TEMP38>
		    <TYPE? TEMP38 <TYPE-CODE FALSE> + PHRASE50>
		    <DEAD TEMP38>
		    <FRAME 'START-FRAME>
		    <PUSH 'SET>
		    <CALL 'START-FRAME 1>
		    <FRAME 'PUSH-CONSTANT>
		    <NTHUV SYM13 2 = STACK (TYPE ATOM)>
		    <DEAD SYM13>
		    <CALL 'PUSH-CONSTANT 1>
		    <FRAME 'GEN>
		    <NTHUV NOD8 5 = TEMP38 (TYPE LIST)>
		    <RESTL TEMP38 1 = TEMP38 (TYPE LIST)>
		    <NTHL TEMP38 1 = STACK (TYPE NODE)>
		    <DEAD TEMP38>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'GEN 2>
		    <EQUAL? WHERE9 'DONT-CARE - PHRASE55>
		    <FRAME 'GEN-TEMP>
		    <NTHUV NOD8 3 = STACK>
		    <DEAD NOD8>
		    <CALL 'GEN-TEMP 1 = WHERE9>
		    <JUMP + PHRASE57>
PHRASE55
		    <TYPE? WHERE9 <TYPE-CODE TEMP> - PHRASE57>
		    <FRAME 'USE-TEMP>
		    <PUSH WHERE9>
		    <NTHUV NOD8 3 = STACK>
		    <DEAD NOD8>
		    <CALL 'USE-TEMP 2>
PHRASE57
		    <FRAME 'MSUBR-CALL>
		    <PUSH 'SET>
		    <PUSH 2>
		    <PUSH WHERE9>
		    <CALL 'MSUBR-CALL 3>
		    <EQUAL? WHERE9 'FLUSHED - PHRASE61>
		    <GVAL 'NO-DATUM = TEMP20>
		    <RETURN TEMP20>
		    <DEAD TEMP20>
PHRASE61
		    <RETURN WHERE9>
		    <DEAD WHERE9>
PHRASE50
		    <FRAME 'LADDR>
		    <PUSH SYM13>
		    <CALL 'LADDR 1 = TEMP20>
		    <NTHUV TEMP20 4 = TEMP38>
		    <TYPE? TEMP38 <TYPE-CODE FALSE> - PHRASE66>
		    <DEAD TEMP38>
		    <FRAME 'ISTYPE?>
		    <NTHUV SYM13 7 = STACK>
		    <DEAD SYM13>
		    <CALL 'ISTYPE? 1 = TEMP38>
		    <TYPE? TEMP38 <TYPE-CODE FALSE> + PHRASE66>
		    <FRAME 'TYPEPRIM>
		    <PUSH TEMP38>
		    <CALL 'TYPEPRIM 1 = SYM13>
		    <EQUAL? SYM13 'FIX + BOOL72>
		    <EQUAL? SYM13 'WORD + BOOL72>
		    <EQUAL? SYM13 'LIST - PHRASE66>
		    <DEAD SYM13>
BOOL72
		    <FRAME 'DEALLOCATE-TEMP>
		    <FRAME 'USE-TEMP>
		    <PUSH TEMP20>
		    <PUSH TEMP38>
		    <DEAD TEMP38>
		    <CALL 'USE-TEMP 2 = STACK>
		    <CALL 'DEALLOCATE-TEMP 1>
PHRASE66
		    <EQUAL? NM19 'SET - PHRASE77>
		    <DEAD NM19>
		    <TYPE? BRANCH11 <TYPE-CODE FALSE> + PHRASE79>
		    <TYPE? NOTF10 <TYPE-CODE FALSE> + TAG83>
		    <DEAD NOTF10>
		    <TYPE? DIR12 <TYPE-CODE FALSE> - TAG82>
		    <DEAD DIR12>
		    <SET DIR12 'T (TYPE ATOM)>
		    <JUMP + TAG83>
TAG82
		    <SET DIR12 %<> (TYPE FALSE)>
TAG83
		    <FRAME 'PRED-BRANCH-GEN>
		    <PUSH BRANCH11>
		    <DEAD BRANCH11>
		    <NTHUV NOD8 5 = TEMP38 (TYPE LIST)>
		    <DEAD NOD8>
		    <RESTL TEMP38 1 = TEMP38 (TYPE LIST)>
		    <NTHL TEMP38 1 = STACK (TYPE NODE)>
		    <DEAD TEMP38>
		    <PUSH DIR12>
		    <DEAD DIR12>
		    <PUSH TEMP20>
		    <PUSH %<>>
		    <PUSH 'T>
		    <CALL 'PRED-BRANCH-GEN 6>
		    <JUMP + PHRASE87>
PHRASE79
		    <FRAME 'GEN>
		    <NTHUV NOD8 5 = TEMP38 (TYPE LIST)>
		    <DEAD NOD8>
		    <RESTL TEMP38 1 = TEMP38 (TYPE LIST)>
		    <NTHL TEMP38 1 = STACK (TYPE NODE)>
		    <DEAD TEMP38>
		    <PUSH TEMP20>
		    <DEAD TEMP20>
		    <CALL 'GEN 2 = TEMP20>
		    <JUMP + PHRASE87>
PHRASE77
		    <FRAME 'MOVE-ARG>
		    <GVAL 'THE-UNBOUND = STACK>
		    <PUSH TEMP20>
		    <CALL 'MOVE-ARG 2>
PHRASE87
		    <TYPE? TEMP20 <TYPE-CODE TEMP> - PHRASE90>
		    <NTHUV TEMP20 2 = SYM13 (TYPE FIX)>
		    <VEQUAL? SYM13 0 - PHRASE92 (TYPE FIX)>
		    <SET SYM13 1 (TYPE FIX)>
PHRASE92
		    <ADD SYM13 1 = TEMP38 (TYPE FIX)>
		    <DEAD SYM13>
		    <PUTUV TEMP20 2 TEMP38 (TYPE FIX)>
		    <DEAD TEMP38>
PHRASE90
		    <FRAME 'MOVE-ARG>
		    <PUSH TEMP20>
		    <DEAD TEMP20>
		    <PUSH WHERE9>
		    <DEAD WHERE9>
		    <CALL 'MOVE-ARG 2 = TEMP20>
		    <RETURN TEMP20>
		    <DEAD TEMP20>
		    <END SET-GEN>
#WORD *27477421233*
<GFCN ARG? ("VALUE" <OR ATOM !<FALSE>> SYMTAB) SYM4>
		    <TEMP TEMP5 TEMP6>
		    <INTGO>
		    <GVAL 'ARGTBL = TEMP5>
		    <NTHUV SYM4 4 = TEMP6 (TYPE FIX)>
		    <DEAD SYM4>
		    <NTHUU TEMP5 TEMP6 = TEMP5 (TYPE FIX)>
		    <DEAD TEMP6>
		    <VEQUAL? TEMP5 1 - TAG8 (TYPE FIX)>
		    <DEAD TEMP5>
		    <RETURN 'T>
TAG8
		    <RETURN %<>>
		    <END ARG?>
#WORD *27337411731*
<GFCN OPT? ("VALUE" <OR ATOM !<FALSE>> SYMTAB) SYM4>
		    <TEMP TEMP5 TEMP6>
		    <INTGO>
		    <GVAL 'OPTBL = TEMP5>
		    <NTHUV SYM4 4 = TEMP6 (TYPE FIX)>
		    <DEAD SYM4>
		    <NTHUU TEMP5 TEMP6 = TEMP5 (TYPE FIX)>
		    <DEAD TEMP6>
		    <VEQUAL? TEMP5 1 - TAG8 (TYPE FIX)>
		    <DEAD TEMP5>
		    <RETURN 'T>
TAG8
		    <RETURN %<>>
		    <END OPT?>
<SETG OPTBL ![0 0 0 0 0 1 1 1 1 0 0 0 0!]>

<SETG ARGTBL ![0 0 0 0 1 0 0 0 0 1 0 1 1!]>

<GDECL (OPTBL ARGTBL) <UVECTOR [REST FIX]>>

" Compute the address of a local variable using the stack model."

#WORD *23757717642*
<GFCN LADDR ("VALUE" ANY SYMTAB) S4>
		    <TEMP TEMP5>
		    <INTGO>
		    <NTHUV S4 10 = TEMP5>
		    <DEAD S4>
		    <RETURN TEMP5>
		    <DEAD TEMP5>
		    <END LADDR>
" Generate obscure stuff."

#WORD *25234556454*
<GFCN DEFAULT-GEN ("VALUE" ANY NODE ANY) NOD4 WHERE5>
		    <TEMP TEMP8>
		    <INTGO>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <NTHUV NOD4 4 = STACK>
		    <DEAD NOD4>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE5>
		    <DEAD WHERE5>
		    <CALL 'MOVE-ARG 2 = TEMP8>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
		    <END DEFAULT-GEN>
" Do GVAL using direct locative reference."

#WORD *20000064104*
		    <GFCN GVAL-GEN ("VALUE" ANY NODE ANY) N4 W5>
		    <TEMP RT6 TYP7 TEMP10>
		    <INTGO>
		    <NTHUV N4 3 = RT6>
		    <FRAME 'ISTYPE?>
		    <PUSH RT6>
		    <CALL 'ISTYPE? 1 = TYP7>
		    <FRAME 'GEN-GVAL>
		    <NTHUV N4 5 = TEMP10 (TYPE LIST)>
		    <DEAD N4>
		    <NTHL TEMP10 1 = TEMP10 (TYPE NODE)>
		    <NTHUV TEMP10 4 = STACK>
		    <DEAD TEMP10>
		    <EQUAL? W5 'DONT-CARE - PHRASE12>
		    <FRAME 'GEN-TEMP>
		    <PUSH RT6>
		    <DEAD RT6>
		    <CALL 'GEN-TEMP 1 = W5>
		    <SET TEMP10 W5>
		    <JUMP + PHRASE16>
PHRASE12
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE14>
		    <FRAME 'USE-TEMP>
		    <PUSH W5>
		    <PUSH RT6>
		    <DEAD RT6>
		    <CALL 'USE-TEMP 2>
		    <SET TEMP10 W5>
		    <JUMP + PHRASE16>
PHRASE14
		    <SET TEMP10 W5>
PHRASE16
		    <PUSH TEMP10>
		    <DEAD TEMP10>
		    <PUSH TYP7>
		    <DEAD TYP7>
		    <CALL 'GEN-GVAL 3>
		    <RETURN W5>
		    <DEAD W5>
		    <END GVAL-GEN>

" Do SETG using direct locative reference."

#WORD *12524545626*
<GFCN SETG-GEN ("VALUE" ANY NODE ANY) N4 W5>
		    <TEMP TEMP8 TEM6 TEMP12:FIX>
		    <INTGO>
		    <FRAME 'GEN>
		    <NTHUV N4 5 = TEMP8 (TYPE LIST)>
		    <RESTL TEMP8 1 = TEMP8 (TYPE LIST)>
		    <NTHL TEMP8 1 = STACK (TYPE NODE)>
		    <DEAD TEMP8>
		    <CALL 'GEN 1 = TEM6>
		    <FRAME 'GEN-SETG>
		    <NTHUV N4 5 = TEMP8 (TYPE LIST)>
		    <NTHL TEMP8 1 = TEMP8 (TYPE NODE)>
		    <NTHUV TEMP8 4 = STACK>
		    <DEAD TEMP8>
		    <PUSH TEM6>
		    <NTHUV N4 5 = TEMP8 (TYPE LIST)>
		    <SET TEMP12 3 (TYPE FIX)>
		    <LOOP (TEMP8 VALUE) (TEMP12 VALUE)>
TAG13
		    <EMPL? TEMP8 + PHRASE11>
		    <RESTL TEMP8 1 = TEMP8 (TYPE LIST)>
		    <SUB TEMP12 1 = TEMP12 (TYPE FIX)>
		    <GRTR? TEMP12 0 + TAG13 (TYPE FIX)>
		    <EMPL? TEMP8 - PHRASE11>
		    <DEAD TEMP8>
		    <FRAME 'GEN>
		    <NTHUV N4 5 = TEMP8 (TYPE LIST)>
		    <DEAD N4>
		    <RESTL TEMP8 1 = TEMP8 (TYPE LIST)>
		    <RESTL TEMP8 1 = TEMP8 (TYPE LIST)>
		    <NTHL TEMP8 1 = STACK (TYPE NODE)>
		    <DEAD TEMP8>
		    <PUSH 'DONT-CARE>
		    <CALL 'GEN 2 = TEMP8>
		    <JUMP + PHRASE15>
PHRASE11
		    <SET TEMP8 %<> (TYPE FALSE)>
PHRASE15
		    <PUSH TEMP8>
		    <DEAD TEMP8>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN-SETG 4>
		    <FRAME 'MOVE-ARG>
		    <PUSH TEM6>
		    <DEAD TEM6>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MOVE-ARG 2 = TEMP8>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
		    <END SETG-GEN>
" Generate GVAL calls."

#WORD *24734575543*
		    <GFCN FGVAL-GEN ("VALUE" ANY NODE ANY) N4 W5>
		    <TEMP TEMP9 TEM6>
		    <INTGO>
		    <FRAME 'GEN-GVAL>
		    <FRAME 'GEN>
		    <NTHUV N4 5 = TEMP9 (TYPE LIST)>
		    <NTHL TEMP9 1 = STACK (TYPE NODE)>
		    <DEAD TEMP9>
		    <CALL 'GEN 1 = TEM6>
		    <PUSH TEM6>
		    <EQUAL? W5 'DONT-CARE - PHRASE11>
		    <FRAME 'GEN-TEMP>
		    <NTHUV N4 3 = STACK>
		    <DEAD N4>
		    <CALL 'GEN-TEMP 1 = W5>
		    <SET TEMP9 W5>
		    <JUMP + PHRASE15>
PHRASE11
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE13>
		    <FRAME 'USE-TEMP>
		    <PUSH W5>
		    <NTHUV N4 3 = STACK>
		    <DEAD N4>
		    <CALL 'USE-TEMP 2>
		    <SET TEMP9 W5>
		    <JUMP + PHRASE15>
PHRASE13
		    <SET TEMP9 W5>
PHRASE15
		    <PUSH TEMP9>
		    <DEAD TEMP9>
		    <CALL 'GEN-GVAL 2>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEM6>
		    <DEAD TEM6>
		    <CALL 'FREE-TEMP 1>
		    <RETURN W5>
		    <DEAD W5>
		    <END FGVAL-GEN>

" Generate a SETG call."

#WORD *13255413604*
<GFCN FSETG-GEN ("VALUE" ANY NODE ANY) NOD4 W5>
		    <TEMP TEMP9 ATM7 TEM6 TEMP18:FIX>
		    <INTGO>
		    <FRAME 'GEN>
		    <NTHUV NOD4 5 = TEMP9 (TYPE LIST)>
		    <NTHL TEMP9 1 = STACK (TYPE NODE)>
		    <DEAD TEMP9>
		    <CALL 'GEN 1 = ATM7>
		    <FRAME 'INTERF-CHANGE>
		    <PUSH ATM7>
		    <DEAD ATM7>
		    <NTHUV NOD4 5 = TEMP9 (TYPE LIST)>
		    <RESTL TEMP9 1 = TEMP9 (TYPE LIST)>
		    <NTHL TEMP9 1 = STACK (TYPE NODE)>
		    <DEAD TEMP9>
		    <CALL 'INTERF-CHANGE 2 = ATM7>
		    <FRAME 'GEN>
		    <NTHUV NOD4 5 = TEMP9 (TYPE LIST)>
		    <RESTL TEMP9 1 = TEMP9 (TYPE LIST)>
		    <NTHL TEMP9 1 = STACK (TYPE NODE)>
		    <DEAD TEMP9>
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE13>
		    <SET TEMP9 W5>
		    <JUMP + PHRASE14>
PHRASE13
		    <SET TEMP9 'DONT-CARE (TYPE ATOM)>
PHRASE14
		    <PUSH TEMP9>
		    <DEAD TEMP9>
		    <CALL 'GEN 2 = TEM6>
		    <FRAME 'GEN-SETG>
		    <PUSH ATM7>
		    <PUSH TEM6>
		    <NTHUV NOD4 5 = TEMP9 (TYPE LIST)>
		    <SET TEMP18 3 (TYPE FIX)>
		    <LOOP (TEMP9 VALUE) (TEMP18 VALUE)>
TAG19
		    <EMPL? TEMP9 + PHRASE17>
		    <RESTL TEMP9 1 = TEMP9 (TYPE LIST)>
		    <SUB TEMP18 1 = TEMP18 (TYPE FIX)>
		    <GRTR? TEMP18 0 + TAG19 (TYPE FIX)>
		    <EMPL? TEMP9 - PHRASE17>
		    <DEAD TEMP9>
		    <FRAME 'GEN>
		    <NTHUV NOD4 5 = TEMP9 (TYPE LIST)>
		    <DEAD NOD4>
		    <RESTL TEMP9 1 = TEMP9 (TYPE LIST)>
		    <RESTL TEMP9 1 = TEMP9 (TYPE LIST)>
		    <NTHL TEMP9 1 = STACK (TYPE NODE)>
		    <DEAD TEMP9>
		    <PUSH 'DONT-CARE>
		    <CALL 'GEN 2 = TEMP9>
		    <JUMP + PHRASE21>
PHRASE17
		    <SET TEMP9 %<> (TYPE FALSE)>
PHRASE21
		    <PUSH TEMP9>
		    <DEAD TEMP9>
		    <PUSH W5>
		    <CALL 'GEN-SETG 4>
		    <FRAME 'FREE-TEMP>
		    <PUSH ATM7>
		    <DEAD ATM7>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <PUSH TEM6>
		    <DEAD TEM6>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MOVE-ARG 2 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END FSETG-GEN>
#WORD *22732552753*
<GFCN CHTYPE-GEN ("VALUE" ANY NODE ANY) NOD4 WHERE5>
		    <TEMP TYP6 TEMP12 N7:NODE N2-8 TEMP19 TEMP20 TT10>
		    <INTGO>
		    <FRAME 'ISTYPE?>
		    <NTHUV NOD4 3 = STACK>
		    <CALL 'ISTYPE? 1 = TYP6>
		    <NTHUV NOD4 5 = TEMP12 (TYPE LIST)>
		    <NTHL TEMP12 1 = N7 (TYPE NODE)>
		    <DEAD TEMP12>
		    <TYPE? TYP6 <TYPE-CODE FALSE> + PHRASE14>
		    <NTHUV NOD4 2 = TEMP12>
		    <TYPE? TEMP12 <TYPE-CODE NODE> - PHRASE14>
		    <DEAD TEMP12>
		    <NTHUV NOD4 2 = TEMP12 (TYPE NODE)>
		    <NTHUV TEMP12 1 = TEMP12 (TYPE FIX)>
		    <GVAL 'CHTYPE-FOR-FREE = TEMP19>
		    <EMPUV? TEMP19 + PHRASE14>
		    <LOOP (TEMP12 VALUE) (TEMP19 LENGTH VALUE)>
TAG17
		    <NTHUV TEMP19 1 = TEMP20>
		    <VEQUAL? TEMP20 TEMP12 + TAG16>
		    <DEAD TEMP20>
		    <RESTUV TEMP19 1 = TEMP19 (TYPE VECTOR)>
		    <EMPUV? TEMP19 - TAG17>
		    <JUMP + PHRASE14>
TAG16
		    <GVAL 'POP-STACK = TEMP19>
		    <EQUAL? TEMP19 WHERE5 + BOOL21>
		    <DEAD TEMP19>
		    <EQUAL? WHERE5 'DONT-CARE - PHRASE14>
BOOL21
		    <FRAME 'GEN>
		    <PUSH N7>
		    <DEAD N7>
		    <PUSH WHERE5>
		    <DEAD WHERE5>
		    <CALL 'GEN 2 = TEMP19>
		    <RETURN TEMP19>
		    <DEAD TEMP19>
PHRASE14
		    <FRAME 'GEN>
		    <PUSH N7>
		    <DEAD N7>
		    <CALL 'GEN 1 = TEMP19>
		    <NTHUV NOD4 5 = TEMP12 (TYPE LIST)>
		    <EMPL? TEMP12 + PHRASE26>
		    <RESTL TEMP12 1 = TEMP12 (TYPE LIST)>
		    <EMPL? TEMP12 + PHRASE26>
		    <DEAD TEMP12>
		    <NTHUV NOD4 5 = TEMP12 (TYPE LIST)>
		    <DEAD NOD4>
		    <RESTL TEMP12 1 = TEMP12 (TYPE LIST)>
		    <NTHL TEMP12 1 = N2-8 (TYPE NODE)>
		    <DEAD TEMP12>
		    <NTHUV N2-8 1 = TEMP12 (TYPE FIX)>
		    <VEQUAL? TEMP12 2 + PHRASE26 (TYPE FIX)>
		    <DEAD TEMP12>
		    <FRAME 'INTERF-CHANGE>
		    <PUSH TEMP19>
		    <DEAD TEMP19>
		    <PUSH N2-8>
		    <CALL 'INTERF-CHANGE 2 = TEMP19>
		    <FRAME 'GEN>
		    <NTHUV N2-8 5 = TEMP12 (TYPE LIST)>
		    <NTHL TEMP12 1 = STACK (TYPE NODE)>
		    <DEAD TEMP12>
		    <CALL 'GEN 1 = TT10>
PHRASE26
		    <EQUAL? WHERE5 'DONT-CARE - PHRASE31>
		    <TYPE? TEMP19 <TYPE-CODE TEMP> - PHRASE33>
		    <NTHUV TEMP19 2 = TEMP12 (TYPE FIX)>
		    <GRTR? TEMP12 1 + PHRASE33 (TYPE FIX)>
		    <DEAD TEMP12>
		    <FRAME 'DEALLOCATE-TEMP>
		    <SET WHERE5 TEMP19>
		    <PUSH WHERE5>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <FRAME 'USE-TEMP>
		    <PUSH TEMP19>
		    <PUSH TYP6>
		    <CALL 'USE-TEMP 2>
		    <JUMP + PHRASE43>
PHRASE33
		    <FRAME 'GEN-TEMP>
		    <SET TEMP12 TYP6>
		    <TYPE? TEMP12 <TYPE-CODE FALSE> - PHRASE42>
		    <SET TEMP12 'ANY (TYPE ATOM)>
PHRASE42
		    <PUSH TEMP12>
		    <DEAD TEMP12>
		    <CALL 'GEN-TEMP 1 = WHERE5>
		    <JUMP + PHRASE43>
PHRASE31
		    <TYPE? WHERE5 <TYPE-CODE TEMP> - PHRASE43>
		    <FRAME 'USE-TEMP>
		    <PUSH WHERE5>
		    <PUSH TYP6>
		    <CALL 'USE-TEMP 2>
PHRASE43
		    <TYPE? N2-8 <TYPE-CODE UNBOUND> + PHRASE46>
		    <NTHUV N2-8 1 = TEMP12 (TYPE FIX)>
		    <DEAD N2-8>
		    <VEQUAL? TEMP12 2 + PHRASE46 (TYPE FIX)>
		    <DEAD TEMP12>
		    <TYPE? TT10 <TYPE-CODE TEMP> + PHRASE49>
		    <FRAME 'MOVE-ARG>
		    <PUSH TT10>
		    <DEAD TT10>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = STACK>
		    <CALL 'MOVE-ARG 2 = TT10>
PHRASE49
		    <FRAME 'GEN-CHTYPE>
		    <PUSH TEMP19>
		    <FRAME 'FORM>
		    <PUSH '`TYPE>
		    <NTHUV TT10 1 = STACK (TYPE ATOM)>
		    <CALL 'FORM 2 = STACK>
		    <PUSH WHERE5>
		    <CALL 'GEN-CHTYPE 3>
		    <FRAME 'FREE-TEMP>
		    <PUSH TT10>
		    <DEAD TT10>
		    <CALL 'FREE-TEMP 1>
		    <JUMP + PHRASE55>
PHRASE46
		    <FRAME 'GEN-CHTYPE>
		    <PUSH TEMP19>
		    <PUSH TYP6>
		    <DEAD TYP6>
		    <PUSH WHERE5>
		    <CALL 'GEN-CHTYPE 3>
PHRASE55
		    <EQUAL? TEMP19 WHERE5 + PHRASE58>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP19>
		    <DEAD TEMP19>
		    <CALL 'FREE-TEMP 1>
PHRASE58
		    <RETURN WHERE5>
		    <DEAD WHERE5>
		    <END CHTYPE-GEN>
<GDECL (CHTYPE-FOR-FREE) <VECTOR [REST FIX]>>

<SETG CHTYPE-FOR-FREE [,NTH-CODE ,ARITH-CODE ,0-TST-CODE ,1?-CODE ,TEST-CODE ,LNTH-CODE ,MT-CODE ,REST-CODE ,MOD-CODE ,BITS-CODE ,BITL-CODE ,ROT-CODE ,LSH-CODE ,BIT-TEST-CODE]>

" Generate do-nothing piece of code."

#WORD *35222615552*
<GFCN ID-GEN ("VALUE" ANY NODE ANY) N4 W5>
		    <TEMP TEMP7>
		    <INTGO>
		    <FRAME 'GEN>
		    <NTHUV N4 5 = TEMP7 (TYPE LIST)>
		    <DEAD N4>
		    <NTHL TEMP7 1 = STACK (TYPE NODE)>
		    <DEAD TEMP7>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'GEN 2 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END ID-GEN>
" Generate call to READ etc. with eof condition."

#WORD *6645521040*
<GFCN READ2-GEN ("VALUE" ANY NODE ANY) N4 W5>
		    <TEMP (I6 0) TEMP14:FIX TMP9 TEMP30 OB31:NODE SPOB7:NODE>
		    <INTGO>
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE12>
		    <NTHUV W5 2 = TEMP14 (TYPE FIX)>
		    <LESS? TEMP14 1 - PHRASE12 (TYPE FIX)>
		    <DEAD TEMP14>
		    <SET TMP9 W5>
		    <JUMP + PHRASE17>
PHRASE12
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = TMP9>
PHRASE17
		    <FRAME 'START-FRAME>
		    <NTHUV N4 4 = STACK>
		    <CALL 'START-FRAME 1>
		    <NTHUV N4 5 = TEMP30 (TYPE LIST)>
		    <LOOP>
MAP21
		    <INTGO>
		    <EMPL? TEMP30 + MAPAP24>
		    <NTHL TEMP30 1 = OB31>
		    <NTHUV OB31 1 = TEMP14 (TYPE FIX)>
		    <VEQUAL? TEMP14 55 - PHRASE33 (TYPE FIX)>
		    <DEAD TEMP14>
		    <SET SPOB7 OB31>
		    <DEAD OB31>
		    <FRAME 'CURRENT-FRAME>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'CURRENT-FRAME 1>
		    <JUMP + PHRASE36>
PHRASE33
		    <FRAME 'GEN>
		    <PUSH OB31>
		    <DEAD OB31>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'GEN 2>
PHRASE36
		    <ADD I6 1 = I6 (TYPE FIX)>
		    <RESTL TEMP30 1 = TEMP30 (TYPE LIST)>
		    <JUMP + MAP21>
MAPAP24
		    <FRAME 'USE-TEMP>
		    <PUSH TMP9>
		    <CALL 'USE-TEMP 1>
		    <FRAME 'MSUBR-CALL>
		    <NTHUV N4 4 = STACK>
		    <DEAD N4>
		    <PUSH I6>
		    <DEAD I6>
		    <PUSH TMP9>
		    <CALL 'MSUBR-CALL 3>
		    <FRAME 'GEN-==?>
		    <FRAME 'CURRENT-FRAME>
		    <CALL 'CURRENT-FRAME 0 = TEMP30>
		    <PUSH TEMP30>
		    <PUSH TMP9>
		    <PUSH %<>>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = I6>
		    <PUSH I6>
		    <CALL 'GEN-==? 4>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP30>
		    <DEAD TEMP30>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH TMP9>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <FRAME 'GEN>
		    <PUSH SPOB7>
		    <DEAD SPOB7>
		    <PUSH TMP9>
		    <CALL 'GEN 2>
		    <FRAME 'LABEL-TAG>
		    <PUSH I6>
		    <DEAD I6>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'MOVE-ARG>
		    <PUSH TMP9>
		    <DEAD TMP9>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MOVE-ARG 2 = TEMP30>
		    <RETURN TEMP30>
		    <DEAD TEMP30>
		    <END READ2-GEN>
#WORD *24635574473*
<GFCN GET-GEN ("VALUE" ANY ANY ANY) N4 W5>
		    <TEMP TEMP7>
		    <INTGO>
		    <FRAME 'GETGET>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH 'T>
		    <CALL 'GETGET 3 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END GET-GEN>
#WORD *27225562147*
<GFCN GET2-GEN ("VALUE" ANY ANY ANY) N4 W5>
		    <TEMP TEMP7>
		    <INTGO>
		    <FRAME 'GETGET>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH %<>>
		    <CALL 'GETGET 3 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END GET2-GEN>
<GDECL (GETTERS) UVECTOR>

#WORD *34053146022*
<GFCN GETGET ("VALUE" ANY NODE ANY ANY) N4 W5 REV6>
		    <TEMP K7:LIST BR8 TEMP16 TMP9>
		    <INTGO>
		    <NTHUV N4 5 = K7 (TYPE LIST)>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0>
		    <LENL K7 = BR8 (TYPE FIX)>
		    <FRAME 'START-FRAME>
		    <NTHUV N4 4 = STACK>
		    <CALL 'START-FRAME 1>
		    <FRAME 'GEN>
		    <NTHL K7 1 = STACK (TYPE NODE)>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'GEN 2>
		    <FRAME 'GEN>
		    <RESTL K7 1 = TEMP16 (TYPE LIST)>
		    <NTHL TEMP16 1 = STACK (TYPE NODE)>
		    <DEAD TEMP16>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'GEN 2>
		    <VEQUAL? BR8 3 - PHRASE18 (TYPE FIX)>
		    <FRAME 'CURRENT-FRAME>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'CURRENT-FRAME 1>
PHRASE18
		    <FRAME 'MSUBR-CALL>
		    <NTHUV N4 4 = STACK>
		    <DEAD N4>
		    <PUSH BR8>
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE22>
		    <LESS? BR8 3 + BOOL24 (TYPE FIX)>
		    <NTHUV W5 2 = TEMP16 (TYPE FIX)>
		    <LESS? TEMP16 1 - PHRASE22 (TYPE FIX)>
		    <DEAD TEMP16>
BOOL24
		    <FRAME 'USE-TEMP>
		    <SET TMP9 W5>
		    <PUSH TMP9>
		    <CALL 'USE-TEMP 1 = TEMP16>
		    <JUMP + PHRASE28>
PHRASE22
		    <FRAME 'GEN-TEMP>
		    <CALL 'GEN-TEMP 0 = TMP9>
		    <SET TEMP16 TMP9>
PHRASE28
		    <PUSH TEMP16>
		    <DEAD TEMP16>
		    <CALL 'MSUBR-CALL 3>
		    <VEQUAL? BR8 3 - PHRASE31 (TYPE FIX)>
		    <DEAD BR8>
		    <FRAME 'GEN-==?>
		    <FRAME 'CURRENT-FRAME>
		    <CALL 'CURRENT-FRAME 0 = TEMP16>
		    <PUSH TEMP16>
		    <PUSH TMP9>
		    <PUSH %<>>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = BR8>
		    <PUSH BR8>
		    <CALL 'GEN-==? 4>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP16>
		    <DEAD TEMP16>
		    <CALL 'FREE-TEMP 1>
		    <TYPE? REV6 <TYPE-CODE FALSE> + PHRASE37>
		    <DEAD REV6>
		    <FRAME 'START-FRAME>
		    <PUSH 'EVAL>
		    <CALL 'START-FRAME 1>
		    <FRAME 'GEN>
		    <RESTL K7 1 = TEMP16 (TYPE LIST)>
		    <DEAD K7>
		    <RESTL TEMP16 1 = TEMP16 (TYPE LIST)>
		    <NTHL TEMP16 1 = STACK (TYPE NODE)>
		    <DEAD TEMP16>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'GEN 2>
		    <FRAME 'DEALLOCATE-TEMP>
		    <FRAME 'MSUBR-CALL>
		    <PUSH 'EVAL>
		    <PUSH 1>
		    <PUSH TMP9>
		    <CALL 'MSUBR-CALL 3 = STACK>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <JUMP + PHRASE42>
PHRASE37
		    <FRAME 'DEALLOCATE-TEMP>
		    <FRAME 'GEN>
		    <RESTL K7 1 = TEMP16 (TYPE LIST)>
		    <DEAD K7>
		    <RESTL TEMP16 1 = TEMP16 (TYPE LIST)>
		    <NTHL TEMP16 1 = STACK (TYPE NODE)>
		    <DEAD TEMP16>
		    <PUSH TMP9>
		    <CALL 'GEN 2 = STACK>
		    <CALL 'DEALLOCATE-TEMP 1>
PHRASE42
		    <FRAME 'LABEL-TAG>
		    <PUSH BR8>
		    <DEAD BR8>
		    <CALL 'LABEL-TAG 1>
PHRASE31
		    <FRAME 'MOVE-ARG>
		    <PUSH TMP9>
		    <DEAD TMP9>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MOVE-ARG 2 = TEMP16>
		    <RETURN TEMP16>
		    <DEAD TEMP16>
		    <END GETGET>
'<SETG GETTERS [,GET ,GETL ,GETPROP ,GETPL]>

<SETG STACK-INS [`CALL `UBLOCK `LIST `SYSCALL]>

<GDECL (STACK-INS) <VECTOR [REST ATOM]>>

#WORD *30216441117*
<GFCN CALL-GEN ("VALUE" ANY NODE ANY "OPTIONAL" ANY ANY ANY) NOD8 WHERE9 NOTF10 B11 D12>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <TEMP K13:LIST TEMP23 INS14 (ON-STACK17 %<>) COUNTMP18 SEGTMP19 INS1-21 (REC?22 %<>) TEMP33 TEMP66 TEMP79 N81 TEMP85>
		    <INTGO>
		    <NTHUV NOD8 5 = K13 (TYPE LIST)>
		    <NTHL K13 1 = TEMP23 (TYPE NODE)>
		    <NTHUV TEMP23 4 = INS14>
		    <DEAD TEMP23>
		    <TYPE? NOTF10 <TYPE-CODE FALSE> + TAG27>
		    <DEAD NOTF10>
		    <TYPE? D12 <TYPE-CODE FALSE> - TAG26>
		    <DEAD D12>
		    <SET D12 'T (TYPE ATOM)>
		    <JUMP + TAG27>
TAG26
		    <SET D12 %<> (TYPE FALSE)>
TAG27
		    <GVAL 'STACK-INS = TEMP23>
		    <TYPE? INS14 <TYPE-CODE ATOM> - PHRASE52>
		    <EMPUV? TEMP23 + PHRASE52>
		    <LOOP (INS14 VALUE) (TEMP23 LENGTH VALUE)>
TAG31
		    <NTHUV TEMP23 1 = TEMP33>
		    <VEQUAL? TEMP33 INS14 + TAG30>
		    <DEAD TEMP33>
		    <RESTUV TEMP23 1 = TEMP23 (TYPE VECTOR)>
		    <EMPUV? TEMP23 - TAG31>
		    <JUMP + PHRASE52>
TAG30
		    <SET ON-STACK17 'T (TYPE ATOM)>
		    <EQUAL? INS14 '`CALL + BOOL36>
		    <EQUAL? INS14 '`SCALL - PHRASE35>
BOOL36
		    <RESTL K13 1 = TEMP23 (TYPE LIST)>
		    <NTHL TEMP23 1 = INS1-21 (TYPE NODE)>
		    <DEAD TEMP23>
		    <NTHUV INS1-21 1 = TEMP23 (TYPE FIX)>
		    <VEQUAL? TEMP23 2 - PHRASE38 (TYPE FIX)>
		    <DEAD TEMP23>
		    <NTHUV INS1-21 4 = TEMP23>
		    <TYPE? TEMP23 <TYPE-CODE ATOM> - PHRASE38>
		    <DEAD TEMP23>
		    <FRAME 'IEMIT>
		    <EQUAL? INS14 '`CALL - PHRASE42>
		    <SET TEMP23 '`FRAME (TYPE ATOM)>
		    <JUMP + PHRASE43>
PHRASE42
		    <SET TEMP23 '`SFRAME (TYPE ATOM)>
PHRASE43
		    <PUSH TEMP23>
		    <DEAD TEMP23>
		    <FRAME 'FORM>
		    <PUSH 'QUOTE>
		    <NTHUV INS1-21 4 = TEMP23 (TYPE ATOM)>
		    <DEAD INS1-21>
		    <CHTYPE TEMP23 <TYPE-CODE FCN-ATOM> = INS1-21>
		    <DEAD TEMP23>
		    <PUSH INS1-21>
		    <CALL 'FORM 2 = STACK>
		    <CALL 'IEMIT 2>
		    <FRAME 'FORM>
		    <PUSH 'QUOTE>
		    <PUSH INS1-21>
		    <DEAD INS1-21>
		    <CALL 'FORM 2 = INS1-21>
		    <JUMP + PHRASE46>
PHRASE38
		    <FRAME 'IEMIT>
		    <EQUAL? INS14 '`CALL - PHRASE49>
		    <SET TEMP23 '`FRAME (TYPE ATOM)>
		    <JUMP + PHRASE50>
PHRASE49
		    <SET TEMP23 '`SFRAME (TYPE ATOM)>
PHRASE50
		    <PUSH TEMP23>
		    <DEAD TEMP23>
		    <CALL 'IEMIT 1>
		    <FRAME 'GEN>
		    <PUSH INS1-21>
		    <DEAD INS1-21>
		    <CALL 'GEN 1 = INS1-21>
PHRASE46
		    <RESTL K13 1 = K13 (TYPE LIST)>
		    <JUMP + PHRASE52>
PHRASE35
		    <EQUAL? INS14 '`SYSCALL - PHRASE52>
		    <FRAME 'GEN>
		    <RESTL K13 1 = TEMP23 (TYPE LIST)>
		    <NTHL TEMP23 1 = STACK (TYPE NODE)>
		    <DEAD TEMP23>
		    <CALL 'GEN 1 = INS1-21>
		    <RESTL K13 1 = K13 (TYPE LIST)>
PHRASE52
		    <FRAME 'GETPROP>
		    <PUSH INS14>
		    <PUSH '`RECORD-TYPE>
		    <CALL 'GETPROP 2 = TEMP23>
		    <TYPE? TEMP23 <TYPE-CODE FALSE> + PHRASE55>
		    <DEAD TEMP23>
		    <SET REC?22 'T (TYPE ATOM)>
PHRASE55
		    <SET TEMP23 0 (TYPE FIX)>
		    <RESTL K13 1 = TEMP66 (TYPE LIST)>
		    <LOOP>
MAP58
		    <INTGO>
		    <EMPL? TEMP66 + MAPAP61>
		    <NTHL TEMP66 1 = TEMP33>
		    <NTHUV TEMP33 1 = TEMP33 (TYPE FIX)>
		    <VEQUAL? TEMP33 3 - PHRASE69 (TYPE FIX)>
		    <DEAD TEMP33>
		    <SET TEMP33 0 (TYPE FIX)>
		    <JUMP + PHRASE71>
PHRASE69
		    <SET TEMP33 1 (TYPE FIX)>
PHRASE71
		    <ADD TEMP23 TEMP33 = TEMP23>
		    <DEAD TEMP33>
		    <RESTL TEMP66 1 = TEMP66 (TYPE LIST)>
		    <JUMP + MAP58>
MAPAP61
		    <SET TEMP66 TEMP23>
		    <DEAD TEMP23>
		    <SET TEMP33 () (TYPE LIST)>
		    <SET TEMP23 () (TYPE LIST)>
		    <RESTL K13 1 = TEMP79 (TYPE LIST)>
		    <DEAD K13>
		    <LOOP>
MAP73
		    <INTGO>
		    <EMPL? TEMP79 + MAPAP76>
		    <SET K13 TEMP79>
		    <NTHL K13 1 = N81 (TYPE NODE)>
		    <NTHUV N81 1 = TEMP85 (TYPE FIX)>
		    <VEQUAL? TEMP85 3 - PHRASE84 (TYPE FIX)>
		    <DEAD TEMP85>
		    <TYPE? SEGTMP19 <TYPE-CODE UNBOUND> - PHRASE87>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = SEGTMP19>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = COUNTMP18>
		    <FRAME 'SET-TEMP>
		    <PUSH COUNTMP18>
		    <PUSH TEMP66>
		    <PUSH (`TYPE FIX)>
		    <CALL 'SET-TEMP 3>
PHRASE87
		    <FRAME 'GEN>
		    <NTHUV N81 5 = TEMP85 (TYPE LIST)>
		    <NTHL TEMP85 1 = STACK (TYPE NODE)>
		    <DEAD TEMP85>
		    <PUSH SEGTMP19>
		    <CALL 'GEN 2>
		    <FRAME 'SEGMENT-STACK>
		    <PUSH SEGTMP19>
		    <PUSH COUNTMP18>
		    <FRAME 'STRUCTYP>
		    <NTHUV N81 5 = TEMP85 (TYPE LIST)>
		    <NTHL TEMP85 1 = TEMP85 (TYPE NODE)>
		    <NTHUV TEMP85 3 = STACK>
		    <DEAD TEMP85>
		    <CALL 'STRUCTYP 1 = STACK>
		    <FRAME 'ISTYPE?>
		    <NTHUV N81 5 = TEMP85 (TYPE LIST)>
		    <DEAD N81>
		    <NTHL TEMP85 1 = TEMP85 (TYPE NODE)>
		    <NTHUV TEMP85 3 = STACK>
		    <DEAD TEMP85>
		    <CALL 'ISTYPE? 1 = STACK>
		    <CALL 'SEGMENT-STACK 4 = TEMP85>
		    <JUMP + MAPAP107>
PHRASE84
		    <FRAME 'GEN>
		    <PUSH N81>
		    <DEAD N81>
		    <VEQUAL? ON-STACK17 0 + PHRASE98>
		    <GVAL 'POP-STACK = N81>
		    <JUMP + PHRASE100>
PHRASE98
		    <SET N81 'DONT-CARE (TYPE ATOM)>
PHRASE100
		    <PUSH N81>
		    <DEAD N81>
		    <CALL 'GEN 2 = TEMP85>
		    <VEQUAL? ON-STACK17 0 - MAPAP107>
		    <RESTL K13 1 = K13 (TYPE LIST)>
		    <LOOP>
MAP104
		    <INTGO>
		    <EMPL? K13 + MAPAP107>
		    <NTHL K13 1 = N81>
		    <FRAME 'INTERF-CHANGE>
		    <PUSH TEMP85>
		    <DEAD TEMP85>
		    <PUSH N81>
		    <DEAD N81>
		    <CALL 'INTERF-CHANGE 2 = TEMP85>
		    <RESTL K13 1 = K13 (TYPE LIST)>
		    <JUMP + MAP104>
MAPAP107
		    <CONS TEMP85 () = TEMP85 (TYPE LIST)>
		    <EMPL? TEMP33 - TAG116>
		    <SET TEMP33 TEMP85 (TYPE LIST)>
		    <JUMP + TAG117>
TAG116
		    <PUTREST TEMP23 TEMP85>
		    <DEAD TEMP23>
TAG117
		    <SET TEMP23 TEMP85 (TYPE LIST)>
		    <DEAD TEMP85>
		    <RESTL TEMP79 1 = TEMP79 (TYPE LIST)>
		    <JUMP + MAP73>
MAPAP76
		    <VEQUAL? ON-STACK17 0 - MAPAP124>
		    <SET TEMP79 TEMP33 (TYPE LIST)>
		    <LOOP>
MAP121
		    <INTGO>
		    <EMPL? TEMP79 + MAPAP124>
		    <NTHL TEMP79 1 = TEMP23>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP23>
		    <DEAD TEMP23>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <RESTL TEMP79 1 = TEMP79 (TYPE LIST)>
		    <JUMP + MAP121>
MAPAP124
		    <EQUAL? WHERE9 'FLUSHED + BOOL131>
		    <NTHUV NOD8 3 = TEMP79>
		    <EQUAL? TEMP79 'NO-RETURN - PHRASE130>
		    <DEAD TEMP79>
BOOL131
		    <VEQUAL? ON-STACK17 0 + PHRASE133>
		    <DEAD ON-STACK17>
		    <TYPE? INS1-21 <TYPE-CODE UNBOUND> + PHRASE135>
		    <FRAME 'IEMIT>
		    <PUSH INS14>
		    <DEAD INS14>
		    <PUSH INS1-21>
		    <TYPE? COUNTMP18 <TYPE-CODE UNBOUND> + PHRASE138>
		    <SET TEMP79 COUNTMP18>
		    <DEAD COUNTMP18>
		    <JUMP + PHRASE139>
PHRASE138
		    <SET TEMP79 TEMP66>
		    <DEAD TEMP66>
PHRASE139
		    <PUSH TEMP79>
		    <DEAD TEMP79>
		    <CALL 'IEMIT 3>
		    <FRAME 'FREE-TEMP>
		    <PUSH INS1-21>
		    <DEAD INS1-21>
		    <CALL 'FREE-TEMP 1>
		    <JUMP + PHRASE153>
PHRASE135
		    <FRAME 'IEMIT>
		    <PUSH INS14>
		    <DEAD INS14>
		    <TYPE? COUNTMP18 <TYPE-CODE UNBOUND> + PHRASE144>
		    <SET TEMP79 COUNTMP18>
		    <DEAD COUNTMP18>
		    <JUMP + PHRASE145>
PHRASE144
		    <SET TEMP79 TEMP66>
		    <DEAD TEMP66>
PHRASE145
		    <PUSH TEMP79>
		    <DEAD TEMP79>
		    <CALL 'IEMIT 2>
		    <JUMP + PHRASE153>
PHRASE133
		    <TYPE? B11 <TYPE-CODE FALSE> + PHRASE146>
		    <FRAME 'IEMIT>
		    <PUSH INS14>
		    <DEAD INS14>
		    <SET TEMP23 3 (TYPE FIX)>
		    <SET TEMP79 TEMP33>
		    <DEAD TEMP33>
		    <LOOP (TEMP79 VALUE) (TEMP23 VALUE)>
TAG148
		    <INTGO>
		    <EMPL? TEMP79 + TAG147>
		    <NTHL TEMP79 1 = STACK>
		    <RESTL TEMP79 1 = TEMP79 (TYPE LIST)>
		    <ADD TEMP23 1 = TEMP23 (TYPE FIX)>
		    <JUMP + TAG148>
TAG147
		    <TYPE? D12 <TYPE-CODE FALSE> + PHRASE151>
		    <DEAD D12>
		    <SET TEMP85 '+ (TYPE ATOM)>
		    <JUMP + PHRASE152>
PHRASE151
		    <SET TEMP85 '- (TYPE ATOM)>
PHRASE152
		    <PUSH TEMP85>
		    <DEAD TEMP85>
		    <PUSH B11>
		    <DEAD B11>
		    <CALL 'IEMIT TEMP23>
		    <DEAD TEMP23>
		    <JUMP + PHRASE153>
PHRASE146
		    <FRAME 'IEMIT>
		    <PUSH INS14>
		    <DEAD INS14>
		    <SET TEMP79 1 (TYPE FIX)>
		    <SET TEMP23 TEMP33>
		    <DEAD TEMP33>
		    <LOOP (TEMP23 VALUE) (TEMP79 VALUE)>
TAG155
		    <INTGO>
		    <EMPL? TEMP23 + TAG154>
		    <NTHL TEMP23 1 = STACK>
		    <RESTL TEMP23 1 = TEMP23 (TYPE LIST)>
		    <ADD TEMP79 1 = TEMP79 (TYPE FIX)>
		    <JUMP + TAG155>
TAG154
		    <CALL 'IEMIT TEMP79>
		    <DEAD TEMP79>
PHRASE153
		    <GVAL 'NO-DATUM = WHERE9>
		    <RETURN WHERE9>
		    <DEAD WHERE9>
PHRASE130
		    <TYPE? COUNTMP18 <TYPE-CODE UNBOUND> + PHRASE159>
		    <FRAME 'FREE-TEMP>
		    <PUSH COUNTMP18>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <FRAME 'FREE-TEMP>
		    <PUSH SEGTMP19>
		    <DEAD SEGTMP19>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
PHRASE159
		    <EQUAL? WHERE9 'DONT-CARE - PHRASE163>
		    <FRAME 'GEN-TEMP>
		    <NTHUV NOD8 3 = STACK>
		    <DEAD NOD8>
		    <CALL 'GEN-TEMP 1 = WHERE9>
		    <JUMP + PHRASE165>
PHRASE163
		    <TYPE? WHERE9 <TYPE-CODE TEMP> - PHRASE165>
		    <FRAME 'USE-TEMP>
		    <PUSH WHERE9>
		    <NTHUV NOD8 3 = STACK>
		    <DEAD NOD8>
		    <CALL 'USE-TEMP 2>
PHRASE165
		    <VEQUAL? ON-STACK17 0 + PHRASE168>
		    <DEAD ON-STACK17>
		    <TYPE? INS1-21 <TYPE-CODE UNBOUND> + PHRASE170>
		    <FRAME 'IEMIT>
		    <PUSH INS14>
		    <DEAD INS14>
		    <PUSH INS1-21>
		    <TYPE? COUNTMP18 <TYPE-CODE UNBOUND> + PHRASE173>
		    <SET TEMP79 COUNTMP18>
		    <DEAD COUNTMP18>
		    <JUMP + PHRASE174>
PHRASE173
		    <SET TEMP79 TEMP66>
		    <DEAD TEMP66>
PHRASE174
		    <PUSH TEMP79>
		    <DEAD TEMP79>
		    <PUSH '=>
		    <PUSH WHERE9>
		    <CALL 'IEMIT 5>
		    <FRAME 'FREE-TEMP>
		    <PUSH INS1-21>
		    <DEAD INS1-21>
		    <CALL 'FREE-TEMP 1>
		    <RETURN WHERE9>
		    <DEAD WHERE9>
PHRASE170
		    <FRAME 'IEMIT>
		    <PUSH INS14>
		    <DEAD INS14>
		    <TYPE? COUNTMP18 <TYPE-CODE UNBOUND> + PHRASE179>
		    <SET TEMP79 COUNTMP18>
		    <DEAD COUNTMP18>
		    <JUMP + PHRASE180>
PHRASE179
		    <SET TEMP79 TEMP66>
		    <DEAD TEMP66>
PHRASE180
		    <PUSH TEMP79>
		    <DEAD TEMP79>
		    <PUSH '=>
		    <PUSH WHERE9>
		    <CALL 'IEMIT 4>
		    <RETURN WHERE9>
		    <DEAD WHERE9>
PHRASE168
		    <VEQUAL? REC?22 0 + PHRASE181>
		    <DEAD REC?22>
		    <SET ON-STACK17 TEMP33>
		    <EMPL? ON-STACK17 + COMPERR>
		    <LOOP (ON-STACK17 VALUE)>
TAG183
		    <RESTL ON-STACK17 1 = TEMP79 (TYPE LIST)>
		    <EMPL? TEMP79 + TAG184>
		    <SET ON-STACK17 TEMP79>
		    <DEAD TEMP79>
		    <JUMP + TAG183>
TAG184
		    <NTHL ON-STACK17 1 = ON-STACK17>
		    <TYPE? ON-STACK17 <TYPE-CODE LIST> - PHRASE181>
		    <EMPL? ON-STACK17 + PHRASE181>
		    <RESTL ON-STACK17 1 = COUNTMP18 (TYPE LIST)>
		    <EMPL? COUNTMP18 + PHRASE181>
		    <RESTL COUNTMP18 1 = COUNTMP18 (TYPE LIST)>
		    <EMPL? COUNTMP18 - PHRASE181>
		    <DEAD COUNTMP18>
		    <NTHL ON-STACK17 1 = COUNTMP18 (TYPE ATOM)>
		    <NTHR COUNTMP18 3 = COUNTMP18 (RECORD-TYPE ATOM)>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? COUNTMP18 "RECORD-TYPE" - PHRASE181>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP79 "RECORD-TYPE" (TYPE STRING)>
		    <LENUS COUNTMP18 = TEMP23 (TYPE FIX)>
		    <VEQUAL? TEMP23 11 - PHRASE181>
		    <LOOP (COUNTMP18 VALUE LENGTH) (TEMP79 VALUE LENGTH) (TEMP23 VALUE)>
TAG186
		    <NTHUS COUNTMP18 1 = TEMP85>
		    <NTHUS TEMP79 1 = SEGTMP19>
		    <VEQUAL? TEMP85 SEGTMP19 - PHRASE181>
		    <DEAD TEMP85 SEGTMP19>
		    <RESTUS COUNTMP18 1 = COUNTMP18 (TYPE STRING)>
		    <RESTUS TEMP79 1 = TEMP79 (TYPE STRING)>
		    <SUB TEMP23 1 = TEMP23 (TYPE FIX)>
		    <GRTR? TEMP23 0 + TAG186 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <EMPL? TEMP33 + PHRASE188>
		    <RESTL TEMP33 1 = TEMP79 (TYPE LIST)>
		    <EMPL? TEMP79 - PHRASE188>
		    <DEAD TEMP79>
		    <SET TEMP33 () (TYPE LIST)>
		    <JUMP + PHRASE189>
PHRASE188
		    <LENL TEMP33 = TEMP79 (TYPE FIX)>
		    <SUB TEMP79 2 = TEMP79 (TYPE FIX)>
		    <SET COUNTMP18 TEMP33>
		    <GRTR? TEMP79 0 - RESTL191 (TYPE FIX)>
		    <LOOP (COUNTMP18 VALUE) (TEMP79 VALUE)>
RESTL190
		    <INTGO>
		    <EMPL? COUNTMP18 + COMPERR>
		    <RESTL COUNTMP18 1 = COUNTMP18 (TYPE LIST)>
		    <SUB TEMP79 1 = TEMP79 (TYPE FIX)>
		    <GRTR? TEMP79 0 + RESTL190 (TYPE FIX)>
RESTL191
		    <EMPL? COUNTMP18 + COMPERR>
		    <PUTREST COUNTMP18 ()>
		    <DEAD COUNTMP18>
PHRASE189
		    <FRAME 'IEMIT>
		    <PUSH INS14>
		    <DEAD INS14>
		    <SET TEMP79 4 (TYPE FIX)>
		    <SET COUNTMP18 TEMP33>
		    <DEAD TEMP33>
		    <LOOP (COUNTMP18 VALUE) (TEMP79 VALUE)>
TAG193
		    <INTGO>
		    <EMPL? COUNTMP18 + TAG192>
		    <NTHL COUNTMP18 1 = STACK>
		    <RESTL COUNTMP18 1 = COUNTMP18 (TYPE LIST)>
		    <ADD TEMP79 1 = TEMP79 (TYPE FIX)>
		    <JUMP + TAG193>
TAG192
		    <PUSH '=>
		    <PUSH WHERE9>
		    <PUSH ON-STACK17>
		    <DEAD ON-STACK17>
		    <CALL 'IEMIT TEMP79>
		    <DEAD TEMP79>
		    <RETURN WHERE9>
		    <DEAD WHERE9>
PHRASE181
		    <TYPE? B11 <TYPE-CODE FALSE> + PHRASE195>
		    <FRAME 'IEMIT>
		    <PUSH INS14>
		    <DEAD INS14>
		    <SET COUNTMP18 5 (TYPE FIX)>
		    <SET TEMP79 TEMP33>
		    <DEAD TEMP33>
		    <LOOP (TEMP79 VALUE) (COUNTMP18 VALUE)>
TAG197
		    <INTGO>
		    <EMPL? TEMP79 + TAG196>
		    <NTHL TEMP79 1 = STACK>
		    <RESTL TEMP79 1 = TEMP79 (TYPE LIST)>
		    <ADD COUNTMP18 1 = COUNTMP18 (TYPE FIX)>
		    <JUMP + TAG197>
TAG196
		    <PUSH '=>
		    <PUSH WHERE9>
		    <TYPE? D12 <TYPE-CODE FALSE> + PHRASE200>
		    <DEAD D12>
		    <SET SEGTMP19 '+ (TYPE ATOM)>
		    <JUMP + PHRASE201>
PHRASE200
		    <SET SEGTMP19 '- (TYPE ATOM)>
PHRASE201
		    <PUSH SEGTMP19>
		    <DEAD SEGTMP19>
		    <PUSH B11>
		    <DEAD B11>
		    <CALL 'IEMIT COUNTMP18>
		    <DEAD COUNTMP18>
		    <RETURN WHERE9>
		    <DEAD WHERE9>
PHRASE195
		    <FRAME 'IEMIT>
		    <PUSH INS14>
		    <DEAD INS14>
		    <SET TEMP79 3 (TYPE FIX)>
		    <SET COUNTMP18 TEMP33>
		    <DEAD TEMP33>
		    <LOOP (COUNTMP18 VALUE) (TEMP79 VALUE)>
TAG204
		    <INTGO>
		    <EMPL? COUNTMP18 + TAG203>
		    <NTHL COUNTMP18 1 = STACK>
		    <RESTL COUNTMP18 1 = COUNTMP18 (TYPE LIST)>
		    <ADD TEMP79 1 = TEMP79 (TYPE FIX)>
		    <JUMP + TAG204>
TAG203
		    <PUSH '=>
		    <PUSH WHERE9>
		    <CALL 'IEMIT TEMP79>
		    <DEAD TEMP79>
		    <RETURN WHERE9>
		    <DEAD WHERE9>
		    <END CALL-GEN>
#WORD *17121462203*
<GFCN CHANNEL-OP-GEN ("VALUE" ANY NODE ANY) NOD4 WHERE5>
		    <TEMP CTY6 K7:LIST TEMP10 L8 TEMP17 N22 TEMP26>
		    <INTGO>
		    <NTHUV NOD4 9 = CTY6>
		    <NTHUV NOD4 5 = K7 (TYPE LIST)>
		    <SET L8 () (TYPE LIST)>
		    <SET TEMP17 () (TYPE LIST)>
		    <SET TEMP10 K7 (TYPE LIST)>
		    <DEAD K7>
		    <LOOP>
MAP12
		    <INTGO>
		    <EMPL? TEMP10 + MAPAP15>
		    <SET K7 TEMP10>
		    <NTHL K7 1 = N22 (TYPE NODE)>
		    <NTHUV N22 1 = TEMP26 (TYPE FIX)>
		    <VEQUAL? TEMP26 2 - PHRASE25 (TYPE FIX)>
		    <DEAD TEMP26>
		    <NTHUV N22 4 = TEMP26>
		    <DEAD N22>
		    <TYPE? TEMP26 <TYPE-CODE ATOM> - MAPAP37>
		    <FRAME 'FORM>
		    <PUSH 'QUOTE>
		    <PUSH TEMP26>
		    <DEAD TEMP26>
		    <CALL 'FORM 2 = TEMP26>
		    <JUMP + MAPAP37>
PHRASE25
		    <FRAME 'GEN>
		    <PUSH N22>
		    <DEAD N22>
		    <PUSH 'DONT-CARE>
		    <CALL 'GEN 2 = TEMP26>
		    <RESTL K7 1 = K7 (TYPE LIST)>
		    <LOOP>
MAP34
		    <INTGO>
		    <EMPL? K7 + MAPAP37>
		    <NTHL K7 1 = N22>
		    <FRAME 'INTERF-CHANGE>
		    <PUSH TEMP26>
		    <DEAD TEMP26>
		    <PUSH N22>
		    <DEAD N22>
		    <CALL 'INTERF-CHANGE 2 = TEMP26>
		    <RESTL K7 1 = K7 (TYPE LIST)>
		    <JUMP + MAP34>
MAPAP37
		    <CONS TEMP26 () = TEMP26 (TYPE LIST)>
		    <EMPL? L8 - TAG47>
		    <SET L8 TEMP26 (TYPE LIST)>
		    <JUMP + TAG48>
TAG47
		    <PUTREST TEMP17 TEMP26>
		    <DEAD TEMP17>
TAG48
		    <SET TEMP17 TEMP26 (TYPE LIST)>
		    <DEAD TEMP26>
		    <RESTL TEMP10 1 = TEMP10 (TYPE LIST)>
		    <JUMP + MAP12>
MAPAP15
		    <SET TEMP10 L8 (TYPE LIST)>
		    <LOOP>
MAP50
		    <INTGO>
		    <EMPL? TEMP10 + MAPAP53>
		    <NTHL TEMP10 1 = TEMP17>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP17>
		    <DEAD TEMP17>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <RESTL TEMP10 1 = TEMP10 (TYPE LIST)>
		    <JUMP + MAP50>
MAPAP53
		    <EQUAL? WHERE5 'FLUSHED + BOOL60>
		    <NTHUV NOD4 3 = TEMP10>
		    <EQUAL? TEMP10 'NO-RETURN - PHRASE59>
		    <DEAD TEMP10>
BOOL60
		    <FRAME 'IEMIT>
		    <PUSH '`CHANNEL-OP>
		    <FRAME 'FORM>
		    <PUSH 'QUOTE>
		    <PUSH CTY6>
		    <DEAD CTY6>
		    <CALL 'FORM 2 = STACK>
		    <RESTL L8 1 = K7 (TYPE LIST)>
		    <NTHL K7 1 = STACK>
		    <DEAD K7>
		    <NTHL L8 1 = STACK>
		    <SET TEMP10 4 (TYPE FIX)>
		    <RESTL L8 1 = K7 (TYPE LIST)>
		    <DEAD L8>
		    <RESTL K7 1 = K7 (TYPE LIST)>
		    <LOOP (K7 VALUE) (TEMP10 VALUE)>
TAG63
		    <INTGO>
		    <EMPL? K7 + TAG61>
		    <NTHL K7 1 = STACK>
		    <RESTL K7 1 = K7 (TYPE LIST)>
		    <ADD TEMP10 1 = TEMP10 (TYPE FIX)>
		    <JUMP + TAG63>
TAG61
		    <CALL 'IEMIT TEMP10>
		    <DEAD TEMP10>
		    <RETURN WHERE5>
		    <DEAD WHERE5>
PHRASE59
		    <EQUAL? WHERE5 'DONT-CARE - PHRASE67>
		    <FRAME 'GEN-TEMP>
		    <NTHUV NOD4 3 = STACK>
		    <DEAD NOD4>
		    <CALL 'GEN-TEMP 1 = WHERE5>
		    <JUMP + PHRASE69>
PHRASE67
		    <TYPE? WHERE5 <TYPE-CODE TEMP> - PHRASE69>
		    <FRAME 'USE-TEMP>
		    <PUSH WHERE5>
		    <NTHUV NOD4 3 = STACK>
		    <DEAD NOD4>
		    <CALL 'USE-TEMP 2>
PHRASE69
		    <FRAME 'IEMIT>
		    <PUSH '`CHANNEL-OP>
		    <FRAME 'FORM>
		    <PUSH 'QUOTE>
		    <PUSH CTY6>
		    <DEAD CTY6>
		    <CALL 'FORM 2 = STACK>
		    <RESTL L8 1 = K7 (TYPE LIST)>
		    <NTHL K7 1 = STACK>
		    <DEAD K7>
		    <NTHL L8 1 = STACK>
		    <SET TEMP10 6 (TYPE FIX)>
		    <RESTL L8 1 = K7 (TYPE LIST)>
		    <DEAD L8>
		    <RESTL K7 1 = K7 (TYPE LIST)>
		    <LOOP (K7 VALUE) (TEMP10 VALUE)>
TAG73
		    <INTGO>
		    <EMPL? K7 + TAG71>
		    <NTHL K7 1 = STACK>
		    <RESTL K7 1 = K7 (TYPE LIST)>
		    <ADD TEMP10 1 = TEMP10 (TYPE FIX)>
		    <JUMP + TAG73>
TAG71
		    <PUSH '=>
		    <PUSH WHERE5>
		    <CALL 'IEMIT TEMP10>
		    <DEAD TEMP10>
		    <RETURN WHERE5>
		    <DEAD WHERE5>
		    <END CHANNEL-OP-GEN>
#WORD *3140570026*
<GFCN SMSUBR-CALL ("VALUE" ANY ANY ANY ANY "OPTIONAL" ANY ANY) SUBRC7 NARGS8 WHERE9 STACK?10 SLNT11>
		    <OPT-DISPATCH 3 %<> OPT4 OPT5 OPT6>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <TEMP W12 TEMP24 TEMP72>
		    <INTGO>
		    <EQUAL? SUBRC7 'STRING - PHRASE14>
		    <TYPE? SLNT11 <TYPE-CODE FALSE> - PHRASE14>
		    <TYPE? STACK?10 <TYPE-CODE FALSE> + PHRASE14>
		    <TYPE? WHERE9 <TYPE-CODE TEMP> + PHRASE14>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'STRING>
		    <CALL 'GEN-TEMP 1 = W12>
		    <JUMP + PHRASE17>
PHRASE14
		    <SET W12 WHERE9>
PHRASE17
		    <EQUAL? SUBRC7 'VECTOR + BOOL20>
		    <EQUAL? SUBRC7 'UVECTOR + BOOL20>
		    <EQUAL? SUBRC7 'STRING + BOOL20>
		    <EQUAL? SUBRC7 'BYTES + BOOL20>
		    <EQUAL? SUBRC7 'TUPLE - PHRASE19>
BOOL20
		    <FRAME 'IEMIT>
		    <TYPE? STACK?10 <TYPE-CODE FALSE> + PHRASE23>
		    <SET TEMP24 '`SBLOCK (TYPE ATOM)>
		    <JUMP + PHRASE25>
PHRASE23
		    <SET TEMP24 '`UBLOCK (TYPE ATOM)>
PHRASE25
		    <PUSH TEMP24>
		    <DEAD TEMP24>
		    <FRAME 'FORM>
		    <PUSH '`TYPE-CODE>
		    <PUSH SUBRC7>
		    <CALL 'FORM 2 = STACK>
		    <PUSH NARGS8>
		    <PUSH '=>
		    <PUSH W12>
		    <CONS SUBRC7 () = TEMP24>
		    <CONS '`TYPE TEMP24 = STACK>
		    <DEAD TEMP24>
		    <CALL 'IEMIT 6>
		    <TYPE? STACK?10 <TYPE-CODE FALSE> + PHRASE85>
		    <DEAD STACK?10>
		    <TYPE? NARGS8 <TYPE-CODE TEMP> + BOOL31>
		    <TYPE? SLNT11 <TYPE-CODE FALSE> - PHRASE30>
		    <EQUAL? SUBRC7 'STRING - PHRASE30>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = NARGS8>
BOOL31
		    <EQUAL? SUBRC7 'VECTOR + BOOL36>
		    <EQUAL? SUBRC7 'TUPLE - PHRASE35>
BOOL36
		    <FRAME 'IEMIT>
		    <PUSH '`DIV>
		    <PUSH NARGS8>
		    <PUSH 2>
		    <PUSH '=>
		    <PUSH NARGS8>
		    <CALL 'IEMIT 5>
		    <JUMP + PHRASE41>
PHRASE35
		    <EQUAL? SUBRC7 'BYTES - PHRASE38>
		    <FRAME 'IEMIT>
		    <PUSH '`ADD>
		    <PUSH NARGS8>
		    <PUSH 3>
		    <PUSH '=.NARGS>
		    <CALL 'IEMIT 4>
		    <FRAME 'IEMIT>
		    <PUSH '`DIV>
		    <PUSH NARGS8>
		    <PUSH 4>
		    <PUSH '=>
		    <PUSH NARGS8>
		    <CALL 'IEMIT 5>
		    <JUMP + PHRASE41>
PHRASE38
		    <EQUAL? SUBRC7 'STRING - PHRASE41>
		    <DEAD SUBRC7>
		    <FRAME 'IEMIT>
		    <PUSH '`LENUS>
		    <PUSH W12>
		    <PUSH '=>
		    <PUSH NARGS8>
		    <CALL 'IEMIT 4>
		    <FRAME 'IEMIT>
		    <PUSH '`IFSYS>
		    <PUSH "TOPS20">
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`ADD>
		    <PUSH NARGS8>
		    <PUSH 4>
		    <PUSH '=>
		    <PUSH NARGS8>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`DIV>
		    <PUSH NARGS8>
		    <PUSH 5>
		    <PUSH '=>
		    <PUSH NARGS8>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`ENDIF>
		    <PUSH "TOPS20">
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`IFSYS>
		    <PUSH "UNIX">
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`ADD>
		    <PUSH NARGS8>
		    <PUSH 3>
		    <PUSH '=>
		    <PUSH NARGS8>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`DIV>
		    <PUSH NARGS8>
		    <PUSH 4>
		    <PUSH '=>
		    <PUSH NARGS8>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`ENDIF>
		    <PUSH "UNIX">
		    <CALL 'IEMIT 2>
PHRASE41
		    <FRAME 'FREE-TEMP>
		    <PUSH NARGS8>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <GEN-ASSIGNED? 'STKTMP - PHRASE53>
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <GEN-LVAL 'STKTMP = STACK>
		    <PUSH NARGS8>
		    <DEAD NARGS8>
		    <PUSH '=>
		    <GEN-LVAL 'STKTMP = STACK>
		    <CALL 'IEMIT 5>
		    <JUMP + PHRASE61>
PHRASE53
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <PUSH 0>
		    <PUSH NARGS8>
		    <DEAD NARGS8>
		    <PUSH '=>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = TEMP24>
		    <GEN-SET 'STKTMP TEMP24>
		    <PUSH TEMP24>
		    <DEAD TEMP24>
		    <CALL 'IEMIT 5>
PHRASE61
		    <GEN-LVAL 'STK = TEMP24>
		    <ADD TEMP24 2 = TEMP24 (TYPE FIX)>
		    <GEN-SET 'STK TEMP24>
		    <DEAD TEMP24>
		    <JUMP + PHRASE85>
PHRASE30
		    <EQUAL? SUBRC7 'STRING - PHRASE71>
		    <ADD SLNT11 4 = TEMP24 (TYPE FIX)>
		    <DIV TEMP24 5 = TEMP24 (TYPE FIX)>
		    <GEN-LVAL 'STK-CHARS7 = TEMP72>
		    <ADD TEMP24 TEMP72 = TEMP24 (TYPE FIX)>
		    <DEAD TEMP72>
		    <GEN-SET 'STK-CHARS7 TEMP24>
		    <DEAD TEMP24>
		    <ADD SLNT11 3 = TEMP24 (TYPE FIX)>
		    <DEAD SLNT11>
		    <DIV TEMP24 4 = TEMP24 (TYPE FIX)>
		    <GEN-LVAL 'STK-CHARS8 = TEMP72>
		    <ADD TEMP24 TEMP72 = TEMP24 (TYPE FIX)>
		    <DEAD TEMP72>
		    <GEN-SET 'STK-CHARS8 TEMP24>
		    <DEAD TEMP24>
		    <GEN-LVAL 'STK = TEMP24>
		    <ADD TEMP24 2 = TEMP24 (TYPE FIX)>
		    <GEN-SET 'STK TEMP24>
		    <DEAD TEMP24>
		    <JUMP + PHRASE85>
PHRASE71
		    <GEN-LVAL 'STK = TEMP24>
		    <EQUAL? SUBRC7 'UVECTOR - PHRASE89>
		    <SET TEMP72 NARGS8>
		    <DEAD NARGS8>
		    <JUMP + PHRASE92>
PHRASE89
		    <EQUAL? SUBRC7 'BYTES - PHRASE90>
		    <DEAD SUBRC7>
		    <ADD NARGS8 3 = TEMP72 (TYPE FIX)>
		    <DEAD NARGS8>
		    <DIV TEMP72 4 = TEMP72 (TYPE FIX)>
		    <JUMP + PHRASE92>
PHRASE90
		    <LSH NARGS8 1 = TEMP72 (TYPE FIX)>
		    <DEAD NARGS8>
PHRASE92
		    <ADD TEMP24 TEMP72 = TEMP24 (TYPE FIX)>
		    <DEAD TEMP72>
		    <ADD TEMP24 2 = TEMP24 (TYPE FIX)>
		    <GEN-SET 'STK TEMP24>
		    <DEAD TEMP24>
PHRASE85
		    <EQUAL? W12 WHERE9 - TAG97>
		    <RETURN %<>>
TAG97
		    <FRAME 'MOVE-ARG>
		    <PUSH W12>
		    <DEAD W12>
		    <PUSH WHERE9>
		    <DEAD WHERE9>
		    <CALL 'MOVE-ARG 2 = TEMP24>
		    <RETURN TEMP24>
		    <DEAD TEMP24>
PHRASE19
		    <EQUAL? SUBRC7 'LIST - PHRASE99>
		    <FRAME 'IEMIT>
		    <PUSH '`LIST>
		    <PUSH NARGS8>
		    <DEAD NARGS8>
		    <PUSH '=>
		    <PUSH WHERE9>
		    <DEAD WHERE9>
		    <PUSH (`TYPE LIST)>
		    <CALL 'IEMIT 5 = TEMP24>
		    <RETURN TEMP24>
		    <DEAD TEMP24>
PHRASE99
		    <FRAME 'MSUBR-CALL>
		    <PUSH SUBRC7>
		    <DEAD SUBRC7>
		    <PUSH NARGS8>
		    <DEAD NARGS8>
		    <PUSH WHERE9>
		    <DEAD WHERE9>
		    <CALL 'MSUBR-CALL 3 = TEMP24>
		    <RETURN TEMP24>
		    <DEAD TEMP24>
		    <END SMSUBR-CALL>
#WORD *14421647351*
<GFCN APPLY-GEN ("VALUE" ANY NODE ANY) NOD4 WHERE5>
		    <TEMP K6 TEMP3:LBIND SEGTMP8 TEMP14 TEMP25:FIX TEMP27 N28 TEMP52>
		    <INTGO>
		    <NTHUV NOD4 5 = K6 (TYPE LIST)>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <BBIND 'COUNTMP 'ANY 'FIX>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP14>
		    <BBIND 'SEGLABEL 'ANY 'FIX TEMP14>
		    <DEAD TEMP14>
		    <BBIND 'SEGCALLED 'ANY 'FIX %<>>
		    <FRAME 'START-FRAME>
		    <CALL 'START-FRAME 0>
		    <FRAME 'GEN>
		    <NTHL K6 1 = STACK (TYPE NODE)>
		    <CALL 'GEN 1 = TEMP14>
		    <SET TEMP25 0 (TYPE FIX)>
		    <RESTL K6 1 = TEMP27 (TYPE LIST)>
		    <LOOP>
MAP18
		    <INTGO>
		    <EMPL? TEMP27 + MAPAP21>
		    <NTHL TEMP27 1 = N28>
		    <NTHUV N28 1 = N28 (TYPE FIX)>
		    <VEQUAL? N28 3 - PHRASE30 (TYPE FIX)>
		    <DEAD N28>
		    <SET N28 0 (TYPE FIX)>
		    <JUMP + PHRASE32>
PHRASE30
		    <SET N28 1 (TYPE FIX)>
PHRASE32
		    <ADD TEMP25 N28 = TEMP25>
		    <DEAD N28>
		    <RESTL TEMP27 1 = TEMP27 (TYPE LIST)>
		    <JUMP + MAP18>
MAPAP21
		    <RESTL K6 1 = K6 (TYPE LIST)>
		    <LOOP>
MAP34
		    <INTGO>
		    <EMPL? K6 + MAPAP37>
		    <NTHL K6 1 = N28>
		    <NTHUV N28 1 = TEMP27 (TYPE FIX)>
		    <VEQUAL? TEMP27 3 - PHRASE44 (TYPE FIX)>
		    <DEAD TEMP27>
		    <TYPE? SEGTMP8 <TYPE-CODE UNBOUND> - PHRASE47>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = SEGTMP8>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = TEMP27>
		    <NTHR 'COUNTMP 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP52 1 TEMP27 (RECORD-TYPE LBIND)>
		    <DEAD TEMP52 TEMP27>
		    <FRAME 'SET-TEMP>
		    <NTHR 'COUNTMP 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <PUSH TEMP25>
		    <PUSH (`TYPE FIX)>
		    <CALL 'SET-TEMP 3>
PHRASE47
		    <FRAME 'GEN>
		    <NTHUV N28 5 = TEMP27 (TYPE LIST)>
		    <DEAD N28>
		    <NTHL TEMP27 1 = N28 (TYPE NODE)>
		    <DEAD TEMP27>
		    <PUSH N28>
		    <PUSH SEGTMP8>
		    <CALL 'GEN 2 = TEMP52>
		    <GVAL 'NO-DATUM = TEMP27>
		    <EQUAL? TEMP27 TEMP52 + PHRASE58>
		    <DEAD TEMP27 TEMP52>
		    <FRAME 'STRUCTYP-SEG>
		    <NTHUV N28 3 = STACK>
		    <CALL 'STRUCTYP-SEG 1 = TEMP27>
		    <EQUAL? TEMP27 'MULTI + PHRASE58>
		    <DEAD TEMP27>
		    <FRAME 'SEGMENT-STACK>
		    <PUSH SEGTMP8>
		    <NTHR 'COUNTMP 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <FRAME 'STRUCTYP>
		    <NTHUV N28 3 = STACK>
		    <CALL 'STRUCTYP 1 = STACK>
		    <FRAME 'ISTYPE?>
		    <NTHUV N28 3 = STACK>
		    <DEAD N28>
		    <CALL 'ISTYPE? 1 = STACK>
		    <NTHR 'SEGLABEL 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <CALL 'SEGMENT-STACK 5>
		    <JUMP + PHRASE68>
PHRASE58
		    <NTHR 'SEGCALLED 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = TEMP27 (RECORD-TYPE LBIND)>
		    <TYPE? TEMP27 <TYPE-CODE FALSE> + PHRASE68>
		    <DEAD TEMP27>
		    <FRAME 'LABEL-TAG>
		    <NTHR 'SEGLABEL 2 = TEMP27 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP27 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP27>
		    <CALL 'LABEL-TAG 1>
PHRASE68
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP27>
		    <NTHR 'SEGLABEL 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP52 1 TEMP27 (RECORD-TYPE LBIND)>
		    <DEAD TEMP52 TEMP27>
		    <JUMP + PHRASE77>
PHRASE44
		    <FRAME 'GEN>
		    <PUSH N28>
		    <DEAD N28>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'GEN 2>
PHRASE77
		    <RESTL K6 1 = K6 (TYPE LIST)>
		    <JUMP + MAP34>
MAPAP37
		    <NTHR 'COUNTMP 2 = K6 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR K6 1 = K6 (RECORD-TYPE LBIND)>
		    <TYPE? K6 <TYPE-CODE UNBOUND> + PHRASE80>
		    <DEAD K6>
		    <FRAME 'FREE-TEMP>
		    <NTHR 'COUNTMP 2 = K6 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR K6 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD K6>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <FRAME 'FREE-TEMP>
		    <PUSH SEGTMP8>
		    <DEAD SEGTMP8>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
PHRASE80
		    <EQUAL? WHERE5 'FLUSHED + BOOL87>
		    <NTHUV NOD4 3 = K6>
		    <EQUAL? K6 'NO-RETURN - PHRASE86>
		    <DEAD K6>
BOOL87
		    <FRAME 'IEMIT>
		    <PUSH '`ACALL>
		    <PUSH TEMP14>
		    <NTHR 'COUNTMP 2 = K6 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR K6 1 = K6 (RECORD-TYPE LBIND)>
		    <TYPE? K6 <TYPE-CODE UNBOUND> + PHRASE90>
		    <DEAD K6>
		    <NTHR 'COUNTMP 2 = K6 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR K6 1 = K6 (RECORD-TYPE LBIND)>
		    <JUMP + PHRASE93>
PHRASE90
		    <SET K6 TEMP25>
		    <DEAD TEMP25>
PHRASE93
		    <PUSH K6>
		    <DEAD K6>
		    <CALL 'IEMIT 3>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP14>
		    <DEAD TEMP14>
		    <CALL 'FREE-TEMP 1>
		    <JUMP + PHRASE95>
PHRASE86
		    <EQUAL? WHERE5 'DONT-CARE - PHRASE97>
		    <FRAME 'GEN-TEMP>
		    <NTHUV NOD4 3 = STACK>
		    <DEAD NOD4>
		    <CALL 'GEN-TEMP 1 = WHERE5>
		    <JUMP + PHRASE99>
PHRASE97
		    <TYPE? WHERE5 <TYPE-CODE TEMP> - PHRASE99>
		    <FRAME 'USE-TEMP>
		    <PUSH WHERE5>
		    <NTHUV NOD4 3 = STACK>
		    <DEAD NOD4>
		    <CALL 'USE-TEMP 2>
PHRASE99
		    <FRAME 'IEMIT>
		    <PUSH '`ACALL>
		    <PUSH TEMP14>
		    <NTHR 'COUNTMP 2 = K6 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR K6 1 = K6 (RECORD-TYPE LBIND)>
		    <TYPE? K6 <TYPE-CODE UNBOUND> + PHRASE103>
		    <DEAD K6>
		    <NTHR 'COUNTMP 2 = K6 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR K6 1 = K6 (RECORD-TYPE LBIND)>
		    <JUMP + PHRASE106>
PHRASE103
		    <SET K6 TEMP25>
		    <DEAD TEMP25>
PHRASE106
		    <PUSH K6>
		    <DEAD K6>
		    <PUSH '=>
		    <PUSH WHERE5>
		    <CALL 'IEMIT 5>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP14>
		    <DEAD TEMP14>
		    <CALL 'FREE-TEMP 1>
PHRASE95
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -27>
		    <RETURN WHERE5>
		    <DEAD WHERE5>
		    <END APPLY-GEN>
#WORD *27307232206*
<GFCN UNWIND-GEN ("VALUE" ANY NODE ANY) N4 W5>
		    <TEMP UNBRANCH6 NOUNWIND7 TEMP15 K1-8:NODE K2-9:NODE LBL12:TEMP>
		    <INTGO>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = UNBRANCH6>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = NOUNWIND7>
		    <NTHUV N4 5 = TEMP15 (TYPE LIST)>
		    <NTHL TEMP15 1 = K1-8 (TYPE NODE)>
		    <DEAD TEMP15>
		    <NTHUV N4 5 = TEMP15 (TYPE LIST)>
		    <DEAD N4>
		    <RESTL TEMP15 1 = TEMP15 (TYPE LIST)>
		    <NTHL TEMP15 1 = K2-9 (TYPE NODE)>
		    <DEAD TEMP15>
		    <GEN-SET 'SPECD 'T>
		    <FRAME 'IEMIT>
		    <PUSH '`LOCATION>
		    <PUSH '+>
		    <PUSH UNBRANCH6>
		    <PUSH '=>
		    <FRAME 'GEN-TEMP>
		    <CALL 'GEN-TEMP 0 = LBL12>
		    <PUSH LBL12>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`BBIND>
		    <FRAME 'FORM>
		    <PUSH 'QUOTE>
		    <PUSH 'UNWIND>
		    <CALL 'FORM 2 = STACK>
		    <PUSH LBL12>
		    <FRAME 'FORM>
		    <PUSH 'QUOTE>
		    <PUSH 'FIX>
		    <CALL 'FORM 2 = STACK>
		    <FRAME 'CURRENT-FRAME>
		    <CALL 'CURRENT-FRAME 0 = STACK>
		    <CALL 'IEMIT 5>
		    <GEN-LVAL 'STK = TEMP15>
		    <ADD TEMP15 9 = TEMP15 (TYPE FIX)>
		    <GEN-SET 'STK TEMP15>
		    <DEAD TEMP15>
		    <FRAME 'GEN>
		    <PUSH K1-8>
		    <DEAD K1-8>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'GEN 2 = TEMP15>
		    <FRAME 'SET-VALUE>
		    <PUSH 'UNWIND>
		    <PUSH 0>
		    <CALL 'SET-VALUE 2>
		    <FRAME 'FREE-TEMP>
		    <PUSH LBL12>
		    <DEAD LBL12>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'BRANCH-TAG>
		    <PUSH NOUNWIND7>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH UNBRANCH6>
		    <DEAD UNBRANCH6>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'GEN>
		    <PUSH K2-9>
		    <DEAD K2-9>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN 2>
		    <FRAME 'BRANCH-TAG>
		    <PUSH '`UNWCONT>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH NOUNWIND7>
		    <DEAD NOUNWIND7>
		    <CALL 'LABEL-TAG 1>
		    <RETURN TEMP15>
		    <DEAD TEMP15>
		    <END UNWIND-GEN>
#WORD *35460403210*
<GFCN INTERFERE? ("VALUE" <OR ATOM FALSE> TEMP NODE) TMP4 N5>
		    <TEMP TEMP9 TEMP8 TEMP28>
		    <INTGO>
		    <LENUV N5 = TEMP9 (TYPE FIX)>
		    <LESS? TEMP9 8 - TAG10 (TYPE FIX)>
		    <DEAD TEMP9>
		    <RETURN %<>>
TAG10
		    <NTHUV N5 8 = TEMP9>
		    <DEAD N5>
		    <SET TEMP8 TEMP9>
		    <TYPE? TEMP8 <TYPE-CODE FALSE> + MAPAP15>
		    <SET TEMP8 %<> (TYPE FALSE)>
		    <LOOP>
MAP12
		    <INTGO>
		    <EMPL? TEMP9 + MAPAP15>
		    <NTHL TEMP9 1 = TEMP8>
		    <TYPE? TEMP8 <TYPE-CODE NODE> + TAG26>
		    <SET TEMP8 %<> (TYPE FALSE)>
		    <JUMP + PHRASE24>
TAG26
		    <NTHUV TEMP8 1 = TEMP28 (TYPE FIX)>
		    <VEQUAL? TEMP28 11 + TAG29 (TYPE FIX)>
		    <DEAD TEMP28>
		    <SET TEMP8 %<> (TYPE FALSE)>
		    <JUMP + PHRASE24>
TAG29
		    <NTHUV TEMP8 4 = TEMP8 (TYPE SYMTAB)>
		    <NTHUV TEMP8 3 = TEMP28>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> + TAG30>
		    <DEAD TEMP28>
		    <SET TEMP8 %<> (TYPE FALSE)>
		    <JUMP + PHRASE24>
TAG30
		    <NTHUV TEMP8 4 = TEMP28 (TYPE FIX)>
		    <VEQUAL? TEMP28 -1 - TAG31 (TYPE FIX)>
		    <DEAD TEMP28>
		    <SET TEMP8 %<> (TYPE FALSE)>
		    <JUMP + PHRASE24>
TAG31
		    <NTHUV TEMP8 10 = TEMP28>
		    <DEAD TEMP8>
		    <EQUAL? TEMP28 TMP4 + TAG34>
		    <DEAD TEMP28>
		    <SET TEMP8 %<> (TYPE FALSE)>
		    <JUMP + PHRASE24>
TAG34
		    <RETURN 'T>
PHRASE24
		    <RESTL TEMP9 1 = TEMP9 (TYPE LIST)>
		    <JUMP + MAP12>
MAPAP15
		    <RETURN TEMP8>
		    <DEAD TEMP8>
		    <END INTERFERE?>
#WORD *14205407060*
<GFCN INTERF-CHANGE ("VALUE" ANY ANY NODE) TMP4 N5>
		    <TEMP TEMP10>
		    <INTGO>
		    <TYPE? TMP4 <TYPE-CODE TEMP> - PHRASE7>
		    <FRAME 'INTERFERE?>
		    <PUSH TMP4>
		    <PUSH N5>
		    <DEAD N5>
		    <CALL 'INTERFERE? 2 = TEMP10>
		    <TYPE? TEMP10 <TYPE-CODE FALSE> + PHRASE7>
		    <DEAD TEMP10>
		    <FRAME 'MOVE-ARG>
		    <PUSH TMP4>
		    <DEAD TMP4>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = STACK>
		    <CALL 'MOVE-ARG 2 = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
PHRASE7
		    <RETURN TMP4>
		    <DEAD TMP4>
		    <END INTERF-CHANGE>
#WORD *22271431000*
<GFCN ADECL-GEN ("VALUE" ANY ANY ANY) NOD4 WHERE5>
		    <TEMP TEMP7>
		    <INTGO>
		    <NTHUV NOD4 5 = TEMP7 (TYPE LIST)>
		    <DEAD NOD4>
		    <NTHL TEMP7 1 = TEMP7 (TYPE NODE)>
		    <FRAME 'GEN>
		    <PUSH TEMP7>
		    <DEAD TEMP7>
		    <PUSH WHERE5>
		    <DEAD WHERE5>
		    <CALL 'GEN 2 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END ADECL-GEN>
#WORD *23517101420*
<GFCN STACK-GEN ("VALUE" ANY ANY ANY) N4 W5>
		    <TEMP TEMP7>
		    <INTGO>
		    <FRAME 'GEN>
		    <NTHUV N4 5 = TEMP7 (TYPE LIST)>
		    <DEAD N4>
		    <NTHL TEMP7 1 = STACK (TYPE NODE)>
		    <DEAD TEMP7>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'GEN 2 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END STACK-GEN>
"ILIST, IVECTOR, IUVECTOR AND ISTRING."

#WORD *20251716512*
<GFCN ISTRUC-GEN ("VALUE" ANY NODE ANY) N4 W5>
		    <TEMP NAM6 K7 NT8 LEN9 TY11 (CALL-EV22 %<>) (GEN-EACH-TIME23 %<>) X24 TEMP41 REST-INS27 PUT-INS26 EMP-INS25:ATOM EL-TMP14 EL10:NODE EV-TMP15 STR2-20:TEMP>
		    <INTGO>
		    <NTHUV N4 4 = NAM6>
		    <NTHUV N4 5 = K7 (TYPE LIST)>
		    <NTHL K7 1 = LEN9 (TYPE NODE)>
		    <NTHUV N4 3 = TY11>
		    <FRAME 'ISTYPE?>
		    <PUSH TY11>
		    <DEAD TY11>
		    <CALL 'ISTYPE? 1 = TY11>
		    <NTHUV N4 2 = X24>
		    <TYPE? X24 <TYPE-CODE NODE> + TAG38>
		    <SET X24 %<> (TYPE FALSE)>
		    <JUMP + TAG48>
TAG38
		    <NTHUV X24 1 = TEMP41 (TYPE FIX)>
		    <VEQUAL? TEMP41 98 - TAG42 (TYPE FIX)>
		    <DEAD TEMP41>
		    <SET X24 'T (TYPE ATOM)>
		    <JUMP + TAG48>
TAG42
		    <NTHUV X24 1 = TEMP41 (TYPE FIX)>
		    <VEQUAL? TEMP41 37 + TAG44 (TYPE FIX)>
		    <DEAD TEMP41>
		    <SET X24 %<> (TYPE FALSE)>
		    <JUMP + TAG48>
TAG44
		    <NTHUV X24 2 = X24>
		    <TYPE? X24 <TYPE-CODE NODE> + TAG45>
		    <SET X24 %<> (TYPE FALSE)>
		    <JUMP + TAG48>
TAG45
		    <NTHUV X24 1 = TEMP41 (TYPE FIX)>
		    <DEAD X24>
		    <VEQUAL? TEMP41 98 - TAG47 (TYPE FIX)>
		    <DEAD TEMP41>
		    <SET X24 'T (TYPE ATOM)>
		    <JUMP + TAG48>
TAG47
		    <SET X24 %<> (TYPE FALSE)>
TAG48
		    <EQUAL? NAM6 'ITUPLE - PHRASE50>
		    <SET X24 'T (TYPE ATOM)>
PHRASE50
		    <EMPL? K7 + PHRASE52>
		    <RESTL K7 1 = TEMP41 (TYPE LIST)>
		    <EMPL? TEMP41 - PHRASE52>
		    <DEAD TEMP41>
		    <EQUAL? NAM6 'ILIST + PHRASE52>
		    <FRAME 'IEMIT>
		    <TYPE? X24 <TYPE-CODE FALSE> + PHRASE56>
		    <SET TEMP41 '`USBLOCK (TYPE ATOM)>
		    <JUMP + PHRASE57>
PHRASE56
		    <SET TEMP41 '`UUBLOCK (TYPE ATOM)>
PHRASE57
		    <PUSH TEMP41>
		    <DEAD TEMP41>
		    <FRAME 'FORM>
		    <PUSH '`TYPE-CODE>
		    <PUSH TY11>
		    <CALL 'FORM 2 = STACK>
		    <FRAME 'GEN>
		    <PUSH LEN9>
		    <DEAD LEN9>
		    <PUSH 'DONT-CARE>
		    <CALL 'GEN 2 = K7>
		    <PUSH K7>
		    <PUSH '=>
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE61>
		    <FRAME 'USE-TEMP>
		    <PUSH W5>
		    <PUSH TY11>
		    <CALL 'USE-TEMP 2>
		    <SET TEMP41 W5>
		    <JUMP + PHRASE67>
PHRASE61
		    <EQUAL? W5 'DONT-CARE - PHRASE63>
		    <FRAME 'GEN-TEMP>
		    <SET NT8 TY11>
		    <TYPE? NT8 <TYPE-CODE FALSE> - COND65>
		    <SET NT8 'ANY (TYPE ATOM)>
COND65
		    <PUSH NT8>
		    <DEAD NT8>
		    <CALL 'GEN-TEMP 1 = W5>
		    <SET TEMP41 W5>
		    <JUMP + PHRASE67>
PHRASE63
		    <SET TEMP41 W5>
PHRASE67
		    <PUSH TEMP41>
		    <DEAD TEMP41>
		    <CONS TY11 () = TEMP41>
		    <DEAD TY11>
		    <CONS '`TYPE TEMP41 = STACK>
		    <DEAD TEMP41>
		    <CALL 'IEMIT 6>
		    <TYPE? X24 <TYPE-CODE FALSE> - PHRASE71>
		    <FRAME 'FREE-TEMP>
		    <PUSH K7>
		    <CALL 'FREE-TEMP 1>
		    <JUMP + PHRASE71>
PHRASE52
		    <EQUAL? NAM6 'IVECTOR + BOOL74>
		    <EQUAL? NAM6 'ITUPLE - PHRASE73>
BOOL74
		    <SET REST-INS27 '`RESTUV (TYPE ATOM)>
		    <SET PUT-INS26 '`PUTUV (TYPE ATOM)>
		    <SET EMP-INS25 '`EMPUV? (TYPE ATOM)>
		    <JUMP + PHRASE78>
PHRASE73
		    <EQUAL? NAM6 'IUVECTOR - PHRASE75>
		    <SET REST-INS27 '`RESTUU (TYPE ATOM)>
		    <SET PUT-INS26 '`PUTUU (TYPE ATOM)>
		    <SET EMP-INS25 '`EMPUU? (TYPE ATOM)>
		    <JUMP + PHRASE78>
PHRASE75
		    <EQUAL? NAM6 'ISTRING - PHRASE76>
		    <SET REST-INS27 '`RESTUS (TYPE ATOM)>
		    <SET PUT-INS26 '`PUTUS (TYPE ATOM)>
		    <SET EMP-INS25 '`EMPUS? (TYPE ATOM)>
		    <JUMP + PHRASE78>
PHRASE76
		    <EQUAL? NAM6 'IBYTES - PHRASE77>
		    <SET REST-INS27 '`RESTUB (TYPE ATOM)>
		    <SET PUT-INS26 '`PUTUB (TYPE ATOM)>
		    <SET EMP-INS25 '`EMPUB? (TYPE ATOM)>
		    <JUMP + PHRASE78>
PHRASE77
		    <SET REST-INS27 '`RESTL (TYPE ATOM)>
		    <SET PUT-INS26 '`PUTL (TYPE ATOM)>
		    <SET EMP-INS25 '`EMPL? (TYPE ATOM)>
PHRASE78
		    <RESTL K7 1 = TEMP41 (TYPE LIST)>
		    <EMPL? TEMP41 - PHRASE80 (TYPE LIST)>
		    <DEAD TEMP41>
		    <SET EL-TMP14 0 (TYPE FIX)>
		    <JUMP + PHRASE91>
PHRASE80
		    <NTHUV N4 1 = NT8 (TYPE FIX)>
		    <DEAD N4>
		    <VEQUAL? NT8 45 - BOOL85 (TYPE FIX)>
		    <RESTL K7 1 = TEMP41 (TYPE LIST)>
		    <NTHL TEMP41 1 = EL10 (TYPE NODE)>
		    <DEAD TEMP41>
		    <LENUV EL10 = TEMP41 (TYPE FIX)>
		    <LESS? TEMP41 8 + BOOL82 (TYPE FIX)>
		    <DEAD TEMP41>
		    <NTHUV EL10 8 = TEMP41>
		    <TYPE? TEMP41 <TYPE-CODE FALSE> - BOOL85>
		    <DEAD TEMP41>
		    <NTHUV EL10 1 = TEMP41 (TYPE FIX)>
		    <VEQUAL? TEMP41 15 + BOOL85 (TYPE FIX)>
		    <VEQUAL? TEMP41 37 + BOOL85 (TYPE FIX)>
		    <VEQUAL? TEMP41 44 + BOOL85 (TYPE FIX)>
		    <VEQUAL? TEMP41 45 - BOOL82 (TYPE FIX)>
		    <DEAD TEMP41>
BOOL85
		    <VEQUAL? NT8 44 - PHRASE81 (TYPE FIX)>
		    <FRAME 'TYPE-OK?>
		    <RESTL K7 1 = TEMP41 (TYPE LIST)>
		    <DEAD K7>
		    <NTHL TEMP41 1 = EL10 (TYPE NODE)>
		    <DEAD TEMP41>
		    <NTHUV EL10 3 = STACK>
		    <PUSH <OR FORM LIST VECTOR UVECTOR LVAL GVAL>>
		    <CALL 'TYPE-OK? 2 = TEMP41>
		    <TYPE? TEMP41 <TYPE-CODE FALSE> - PHRASE81>
		    <DEAD TEMP41>
BOOL82
		    <FRAME 'GEN>
		    <PUSH EL10>
		    <CALL 'GEN 1 = EL-TMP14>
		    <JUMP + PHRASE91>
PHRASE81
		    <VEQUAL? NT8 44 - PHRASE89 (TYPE FIX)>
		    <DEAD NT8>
		    <FRAME 'GEN>
		    <PUSH EL10>
		    <CALL 'GEN 1 = EV-TMP15>
		    <SET CALL-EV22 'T (TYPE ATOM)>
		    <JUMP + PHRASE91>
PHRASE89
		    <SET GEN-EACH-TIME23 'T (TYPE ATOM)>
PHRASE91
		    <FRAME 'GEN>
		    <PUSH LEN9>
		    <DEAD LEN9>
		    <CALL 'GEN 1 = K7>
		    <EQUAL? NAM6 'ILIST - PHRASE94>
		    <FRAME 'IEMIT>
		    <PUSH '`SET>
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE97>
		    <FRAME 'USE-TEMP>
		    <SET LEN9 W5>
		    <PUSH LEN9>
		    <PUSH TY11>
		    <DEAD TY11>
		    <CALL 'USE-TEMP 2 = TEMP41>
		    <JUMP + PHRASE99>
PHRASE97
		    <FRAME 'GEN-TEMP>
		    <CALL 'GEN-TEMP 0 = LEN9>
		    <SET TEMP41 LEN9>
PHRASE99
		    <PUSH TEMP41>
		    <DEAD TEMP41>
		    <PUSH ()>
		    <CALL 'IEMIT 3>
		    <TYPE? K7 <TYPE-CODE FIX> + BOOL103>
		    <NTHUV K7 2 = TEMP41 (TYPE FIX)>
		    <GRTR? TEMP41 1 - PHRASE102 (TYPE FIX)>
		    <DEAD TEMP41>
BOOL103
		    <FRAME 'IEMIT>
		    <PUSH '`SET>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = STR2-20>
		    <PUSH STR2-20>
		    <PUSH K7>
		    <DEAD K7>
		    <CALL 'IEMIT 3>
		    <SET K7 STR2-20>
		    <DEAD STR2-20>
PHRASE102
		    <FRAME 'IEMIT>
		    <PUSH '`SET>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'LIST>
		    <CALL 'GEN-TEMP 1 = STR2-20>
		    <PUSH STR2-20>
		    <PUSH ()>
		    <CALL 'IEMIT 3>
		    <JUMP + PHRASE110>
PHRASE94
		    <FRAME 'IEMIT>
		    <TYPE? X24 <TYPE-CODE FALSE> + PHRASE113>
		    <SET TEMP41 '`USBLOCK (TYPE ATOM)>
		    <JUMP + PHRASE114>
PHRASE113
		    <SET TEMP41 '`UUBLOCK (TYPE ATOM)>
PHRASE114
		    <PUSH TEMP41>
		    <DEAD TEMP41>
		    <FRAME 'FORM>
		    <PUSH '`TYPE-CODE>
		    <PUSH TY11>
		    <CALL 'FORM 2 = STACK>
		    <PUSH K7>
		    <PUSH '=>
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE117>
		    <FRAME 'USE-TEMP>
		    <SET LEN9 W5>
		    <PUSH LEN9>
		    <PUSH TY11>
		    <DEAD TY11>
		    <CALL 'USE-TEMP 2 = TEMP41>
		    <JUMP + PHRASE119>
PHRASE117
		    <FRAME 'GEN-TEMP>
		    <CALL 'GEN-TEMP 0 = LEN9>
		    <SET TEMP41 LEN9>
PHRASE119
		    <PUSH TEMP41>
		    <DEAD TEMP41>
		    <CALL 'IEMIT 5>
		    <TYPE? X24 <TYPE-CODE FALSE> - PHRASE122>
		    <FRAME 'FREE-TEMP>
		    <PUSH K7>
		    <CALL 'FREE-TEMP 1>
PHRASE122
		    <FRAME 'IEMIT>
		    <PUSH '`SET>
		    <FRAME 'GEN-TEMP>
		    <CALL 'GEN-TEMP 0 = STR2-20>
		    <PUSH STR2-20>
		    <PUSH LEN9>
		    <CALL 'IEMIT 3>
PHRASE110
		    <FRAME 'IEMIT>
		    <PUSH '`LOOP>
		    <CONS 'LENGTH () = TEMP41>
		    <CONS 'VALUE TEMP41 = TEMP41>
		    <NTHUV STR2-20 1 = NT8 (TYPE ATOM)>
		    <CONS NT8 TEMP41 = STACK>
		    <DEAD NT8 TEMP41>
		    <SET NT8 2 (TYPE FIX)>
		    <VEQUAL? CALL-EV22 0 + PHRASE128>
		    <CONS 'LENGTH () = TY11>
		    <CONS 'VALUE TY11 = TY11>
		    <CONS 'TYPE TY11 = TY11>
		    <NTHUV EV-TMP15 1 = TEMP41 (TYPE ATOM)>
		    <CONS TEMP41 TY11 = TY11>
		    <DEAD TEMP41>
		    <CONS TY11 () = TEMP41>
		    <DEAD TY11>
		    <JUMP + PHRASE133>
PHRASE128
		    <VEQUAL? GEN-EACH-TIME23 0 - PHRASE131>
		    <TYPE? EL-TMP14 <TYPE-CODE TEMP> - PHRASE131>
		    <CONS 'LENGTH () = TY11>
		    <CONS 'VALUE TY11 = TY11>
		    <CONS 'TYPE TY11 = TY11>
		    <NTHUV EL-TMP14 1 = TEMP41 (TYPE ATOM)>
		    <CONS TEMP41 TY11 = TY11>
		    <DEAD TEMP41>
		    <CONS TY11 () = TEMP41>
		    <DEAD TY11>
		    <JUMP + PHRASE133>
PHRASE131
		    <SET TEMP41 () (TYPE LIST)>
PHRASE133
		    <LOOP (TEMP41 VALUE) (NT8 VALUE)>
TAG134
		    <INTGO>
		    <EMPL? TEMP41 + TAG126>
		    <NTHL TEMP41 1 = STACK>
		    <RESTL TEMP41 1 = TEMP41 (TYPE LIST)>
		    <ADD NT8 1 = NT8 (TYPE FIX)>
		    <JUMP + TAG134>
TAG126
		    <EQUAL? NAM6 'ILIST - PHRASE137>
		    <CONS 'VALUE () = TY11>
		    <NTHUV K7 1 = TEMP41 (TYPE ATOM)>
		    <CONS TEMP41 TY11 = TY11>
		    <DEAD TEMP41>
		    <CONS TY11 () = TEMP41>
		    <DEAD TY11>
		    <JUMP + PHRASE138>
PHRASE137
		    <SET TEMP41 () (TYPE LIST)>
PHRASE138
		    <LOOP (TEMP41 VALUE) (NT8 VALUE)>
TAG139
		    <INTGO>
		    <EMPL? TEMP41 + TAG135>
		    <NTHL TEMP41 1 = STACK>
		    <RESTL TEMP41 1 = TEMP41 (TYPE LIST)>
		    <ADD NT8 1 = NT8 (TYPE FIX)>
		    <JUMP + TAG139>
TAG135
		    <CALL 'IEMIT NT8>
		    <DEAD NT8>
		    <FRAME 'LABEL-TAG>
		    <FRAME 'MAKE-TAG>
		    <PUSH "ISTR">
		    <CALL 'MAKE-TAG 1 = TY11>
		    <PUSH TY11>
		    <CALL 'LABEL-TAG 1>
		    <EQUAL? NAM6 'ILIST - PHRASE144>
		    <FRAME 'IEMIT>
		    <PUSH '`VEQUAL?>
		    <PUSH K7>
		    <PUSH 0>
		    <PUSH '+>
		    <FRAME 'MAKE-TAG>
		    <PUSH "ISTRE">
		    <CALL 'MAKE-TAG 1 = TEMP41>
		    <PUSH TEMP41>
		    <CALL 'IEMIT 5>
		    <JUMP + PHRASE147>
PHRASE144
		    <FRAME 'IEMIT>
		    <PUSH EMP-INS25>
		    <DEAD EMP-INS25>
		    <PUSH STR2-20>
		    <PUSH '+>
		    <FRAME 'MAKE-TAG>
		    <PUSH "ISTRE">
		    <CALL 'MAKE-TAG 1 = TEMP41>
		    <PUSH TEMP41>
		    <CALL 'IEMIT 4>
PHRASE147
		    <VEQUAL? CALL-EV22 0 + PHRASE151>
		    <FRAME 'START-FRAME>
		    <PUSH 'EVAL>
		    <CALL 'START-FRAME 1>
		    <FRAME 'PUSH>
		    <PUSH EV-TMP15>
		    <CALL 'PUSH 1>
		    <FRAME 'MSUBR-CALL>
		    <PUSH 'EVAL>
		    <PUSH 1>
		    <FRAME 'GEN-TEMP>
		    <CALL 'GEN-TEMP 0 = EL-TMP14>
		    <PUSH EL-TMP14>
		    <CALL 'MSUBR-CALL 3>
		    <JUMP + PHRASE156>
PHRASE151
		    <VEQUAL? GEN-EACH-TIME23 0 + PHRASE156>
		    <FRAME 'GEN>
		    <PUSH EL10>
		    <DEAD EL10>
		    <CALL 'GEN 1 = EL-TMP14>
PHRASE156
		    <EQUAL? NAM6 'ILIST - PHRASE159>
		    <FRAME 'IEMIT>
		    <PUSH '`CONS>
		    <PUSH EL-TMP14>
		    <PUSH ()>
		    <PUSH '=>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'LIST>
		    <CALL 'GEN-TEMP 1 = REST-INS27>
		    <PUSH REST-INS27>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`EMPL?>
		    <PUSH STR2-20>
		    <PUSH '+>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = NT8>
		    <PUSH NT8>
		    <CALL 'IEMIT 4>
		    <FRAME 'IEMIT>
		    <PUSH '`PUTREST>
		    <PUSH STR2-20>
		    <PUSH REST-INS27>
		    <CALL 'IEMIT 3>
		    <FRAME 'IEMIT>
		    <PUSH '`SET>
		    <PUSH STR2-20>
		    <PUSH REST-INS27>
		    <CALL 'IEMIT 3>
		    <FRAME 'BRANCH-TAG>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = PUT-INS26>
		    <PUSH PUT-INS26>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH NT8>
		    <DEAD NT8>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'IEMIT>
		    <PUSH '`SET>
		    <PUSH STR2-20>
		    <PUSH REST-INS27>
		    <CALL 'IEMIT 3>
		    <FRAME 'IEMIT>
		    <PUSH '`SET>
		    <PUSH LEN9>
		    <PUSH REST-INS27>
		    <DEAD REST-INS27>
		    <CALL 'IEMIT 3>
		    <FRAME 'LABEL-TAG>
		    <PUSH PUT-INS26>
		    <DEAD PUT-INS26>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <PUSH K7>
		    <PUSH 1>
		    <PUSH '=>
		    <PUSH K7>
		    <CALL 'IEMIT 5>
		    <JUMP + PHRASE173>
PHRASE159
		    <FRAME 'IEMIT>
		    <PUSH PUT-INS26>
		    <DEAD PUT-INS26>
		    <PUSH STR2-20>
		    <PUSH 1>
		    <PUSH EL-TMP14>
		    <CALL 'IEMIT 4>
		    <FRAME 'IEMIT>
		    <PUSH REST-INS27>
		    <DEAD REST-INS27>
		    <PUSH STR2-20>
		    <PUSH 1>
		    <PUSH '=>
		    <PUSH STR2-20>
		    <CALL 'IEMIT 5>
PHRASE173
		    <VEQUAL? CALL-EV22 0 - BOOL178>
		    <VEQUAL? GEN-EACH-TIME23 0 + PHRASE177>
BOOL178
		    <FRAME 'FREE-TEMP>
		    <PUSH EL-TMP14>
		    <CALL 'FREE-TEMP 1>
PHRASE177
		    <FRAME 'BRANCH-TAG>
		    <PUSH TY11>
		    <DEAD TY11>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH TEMP41>
		    <DEAD TEMP41>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'FREE-TEMP>
		    <PUSH STR2-20>
		    <DEAD STR2-20>
		    <CALL 'FREE-TEMP 1>
		    <VEQUAL? CALL-EV22 0 + PHRASE184>
		    <DEAD CALL-EV22>
		    <FRAME 'FREE-TEMP>
		    <PUSH EV-TMP15>
		    <DEAD EV-TMP15>
		    <CALL 'FREE-TEMP 1>
		    <JUMP + PHRASE186>
PHRASE184
		    <VEQUAL? GEN-EACH-TIME23 0 - PHRASE186>
		    <DEAD GEN-EACH-TIME23>
		    <FRAME 'FREE-TEMP>
		    <PUSH EL-TMP14>
		    <DEAD EL-TMP14>
		    <CALL 'FREE-TEMP 1>
PHRASE186
		    <FRAME 'MOVE-ARG>
		    <PUSH LEN9>
		    <DEAD LEN9>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MOVE-ARG 2 = W5>
PHRASE71
		    <TYPE? X24 <TYPE-CODE FALSE> + PHRASE251>
		    <DEAD X24>
		    <TYPE? K7 <TYPE-CODE TEMP> - PHRASE192>
		    <EQUAL? NAM6 'IUVECTOR + PHRASE194>
		    <NTHUV K7 2 = NT8 (TYPE FIX)>
		    <GRTR? NT8 1 - PHRASE194 (TYPE FIX)>
		    <DEAD NT8>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = TY11>
		    <JUMP + PHRASE199>
PHRASE194
		    <SET TY11 K7>
PHRASE199
		    <EQUAL? NAM6 'IVECTOR + BOOL202>
		    <EQUAL? NAM6 'ITUPLE - PHRASE201>
BOOL202
		    <FRAME 'IEMIT>
		    <PUSH '`LSH>
		    <PUSH K7>
		    <PUSH 1>
		    <PUSH '=>
		    <PUSH TY11>
		    <CALL 'IEMIT 5>
		    <JUMP + PHRASE207>
PHRASE201
		    <EQUAL? NAM6 'IBYTES - PHRASE204>
		    <FRAME 'IEMIT>
		    <PUSH '`ADD>
		    <PUSH K7>
		    <PUSH 3>
		    <PUSH '=>
		    <PUSH TY11>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`LSH>
		    <PUSH TY11>
		    <PUSH -2>
		    <PUSH '=>
		    <PUSH TY11>
		    <CALL 'IEMIT 5>
		    <JUMP + PHRASE207>
PHRASE204
		    <EQUAL? NAM6 'ISTRING - PHRASE207>
		    <DEAD NAM6>
		    <FRAME 'IEMIT>
		    <PUSH '`IFSYS>
		    <PUSH "TOPS20">
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`ADD>
		    <PUSH K7>
		    <PUSH 4>
		    <PUSH '=>
		    <PUSH TY11>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`DIV>
		    <PUSH TY11>
		    <PUSH 5>
		    <PUSH '=>
		    <PUSH TY11>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`ENDIF>
		    <PUSH "TOPS20">
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`IFSYS>
		    <PUSH "UNIX">
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`ADD>
		    <PUSH K7>
		    <PUSH 3>
		    <PUSH '=>
		    <PUSH TY11>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`LSH>
		    <PUSH TY11>
		    <PUSH -2>
		    <PUSH '=>
		    <PUSH TY11>
		    <CALL 'IEMIT 5>
		    <FRAME 'IEMIT>
		    <PUSH '`ENDIF>
		    <PUSH "UNIX">
		    <CALL 'IEMIT 2>
PHRASE207
		    <FRAME 'FREE-TEMP>
		    <PUSH K7>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <GEN-ASSIGNED? 'STKTMP - PHRASE218>
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <GEN-LVAL 'STKTMP = STACK>
		    <PUSH TY11>
		    <PUSH '=>
		    <GEN-LVAL 'STKTMP = STACK>
		    <CALL 'IEMIT 5>
		    <JUMP + PHRASE224>
PHRASE218
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <PUSH 0>
		    <PUSH TY11>
		    <PUSH '=>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = CALL-EV22>
		    <GEN-SET 'STKTMP CALL-EV22>
		    <PUSH CALL-EV22>
		    <DEAD CALL-EV22>
		    <CALL 'IEMIT 5>
PHRASE224
		    <VEQUAL? K7 TY11 + PHRASE231>
		    <DEAD K7>
		    <FRAME 'FREE-TEMP>
		    <PUSH TY11>
		    <DEAD TY11>
		    <CALL 'FREE-TEMP 1>
PHRASE231
		    <GEN-LVAL 'STK = CALL-EV22>
		    <ADD CALL-EV22 2 = CALL-EV22 (TYPE FIX)>
		    <GEN-SET 'STK CALL-EV22>
		    <DEAD CALL-EV22>
		    <RETURN W5>
		    <DEAD W5>
PHRASE192
		    <EQUAL? NAM6 'ISTRING - PHRASE237>
		    <ADD K7 4 = CALL-EV22 (TYPE FIX)>
		    <DIV CALL-EV22 5 = CALL-EV22 (TYPE FIX)>
		    <GEN-LVAL 'STK-CHARS7 = NAM6>
		    <ADD CALL-EV22 NAM6 = CALL-EV22 (TYPE FIX)>
		    <DEAD NAM6>
		    <GEN-SET 'STK-CHARS7 CALL-EV22>
		    <DEAD CALL-EV22>
		    <ADD K7 3 = CALL-EV22 (TYPE FIX)>
		    <DEAD K7>
		    <DIV CALL-EV22 4 = CALL-EV22 (TYPE FIX)>
		    <GEN-LVAL 'STK-CHARS8 = NAM6>
		    <ADD CALL-EV22 NAM6 = CALL-EV22 (TYPE FIX)>
		    <DEAD NAM6>
		    <GEN-SET 'STK-CHARS8 CALL-EV22>
		    <DEAD CALL-EV22>
		    <GEN-LVAL 'STK = CALL-EV22>
		    <ADD CALL-EV22 2 = CALL-EV22 (TYPE FIX)>
		    <GEN-SET 'STK CALL-EV22>
		    <DEAD CALL-EV22>
		    <RETURN W5>
		    <DEAD W5>
PHRASE237
		    <GEN-LVAL 'STK = CALL-EV22>
		    <EQUAL? NAM6 'IUVECTOR - PHRASE255>
		    <SET NAM6 K7>
		    <DEAD K7>
		    <JUMP + PHRASE258>
PHRASE255
		    <EQUAL? NAM6 'IBYTES - PHRASE256>
		    <DEAD NAM6>
		    <ADD K7 3 = NT8 (TYPE FIX)>
		    <DEAD K7>
		    <DIV NT8 4 = NAM6 (TYPE FIX)>
		    <DEAD NT8>
		    <JUMP + PHRASE258>
PHRASE256
		    <LSH K7 1 = NAM6 (TYPE FIX)>
		    <DEAD K7>
PHRASE258
		    <ADD CALL-EV22 NAM6 = CALL-EV22 (TYPE FIX)>
		    <DEAD NAM6>
		    <ADD CALL-EV22 2 = CALL-EV22 (TYPE FIX)>
		    <GEN-SET 'STK CALL-EV22>
		    <DEAD CALL-EV22>
PHRASE251
		    <RETURN W5>
		    <DEAD W5>
		    <END ISTRUC-GEN>
#WORD *16572230661*
<GFCN MULTI-SET-GEN ("VALUE" ANY NODE ANY) N4 W5>
		    <TEMP K6 (SEG?7 %<>) (SIDE-E8 %<>) (MX9 0) (MN10 0) VARS11 VLN13 TEMP19 TEMP20 TEMP22 LV17 (I18:FIX 0) N32:NODE SEGTYP15>
		    <INTGO>
		    <NTHUV N4 5 = K6 (TYPE LIST)>
		    <NTHUV N4 4 = VARS11 (TYPE LIST)>
		    <DEAD N4>
		    <LENL VARS11 = VLN13 (TYPE FIX)>
		    <SET TEMP20 VLN13>
		    <SET TEMP22 VARS11>
		    <SUB TEMP20 1 = TEMP20 (TYPE FIX)>
		    <GRTR? TEMP20 0 - RESTL23 (TYPE FIX)>
		    <LOOP (TEMP22 VALUE) (TEMP20 VALUE)>
RESTL21
		    <INTGO>
		    <RESTL TEMP22 1 = TEMP22 (TYPE LIST)>
		    <SUB TEMP20 1 = TEMP20 (TYPE FIX)>
		    <GRTR? TEMP20 0 + RESTL21 (TYPE FIX)>
RESTL23
		    <NTHL TEMP22 1 = TEMP19 (TYPE LIST)>
		    <DEAD TEMP22>
		    <NTHL TEMP19 1 = LV17>
		    <DEAD TEMP19>
		    <RESTL K6 1 = K6 (TYPE LIST)>
		    <SET TEMP19 K6 (TYPE LIST)>
		    <LOOP>
MAP25
		    <INTGO>
		    <EMPL? TEMP19 + MAPAP28>
		    <NTHL TEMP19 1 = N32>
		    <NTHUV N32 1 = TEMP20 (TYPE FIX)>
		    <VEQUAL? TEMP20 68 + BOOL36 (TYPE FIX)>
		    <VEQUAL? TEMP20 3 - PHRASE35 (TYPE FIX)>
		    <DEAD TEMP20>
BOOL36
		    <SET SEG?7 'T (TYPE ATOM)>
		    <FRAME 'MAXL>
		    <NTHUV N32 5 = TEMP22 (TYPE LIST)>
		    <NTHL TEMP22 1 = TEMP22 (TYPE NODE)>
		    <NTHUV TEMP22 3 = TEMP20>
		    <DEAD TEMP22>
		    <PUSH TEMP20>
		    <CALL 'MAXL 1 = TEMP22>
		    <ADD TEMP22 MX9 = MX9 (TYPE FIX)>
		    <DEAD TEMP22>
		    <LESS? MX9 65535 - TAG40>
		    <SET MX9 65535 (TYPE FIX)>
TAG40
		    <FRAME 'MINL>
		    <PUSH TEMP20>
		    <DEAD TEMP20>
		    <CALL 'MINL 1 = TEMP22>
		    <ADD TEMP22 MN10 = MN10 (TYPE FIX)>
		    <DEAD TEMP22>
		    <JUMP + PHRASE42>
PHRASE35
		    <ADD I18 1 = I18 (TYPE FIX)>
		    <ADD MN10 1 = MN10 (TYPE FIX)>
		    <ADD MX9 1 = TEMP22 (TYPE FIX)>
		    <DEAD MX9>
		    <LESS? TEMP22 65535 - TAG43>
		    <SET TEMP22 65535 (TYPE FIX)>
TAG43
		    <SET MX9 TEMP22>
		    <DEAD TEMP22>
PHRASE42
		    <LENUV N32 = TEMP22 (TYPE FIX)>
		    <LESS? TEMP22 8 + PHRASE45 (TYPE FIX)>
		    <DEAD TEMP22>
		    <NTHUV N32 8 = TEMP22>
		    <DEAD N32>
		    <TYPE? TEMP22 <TYPE-CODE FALSE> + PHRASE45>
		    <DEAD TEMP22>
		    <SET SIDE-E8 'T (TYPE ATOM)>
PHRASE45
		    <RESTL TEMP19 1 = TEMP19 (TYPE LIST)>
		    <JUMP + MAP25>
MAPAP28
		    <VEQUAL? SEG?7 0 + PHRASE49>
		    <DEAD SEG?7>
		    <GETS 'BIND = TEMP19 (TYPE LBIND)>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = SEG?7>
		    <BBIND 'SEGLABEL 'ANY 'FIX SEG?7>
		    <DEAD SEG?7>
		    <BBIND 'COUNTMP 'ANY 'FIX>
		    <BBIND 'SEGCALLED 'ANY 'FIX %<>>
		    <SET SIDE-E8 #T$UNBOUND 0>
		    <SET SEG?7 K6 (TYPE LIST)>
		    <DEAD K6>
		    <LOOP>
MAP58
		    <INTGO>
		    <EMPL? SEG?7 + MAPAP61>
		    <NTHL SEG?7 1 = N32>
		    <NTHUV N32 1 = TEMP22 (TYPE FIX)>
		    <VEQUAL? TEMP22 68 + BOOL70 (TYPE FIX)>
		    <VEQUAL? TEMP22 3 - PHRASE69 (TYPE FIX)>
		    <DEAD TEMP22>
BOOL70
		    <TYPE? SIDE-E8 <TYPE-CODE UNBOUND> - PHRASE72>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = SIDE-E8>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = TEMP22>
		    <NTHR 'COUNTMP 2 = TEMP20 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP20 1 TEMP22 (RECORD-TYPE LBIND)>
		    <DEAD TEMP20 TEMP22>
		    <FRAME 'SET-TEMP>
		    <NTHR 'COUNTMP 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP22 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP22>
		    <PUSH I18>
		    <PUSH (`TYPE FIX)>
		    <CALL 'SET-TEMP 3>
PHRASE72
		    <FRAME 'GEN>
		    <NTHUV N32 5 = TEMP22 (TYPE LIST)>
		    <DEAD N32>
		    <NTHL TEMP22 1 = N32 (TYPE NODE)>
		    <DEAD TEMP22>
		    <PUSH N32>
		    <PUSH SIDE-E8>
		    <CALL 'GEN 2 = TEMP20>
		    <FRAME 'STRUCTYP-SEG>
		    <NTHUV N32 3 = STACK>
		    <CALL 'STRUCTYP-SEG 1 = SEGTYP15>
		    <GVAL 'NO-DATUM = TEMP22>
		    <EQUAL? TEMP22 TEMP20 + PHRASE85>
		    <DEAD TEMP22 TEMP20>
		    <EQUAL? SEGTYP15 'MULTI + PHRASE85>
		    <FRAME 'SEGMENT-STACK>
		    <PUSH SIDE-E8>
		    <NTHR 'COUNTMP 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP22 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP22>
		    <PUSH SEGTYP15>
		    <DEAD SEGTYP15>
		    <FRAME 'ISTYPE?>
		    <NTHUV N32 3 = STACK>
		    <DEAD N32>
		    <CALL 'ISTYPE? 1 = STACK>
		    <NTHR 'SEGLABEL 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP22 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP22>
		    <CALL 'SEGMENT-STACK 5>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP22>
		    <NTHR 'SEGLABEL 2 = TEMP20 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP20 1 TEMP22 (RECORD-TYPE LBIND)>
		    <DEAD TEMP20 TEMP22>
		    <JUMP + PHRASE105>
PHRASE85
		    <NTHR 'SEGCALLED 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP22 1 = TEMP22 (RECORD-TYPE LBIND)>
		    <TYPE? TEMP22 <TYPE-CODE FALSE> + PHRASE105>
		    <DEAD TEMP22>
		    <FRAME 'LABEL-TAG>
		    <NTHR 'SEGLABEL 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP22 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP22>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP22>
		    <NTHR 'SEGLABEL 2 = TEMP20 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP20 1 TEMP22 (RECORD-TYPE LBIND)>
		    <DEAD TEMP20 TEMP22>
		    <JUMP + PHRASE105>
PHRASE69
		    <FRAME 'GEN>
		    <PUSH N32>
		    <DEAD N32>
		    <GVAL 'POP-STACK = STACK>
		    <CALL 'GEN 2>
PHRASE105
		    <RESTL SEG?7 1 = SEG?7 (TYPE LIST)>
		    <JUMP + MAP58>
MAPAP61
		    <GEN-LVAL 'CAREFUL = SEG?7>
		    <TYPE? SEG?7 <TYPE-CODE FALSE> + PHRASE108>
		    <DEAD SEG?7>
		    <VEQUAL? MX9 MN10 + PHRASE108 (TYPE FIX)>
		    <DEAD MX9 MN10>
		    <FRAME 'IEMIT>
		    <PUSH '`VEQUAL?>
		    <NTHR 'COUNTMP 2 = SEG?7 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR SEG?7 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD SEG?7>
		    <PUSH VLN13>
		    <PUSH '->
		    <PUSH '`COMPERR>
		    <CALL 'IEMIT 5>
PHRASE108
		    <LOOP>
AGAIN119
		    <INTGO>
		    <SET SEG?7 VLN13>
		    <SET TEMP22 VARS11>
		    <SUB SEG?7 1 = SEG?7 (TYPE FIX)>
		    <GRTR? SEG?7 0 - RESTL124 (TYPE FIX)>
		    <LOOP (TEMP22 VALUE) (SEG?7 VALUE)>
RESTL123
		    <INTGO>
		    <RESTL TEMP22 1 = TEMP22 (TYPE LIST)>
		    <SUB SEG?7 1 = SEG?7 (TYPE FIX)>
		    <GRTR? SEG?7 0 + RESTL123 (TYPE FIX)>
RESTL124
		    <NTHL TEMP22 1 = K6 (TYPE LIST)>
		    <DEAD TEMP22>
		    <NTHL K6 1 = SIDE-E8>
		    <TYPE? SIDE-E8 <TYPE-CODE SYMTAB> - PHRASE121>
		    <NTHUV SIDE-E8 3 = TEMP22>
		    <TYPE? TEMP22 <TYPE-CODE FALSE> - PHRASE121>
		    <DEAD TEMP22>
		    <NTHUV SIDE-E8 4 = SEG?7 (TYPE FIX)>
		    <VEQUAL? SEG?7 -1 + PHRASE121 (TYPE FIX)>
		    <DEAD SEG?7>
		    <FRAME 'USE-TEMP>
		    <NTHUV SIDE-E8 10 = TEMP20>
		    <DEAD SIDE-E8>
		    <PUSH TEMP20>
		    <RESTL K6 1 = TEMP22 (TYPE LIST)>
		    <DEAD K6>
		    <NTHL TEMP22 1 = SEG?7>
		    <DEAD TEMP22>
		    <TYPE? SEG?7 <TYPE-CODE FALSE> - BOOL128>
		    <SET SEG?7 'T (TYPE ATOM)>
BOOL128
		    <PUSH SEG?7>
		    <DEAD SEG?7>
		    <CALL 'USE-TEMP 2>
		    <FRAME 'IEMIT>
		    <PUSH '`POP>
		    <PUSH '=>
		    <PUSH TEMP20>
		    <DEAD TEMP20>
		    <CALL 'IEMIT 3>
		    <JUMP + PHRASE130>
PHRASE121
		    <FRAME 'IEMIT>
		    <PUSH '`POP>
		    <PUSH '=>
		    <FRAME 'GEN-TEMP>
		    <RESTL K6 1 = TEMP22 (TYPE LIST)>
		    <DEAD K6>
		    <NTHL TEMP22 1 = SEG?7>
		    <DEAD TEMP22>
		    <TYPE? SEG?7 <TYPE-CODE FALSE> - BOOL133>
		    <SET SEG?7 'T (TYPE ATOM)>
BOOL133
		    <PUSH SEG?7>
		    <DEAD SEG?7>
		    <CALL 'GEN-TEMP 1 = TEMP20>
		    <PUSH TEMP20>
		    <CALL 'IEMIT 3>
		    <FRAME 'SET-VALUE>
		    <TYPE? SIDE-E8 <TYPE-CODE SYMTAB> - PHRASE136>
		    <NTHUV SIDE-E8 2 = SEG?7 (TYPE ATOM)>
		    <JUMP + PHRASE137>
PHRASE136
		    <SET SEG?7 SIDE-E8>
PHRASE137
		    <PUSH SEG?7>
		    <DEAD SEG?7>
		    <PUSH TEMP20>
		    <TYPE? SIDE-E8 <TYPE-CODE SYMTAB> - TAG138>
		    <NTHUV SIDE-E8 4 = SEG?7 (TYPE FIX)>
		    <DEAD SIDE-E8>
		    <VEQUAL? SEG?7 -1 + TAG138 (TYPE FIX)>
		    <DEAD SEG?7>
		    <SET SEG?7 %<> (TYPE FALSE)>
		    <JUMP + TAG139>
TAG138
		    <SET SEG?7 'T (TYPE ATOM)>
TAG139
		    <PUSH SEG?7>
		    <DEAD SEG?7>
		    <CALL 'SET-VALUE 3>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP20>
		    <DEAD TEMP20>
		    <CALL 'FREE-TEMP 1>
PHRASE130
		    <SUB VLN13 1 = VLN13 (TYPE FIX)>
		    <VEQUAL? VLN13 0 - AGAIN119 (TYPE FIX)>
		    <UNBIND TEMP19>
		    <DEAD TEMP19>
		    <ADJ -27>
		    <JUMP + MAPAP260>
PHRASE49
		    <VEQUAL? SIDE-E8 0 + PHRASE148>
		    <DEAD SIDE-E8>
		    <SET TEMP20 () (TYPE LIST)>
		    <SET TEMP22 () (TYPE LIST)>
		    <SET TEMP19 K6 (TYPE LIST)>
		    <DEAD K6>
		    <SET SEG?7 VARS11 (TYPE LIST)>
		    <LOOP>
MAP150
		    <INTGO>
		    <EMPL? TEMP19 + MAPAP153>
		    <EMPL? SEG?7 + MAPAP153>
		    <NTHL TEMP19 1 = N32>
		    <NTHL SEG?7 1 = K6>
		    <NTHUV N32 3 = SIDE-E8>
		    <NTHL K6 1 = SEGTYP15>
		    <TYPE? SEGTYP15 <TYPE-CODE SYMTAB> - PHRASE162>
		    <DEAD SEGTYP15>
		    <FRAME 'TYPE-AND>
		    <RESTL K6 1 = SEGTYP15 (TYPE LIST)>
		    <DEAD K6>
		    <NTHL SEGTYP15 1 = STACK>
		    <DEAD SEGTYP15>
		    <PUSH SIDE-E8>
		    <DEAD SIDE-E8>
		    <CALL 'TYPE-AND 2 = SIDE-E8>
PHRASE162
		    <FRAME 'ISTYPE?>
		    <PUSH SIDE-E8>
		    <DEAD SIDE-E8>
		    <CALL 'ISTYPE? 1 = SIDE-E8>
		    <TYPE? SIDE-E8 <TYPE-CODE FALSE> + BOOL166>
		    <FRAME 'TYPEPRIM>
		    <PUSH SIDE-E8>
		    <CALL 'TYPEPRIM 1 = SEGTYP15>
		    <EQUAL? SEGTYP15 'FIX + PHRASE170>
		    <EQUAL? SEGTYP15 'LIST + PHRASE170>
		    <DEAD SEGTYP15>
BOOL166
		    <SET SIDE-E8 'ANY (TYPE ATOM)>
PHRASE170
		    <FRAME 'GEN>
		    <PUSH N32>
		    <DEAD N32>
		    <FRAME 'GEN-TEMP>
		    <PUSH SIDE-E8>
		    <DEAD SIDE-E8>
		    <CALL 'GEN-TEMP 1 = STACK>
		    <CALL 'GEN 2 = SEGTYP15>
		    <CONS SEGTYP15 () = SEGTYP15 (TYPE LIST)>
		    <EMPL? TEMP20 - TAG173>
		    <SET TEMP20 SEGTYP15 (TYPE LIST)>
		    <JUMP + TAG174>
TAG173
		    <PUTREST TEMP22 SEGTYP15>
		    <DEAD TEMP22>
TAG174
		    <SET TEMP22 SEGTYP15 (TYPE LIST)>
		    <DEAD SEGTYP15>
		    <RESTL TEMP19 1 = TEMP19 (TYPE LIST)>
		    <RESTL SEG?7 1 = SEG?7 (TYPE LIST)>
		    <JUMP + MAP150>
MAPAP153
		    <SET SEG?7 VARS11 (TYPE LIST)>
		    <DEAD VARS11>
		    <SET TEMP19 TEMP20 (TYPE LIST)>
		    <DEAD TEMP20>
		    <LOOP>
MAP176
		    <INTGO>
		    <EMPL? SEG?7 + MAPAP260>
		    <EMPL? TEMP19 + MAPAP260>
		    <NTHL SEG?7 1 = K6>
		    <NTHL TEMP19 1 = SIDE-E8>
		    <NTHL K6 1 = TEMP22>
		    <DEAD K6>
		    <SET TEMP20 %<> (TYPE FALSE)>
		    <TYPE? TEMP22 <TYPE-CODE SYMTAB> - PHRASE189>
		    <NTHUV TEMP22 4 = SEGTYP15 (TYPE FIX)>
		    <VEQUAL? SEGTYP15 -1 + PHRASE189 (TYPE FIX)>
		    <DEAD SEGTYP15>
		    <SET TEMP20 'T (TYPE ATOM)>
		    <NTHUV TEMP22 3 = SEGTYP15>
		    <TYPE? SEGTYP15 <TYPE-CODE FALSE> - PHRASE189>
		    <DEAD SEGTYP15>
		    <FRAME 'IEMIT>
		    <PUSH '`SET>
		    <FRAME 'TEM-NAME-SYM>
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <CALL 'TEM-NAME-SYM 1 = STACK>
		    <PUSH SIDE-E8>
		    <CALL 'IEMIT 3>
		    <FRAME 'FREE-TEMP>
		    <PUSH SIDE-E8>
		    <DEAD SIDE-E8>
		    <CALL 'FREE-TEMP 1>
		    <JUMP + PHRASE197>
PHRASE189
		    <TYPE? TEMP22 <TYPE-CODE SYMTAB> - PHRASE199>
		    <NTHUV TEMP22 2 = TEMP22 (TYPE ATOM)>
PHRASE199
		    <FRAME 'SET-VALUE>
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <PUSH SIDE-E8>
		    <VEQUAL? TEMP20 0 - TAG201>
		    <DEAD TEMP20>
		    <SET SEGTYP15 'T (TYPE ATOM)>
		    <JUMP + TAG202>
TAG201
		    <SET SEGTYP15 %<> (TYPE FALSE)>
TAG202
		    <PUSH SEGTYP15>
		    <DEAD SEGTYP15>
		    <CALL 'SET-VALUE 3>
		    <FRAME 'FREE-TEMP>
		    <PUSH SIDE-E8>
		    <DEAD SIDE-E8>
		    <CALL 'FREE-TEMP 1>
PHRASE197
		    <RESTL SEG?7 1 = SEG?7 (TYPE LIST)>
		    <RESTL TEMP19 1 = TEMP19 (TYPE LIST)>
		    <JUMP + MAP176>
PHRASE148
		    <SET MX9 () (TYPE LIST)>
		    <LOOP>
AGAIN211
		    <INTGO>
		    <SET VLN13 () (TYPE LIST)>
		    <SET MN10 VLN13>
		    <SET SIDE-E8 %<> (TYPE FALSE)>
		    <SET SEG?7 VARS11 (TYPE LIST)>
		    <DEAD VARS11>
		    <SET TEMP19 K6 (TYPE LIST)>
		    <DEAD K6>
		    <LOOP>
MAP213
		    <INTGO>
		    <EMPL? SEG?7 + MAPAP216>
		    <EMPL? TEMP19 + MAPAP216>
		    <SET K6 SEG?7>
		    <SET VARS11 TEMP19>
		    <NTHL K6 1 = TEMP22 (TYPE LIST)>
		    <DEAD K6>
		    <SET TEMP20 %<> (TYPE FALSE)>
		    <NTHL VARS11 1 = SEGTYP15 (TYPE NODE)>
		    <NTHL TEMP22 1 = K6>
		    <TYPE? K6 <TYPE-CODE TEMP> + BOOL230>
		    <FRAME 'REF?>
		    <PUSH K6>
		    <RESTL VARS11 1 = STACK (TYPE LIST)>
		    <DEAD VARS11>
		    <CALL 'REF? 2 = VARS11>
		    <TYPE? VARS11 <TYPE-CODE FALSE> - PHRASE229>
		    <DEAD VARS11>
		    <FRAME 'REF?>
		    <PUSH K6>
		    <PUSH MN10>
		    <CALL 'REF? 2 = VARS11>
		    <TYPE? VARS11 <TYPE-CODE FALSE> - PHRASE229>
		    <DEAD VARS11>
BOOL230
		    <SET SIDE-E8 'T (TYPE ATOM)>
		    <TYPE? K6 <TYPE-CODE SYMTAB> - BOOL238>
		    <NTHUV K6 4 = VARS11 (TYPE FIX)>
		    <VEQUAL? VARS11 -1 + BOOL238 (TYPE FIX)>
		    <DEAD VARS11>
		    <SET TEMP20 'T (TYPE ATOM)>
		    <NTHUV K6 3 = VARS11>
		    <TYPE? VARS11 <TYPE-CODE FALSE> - BOOL238>
		    <DEAD VARS11>
		    <NTHUV K6 10 = TEMP22>
		    <TYPE? TEMP22 <TYPE-CODE FALSE> - BOOL237>
BOOL238
		    <TYPE? K6 <TYPE-CODE TEMP> - PHRASE236>
		    <SET TEMP22 K6>
		    <DEAD K6>
BOOL237
		    <FRAME 'GEN>
		    <PUSH SEGTYP15>
		    <DEAD SEGTYP15>
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <CALL 'GEN 2>
		    <JUMP + PHRASE250>
PHRASE236
		    <TYPE? K6 <TYPE-CODE SYMTAB> - PHRASE245>
		    <NTHUV K6 2 = K6 (TYPE ATOM)>
PHRASE245
		    <FRAME 'SET-VALUE>
		    <PUSH K6>
		    <DEAD K6>
		    <FRAME 'GEN>
		    <PUSH SEGTYP15>
		    <DEAD SEGTYP15>
		    <PUSH 'DONT-CARE>
		    <CALL 'GEN 2 = STACK>
		    <VEQUAL? TEMP20 0 - TAG248>
		    <DEAD TEMP20>
		    <SET VARS11 'T (TYPE ATOM)>
		    <JUMP + TAG249>
TAG248
		    <SET VARS11 %<> (TYPE FALSE)>
TAG249
		    <PUSH VARS11>
		    <DEAD VARS11>
		    <CALL 'SET-VALUE 3>
		    <JUMP + PHRASE250>
PHRASE229
		    <CONS TEMP22 VLN13 = VLN13>
		    <DEAD TEMP22>
		    <CONS SEGTYP15 MN10 = MN10>
		    <DEAD SEGTYP15>
PHRASE250
		    <RESTL SEG?7 1 = SEG?7 (TYPE LIST)>
		    <RESTL TEMP19 1 = TEMP19 (TYPE LIST)>
		    <JUMP + MAP213>
MAPAP216
		    <VEQUAL? SIDE-E8 0 + PHRASE252>
		    <DEAD SIDE-E8>
		    <EMPL? VLN13 + PHRASE252 (TYPE LIST)>
		    <SET VARS11 VLN13>
		    <DEAD VLN13>
		    <SET K6 MN10>
		    <DEAD MN10>
		    <JUMP + AGAIN211>
PHRASE252
		    <EMPL? VLN13 + PHRASE254 (TYPE LIST)>
		    <NTHL VLN13 1 = TEMP19>
		    <CONS TEMP19 () = SEG?7>
		    <DEAD TEMP19>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = K6>
		    <CONS K6 () = TEMP19>
		    <PUTREST SEG?7 TEMP19>
		    <DEAD TEMP19>
		    <CONS SEG?7 () = SEG?7>
		    <PUTREST SEG?7 MX9>
		    <DEAD MX9>
		    <SET MX9 SEG?7>
		    <DEAD SEG?7>
		    <RESTL VLN13 1 = SEG?7 (TYPE LIST)>
		    <DEAD VLN13>
		    <CONS K6 () = TEMP19>
		    <DEAD K6>
		    <CONS TEMP19 SEG?7 = VARS11>
		    <DEAD TEMP19 SEG?7>
		    <SET K6 MN10>
		    <DEAD MN10>
		    <JUMP + AGAIN211>
PHRASE254
		    <SET SEG?7 MX9 (TYPE LIST)>
		    <DEAD MX9>
		    <LOOP>
MAP257
		    <INTGO>
		    <EMPL? SEG?7 + MAPAP260>
		    <NTHL SEG?7 1 = K6>
		    <NTHL K6 1 = VARS11>
		    <NTH1 VARS11 = SIDE-E8>
		    <DEAD VARS11>
		    <SET TEMP19 %<> (TYPE FALSE)>
		    <RESTL K6 1 = VARS11 (TYPE LIST)>
		    <DEAD K6>
		    <NTHL VARS11 1 = TEMP22 (TYPE TEMP)>
		    <DEAD VARS11>
		    <TYPE? SIDE-E8 <TYPE-CODE SYMTAB> - PHRASE268>
		    <NTHUV SIDE-E8 4 = VARS11 (TYPE FIX)>
		    <VEQUAL? VARS11 -1 + PHRASE268 (TYPE FIX)>
		    <DEAD VARS11>
		    <SET TEMP19 'T (TYPE ATOM)>
		    <NTHUV SIDE-E8 3 = VARS11>
		    <TYPE? VARS11 <TYPE-CODE FALSE> - PHRASE268>
		    <DEAD VARS11>
		    <FRAME 'IEMIT>
		    <PUSH '`SET>
		    <NTHUV SIDE-E8 10 = STACK>
		    <DEAD SIDE-E8>
		    <PUSH TEMP22>
		    <CALL 'IEMIT 3>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <CALL 'FREE-TEMP 1>
		    <JUMP + PHRASE274>
PHRASE268
		    <TYPE? SIDE-E8 <TYPE-CODE SYMTAB> - PHRASE276>
		    <NTHUV SIDE-E8 2 = SIDE-E8 (TYPE ATOM)>
PHRASE276
		    <FRAME 'SET-VALUE>
		    <PUSH SIDE-E8>
		    <DEAD SIDE-E8>
		    <PUSH TEMP22>
		    <VEQUAL? TEMP19 0 - TAG278>
		    <DEAD TEMP19>
		    <SET VARS11 'T (TYPE ATOM)>
		    <JUMP + TAG279>
TAG278
		    <SET VARS11 %<> (TYPE FALSE)>
TAG279
		    <PUSH VARS11>
		    <DEAD VARS11>
		    <CALL 'SET-VALUE 3>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <CALL 'FREE-TEMP 1>
PHRASE274
		    <RESTL SEG?7 1 = SEG?7 (TYPE LIST)>
		    <JUMP + MAP257>
MAPAP260
		    <EQUAL? W5 'FLUSHED + PHRASE282>
		    <SET SIDE-E8 %<> (TYPE FALSE)>
		    <TYPE? LV17 <TYPE-CODE SYMTAB> - PHRASE284>
		    <NTHUV LV17 4 = SEG?7 (TYPE FIX)>
		    <VEQUAL? SEG?7 -1 + PHRASE284 (TYPE FIX)>
		    <DEAD SEG?7>
		    <SET SIDE-E8 'T (TYPE ATOM)>
		    <NTHUV LV17 3 = SEG?7>
		    <TYPE? SEG?7 <TYPE-CODE FALSE> - PHRASE284>
		    <DEAD SEG?7>
		    <FRAME '+>
		    <FRAME 'NTH>
		    <PUSH LV17>
		    <PUSH %<OFFSET 2 TEMP>>
		    <CALL 'NTH 2 = STACK>
		    <PUSH 1>
		    <CALL '+ 2 = SEG?7>
		    <PUTUV LV17 2 SEG?7>
		    <DEAD SEG?7>
		    <FRAME 'MOVE-ARG>
		    <PUSH LV17>
		    <DEAD LV17>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MOVE-ARG 2 = SEG?7>
		    <RETURN SEG?7>
		    <DEAD SEG?7>
PHRASE284
		    <TYPE? LV17 <TYPE-CODE SYMTAB> - PHRASE293>
		    <NTHUV LV17 2 = LV17 (TYPE ATOM)>
PHRASE293
		    <EQUAL? W5 'DONT-CARE - PHRASE295>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W5>
PHRASE295
		    <FRAME 'GET-VALUE-X>
		    <PUSH LV17>
		    <DEAD LV17>
		    <PUSH W5>
		    <DEAD W5>
		    <VEQUAL? SIDE-E8 0 - TAG298>
		    <DEAD SIDE-E8>
		    <SET SEGTYP15 'T (TYPE ATOM)>
		    <JUMP + TAG299>
TAG298
		    <SET SEGTYP15 %<> (TYPE FALSE)>
TAG299
		    <PUSH SEGTYP15>
		    <DEAD SEGTYP15>
		    <CALL 'GET-VALUE-X 3 = SEG?7>
		    <RETURN SEG?7>
		    <DEAD SEG?7>
PHRASE282
		    <RETURN W5>
		    <DEAD W5>
		    <END MULTI-SET-GEN>
#WORD *24210361262*
<GFCN REF? ("VALUE" <OR ATOM FALSE> <OR ATOM SYMTAB> <LIST [REST NODE]>) SY4 L5>
		    <TEMP TEMP15 TEMP12:LIST N17:NODE TEMP45 TEMP49>
		    <INTGO>
		    <SET TEMP15 %<> (TYPE FALSE)>
		    <SET TEMP12 L5 (TYPE LIST)>
		    <DEAD L5>
		    <LOOP>
MAP7
		    <INTGO>
		    <EMPL? TEMP12 + MAPAP10>
		    <NTHL TEMP12 1 = N17>
		    <NTHUV N17 1 = TEMP15 (TYPE FIX)>
		    <LOOP>
AGAIN22
		    <INTGO>
		    <VEQUAL? TEMP15 10 + BOOL25 (TYPE FIX)>
		    <VEQUAL? TEMP15 43 + BOOL25 (TYPE FIX)>
		    <VEQUAL? TEMP15 11 - PHRASE24 (TYPE FIX)>
BOOL25
		    <NTHUV N17 4 = TEMP15>
		    <DEAD N17>
		    <EQUAL? TEMP15 SY4 + TAG28>
		    <DEAD TEMP15>
		    <SET TEMP15 %<> (TYPE FALSE)>
		    <JUMP + PHRASE58>
TAG28
		    <RETURN 'T>
PHRASE24
		    <VEQUAL? TEMP15 31 + BOOL31 (TYPE FIX)>
		    <VEQUAL? TEMP15 32 - PHRASE30 (TYPE FIX)>
BOOL31
		    <NTHUV N17 4 = TEMP15>
		    <EQUAL? TEMP15 SY4 + BOOL40>
		    <DEAD TEMP15>
		    <NTHUV N17 5 = TEMP15 (TYPE LIST)>
		    <DEAD N17>
		    <NTHL TEMP15 1 = N17 (TYPE NODE)>
		    <DEAD TEMP15>
		    <NTHUV N17 1 = TEMP15 (TYPE FIX)>
		    <VEQUAL? TEMP15 2 - PHRASE37 (TYPE FIX)>
		    <DEAD TEMP15>
		    <NTHUV N17 4 = TEMP15>
		    <DEAD N17>
		    <EQUAL? TEMP15 SY4 + BOOL40>
		    <DEAD TEMP15>
		    <SET TEMP15 %<> (TYPE FALSE)>
		    <JUMP + PHRASE58>
PHRASE37
		    <TYPE? SY4 <TYPE-CODE ATOM> + BOOL40>
		    <NTHUV SY4 4 = TEMP15 (TYPE FIX)>
		    <VEQUAL? TEMP15 -1 + BOOL40 (TYPE FIX)>
		    <DEAD TEMP15>
		    <NTHUV SY4 3 = TEMP15>
		    <TYPE? TEMP15 <TYPE-CODE FALSE> + PHRASE58>
BOOL40
		    <RETURN 'T>
PHRASE30
		    <LENUV N17 = TEMP45 (TYPE FIX)>
		    <GRTR? TEMP45 8 - PHRASE43 (TYPE FIX)>
		    <DEAD TEMP45>
		    <NTHUV N17 8 = TEMP45>
		    <CHTYPE TEMP45 <TYPE-CODE LIST> = TEMP45>
		    <EMPL? TEMP45 + PHRASE43>
		    <LOOP (TEMP45 VALUE)>
TAG47
		    <NTHL TEMP45 1 = TEMP49>
		    <TYPE? TEMP49 <TYPE-CODE ATOM> - TAG48>
		    <VEQUAL? TEMP49 'ALL + TAG46>
		    <DEAD TEMP49>
TAG48
		    <RESTL TEMP45 1 = TEMP45 (TYPE LIST)>
		    <EMPL? TEMP45 - TAG47>
		    <JUMP + PHRASE43>
TAG46
		    <TYPE? SY4 <TYPE-CODE ATOM> + BOOL50>
		    <NTHUV SY4 3 = TEMP45>
		    <TYPE? TEMP45 <TYPE-CODE FALSE> - BOOL50>
		    <DEAD TEMP45>
		    <NTHUV SY4 4 = TEMP45 (TYPE FIX)>
		    <VEQUAL? TEMP45 -1 - PHRASE43 (TYPE FIX)>
		    <DEAD TEMP45>
BOOL50
		    <RETURN 'T>
PHRASE43
		    <FRAME 'REF?>
		    <PUSH SY4>
		    <NTHUV N17 5 = STACK (TYPE LIST)>
		    <CALL 'REF? 2 = TEMP49>
		    <TYPE? TEMP49 <TYPE-CODE FALSE> + PHRASE55>
		    <DEAD TEMP49>
		    <RETURN 'T>
PHRASE55
		    <VEQUAL? TEMP15 8 + TAG59 (TYPE FIX)>
		    <DEAD TEMP15>
		    <SET TEMP15 %<> (TYPE FALSE)>
		    <JUMP + PHRASE58>
TAG59
		    <NTHUV N17 4 = N17 (TYPE NODE)>
		    <NTHUV N17 1 = TEMP15 (TYPE FIX)>
		    <JUMP + AGAIN22>
PHRASE58
		    <RESTL TEMP12 1 = TEMP12 (TYPE LIST)>
		    <JUMP + MAP7>
MAPAP10
		    <RETURN TEMP15>
		    <DEAD TEMP15>
		    <END REF?>
#WORD *34236367662*
<GFCN GEN-DISPATCH ("VALUE" ANY ANY ANY) N4 W5>
		    <TEMP TEMP92>
		    <INTGO>
		    <NTHUV N4 1 = TEMP92 (TYPE FIX)>
		    <DISPATCH TEMP92 4 CASE8 CASE9 CASE10 CASE11 CASEDF6 CASE20 CASE12 CASE13 CASE14 CASE15 CASE16 CASE17 CASEDF6 CASE18 CASE19 CASE21 CASE22 CASE23 CASE24 CASE25 CASE26 CASE27 CASE28 CASE30 CASE29 CASE31 CASE32 CASE33 CASE34 CASE35 CASE36 CASE37 CASEDF6 CASE38 CASE41 CASE39 CASE40 CASE42 CASE43 CASE44 CASE83 CASE84 CASEDF6 CASE45 CASE81 CASE82 CASE53 CASEDF6 CASE46 CASE49 CASE48 CASE47 CASE51 CASE50 CASE52 CASEDF6 CASEDF6 CASE54 CASEDF6 CASE55 CASE56 CASE57 CASE58 CASE59 CASEDF6 CASE61 CASEDF6 CASEDF6 CASEDF6 CASE60 CASE62 CASEDF6 CASEDF6 CASEDF6 CASEDF6 CASE63 CASE80 CASE90 CASE66 CASE67 CASE64 CASE65 CASE68 CASE69 CASE70 CASE75 CASE71 CASE72 CASE73 CASE74 CASE76 CASE79 CASE78 CASE77 CASE85 CASE86 CASE87 CASE88 CASE89 CASE91>
		    <DEAD TEMP92>
CASEDF6
		    <FRAME 'DEFAULT-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'DEFAULT-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE8
		    <FRAME 'FORM-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'FORM-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE9
		    <FRAME 'PROG-REP-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'PROG-REP-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE10
		    <FRAME 'SUBR-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'SUBR-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE11
		    <FRAME 'COND-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'COND-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE12
		    <FRAME 'LVAL-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'LVAL-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE13
		    <FRAME 'SET-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'SET-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE14
		    <FRAME 'OR-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'OR-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE15
		    <FRAME 'AND-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'AND-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE16
		    <FRAME 'RETURN-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'RETURN-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE17
		    <FRAME 'COPY-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'COPY-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE18
		    <FRAME 'AGAIN-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'AGAIN-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE19
		    <FRAME 'ARITH-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'ARITH-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE20
		    <FRAME 'SUBR-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'SUBR-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE21
		    <FRAME '0-TEST>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL '0-TEST 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE22
		    <FRAME 'NOT-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'NOT-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE23
		    <FRAME '1?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL '1?-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE24
		    <FRAME 'TEST-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'TEST-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE25
		    <FRAME '==-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL '==-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE26
		    <FRAME 'TYPE?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'TYPE?-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE27
		    <FRAME 'LNTH-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'LNTH-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE28
		    <FRAME 'MT-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MT-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE29
		    <FRAME 'REST-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'REST-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE30
		    <FRAME 'NTH-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'NTH-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE31
		    <FRAME 'PUT-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'PUT-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE32
		    <FRAME 'PUTREST-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'PUTREST-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE33
		    <FRAME 'FLVAL-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'FLVAL-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE34
		    <FRAME 'FSET-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'FSET-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE35
		    <FRAME 'FGVAL-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'FGVAL-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE36
		    <FRAME 'FSETG-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'FSETG-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE37
		    <FRAME 'MIN-MAX>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MIN-MAX 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE38
		    <FRAME 'CHTYPE-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'CHTYPE-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE39
		    <FRAME 'FIX-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'FIX-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE40
		    <FRAME 'FLOAT-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'FLOAT-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE41
		    <FRAME 'ABS-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'ABS-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE42
		    <FRAME 'MOD-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MOD-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE43
		    <FRAME 'ID-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'ID-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE44
		    <FRAME 'ASSIGNED?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'ASSIGNED?-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE45
		    <FRAME 'BITLOG-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'BITLOG-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE46
		    <FRAME 'SUBR-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'SUBR-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE47
		    <FRAME 'ID-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'ID-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE48
		    <FRAME 'READ2-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'READ2-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE49
		    <FRAME 'SUBR-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'SUBR-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE50
		    <FRAME 'GET2-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'GET2-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE51
		    <FRAME 'GET-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'GET-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE52
		    <FRAME 'SUBR-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'SUBR-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE53
		    <FRAME 'MAPFR-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MAPFR-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE54
		    <FRAME 'MPARGS-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MPARGS-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE55
		    <FRAME 'MAPLEAVE-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MAPLEAVE-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE56
		    <FRAME 'MAPRET-STOP-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MAPRET-STOP-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE57
		    <FRAME 'UNWIND-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'UNWIND-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE58
		    <FRAME 'GVAL-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'GVAL-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE59
		    <FRAME 'SETG-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'SETG-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE60
		    <FRAME 'MEMQ-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MEMQ-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE61
		    <FRAME 'LENGTH?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'LENGTH?-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE62
		    <FRAME 'FORM-F-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'FORM-F-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE63
		    <FRAME 'ALL-REST-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'ALL-REST-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE64
		    <FRAME 'LIST-BUILD>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'LIST-BUILD 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE65
		    <FRAME 'PUT-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'PUT-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE66
		    <FRAME 'BACK-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'BACK-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE67
		    <FRAME 'TOP-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'TOP-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE68
		    <FRAME 'ROT-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'ROT-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE69
		    <FRAME 'LSH-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'LSH-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE70
		    <FRAME 'BIT-TEST-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'BIT-TEST-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE71
		    <FRAME 'CALL-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'CALL-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE72
		    <FRAME 'MONAD?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MONAD?-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE73
		    <FRAME 'GASSIGNED?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'GASSIGNED?-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE74
		    <FRAME 'APPLY-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'APPLY-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE75
		    <FRAME 'ADECL-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'ADECL-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE76
		    <FRAME 'MULTI-RETURN-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MULTI-RETURN-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE77
		    <FRAME 'VALID-TYPE?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'VALID-TYPE?-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE78
		    <FRAME 'TYPE-C-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'TYPE-C-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE79
		    <FRAME '=?-STRING-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL '=?-STRING-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE80
		    <FRAME 'CASE-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'CASE-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE81
		    <FRAME 'FGETBITS-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'FGETBITS-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE82
		    <FRAME 'FPUTBITS-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'FPUTBITS-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE83
		    <FRAME 'ISTRUC-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'ISTRUC-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE84
		    <FRAME 'ISTRUC-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'ISTRUC-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE85
		    <FRAME 'STACK-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'STACK-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE86
		    <FRAME 'CHANNEL-OP-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'CHANNEL-OP-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE87
		    <FRAME 'ATOM-PART-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'ATOM-PART-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE88
		    <FRAME 'OFFSET-PART-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'OFFSET-PART-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE89
		    <FRAME 'PUT-GET-DECL-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'PUT-GET-DECL-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE90
		    <FRAME 'SUBSTRUC-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'SUBSTRUC-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
CASE91
		    <FRAME 'MULTI-SET-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MULTI-SET-GEN 2 = TEMP92>
		    <RETURN TEMP92>
		    <DEAD TEMP92>
		    <END GEN-DISPATCH>
<ENDPA