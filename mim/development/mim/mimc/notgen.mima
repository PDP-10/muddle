
<PACKAGE "NOTGEN">

<ENTRY NOT-GEN TYPE?-GEN ==-GEN PRED-BRANCH-GEN TYPE-C-GEN VALID-TYPE?-GEN =?-STRING-GEN ATOM-PART-GEN OFFSET-PART-GEN PUT-GET-DECL-GEN SUBSTRUC-GEN>

<USE "COMPDEC" "MIMGEN" "CODGEN" "CHKDCL" "CARGEN" "STRGEN" "ADVMESS" "LNQGEN" "MMQGEN" "MAPGEN" "NEWREP">

" Generate NOT code.  This is done in a variety of ways.
	1) If NOTs arg is a predicate itself and this is a predicate usage
	    (flagged by BRANCH arg), just pass through setting the NOTF arg.
	2) If NOTs arg is a predicate but a value is needed,
	    set up a predicate like situation and return NOT of the normal
	    value.
	3) Else just compile and complement result."

#WORD *2536237017*
<GFCN NOT-GEN ("VALUE" ANY NODE ANY "OPTIONAL" ANY ANY ANY ANY) NOD9 WHERE10 NOTF11 BRANCH12 DIR13 SETF14>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7 OPT8>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH 'T>
OPT7
		    <PUSH %<>>
OPT8
		    <TEMP TEMP22 P15:NODE RW16 PF17 (FLG21 %<>)>
		    <INTGO>
		    <NTHUV NOD9 5 = TEMP22 (TYPE LIST)>
		    <NTHL TEMP22 1 = P15 (TYPE NODE)>
		    <DEAD TEMP22>
		    <SET RW16 WHERE10>
		    <FRAME 'PRED-CHECK?>
		    <PUSH P15>
		    <PUSH DIR13>
		    <PUSH WHERE10>
		    <CALL 'PRED-CHECK? 3 = PF17>
		    <TYPE? NOTF11 <TYPE-CODE FALSE> - TAG24>
		    <DEAD NOTF11>
		    <SET NOTF11 'T (TYPE ATOM)>
		    <JUMP + TAG25>
TAG24
		    <SET NOTF11 %<> (TYPE FALSE)>
TAG25
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE27>
		    <TYPE? PF17 <TYPE-CODE FALSE> + PHRASE27>
		    <FRAME 'PGEN-DISPATCH>
		    <PUSH P15>
		    <DEAD P15>
		    <EQUAL? RW16 'FLUSHED - PHRASE31>
		    <SET TEMP22 'FLUSHED (TYPE ATOM)>
		    <JUMP + PHRASE32>
PHRASE31
		    <SET TEMP22 WHERE10>
		    <DEAD WHERE10>
PHRASE32
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <PUSH NOTF11>
		    <DEAD NOTF11>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <PUSH DIR13>
		    <DEAD DIR13>
		    <PUSH SETF14>
		    <DEAD SETF14>
		    <CALL 'PGEN-DISPATCH 6 = WHERE10>
		    <JUMP + PHRASE83>
PHRASE27
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE33>
		    <EQUAL? RW16 'FLUSHED - PHRASE33>
		    <VEQUAL? NOTF11 0 + TAG37>
		    <DEAD NOTF11>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG36>
		    <DEAD DIR13>
		    <SET DIR13 'T (TYPE ATOM)>
		    <JUMP + TAG37>
TAG36
		    <SET DIR13 %<> (TYPE FALSE)>
TAG37
		    <FRAME 'GEN>
		    <PUSH P15>
		    <PUSH 'DONT-CARE>
		    <CALL 'GEN 2 = WHERE10>
		    <FRAME 'D-B-TAG>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <PUSH WHERE10>
		    <PUSH DIR13>
		    <DEAD DIR13>
		    <NTHUV P15 3 = STACK>
		    <DEAD P15>
		    <CALL 'D-B-TAG 4>
		    <JUMP + PHRASE83>
PHRASE33
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE40>
		    <FRAME 'GEN>
		    <PUSH P15>
		    <PUSH 'DONT-CARE>
		    <CALL 'GEN 2 = TEMP22>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = PF17>
		    <FRAME 'D-B-TAG>
		    <PUSH PF17>
		    <PUSH TEMP22>
		    <PUSH DIR13>
		    <NTHUV P15 3 = STACK>
		    <DEAD P15>
		    <CALL 'D-B-TAG 4>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH DIR13>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <CALL 'MOVE-ARG 2 = WHERE10>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH PF17>
		    <DEAD PF17>
		    <CALL 'LABEL-TAG 1>
		    <TYPE? SETF14 <TYPE-CODE FALSE> + PHRASE83>
		    <DEAD SETF14>
		    <FRAME 'DEALLOCATE-TEMP>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG54>
		    <DEAD DIR13>
		    <SET TEMP22 'T (TYPE ATOM)>
		    <JUMP + TAG55>
TAG54
		    <SET TEMP22 %<> (TYPE FALSE)>
TAG55
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <CALL 'MOVE-ARG 2 = STACK>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <JUMP + PHRASE83>
PHRASE40
		    <EQUAL? RW16 'FLUSHED - PHRASE56>
		    <FRAME 'GEN>
		    <PUSH P15>
		    <DEAD P15>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN 2 = WHERE10>
		    <JUMP + PHRASE83>
PHRASE56
		    <SET FLG21 %<> (TYPE FALSE)>
		    <FRAME 'ISTYPE?>
		    <NTHUV NOD9 3 = STACK>
		    <CALL 'ISTYPE? 1 = TEMP22>
		    <VEQUAL? TEMP22 'FALSE - TAG60>
		    <DEAD TEMP22>
		    <SET FLG21 'T (TYPE ATOM)>
		    <JUMP + BOOL59>
TAG60
		    <FRAME 'TYPE-OK?>
		    <NTHUV NOD9 3 = STACK>
		    <DEAD NOD9>
		    <PUSH 'FALSE>
		    <CALL 'TYPE-OK? 2 = TEMP22>
		    <TYPE? TEMP22 <TYPE-CODE FALSE> - PHRASE58>
		    <DEAD TEMP22>
BOOL59
		    <FRAME 'GEN>
		    <PUSH P15>
		    <DEAD P15>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN 2>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <VEQUAL? FLG21 0 - TAG66>
		    <DEAD FLG21>
		    <SET TEMP22 'T (TYPE ATOM)>
		    <JUMP + TAG67>
TAG66
		    <SET TEMP22 %<> (TYPE FALSE)>
TAG67
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <CALL 'MOVE-ARG 2 = WHERE10>
		    <JUMP + PHRASE83>
PHRASE58
		    <TYPE? PF17 <TYPE-CODE FALSE> + PHRASE68>
		    <DEAD PF17>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = PF17>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = FLG21>
		    <FRAME 'PGEN-DISPATCH>
		    <PUSH P15>
		    <DEAD P15>
		    <PUSH 'FLUSHED>
		    <PUSH NOTF11>
		    <DEAD NOTF11>
		    <PUSH PF17>
		    <PUSH DIR13>
		    <DEAD DIR13>
		    <PUSH SETF14>
		    <DEAD SETF14>
		    <CALL 'PGEN-DISPATCH 6>
		    <TYPE? WHERE10 <TYPE-CODE TEMP> + PHRASE73>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = WHERE10>
PHRASE73
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH %<>>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'BRANCH-TAG>
		    <PUSH FLG21>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH PF17>
		    <DEAD PF17>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH WHERE10>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH 'T>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'LABEL-TAG>
		    <PUSH FLG21>
		    <DEAD FLG21>
		    <CALL 'LABEL-TAG 1>
		    <JUMP + PHRASE83>
PHRASE68
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = PF17>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = FLG21>
		    <FRAME 'GEN>
		    <PUSH P15>
		    <PUSH 'DONT-CARE>
		    <CALL 'GEN 2 = TEMP22>
		    <FRAME 'D-B-TAG>
		    <PUSH PF17>
		    <PUSH TEMP22>
		    <PUSH 'T>
		    <NTHUV P15 3 = STACK>
		    <DEAD P15>
		    <CALL 'D-B-TAG 4>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <CALL 'FREE-TEMP 1>
		    <TYPE? WHERE10 <TYPE-CODE TEMP> + PHRASE90>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = WHERE10>
PHRASE90
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH 'T>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'BRANCH-TAG>
		    <PUSH FLG21>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH PF17>
		    <DEAD PF17>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH WHERE10>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH %<>>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'LABEL-TAG>
		    <PUSH FLG21>
		    <DEAD FLG21>
		    <CALL 'LABEL-TAG 1>
PHRASE83
		    <FRAME 'MOVE-ARG>
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <PUSH RW16>
		    <DEAD RW16>
		    <CALL 'MOVE-ARG 2 = TEMP22>
		    <RETURN TEMP22>
		    <DEAD TEMP22>
		    <END NOT-GEN>
#WORD *35521622600*
<GFCN PRED? ("VALUE" <OR ATOM !<FALSE>> FIX) N4>
		    <TEMP TEMP6>
		    <INTGO>
		    <GVAL 'PREDV = TEMP6>
		    <NTHUU TEMP6 N4 = TEMP6 (TYPE FIX)>
		    <DEAD N4>
		    <VEQUAL? TEMP6 0 + TAG7 (TYPE FIX)>
		    <DEAD TEMP6>
		    <RETURN 'T>
TAG7
		    <RETURN %<>>
		    <END PRED?>
#WORD *14365533355*
<GFCN PRED-CHECK? ("VALUE" <OR ATOM FALSE> NODE ANY ANY) N4 TF5 W6>
		    <TEMP TEMP13 TEMP14 NT10 K8 TEMP24 TEMP25>
		    <INTGO>
		    <GVAL 'PREDV = TEMP13>
		    <NTHUV N4 1 = TEMP14 (TYPE FIX)>
		    <NTHUU TEMP13 TEMP14 = TEMP14 (TYPE FIX)>
		    <DEAD TEMP13>
		    <VEQUAL? TEMP14 0 + TAG15 (TYPE FIX)>
		    <DEAD TEMP14>
		    <RETURN 'T>
TAG15
		    <NTHUV N4 1 = NT10 (TYPE FIX)>
		    <VEQUAL? NT10 90 - TAG23 (TYPE FIX)>
		    <NTHUV N4 5 = K8 (TYPE LIST)>
		    <EMPL? K8 + TAG23>
		    <RESTL K8 1 = TEMP14 (TYPE LIST)>
		    <EMPL? TEMP14 + TAG23>
		    <DEAD TEMP14>
		    <TYPE? TF5 <TYPE-CODE FALSE> - BOOL21>
		    <DEAD TF5>
		    <EQUAL? W6 'FLUSHED - TAG22>
BOOL21
		    <NTHL K8 1 = TEMP14 (TYPE NODE)>
		    <NTHUV TEMP14 4 = TEMP14>
		    <EQUAL? TEMP14 '`SYSOP - TAG22>
		    <DEAD TEMP14>
		    <RETURN 'T>
TAG22
		    <NTHL K8 1 = TEMP14 (TYPE NODE)>
		    <DEAD K8>
		    <NTHUV TEMP14 4 = TEMP14 (TYPE ATOM)>
		    <NTHR TEMP14 3 = TEMP14 (RECORD-TYPE ATOM)>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP14 "STRING-EQUAL?" - TAG23>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP13 "STRING-EQUAL?" (TYPE STRING)>
		    <LENUS TEMP14 = TEMP24 (TYPE FIX)>
		    <VEQUAL? TEMP24 13 - TAG23>
		    <LOOP (TEMP14 VALUE LENGTH) (TEMP13 VALUE LENGTH) (TEMP24 VALUE)>
TAG27
		    <NTHUS TEMP14 1 = TEMP25>
		    <NTHUS TEMP13 1 = K8>
		    <VEQUAL? TEMP25 K8 - TAG23>
		    <DEAD TEMP25 K8>
		    <RESTUS TEMP14 1 = TEMP14 (TYPE STRING)>
		    <RESTUS TEMP13 1 = TEMP13 (TYPE STRING)>
		    <SUB TEMP24 1 = TEMP24 (TYPE FIX)>
		    <GRTR? TEMP24 0 + TAG27 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <RETURN 'T>
TAG23
		    <VEQUAL? NT10 11 - TAG29 (TYPE FIX)>
		    <EQUAL? W6 'FLUSHED - TAG29>
		    <NTHUV N4 4 = TEMP13 (TYPE SYMTAB)>
		    <NTHUV TEMP13 3 = TEMP13>
		    <TYPE? TEMP13 <TYPE-CODE FALSE> - TAG29>
		    <DEAD TEMP13>
		    <GVAL 'PREDV = TEMP13>
		    <NTHUV N4 5 = TEMP14 (TYPE LIST)>
		    <RESTL TEMP14 1 = TEMP14 (TYPE LIST)>
		    <NTHL TEMP14 1 = TEMP14 (TYPE NODE)>
		    <NTHUV TEMP14 1 = TEMP14 (TYPE FIX)>
		    <NTHUU TEMP13 TEMP14 = TEMP14 (TYPE FIX)>
		    <DEAD TEMP13>
		    <VEQUAL? TEMP14 1 - TAG29 (TYPE FIX)>
		    <DEAD TEMP14>
		    <RETURN 'T>
TAG29
		    <VEQUAL? NT10 5 + TAG57 (TYPE FIX)>
		    <VEQUAL? NT10 50 + TAG35 (TYPE FIX)>
		    <DEAD NT10>
		    <RETURN %<>>
TAG35
		    <NTHUV N4 5 = K8 (TYPE LIST)>
		    <DEAD N4>
		    <NTHL K8 1 = TEMP13 (TYPE NODE)>
		    <NTHUV TEMP13 1 = TEMP14 (TYPE FIX)>
		    <VEQUAL? TEMP14 2 + TAG36 (TYPE FIX)>
		    <DEAD TEMP14>
		    <RETURN %<>>
TAG36
		    <NTHUV TEMP13 4 = TEMP14>
		    <DEAD TEMP13>
		    <TYPE? TEMP14 <TYPE-CODE FALSE> + TAG37>
		    <DEAD TEMP14>
		    <RETURN %<>>
TAG37
		    <RESTL K8 1 = TEMP14 (TYPE LIST)>
		    <NTHL TEMP14 1 = N4 (TYPE NODE)>
		    <DEAD TEMP14>
		    <NTHUV N4 1 = TEMP14 (TYPE FIX)>
		    <VEQUAL? TEMP14 51 + TAG38 (TYPE FIX)>
		    <DEAD TEMP14>
		    <RETURN %<>>
TAG38
		    <FRAME 'ISTYPE?>
		    <NTHUV N4 3 = NT10>
		    <PUSH NT10>
		    <CALL 'ISTYPE? 1 = TEMP14>
		    <VEQUAL? TEMP14 'FALSE + TAG42>
		    <DEAD TEMP14>
		    <FRAME 'TYPE-AND>
		    <PUSH NT10>
		    <DEAD NT10>
		    <PUSH 'FALSE>
		    <CALL 'TYPE-AND 2 = TEMP14>
		    <TYPE? TEMP14 <TYPE-CODE FALSE> + TAG42>
		    <DEAD TEMP14>
		    <RETURN %<>>
TAG42
		    <SET TEMP25 %<> (TYPE FALSE)>
		    <RESTL K8 1 = K8 (TYPE LIST)>
		    <RESTL K8 1 = K8 (TYPE LIST)>
		    <LOOP>
MAP44
		    <INTGO>
		    <EMPL? K8 + MAPAP47>
		    <NTHL K8 1 = TEMP13>
		    <NTHUV TEMP13 1 = NT10 (TYPE FIX)>
		    <DEAD TEMP13>
		    <VEQUAL? NT10 3 + TAG56 (TYPE FIX)>
		    <VEQUAL? NT10 68 + TAG56 (TYPE FIX)>
		    <DEAD NT10>
		    <SET TEMP25 %<> (TYPE FALSE)>
		    <JUMP + PHRASE54>
TAG56
		    <SET TEMP25 'T (TYPE ATOM)>
		    <JUMP + MAPAP47>
PHRASE54
		    <RESTL K8 1 = K8 (TYPE LIST)>
		    <JUMP + MAP44>
MAPAP47
		    <TYPE? TEMP25 <TYPE-CODE FALSE> + TAG57>
		    <DEAD TEMP25>
		    <RETURN %<>>
TAG57
		    <NTHUV N4 12 = TEMP25>
		    <TYPE? TEMP25 <TYPE-CODE FALSE> + TAG58>
		    <DEAD TEMP25>
		    <RETURN %<>>
TAG58
		    <FRAME 'ACTIV?>
		    <NTHUV N4 10 = STACK (TYPE LIST)>
		    <CALL 'ACTIV? 1 = TEMP25>
		    <VEQUAL? TEMP25 0 + TAG60>
		    <DEAD TEMP25>
		    <RETURN %<>>
TAG60
		    <EQUAL? W6 'FLUSHED + TAG61>
		    <DEAD W6>
		    <RETURN %<>>
TAG61
		    <SET TEMP13 %<> (TYPE FALSE)>
		    <NTHUV N4 10 = K8 (TYPE LIST)>
		    <DEAD N4>
		    <LOOP>
MAP65
		    <INTGO>
		    <EMPL? K8 + MAPAP68>
		    <NTHL K8 1 = TEMP13>
		    <NTHUV TEMP13 3 = TEMP14>
		    <TYPE? TEMP14 <TYPE-CODE FALSE> - TAG85>
		    <DEAD TEMP14>
		    <NTHUV TEMP13 9 = TEMP24>
		    <DEAD TEMP13>
		    <SET TEMP13 TEMP24>
		    <TYPE? TEMP13 <TYPE-CODE FALSE> + PHRASE76>
		    <NTHUV TEMP24 1 = NT10 (TYPE FIX)>
		    <VEQUAL? NT10 98 + TAG85 (TYPE FIX)>
		    <VEQUAL? NT10 15 - BOOL81 (TYPE FIX)>
		    <NTHUV TEMP24 4 = TEMP14>
		    <EQUAL? TEMP14 'TUPLE + TAG85>
		    <DEAD TEMP14>
BOOL81
		    <VEQUAL? NT10 44 + TAG84 (TYPE FIX)>
		    <VEQUAL? NT10 45 + TAG84 (TYPE FIX)>
		    <DEAD NT10>
		    <SET TEMP13 %<> (TYPE FALSE)>
		    <JUMP + PHRASE76>
TAG84
		    <NTHUV TEMP24 4 = TEMP14>
		    <DEAD TEMP24>
		    <EQUAL? TEMP14 'ITUPLE + TAG85>
		    <DEAD TEMP14>
		    <SET TEMP13 %<> (TYPE FALSE)>
		    <JUMP + PHRASE76>
TAG85
		    <SET TEMP13 'T (TYPE ATOM)>
		    <JUMP + MAPAP68>
PHRASE76
		    <RESTL K8 1 = K8 (TYPE LIST)>
		    <JUMP + MAP65>
MAPAP68
		    <TYPE? TEMP13 <TYPE-CODE FALSE> - TAG62>
		    <DEAD TEMP13>
		    <RETURN 'T>
TAG62
		    <RETURN %<>>
		    <END PRED-CHECK?>
" Generate code for ==?.  If types are the same then just compare values,
otherwise generate a full comparison."

#WORD *2462425537*
<GFCN ==-GEN ("VALUE" ANY NODE ANY "OPTIONAL" ANY ANY ANY ANY) NOD9 WHERE10 NOTF11 BRANCH12 DIR13 SETF14>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7 OPT8>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <PUSH %<>>
OPT8
		    <TEMP K15:LIST TEMP30 TY1-22 TY2-23 T1OK24 T2OK19 TEMP37 TEMP38 TYPSAM25 RW26 SDIR27 FLS28 B2-18>
		    <INTGO>
		    <NTHUV NOD9 5 = K15 (TYPE LIST)>
		    <NTHL K15 1 = TEMP30 (TYPE NODE)>
		    <NTHUV TEMP30 3 = TY1-22>
		    <DEAD TEMP30>
		    <RESTL K15 1 = TEMP30 (TYPE LIST)>
		    <NTHL TEMP30 1 = TEMP30 (TYPE NODE)>
		    <NTHUV TEMP30 3 = TY2-23>
		    <DEAD TEMP30>
		    <FRAME 'ISTYPE?>
		    <PUSH TY1-22>
		    <CALL 'ISTYPE? 1 = T1OK24>
		    <FRAME 'ISTYPE?>
		    <PUSH TY2-23>
		    <CALL 'ISTYPE? 1 = T2OK19>
		    <VEQUAL? T1OK24 T2OK19 + TAG35>
		    <FRAME 'GETPROP>
		    <PUSH T1OK24>
		    <PUSH 'ALT-DECL>
		    <CFRAME = STACK (TYPE FRAME)>
		    <CALL 'GETPROP 3 = TEMP37>
		    <CFRAME = TEMP38 (TYPE FRAME)>
		    <EQUAL? TEMP38 TEMP37 - TAG39>
		    <DEAD TEMP38>
		    <SET TEMP37 T1OK24>
TAG39
		    <FRAME 'GETPROP>
		    <PUSH T2OK19>
		    <PUSH 'ALT-DECL>
		    <CFRAME = STACK (TYPE FRAME)>
		    <CALL 'GETPROP 3 = TEMP38>
		    <CFRAME = TEMP30 (TYPE FRAME)>
		    <EQUAL? TEMP30 TEMP38 - TAG42>
		    <DEAD TEMP30>
		    <SET TEMP38 T2OK19>
TAG42
		    <EQUAL? TEMP37 TEMP38 + TAG35>
		    <DEAD TEMP37 TEMP38>
		    <SET TEMP30 %<> (TYPE FALSE)>
		    <JUMP + BOOL32>
TAG35
		    <SET TEMP30 T1OK24>
BOOL32
		    <SET TYPSAM25 TEMP30>
		    <DEAD TEMP30>
		    <SET RW26 WHERE10>
		    <SET SDIR27 DIR13>
		    <EQUAL? RW26 'FLUSHED - TAG43>
		    <SET FLS28 'T (TYPE ATOM)>
		    <JUMP + TAG44>
TAG43
		    <SET FLS28 %<> (TYPE FALSE)>
TAG44
		    <TYPE? TYPSAM25 <TYPE-CODE FALSE> - PHRASE46>
		    <FRAME 'TYPE-OK?>
		    <PUSH TY1-22>
		    <PUSH <PRIMTYPE FIX>>
		    <CALL 'TYPE-OK? 2 = TEMP30>
		    <TYPE? TEMP30 <TYPE-CODE FALSE> - PHRASE46>
		    <DEAD TEMP30>
		    <FRAME 'TYPE-OK?>
		    <PUSH TY2-23>
		    <PUSH <PRIMTYPE FIX>>
		    <CALL 'TYPE-OK? 2 = TEMP30>
		    <TYPE? TEMP30 <TYPE-CODE FALSE> - PHRASE46>
		    <DEAD TEMP30>
		    <FRAME 'POINTER-OVERLAP?>
		    <PUSH TY1-22>
		    <PUSH TY2-23>
		    <CALL 'POINTER-OVERLAP? 2 = TEMP30>
		    <TYPE? TEMP30 <TYPE-CODE FALSE> - PHRASE46>
		    <DEAD TEMP30>
		    <SET TYPSAM25 'T (TYPE ATOM)>
PHRASE46
		    <NTHUV NOD9 9 = TEMP30>
		    <GVAL 'N==? = TEMP38>
		    <EQUAL? TEMP30 TEMP38 - TAG54>
		    <DEAD TEMP30 TEMP38>
		    <TYPE? NOTF11 <TYPE-CODE FALSE> - TAG53>
		    <DEAD NOTF11>
		    <SET NOTF11 'T (TYPE ATOM)>
		    <JUMP + TAG54>
TAG53
		    <SET NOTF11 %<> (TYPE FALSE)>
TAG54
		    <TYPE? TYPSAM25 <TYPE-CODE FALSE> - BOOL55>
		    <FRAME 'TYPE-OK?>
		    <PUSH TY1-22>
		    <DEAD TY1-22>
		    <PUSH TY2-23>
		    <DEAD TY2-23>
		    <CALL 'TYPE-OK? 2 = TEMP38>
		    <TYPE? TEMP38 <TYPE-CODE FALSE> - BOOL55>
		    <DEAD TEMP38>
		    <FRAME 'COMPILE-WARNING>
		    <PUSH "Arguments can never be ==? ">
		    <NTHUV NOD9 4 = STACK>
		    <PUSH NOD9>
		    <CALL 'COMPILE-WARNING 3>
BOOL55
		    <NTHL K15 1 = TY1-22 (TYPE NODE)>
		    <NTHUV TY1-22 1 = TEMP38 (TYPE FIX)>
		    <VEQUAL? TEMP38 2 + BOOL60 (TYPE FIX)>
		    <DEAD TEMP38>
		    <NTHUV NOD9 8 = TEMP38>
		    <DEAD NOD9>
		    <TYPE? TEMP38 <TYPE-CODE FALSE> - PHRASE59>
		    <DEAD TEMP38>
		    <RESTL K15 1 = TEMP38 (TYPE LIST)>
		    <NTHL TEMP38 1 = TY2-23 (TYPE NODE)>
		    <DEAD TEMP38>
		    <NTHUV TY2-23 1 = TEMP38 (TYPE FIX)>
		    <VEQUAL? TEMP38 2 + PHRASE59 (TYPE FIX)>
		    <DEAD TEMP38>
		    <NTHUV TY1-22 1 = TEMP38 (TYPE FIX)>
		    <GVAL 'SNODES = TEMP30>
		    <EMPUU? TEMP30 + PHRASE59>
		    <LOOP (TEMP38 VALUE) (TEMP30 LENGTH VALUE)>
TAG63
		    <NTHUU TEMP30 1 = TEMP37>
		    <VEQUAL? TEMP37 TEMP38 + TAG62>
		    <DEAD TEMP37>
		    <RESTUU TEMP30 1 = TEMP30 (TYPE UVECTOR)>
		    <EMPUU? TEMP30 - TAG63>
		    <JUMP + PHRASE59>
TAG62
		    <NTHUV TY2-23 1 = TEMP30 (TYPE FIX)>
		    <DEAD TY2-23>
		    <VEQUAL? TEMP30 10 + PHRASE59 (TYPE FIX)>
		    <DEAD TEMP30>
BOOL60
		    <RESTL K15 1 = TEMP30 (TYPE LIST)>
		    <NTHL TEMP30 1 = TEMP30 (TYPE NODE)>
		    <PUTL K15 1 TEMP30>
		    <DEAD TEMP30>
		    <RESTL K15 1 = TEMP30 (TYPE LIST)>
		    <PUTL TEMP30 1 TY1-22>
		    <DEAD TEMP30 TY1-22>
		    <SET TY1-22 T1OK24>
		    <DEAD T1OK24>
		    <SET T1OK24 T2OK19>
		    <DEAD T2OK19>
		    <SET T2OK19 TY1-22>
		    <DEAD TY1-22>
PHRASE59
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE66>
		    <TYPE? NOTF11 <TYPE-CODE FALSE> + TAG69>
		    <DEAD NOTF11>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG68>
		    <DEAD DIR13>
		    <SET DIR13 'T (TYPE ATOM)>
		    <JUMP + TAG69>
TAG68
		    <SET DIR13 %<> (TYPE FALSE)>
TAG69
		    <TYPE? SETF14 <TYPE-CODE FALSE> + PHRASE71>
		    <DEAD SETF14>
		    <FRAME 'DEALLOCATE-TEMP>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <TYPE? SDIR27 <TYPE-CODE FALSE> - TAG75>
		    <SET TEMP30 'T (TYPE ATOM)>
		    <JUMP + TAG76>
TAG75
		    <SET TEMP30 %<> (TYPE FALSE)>
TAG76
		    <PUSH TEMP30>
		    <DEAD TEMP30>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <CALL 'MOVE-ARG 2 = STACK>
		    <CALL 'DEALLOCATE-TEMP 1>
PHRASE71
		    <FRAME 'GEN-EQTST>
		    <NTHL K15 1 = STACK (TYPE NODE)>
		    <RESTL K15 1 = TEMP30 (TYPE LIST)>
		    <DEAD K15>
		    <NTHL TEMP30 1 = STACK (TYPE NODE)>
		    <DEAD TEMP30>
		    <PUSH T1OK24>
		    <DEAD T1OK24>
		    <PUSH T2OK19>
		    <DEAD T2OK19>
		    <VEQUAL? FLS28 0 + PHRASE79>
		    <SET TEMP30 DIR13>
		    <DEAD DIR13>
		    <JUMP + TAG82>
PHRASE79
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG81>
		    <DEAD DIR13>
		    <SET TEMP30 'T (TYPE ATOM)>
		    <JUMP + TAG82>
TAG81
		    <SET TEMP30 %<> (TYPE FALSE)>
TAG82
		    <PUSH TEMP30>
		    <DEAD TEMP30>
		    <PUSH TYPSAM25>
		    <DEAD TYPSAM25>
		    <VEQUAL? FLS28 0 + PHRASE84>
		    <SET TEMP30 BRANCH12>
		    <JUMP + PHRASE85>
PHRASE84
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = B2-18>
		    <SET TEMP30 B2-18>
PHRASE85
		    <PUSH TEMP30>
		    <DEAD TEMP30>
		    <CALL 'GEN-EQTST 7>
		    <VEQUAL? FLS28 0 + TAG89>
		    <DEAD FLS28>
		    <RETURN %<>>
TAG89
		    <FRAME 'MOVE-ARG>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH SDIR27>
		    <DEAD SDIR27>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <CALL 'MOVE-ARG 2 = STACK>
		    <PUSH RW26>
		    <DEAD RW26>
		    <CALL 'MOVE-ARG 2 = RW26>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH B2-18>
		    <DEAD B2-18>
		    <CALL 'LABEL-TAG 1>
		    <RETURN RW26>
		    <DEAD RW26>
PHRASE66
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = BRANCH12>
		    <FRAME 'GEN-EQTST>
		    <NTHL K15 1 = STACK (TYPE NODE)>
		    <RESTL K15 1 = TEMP38 (TYPE LIST)>
		    <DEAD K15>
		    <NTHL TEMP38 1 = STACK (TYPE NODE)>
		    <DEAD TEMP38>
		    <PUSH T1OK24>
		    <DEAD T1OK24>
		    <PUSH T2OK19>
		    <DEAD T2OK19>
		    <PUSH NOTF11>
		    <DEAD NOTF11>
		    <PUSH TYPSAM25>
		    <DEAD TYPSAM25>
		    <PUSH BRANCH12>
		    <CALL 'GEN-EQTST 7>
		    <EQUAL? WHERE10 'DONT-CARE - PHRASE99>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = WHERE10>
PHRASE99
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH 'T>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH WHERE10>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <FRAME 'BRANCH-TAG>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = B2-18>
		    <PUSH B2-18>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH %<>>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'LABEL-TAG>
		    <PUSH B2-18>
		    <DEAD B2-18>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'MOVE-ARG>
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <PUSH RW26>
		    <DEAD RW26>
		    <CALL 'MOVE-ARG 2 = TEMP30>
		    <RETURN TEMP30>
		    <DEAD TEMP30>
		    <END ==-GEN>
#WORD *27435352636*
<GFCN GEN-EQTST ("VALUE" ANY NODE NODE ANY ANY ANY ANY ANY) N14 N25 T16 T27 DIR8 TYPS9 BR10>
		    <TEMP (TMP11 %<>) R213>
		    <INTGO>
		    <FRAME 'GEN>
		    <PUSH N14>
		    <DEAD N14>
		    <CALL 'GEN 1 = TMP11>
		    <FRAME 'GEN>
		    <PUSH N25>
		    <DEAD N25>
		    <CALL 'GEN 1 = R213>
		    <TYPE? TYPS9 <TYPE-CODE FALSE> + PHRASE17>
		    <DEAD TYPS9>
		    <FRAME 'GEN-VAL-==?>
		    <PUSH TMP11>
		    <PUSH R213>
		    <PUSH DIR8>
		    <DEAD DIR8>
		    <PUSH BR10>
		    <DEAD BR10>
		    <CALL 'GEN-VAL-==? 4>
		    <JUMP + PHRASE19>
PHRASE17
		    <FRAME 'GEN-==?>
		    <PUSH TMP11>
		    <PUSH R213>
		    <PUSH DIR8>
		    <DEAD DIR8>
		    <PUSH BR10>
		    <DEAD BR10>
		    <CALL 'GEN-==? 4>
PHRASE19
		    <FRAME 'FREE-TEMP>
		    <PUSH TMP11>
		    <DEAD TMP11>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'FREE-TEMP>
		    <PUSH R213>
		    <DEAD R213>
		    <CALL 'FREE-TEMP 1 = TMP11>
		    <RETURN TMP11>
		    <DEAD TMP11>
		    <END GEN-EQTST>
#WORD *23621757656*
<GFCN POINTER-OVERLAP? ("VALUE" ANY ANY ANY) TY14 TY25>
		    <TEMP TEMP11 TEMP22>
		    <INTGO>
		    <TYPE? TY14 <TYPE-CODE FORM> + TAG10>
		    <TYPE? TY14 <TYPE-CODE SEGMENT> - PHRASE8>
TAG10
		    <EMPL? TY14 + PHRASE8>
		    <NTHL TY14 1 = TEMP11>
		    <EQUAL? TEMP11 'OR - PHRASE8>
		    <DEAD TEMP11>
		    <SET TEMP11 %<> (TYPE FALSE)>
		    <RESTL TY14 1 = TEMP22 (TYPE LIST)>
		    <DEAD TY14>
		    <CHTYPE TEMP22 <TYPE-CODE LIST> = TEMP22>
		    <LOOP>
MAP13
		    <INTGO>
		    <EMPL? TEMP22 + PHRASE71>
		    <NTHL TEMP22 1 = TEMP11>
		    <FRAME 'POINTER-OVERLAP?>
		    <PUSH TY25>
		    <PUSH TEMP11>
		    <DEAD TEMP11>
		    <CALL 'POINTER-OVERLAP? 2 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> + PHRASE25>
		    <RETURN 'T>
PHRASE25
		    <RESTL TEMP22 1 = TEMP22 (TYPE LIST)>
		    <JUMP + MAP13>
PHRASE8
		    <TYPE? TY25 <TYPE-CODE FORM> + TAG30>
		    <TYPE? TY25 <TYPE-CODE SEGMENT> - PHRASE28>
TAG30
		    <EMPL? TY25 + PHRASE28>
		    <NTHL TY25 1 = TEMP22>
		    <EQUAL? TEMP22 'OR - PHRASE28>
		    <DEAD TEMP22>
		    <SET TEMP11 %<> (TYPE FALSE)>
		    <RESTL TY25 1 = TEMP22 (TYPE LIST)>
		    <DEAD TY25>
		    <CHTYPE TEMP22 <TYPE-CODE LIST> = TEMP22>
		    <LOOP>
MAP32
		    <INTGO>
		    <EMPL? TEMP22 + MAPAP35>
		    <NTHL TEMP22 1 = TEMP11>
		    <FRAME 'POINTER-OVERLAP?>
		    <PUSH TY14>
		    <PUSH TEMP11>
		    <DEAD TEMP11>
		    <CALL 'POINTER-OVERLAP? 2 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> + PHRASE43>
		    <RETURN 'T>
PHRASE43
		    <RESTL TEMP22 1 = TEMP22 (TYPE LIST)>
		    <JUMP + MAP32>
MAPAP35
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE28
		    <TYPE? TY14 <TYPE-CODE FORM> + TAG49>
		    <TYPE? TY14 <TYPE-CODE SEGMENT> - BOOL48>
TAG49
		    <EMPL? TY14 - BOOL47>
BOOL48
		    <TYPE? TY25 <TYPE-CODE FORM> + TAG51>
		    <TYPE? TY25 <TYPE-CODE SEGMENT> - PHRASE46>
TAG51
		    <EMPL? TY25 + PHRASE46>
		    <SET TEMP11 TY14>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> + PHRASE46>
		    <SET TY14 TY25>
		    <DEAD TY25>
		    <SET TY25 TEMP11>
		    <DEAD TEMP11>
BOOL47
		    <NTH1 TY14 = TEMP22>
		    <EQUAL? TEMP22 'PRIMTYPE + BOOL54>
		    <DEAD TEMP22>
		    <NTH1 TY14 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FORM> + TAG56>
		    <TYPE? TEMP11 <TYPE-CODE SEGMENT> - PHRASE53>
TAG56
		    <EMPL? TEMP11 + PHRASE53>
		    <NTHL TEMP11 1 = TEMP22>
		    <EQUAL? TEMP22 'PRIMTYPE - PHRASE53>
		    <DEAD TEMP22>
		    <SET TY14 TEMP11>
		    <DEAD TEMP11>
BOOL54
		    <FRAME 'STRUCTYP>
		    <PUSH TY25>
		    <DEAD TY25>
		    <CALL 'STRUCTYP 1 = TEMP22>
		    <FRAME 'NTH>
		    <PUSH TY14>
		    <DEAD TY14>
		    <PUSH 2>
		    <CALL 'NTH 2 = TEMP11>
		    <EQUAL? TEMP22 TEMP11 - PHRASE58>
		    <DEAD TEMP22 TEMP11>
		    <RETURN 'T>
PHRASE58
		    <RETURN %<>>
PHRASE53
		    <FRAME 'POINTER-OVERLAP?>
		    <NTH1 TY14 = STACK>
		    <DEAD TY14>
		    <PUSH TY25>
		    <DEAD TY25>
		    <CALL 'POINTER-OVERLAP? 2 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE46
		    <EQUAL? TY14 TY25 - PHRASE64>
		    <RETURN %<>>
PHRASE64
		    <FRAME 'STRUCTYP>
		    <PUSH TY14>
		    <CALL 'STRUCTYP 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> + BOOL66>
		    <DEAD TEMP11>
		    <FRAME 'STRUCTYP>
		    <PUSH TY25>
		    <CALL 'STRUCTYP 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> + BOOL66>
		    <DEAD TEMP11>
		    <FRAME 'STRUCTYP>
		    <PUSH TY14>
		    <DEAD TY14>
		    <CALL 'STRUCTYP 1 = TEMP11>
		    <FRAME 'STRUCTYP>
		    <PUSH TY25>
		    <DEAD TY25>
		    <CALL 'STRUCTYP 1 = TEMP22>
		    <EQUAL? TEMP11 TEMP22 - PHRASE65>
		    <DEAD TEMP11 TEMP22>
BOOL66
		    <RETURN 'T>
PHRASE65
		    <SET TEMP11 %<> (TYPE FALSE)>
PHRASE71
		    <RETURN TEMP11>
		    <DEAD TEMP11>
		    <END POINTER-OVERLAP?>
"	Generate TYPE? code for all various cases."

#WORD *13443272552*
<GFCN TYPE?-GEN ("VALUE" ANY NODE ANY "OPTIONAL" ANY ANY ANY ANY) NOD9 WHERE10 NOTF11 BRANCH12 DIR13 SETF14>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7 OPT8>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <PUSH %<>>
OPT8
		    <TEMP B2-15 RW17 K18:LIST SDIR19 FLS20 (TEST?22 'T) (FIRST23 'T) TEMP28 REG16 B3-21>
		    <INTGO>
		    <SET RW17 WHERE10>
		    <NTHUV NOD9 5 = K18 (TYPE LIST)>
		    <SET SDIR19 DIR13>
		    <EQUAL? RW17 'FLUSHED - TAG24>
		    <SET FLS20 'T (TYPE ATOM)>
		    <JUMP + TAG25>
TAG24
		    <SET FLS20 %<> (TYPE FALSE)>
TAG25
		    <NTHUV NOD9 3 = TEMP28>
		    <EQUAL? TEMP28 'FALSE - PHRASE27>
		    <DEAD TEMP28>
		    <FRAME 'COMPILE-WARNING>
		    <PUSH "TYPE? never true: ">
		    <PUSH NOD9>
		    <CALL 'COMPILE-WARNING 2>
		    <SET TEST?22 #FALSE (1) (TYPE FALSE)>
		    <JUMP + PHRASE30>
PHRASE27
		    <FRAME 'TYPE-OK?>
		    <NTHUV NOD9 3 = STACK>
		    <PUSH 'FALSE>
		    <CALL 'TYPE-OK? 2 = TEMP28>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> - PHRASE30>
		    <DEAD TEMP28>
		    <FRAME 'COMPILE-WARNING>
		    <PUSH "TYPE? always true: ">
		    <PUSH NOD9>
		    <CALL 'COMPILE-WARNING 2>
		    <SET TEST?22 #FALSE (2) (TYPE FALSE)>
PHRASE30
		    <FRAME 'GEN>
		    <NTHL K18 1 = STACK (TYPE NODE)>
		    <PUSH 'DONT-CARE>
		    <CALL 'GEN 2 = REG16>
		    <TYPE? NOTF11 <TYPE-CODE FALSE> + TAG36>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG35>
		    <DEAD DIR13>
		    <SET DIR13 'T (TYPE ATOM)>
		    <JUMP + TAG36>
TAG35
		    <SET DIR13 %<> (TYPE FALSE)>
TAG36
		    <RESTL K18 1 = K18 (TYPE LIST)>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE38>
		    <VEQUAL? FLS20 0 + PHRASE38>
		    <RESTL K18 1 = TEMP28 (TYPE LIST)>
		    <EMPL? TEMP28 + BOOL40 (TYPE LIST)>
		    <DEAD TEMP28>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - BOOL40>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = B2-15>
BOOL40
		    <LOOP>
AGAIN43
		    <INTGO>
		    <RESTL K18 1 = FLS20 (TYPE LIST)>
		    <EMPL? FLS20 - PHRASE45 (TYPE LIST)>
		    <DEAD FLS20>
		    <FRAME 'FREE-TEMP>
		    <PUSH REG16>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <TYPE? TEST?22 <TYPE-CODE FALSE> + PHRASE49>
		    <FRAME 'GEN-TYPE?>
		    <PUSH REG16>
		    <DEAD REG16>
		    <NTHL K18 1 = FLS20 (TYPE NODE)>
		    <DEAD K18>
		    <NTHUV FLS20 4 = STACK>
		    <DEAD FLS20>
		    <PUSH BRANCH12>
		    <PUSH DIR13>
		    <CALL 'GEN-TYPE? 4>
PHRASE49
		    <TYPE? TEST?22 <TYPE-CODE FALSE> - BOOL54>
		    <TYPE? DIR13 <TYPE-CODE FALSE> + BOOL54>
		    <NTHL TEST?22 1 = FLS20>
		    <EQUAL? FLS20 2 + BOOL53>
		    <DEAD FLS20>
BOOL54
		    <TYPE? TEST?22 <TYPE-CODE FALSE> - PHRASE52>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - PHRASE52>
		    <DEAD DIR13>
		    <NTHL TEST?22 1 = FLS20>
		    <DEAD TEST?22>
		    <EQUAL? FLS20 1 - PHRASE52>
		    <DEAD FLS20>
BOOL53
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <CALL 'BRANCH-TAG 1>
PHRASE52
		    <TYPE? B2-15 <TYPE-CODE UNBOUND> + PHRASE246>
		    <FRAME 'LABEL-TAG>
		    <PUSH B2-15>
		    <DEAD B2-15>
		    <CALL 'LABEL-TAG 1>
		    <JUMP + PHRASE246>
PHRASE45
		    <TYPE? TEST?22 <TYPE-CODE FALSE> + PHRASE61>
		    <FRAME 'GEN-TYPE?>
		    <PUSH REG16>
		    <NTHL K18 1 = FLS20 (TYPE NODE)>
		    <NTHUV FLS20 4 = STACK>
		    <DEAD FLS20>
		    <TYPE? DIR13 <TYPE-CODE FALSE> + PHRASE64>
		    <SET FLS20 BRANCH12>
		    <JUMP + PHRASE65>
PHRASE64
		    <SET FLS20 B2-15>
PHRASE65
		    <PUSH FLS20>
		    <DEAD FLS20>
		    <PUSH 'T>
		    <CALL 'GEN-TYPE? 4>
		    <FRAME 'GEN-TYPE?>
		    <PUSH REG16>
		    <RESTL K18 1 = FLS20 (TYPE LIST)>
		    <NTHL FLS20 1 = FLS20 (TYPE NODE)>
		    <NTHUV FLS20 4 = STACK>
		    <DEAD FLS20>
		    <TYPE? DIR13 <TYPE-CODE FALSE> + PHRASE68>
		    <SET FLS20 BRANCH12>
		    <JUMP + PHRASE69>
PHRASE68
		    <SET FLS20 B2-15>
PHRASE69
		    <PUSH FLS20>
		    <DEAD FLS20>
		    <PUSH 'T>
		    <CALL 'GEN-TYPE? 4>
PHRASE61
		    <RESTL K18 1 = K18 (TYPE LIST)>
		    <RESTL K18 1 = K18 (TYPE LIST)>
		    <EMPL? K18 - AGAIN43 (TYPE LIST)>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - BOOL75>
		    <TYPE? TEST?22 <TYPE-CODE FALSE> - BOOL77>
BOOL75
		    <TYPE? TEST?22 <TYPE-CODE FALSE> - PHRASE246>
		    <TYPE? DIR13 <TYPE-CODE FALSE> + BOOL78>
		    <NTHL TEST?22 1 = FLS20>
		    <EQUAL? FLS20 2 + BOOL77>
		    <DEAD FLS20>
BOOL78
		    <TYPE? DIR13 <TYPE-CODE FALSE> - PHRASE246>
		    <DEAD DIR13>
		    <NTHL TEST?22 1 = FLS20>
		    <DEAD TEST?22>
		    <EQUAL? FLS20 1 - PHRASE246>
		    <DEAD FLS20>
BOOL77
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH B2-15>
		    <DEAD B2-15>
		    <CALL 'LABEL-TAG 1>
		    <JUMP + PHRASE246>
PHRASE38
		    <VEQUAL? FLS20 0 + BOOL82>
		    <DEAD FLS20>
		    <TYPE? TEST?22 <TYPE-CODE FALSE> - BOOL82>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE246>
BOOL82
		    <TYPE? NOTF11 <TYPE-CODE FALSE> - BOOL84>
		    <DEAD NOTF11>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> - TAG86>
		    <SET FLS20 'T (TYPE ATOM)>
		    <JUMP + TAG87>
TAG86
		    <SET FLS20 %<> (TYPE FALSE)>
TAG87
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG88>
		    <SET TEMP28 'T (TYPE ATOM)>
		    <JUMP + TAG89>
TAG88
		    <SET TEMP28 %<> (TYPE FALSE)>
TAG89
		    <VEQUAL? FLS20 TEMP28 + PHRASE83>
		    <DEAD FLS20 TEMP28>
		    <TYPE? SETF14 <TYPE-CODE FALSE> - PHRASE83>
BOOL84
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = B2-15>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = B3-21>
		    <TYPE? TEST?22 <TYPE-CODE FALSE> + PHRASE94>
		    <TYPE? SETF14 <TYPE-CODE FALSE> + PHRASE96>
		    <DEAD SETF14>
		    <EQUAL? WHERE10 'DONT-CARE - PHRASE98>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = WHERE10>
PHRASE98
		    <FRAME 'DEALLOCATE-TEMP>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <TYPE? SDIR19 <TYPE-CODE FALSE> - TAG103>
		    <SET TEMP28 'T (TYPE ATOM)>
		    <JUMP + TAG104>
TAG103
		    <SET TEMP28 %<> (TYPE FALSE)>
TAG104
		    <PUSH TEMP28>
		    <DEAD TEMP28>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <CALL 'MOVE-ARG 2 = STACK>
		    <CALL 'DEALLOCATE-TEMP 1>
PHRASE96
		    <LOOP>
AGAIN106
		    <INTGO>
		    <RESTL K18 1 = FLS20 (TYPE LIST)>
		    <EMPL? FLS20 - PHRASE108 (TYPE LIST)>
		    <DEAD FLS20>
		    <FRAME 'FREE-TEMP>
		    <PUSH REG16>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <FRAME 'GEN-TYPE?>
		    <PUSH REG16>
		    <DEAD REG16>
		    <NTHL K18 1 = FLS20 (TYPE NODE)>
		    <DEAD K18>
		    <NTHUV FLS20 4 = STACK>
		    <DEAD FLS20>
		    <PUSH B2-15>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE112>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG113>
		    <DEAD DIR13>
		    <SET FLS20 'T (TYPE ATOM)>
		    <JUMP + PHRASE115>
TAG113
		    <SET FLS20 %<> (TYPE FALSE)>
		    <JUMP + PHRASE115>
PHRASE112
		    <SET FLS20 DIR13>
		    <DEAD DIR13>
PHRASE115
		    <PUSH FLS20>
		    <DEAD FLS20>
		    <CALL 'GEN-TYPE? 4>
		    <JUMP + EXIT105>
PHRASE108
		    <FRAME 'GEN-TYPE?>
		    <PUSH REG16>
		    <NTHL K18 1 = FLS20 (TYPE NODE)>
		    <NTHUV FLS20 4 = STACK>
		    <DEAD FLS20>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE121>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - PHRASE119>
		    <JUMP + PHRASE122>
PHRASE121
		    <TYPE? DIR13 <TYPE-CODE FALSE> + PHRASE119>
PHRASE122
		    <SET FLS20 B2-15>
		    <JUMP + PHRASE123>
PHRASE119
		    <SET FLS20 B3-21>
PHRASE123
		    <PUSH FLS20>
		    <DEAD FLS20>
		    <PUSH 'T>
		    <CALL 'GEN-TYPE? 4>
		    <FRAME 'GEN-TYPE?>
		    <PUSH REG16>
		    <RESTL K18 1 = FLS20 (TYPE LIST)>
		    <NTHL FLS20 1 = FLS20 (TYPE NODE)>
		    <NTHUV FLS20 4 = STACK>
		    <DEAD FLS20>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE128>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - PHRASE126>
		    <JUMP + PHRASE129>
PHRASE128
		    <TYPE? DIR13 <TYPE-CODE FALSE> + PHRASE126>
PHRASE129
		    <SET FLS20 B2-15>
		    <JUMP + PHRASE130>
PHRASE126
		    <SET FLS20 B3-21>
PHRASE130
		    <PUSH FLS20>
		    <DEAD FLS20>
		    <PUSH 'T>
		    <CALL 'GEN-TYPE? 4>
		    <RESTL K18 1 = K18 (TYPE LIST)>
		    <RESTL K18 1 = K18 (TYPE LIST)>
		    <EMPL? K18 - AGAIN106 (TYPE LIST)>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE136>
		    <TYPE? DIR13 <TYPE-CODE FALSE> + EXIT105>
		    <DEAD DIR13>
		    <JUMP + PHRASE137>
PHRASE136
		    <TYPE? DIR13 <TYPE-CODE FALSE> - EXIT105>
		    <DEAD DIR13>
PHRASE137
		    <FRAME 'BRANCH-TAG>
		    <PUSH B2-15>
		    <CALL 'BRANCH-TAG 1>
EXIT105
		    <FRAME 'LABEL-TAG>
		    <PUSH B3-21>
		    <DEAD B3-21>
		    <CALL 'LABEL-TAG 1>
		    <EQUAL? WHERE10 'DONT-CARE - PHRASE141>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = WHERE10>
PHRASE141
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE144>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH SDIR19>
		    <DEAD SDIR19>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <CALL 'MOVE-ARG 2 = WHERE10>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH B2-15>
		    <DEAD B2-15>
		    <CALL 'LABEL-TAG 1>
		    <JUMP + PHRASE246>
PHRASE144
		    <FRAME 'TRUE-FALSE>
		    <PUSH NOD9>
		    <DEAD NOD9>
		    <PUSH B2-15>
		    <DEAD B2-15>
		    <PUSH WHERE10>
		    <CALL 'TRUE-FALSE 3>
		    <JUMP + PHRASE246>
PHRASE94
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE153>
		    <TYPE? DIR13 <TYPE-CODE FALSE> + BOOL157>
		    <NTHL TEST?22 1 = FLS20>
		    <EQUAL? FLS20 2 + BOOL156>
		    <DEAD FLS20>
BOOL157
		    <TYPE? DIR13 <TYPE-CODE FALSE> - PHRASE246>
		    <DEAD DIR13>
		    <NTHL TEST?22 1 = FLS20>
		    <DEAD TEST?22>
		    <EQUAL? FLS20 1 - PHRASE246>
		    <DEAD FLS20>
BOOL156
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH SDIR19>
		    <DEAD SDIR19>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <CALL 'MOVE-ARG 2 = WHERE10>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <CALL 'BRANCH-TAG 1>
		    <JUMP + PHRASE246>
PHRASE153
		    <FRAME 'MOVE-ARG>
		    <NTHL TEST?22 1 = FLS20>
		    <DEAD TEST?22>
		    <EQUAL? FLS20 2 - TAG164>
		    <DEAD FLS20>
		    <PUSH 'T>
		    <JUMP + TAG165>
TAG164
		    <PUSH %<>>
TAG165
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <CALL 'MOVE-ARG 2 = WHERE10>
		    <JUMP + PHRASE246>
PHRASE83
		    <TYPE? WHERE10 <TYPE-CODE TEMP> + PHRASE174>
		    <TYPE? REG16 <TYPE-CODE TEMP> - PHRASE170>
		    <EMPL? K18 + PHRASE170>
		    <RESTL K18 1 = FLS20 (TYPE LIST)>
		    <EMPL? FLS20 - PHRASE170>
		    <DEAD FLS20>
		    <NTHUV REG16 2 = FLS20 (TYPE FIX)>
		    <GRTR? FLS20 1 + PHRASE170 (TYPE FIX)>
		    <DEAD FLS20>
		    <SET WHERE10 REG16>
		    <JUMP + PHRASE174>
PHRASE170
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = WHERE10>
PHRASE174
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = B2-15>
		    <TYPE? TEST?22 <TYPE-CODE FALSE> - BOOL179>
		    <EMPL? K18 + PHRASE178>
		    <RESTL K18 1 = FLS20 (TYPE LIST)>
		    <EMPL? FLS20 + PHRASE178>
		    <DEAD FLS20>
		    <NTHL TEST?22 1 = FLS20>
		    <EQUAL? FLS20 2 - PHRASE178>
		    <DEAD FLS20>
BOOL179
		    <TYPE? SETF14 <TYPE-CODE FALSE> + PHRASE182>
		    <DEAD SETF14>
		    <FRAME 'DEALLOCATE-TEMP>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH %<>>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <CALL 'MOVE-ARG 2 = WHERE10>
		    <PUSH WHERE10>
		    <CALL 'DEALLOCATE-TEMP 1>
PHRASE182
		    <SET FLS20 K18 (TYPE LIST)>
		    <DEAD K18>
		    <LOOP>
MAP187
		    <INTGO>
		    <EMPL? FLS20 + PHRASE246>
		    <SET K18 FLS20>
		    <NTHL K18 1 = SDIR19 (TYPE NODE)>
		    <TYPE? TEST?22 <TYPE-CODE FALSE> - BOOL200>
		    <RESTL K18 1 = TEMP28 (TYPE LIST)>
		    <EMPL? TEMP28 + PHRASE199 (TYPE LIST)>
		    <DEAD TEMP28>
BOOL200
		    <FRAME 'GEN-TYPE?>
		    <PUSH REG16>
		    <NTHUV SDIR19 4 = STACK>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + BOOL205>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - BOOL205>
		    <RESTL K18 1 = TEMP28 (TYPE LIST)>
		    <EMPL? TEMP28 + PHRASE204 (TYPE LIST)>
		    <DEAD TEMP28>
BOOL205
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = B3-21>
		    <SET TEMP28 B3-21>
		    <JUMP + PHRASE207>
PHRASE204
		    <SET TEMP28 BRANCH12>
PHRASE207
		    <PUSH TEMP28>
		    <DEAD TEMP28>
		    <PUSH %<>>
		    <CALL 'GEN-TYPE? 4>
PHRASE199
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <NTHUV SDIR19 4 = STACK>
		    <DEAD SDIR19>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <CALL 'MOVE-ARG 2 = WHERE10>
		    <VEQUAL? FIRST23 0 - PHRASE211>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH WHERE10>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <JUMP + PHRASE213>
PHRASE211
		    <SET FIRST23 %<> (TYPE FALSE)>
PHRASE213
		    <RESTL K18 1 = TEMP28 (TYPE LIST)>
		    <DEAD K18>
		    <EMPL? TEMP28 - PHRASE215 (TYPE LIST)>
		    <DEAD TEMP28>
		    <FRAME 'LABEL-TAG>
		    <PUSH B2-15>
		    <CALL 'LABEL-TAG 1>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE218>
		    <TYPE? DIR13 <TYPE-CODE FALSE> + PHRASE218>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH12>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH B3-21>
		    <CALL 'LABEL-TAG 1>
		    <JUMP + PHRASE222>
PHRASE218
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> - PHRASE222>
		    <FRAME 'BRANCH-TAG>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = B2-15>
		    <PUSH B2-15>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH B3-21>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'DEALLOCATE-TEMP>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH %<>>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <CALL 'MOVE-ARG 2 = STACK>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH B2-15>
		    <CALL 'LABEL-TAG 1>
PHRASE222
		    <FRAME 'FREE-TEMP>
		    <PUSH REG16>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <JUMP + PHRASE231>
PHRASE215
		    <FRAME 'BRANCH-TAG>
		    <PUSH B2-15>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH B3-21>
		    <CALL 'LABEL-TAG 1>
PHRASE231
		    <RESTL FLS20 1 = FLS20 (TYPE LIST)>
		    <JUMP + MAP187>
PHRASE178
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE236>
		    <TYPE? DIR13 <TYPE-CODE FALSE> + BOOL240>
		    <NTHL TEST?22 1 = FLS20>
		    <EQUAL? FLS20 2 + BOOL239>
		    <DEAD FLS20>
BOOL240
		    <TYPE? DIR13 <TYPE-CODE FALSE> - PHRASE246>
		    <NTHL TEST?22 1 = FLS20>
		    <DEAD TEST?22>
		    <EQUAL? FLS20 1 - PHRASE246>
		    <DEAD FLS20>
BOOL239
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <SET FLS20 DIR13>
		    <DEAD DIR13>
		    <TYPE? FLS20 <TYPE-CODE FALSE> + BOOL244>
		    <NTHL K18 1 = B2-15 (TYPE NODE)>
		    <DEAD K18>
		    <NTHUV B2-15 4 = FLS20>
		    <DEAD B2-15>
BOOL244
		    <PUSH FLS20>
		    <DEAD FLS20>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <CALL 'MOVE-ARG 2 = WHERE10>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <CALL 'BRANCH-TAG 1>
		    <JUMP + PHRASE246>
PHRASE236
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <SET FLS20 DIR13>
		    <DEAD DIR13>
		    <TYPE? FLS20 <TYPE-CODE FALSE> + BOOL249>
		    <NTHL K18 1 = B2-15 (TYPE NODE)>
		    <DEAD K18>
		    <NTHUV B2-15 4 = FLS20>
		    <DEAD B2-15>
BOOL249
		    <PUSH FLS20>
		    <DEAD FLS20>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <CALL 'MOVE-ARG 2 = WHERE10>
PHRASE246
		    <FRAME 'MOVE-ARG>
		    <PUSH WHERE10>
		    <DEAD WHERE10>
		    <PUSH RW17>
		    <DEAD RW17>
		    <CALL 'MOVE-ARG 2 = FLS20>
		    <RETURN FLS20>
		    <DEAD FLS20>
		    <END TYPE?-GEN>
#WORD *31044550622*
<GFCN PGEN-DISPATCH ("VALUE" ANY ANY ANY ANY ANY ANY ANY) N4 W5 NF6 B7 D8 SF9>
		    <TEMP TEMP35>
		    <INTGO>
		    <NTHUV N4 1 = TEMP35 (TYPE FIX)>
		    <VEQUAL? TEMP35 90 - CASE12>
		    <FRAME 'CALL-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <CALL 'CALL-GEN 5 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE12
		    <VEQUAL? TEMP35 7 - CASE13>
		    <FRAME 'COND-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <CALL 'COND-GEN 5 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE13
		    <VEQUAL? TEMP35 12 - CASE14>
		    <FRAME 'OR-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <CALL 'OR-GEN 5 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE14
		    <VEQUAL? TEMP35 13 - CASE15>
		    <FRAME 'AND-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <CALL 'AND-GEN 5 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE15
		    <VEQUAL? TEMP35 19 - CASE16>
		    <FRAME '0-TEST>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL '0-TEST 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE16
		    <VEQUAL? TEMP35 20 - CASE17>
		    <FRAME 'NOT-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL 'NOT-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE17
		    <VEQUAL? TEMP35 21 - CASE18>
		    <FRAME '1?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL '1?-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE18
		    <VEQUAL? TEMP35 22 - CASE19>
		    <FRAME 'TEST-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL 'TEST-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE19
		    <VEQUAL? TEMP35 23 - CASE20>
		    <FRAME '==-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL '==-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE20
		    <VEQUAL? TEMP35 24 - CASE21>
		    <FRAME 'TYPE?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL 'TYPE?-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE21
		    <VEQUAL? TEMP35 26 - CASE22>
		    <FRAME 'MT-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL 'MT-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE22
		    <VEQUAL? TEMP35 91 - CASE23>
		    <FRAME 'MT-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL 'MT-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE23
		    <VEQUAL? TEMP35 43 - CASE24>
		    <FRAME 'ASSIGNED?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL 'ASSIGNED?-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE24
		    <VEQUAL? TEMP35 56 - CASE25>
		    <FRAME 'GET-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL 'GET-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE25
		    <VEQUAL? TEMP35 57 - CASE26>
		    <FRAME 'GET2-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL 'GET2-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE26
		    <VEQUAL? TEMP35 73 - CASE27>
		    <FRAME 'MEMQ-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL 'MEMQ-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE27
		    <VEQUAL? TEMP35 69 - CASE28>
		    <FRAME 'LENGTH?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL 'LENGTH?-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE28
		    <VEQUAL? TEMP35 92 - CASE29>
		    <FRAME 'GASSIGNED?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL 'GASSIGNED?-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE29
		    <VEQUAL? TEMP35 97 - CASE30>
		    <FRAME 'VALID-TYPE?-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL 'VALID-TYPE?-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE30
		    <VEQUAL? TEMP35 95 - CASE31>
		    <FRAME '=?-STRING-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <PUSH SF9>
		    <DEAD SF9>
		    <CALL '=?-STRING-GEN 6 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE31
		    <VEQUAL? TEMP35 11 - CASE32>
		    <FRAME 'SET-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <CALL 'SET-GEN 5 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE32
		    <VEQUAL? TEMP35 50 - CASE33>
		    <FRAME 'MAPFR-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <CALL 'MAPFR-GEN 5 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE33
		    <VEQUAL? TEMP35 5 - CASE34>
		    <DEAD TEMP35>
		    <FRAME 'PROG-REP-GEN>
		    <PUSH N4>
		    <DEAD N4>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH NF6>
		    <DEAD NF6>
		    <PUSH B7>
		    <DEAD B7>
		    <PUSH D8>
		    <DEAD D8>
		    <CALL 'PROG-REP-GEN 5 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
CASE34
		    <FRAME 'COMPILE-LOSSAGE>
		    <PUSH "Inconsisent use of predicate internally:  ">
		    <PUSH N4>
		    <DEAD N4>
		    <CALL 'COMPILE-LOSSAGE 2 = TEMP35>
		    <RETURN TEMP35>
		    <DEAD TEMP35>
		    <END PGEN-DISPATCH>
#WORD *7343117016*
<GFCN PRED-BRANCH-GEN ("VALUE" ANY ANY NODE ANY "OPTIONAL" ANY ANY ANY) TAG8 NOD9 TF10 WHERE11 NF12 SETF13>
		    <OPT-DISPATCH 3 %<> OPT4 OPT5 OPT6 OPT7>
OPT4
		    <PUSH 'FLUSHED>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <TEMP W2-14 TEMP22>
		    <INTGO>
		    <EQUAL? WHERE11 'FLUSHED - PHRASE18>
		    <SET W2-14 'DONT-CARE (TYPE ATOM)>
		    <JUMP + PHRASE19>
PHRASE18
		    <SET W2-14 WHERE11>
PHRASE19
		    <NTHUV NOD9 3 = TEMP22>
		    <EQUAL? TEMP22 'NO-RETURN - PHRASE21>
		    <DEAD TEMP22>
		    <FRAME 'GEN>
		    <PUSH NOD9>
		    <DEAD NOD9>
		    <PUSH 'FLUSHED>
		    <CALL 'GEN 2>
		    <GVAL 'NO-DATUM = TEMP22>
		    <RETURN TEMP22>
		    <DEAD TEMP22>
PHRASE21
		    <FRAME 'PRED-CHECK?>
		    <PUSH NOD9>
		    <PUSH TF10>
		    <PUSH WHERE11>
		    <CALL 'PRED-CHECK? 3 = TEMP22>
		    <TYPE? TEMP22 <TYPE-CODE FALSE> + PHRASE24>
		    <DEAD TEMP22>
		    <FRAME 'PGEN-DISPATCH>
		    <PUSH NOD9>
		    <DEAD NOD9>
		    <PUSH WHERE11>
		    <DEAD WHERE11>
		    <PUSH NF12>
		    <DEAD NF12>
		    <PUSH TAG8>
		    <DEAD TAG8>
		    <PUSH TF10>
		    <DEAD TF10>
		    <PUSH SETF13>
		    <DEAD SETF13>
		    <CALL 'PGEN-DISPATCH 6 = TEMP22>
		    <RETURN TEMP22>
		    <DEAD TEMP22>
PHRASE24
		    <TYPE? NF12 <TYPE-CODE FALSE> + PHRASE28>
		    <DEAD NF12>
		    <FRAME 'GEN>
		    <PUSH NOD9>
		    <PUSH 'DONT-CARE>
		    <CALL 'GEN 2 = W2-14>
		    <EQUAL? WHERE11 'FLUSHED - PHRASE31>
		    <FRAME 'D-B-TAG>
		    <PUSH TAG8>
		    <DEAD TAG8>
		    <PUSH W2-14>
		    <DEAD W2-14>
		    <TYPE? TF10 <TYPE-CODE FALSE> - TAG33>
		    <DEAD TF10>
		    <SET TEMP22 'T (TYPE ATOM)>
		    <JUMP + TAG34>
TAG33
		    <SET TEMP22 %<> (TYPE FALSE)>
TAG34
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <NTHUV NOD9 3 = STACK>
		    <DEAD NOD9>
		    <CALL 'D-B-TAG 4 = TEMP22>
		    <RETURN TEMP22>
		    <DEAD TEMP22>
PHRASE31
		    <FRAME 'D-B-TAG>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP22>
		    <PUSH TEMP22>
		    <PUSH W2-14>
		    <PUSH TF10>
		    <NTHUV NOD9 3 = STACK>
		    <DEAD NOD9>
		    <CALL 'D-B-TAG 4>
		    <FRAME 'FREE-TEMP>
		    <PUSH W2-14>
		    <DEAD W2-14>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH TF10>
		    <DEAD TF10>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH WHERE11>
		    <DEAD WHERE11>
		    <CALL 'MOVE-ARG 2 = W2-14>
		    <FRAME 'BRANCH-TAG>
		    <PUSH TAG8>
		    <DEAD TAG8>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <CALL 'LABEL-TAG 1>
		    <RETURN W2-14>
		    <DEAD W2-14>
PHRASE28
		    <FRAME 'GEN>
		    <PUSH NOD9>
		    <PUSH W2-14>
		    <DEAD W2-14>
		    <CALL 'GEN 2 = W2-14>
		    <FRAME 'D-B-TAG>
		    <PUSH TAG8>
		    <DEAD TAG8>
		    <PUSH W2-14>
		    <PUSH TF10>
		    <DEAD TF10>
		    <NTHUV NOD9 3 = STACK>
		    <DEAD NOD9>
		    <CALL 'D-B-TAG 4>
		    <FRAME 'MOVE-ARG>
		    <PUSH W2-14>
		    <DEAD W2-14>
		    <PUSH WHERE11>
		    <DEAD WHERE11>
		    <CALL 'MOVE-ARG 2 = TEMP22>
		    <RETURN TEMP22>
		    <DEAD TEMP22>
		    <END PRED-BRANCH-GEN>
#WORD *4524503660*
<GFCN VALID-TYPE?-GEN ("VALUE" ANY NODE ANY "OPTIONAL" ANY ANY ANY ANY) N9 W10 NOTF11 BRANCH12 DIR13 SETF14>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7 OPT8>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <PUSH %<>>
OPT8
		    <TEMP TEMP22 NN15 RW17 FLS18 TEMP45>
		    <INTGO>
		    <NTHUV N9 5 = TEMP22 (TYPE LIST)>
		    <NTHL TEMP22 1 = NN15 (TYPE NODE)>
		    <DEAD TEMP22>
		    <SET TEMP22 DIR13>
		    <SET RW17 W10>
		    <EQUAL? RW17 'FLUSHED - TAG23>
		    <SET FLS18 'T (TYPE ATOM)>
		    <JUMP + TAG24>
TAG23
		    <SET FLS18 %<> (TYPE FALSE)>
TAG24
		    <TYPE? NOTF11 <TYPE-CODE FALSE> + TAG28>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG27>
		    <DEAD DIR13>
		    <SET DIR13 'T (TYPE ATOM)>
		    <JUMP + TAG28>
TAG27
		    <SET DIR13 %<> (TYPE FALSE)>
TAG28
		    <FRAME 'GEN>
		    <PUSH NN15>
		    <DEAD NN15>
		    <CALL 'GEN 1 = NN15>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE31>
		    <VEQUAL? FLS18 0 + PHRASE31>
		    <FRAME 'GEN-VT>
		    <PUSH NN15>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <PUSH DIR13>
		    <DEAD DIR13>
		    <CALL 'GEN-VT 3>
		    <FRAME 'FREE-TEMP>
		    <PUSH NN15>
		    <DEAD NN15>
		    <CALL 'FREE-TEMP 1>
		    <GVAL 'NO-DATUM = TEMP22>
		    <RETURN TEMP22>
		    <DEAD TEMP22>
PHRASE31
		    <VEQUAL? FLS18 0 + TAG36>
		    <DEAD FLS18>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> - TAG36>
		    <RETURN 'T>
TAG36
		    <TYPE? NOTF11 <TYPE-CODE FALSE> - BOOL38>
		    <DEAD NOTF11>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> - TAG40>
		    <SET FLS18 'T (TYPE ATOM)>
		    <JUMP + TAG41>
TAG40
		    <SET FLS18 %<> (TYPE FALSE)>
TAG41
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG43>
		    <SET TEMP45 'T (TYPE ATOM)>
		    <JUMP + TAG44>
TAG43
		    <SET TEMP45 %<> (TYPE FALSE)>
TAG44
		    <VEQUAL? FLS18 TEMP45 + PHRASE37>
		    <DEAD FLS18 TEMP45>
		    <TYPE? SETF14 <TYPE-CODE FALSE> - PHRASE37>
BOOL38
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = FLS18>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0>
		    <FRAME 'GEN-VT>
		    <PUSH NN15>
		    <PUSH FLS18>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE50>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG51>
		    <DEAD DIR13>
		    <SET TEMP45 'T (TYPE ATOM)>
		    <JUMP + PHRASE53>
TAG51
		    <SET TEMP45 %<> (TYPE FALSE)>
		    <JUMP + PHRASE53>
PHRASE50
		    <SET TEMP45 DIR13>
		    <DEAD DIR13>
PHRASE53
		    <PUSH TEMP45>
		    <DEAD TEMP45>
		    <CALL 'GEN-VT 3>
		    <FRAME 'FREE-TEMP>
		    <PUSH NN15>
		    <DEAD NN15>
		    <CALL 'FREE-TEMP 1>
		    <EQUAL? W10 'DONT-CARE - PHRASE56>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W10>
PHRASE56
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE59>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH TEMP22>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W10>
		    <DEAD W10>
		    <CALL 'MOVE-ARG 2 = W10>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH FLS18>
		    <DEAD FLS18>
		    <CALL 'LABEL-TAG 1>
		    <TYPE? SETF14 <TYPE-CODE FALSE> + PHRASE71>
		    <DEAD SETF14>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH W10>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <TYPE? TEMP22 <TYPE-CODE FALSE> - TAG69>
		    <DEAD TEMP22>
		    <SET TEMP45 'T (TYPE ATOM)>
		    <JUMP + TAG70>
TAG69
		    <SET TEMP45 %<> (TYPE FALSE)>
TAG70
		    <PUSH TEMP45>
		    <DEAD TEMP45>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W10>
		    <CALL 'MOVE-ARG 2>
		    <JUMP + PHRASE71>
PHRASE59
		    <FRAME 'TRUE-FALSE>
		    <PUSH N9>
		    <DEAD N9>
		    <PUSH FLS18>
		    <DEAD FLS18>
		    <PUSH W10>
		    <CALL 'TRUE-FALSE 3>
PHRASE71
		    <FRAME 'MOVE-ARG>
		    <PUSH W10>
		    <DEAD W10>
		    <PUSH RW17>
		    <DEAD RW17>
		    <CALL 'MOVE-ARG 2 = TEMP22>
		    <RETURN TEMP22>
		    <DEAD TEMP22>
PHRASE37
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = FLS18>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP22>
		    <TYPE? W10 <TYPE-CODE TEMP> + PHRASE84>
		    <TYPE? NN15 <TYPE-CODE TEMP> - PHRASE80>
		    <NTHUV NN15 2 = TEMP45 (TYPE FIX)>
		    <GRTR? TEMP45 1 + PHRASE80 (TYPE FIX)>
		    <DEAD TEMP45>
		    <SET W10 NN15>
		    <JUMP + PHRASE84>
PHRASE80
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W10>
PHRASE84
		    <TYPE? SETF14 <TYPE-CODE FALSE> + PHRASE87>
		    <DEAD SETF14>
		    <FRAME 'DEALLOCATE-TEMP>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH %<>>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W10>
		    <CALL 'MOVE-ARG 2 = STACK>
		    <CALL 'DEALLOCATE-TEMP 1>
PHRASE87
		    <FRAME 'GEN-VT>
		    <PUSH NN15>
		    <SET TEMP45 BRANCH12>
		    <TYPE? TEMP45 <TYPE-CODE FALSE> - PHRASE93>
		    <SET TEMP45 TEMP22>
PHRASE93
		    <PUSH TEMP45>
		    <DEAD TEMP45>
		    <PUSH DIR13>
		    <DEAD DIR13>
		    <PUSH W10>
		    <CALL 'GEN-VT 4>
		    <FRAME 'FREE-TEMP>
		    <PUSH NN15>
		    <DEAD NN15>
		    <CALL 'FREE-TEMP 1>
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> - PHRASE96>
		    <DEAD BRANCH12>
		    <FRAME 'BRANCH-TAG>
		    <PUSH FLS18>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH TEMP22>
		    <DEAD TEMP22>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH %<>>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W10>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'LABEL-TAG>
		    <PUSH FLS18>
		    <DEAD FLS18>
		    <CALL 'LABEL-TAG 1>
PHRASE96
		    <FRAME 'MOVE-ARG>
		    <PUSH W10>
		    <DEAD W10>
		    <PUSH RW17>
		    <DEAD RW17>
		    <CALL 'MOVE-ARG 2 = TEMP22>
		    <RETURN TEMP22>
		    <DEAD TEMP22>
		    <END VALID-TYPE?-GEN>
#WORD *6402075010*
<GFCN TYPE-C-GEN ("VALUE" ANY ANY ANY) N4 W5>
		    <TEMP TEMP9 DATA6 RW7>
		    <INTGO>
		    <FRAME 'GEN>
		    <NTHUV N4 5 = TEMP9 (TYPE LIST)>
		    <DEAD N4>
		    <NTHL TEMP9 1 = STACK (TYPE NODE)>
		    <DEAD TEMP9>
		    <CALL 'GEN 1 = DATA6>
		    <SET RW7 W5>
		    <TYPE? W5 <TYPE-CODE TEMP> + PHRASE17>
		    <TYPE? DATA6 <TYPE-CODE TEMP> - PHRASE13>
		    <NTHUV DATA6 2 = TEMP9 (TYPE FIX)>
		    <GRTR? TEMP9 1 + PHRASE13 (TYPE FIX)>
		    <DEAD TEMP9>
		    <SET W5 DATA6>
		    <JUMP + PHRASE17>
PHRASE13
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W5>
PHRASE17
		    <FRAME 'GEN-TC>
		    <PUSH DATA6>
		    <PUSH W5>
		    <CALL 'GEN-TC 2>
		    <FRAME 'FREE-TEMP>
		    <PUSH DATA6>
		    <DEAD DATA6>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH RW7>
		    <DEAD RW7>
		    <CALL 'MOVE-ARG 2 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END TYPE-C-GEN>
#WORD *32654761745*
<GFCN =?-STRING-GEN ("VALUE" ANY NODE ANY "OPTIONAL" ANY ANY ANY ANY) N9 W10 NOTF11 BRANCH12 DIR13 SETF14>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5 OPT6 OPT7 OPT8>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <PUSH %<>>
OPT8
		    <TEMP TEMP24 N1-15:NODE N2-16:NODE SDIR17 RW18 FLS19 B2-20>
		    <INTGO>
		    <NTHUV N9 5 = TEMP24 (TYPE LIST)>
		    <NTHL TEMP24 1 = N1-15 (TYPE NODE)>
		    <DEAD TEMP24>
		    <NTHUV N9 5 = TEMP24 (TYPE LIST)>
		    <RESTL TEMP24 1 = TEMP24 (TYPE LIST)>
		    <NTHL TEMP24 1 = N2-16 (TYPE NODE)>
		    <DEAD TEMP24>
		    <SET SDIR17 DIR13>
		    <SET RW18 W10>
		    <EQUAL? RW18 'FLUSHED - TAG25>
		    <SET FLS19 'T (TYPE ATOM)>
		    <JUMP + TAG26>
TAG25
		    <SET FLS19 %<> (TYPE FALSE)>
TAG26
		    <NTHUV N9 4 = TEMP24>
		    <EQUAL? TEMP24 'N=? - TAG30>
		    <DEAD TEMP24>
		    <TYPE? NOTF11 <TYPE-CODE FALSE> - TAG29>
		    <DEAD NOTF11>
		    <SET NOTF11 'T (TYPE ATOM)>
		    <JUMP + TAG30>
TAG29
		    <SET NOTF11 %<> (TYPE FALSE)>
TAG30
		    <TYPE? BRANCH12 <TYPE-CODE FALSE> + PHRASE32>
		    <TYPE? NOTF11 <TYPE-CODE FALSE> + TAG36>
		    <DEAD NOTF11>
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG35>
		    <DEAD DIR13>
		    <SET DIR13 'T (TYPE ATOM)>
		    <JUMP + TAG36>
TAG35
		    <SET DIR13 %<> (TYPE FALSE)>
TAG36
		    <FRAME 'DO-STR-EQ>
		    <PUSH N1-15>
		    <DEAD N1-15>
		    <PUSH N2-16>
		    <DEAD N2-16>
		    <VEQUAL? FLS19 0 + PHRASE39>
		    <SET TEMP24 DIR13>
		    <DEAD DIR13>
		    <JUMP + TAG42>
PHRASE39
		    <TYPE? DIR13 <TYPE-CODE FALSE> - TAG41>
		    <DEAD DIR13>
		    <SET TEMP24 'T (TYPE ATOM)>
		    <JUMP + TAG42>
TAG41
		    <SET TEMP24 %<> (TYPE FALSE)>
TAG42
		    <PUSH TEMP24>
		    <DEAD TEMP24>
		    <VEQUAL? FLS19 0 + PHRASE44>
		    <SET TEMP24 BRANCH12>
		    <JUMP + PHRASE45>
PHRASE44
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = B2-20>
		    <SET TEMP24 B2-20>
PHRASE45
		    <PUSH TEMP24>
		    <DEAD TEMP24>
		    <NTHUV N9 4 = STACK>
		    <DEAD N9>
		    <CALL 'DO-STR-EQ 5>
		    <VEQUAL? FLS19 0 + TAG49>
		    <DEAD FLS19>
		    <RETURN %<>>
TAG49
		    <TYPE? SETF14 <TYPE-CODE FALSE> + PHRASE53>
		    <EQUAL? W10 'DONT-CARE - PHRASE53>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W10>
PHRASE53
		    <FRAME 'MOVE-ARG>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH SDIR17>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W10>
		    <DEAD W10>
		    <CALL 'MOVE-ARG 2 = STACK>
		    <PUSH RW18>
		    <DEAD RW18>
		    <CALL 'MOVE-ARG 2 = RW18>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH B2-20>
		    <DEAD B2-20>
		    <CALL 'LABEL-TAG 1>
		    <TYPE? SETF14 <TYPE-CODE FALSE> + PHRASE61>
		    <DEAD SETF14>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH RW18>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <TYPE? SDIR17 <TYPE-CODE FALSE> - TAG65>
		    <DEAD SDIR17>
		    <SET TEMP24 'T (TYPE ATOM)>
		    <JUMP + TAG66>
TAG65
		    <SET TEMP24 %<> (TYPE FALSE)>
TAG66
		    <PUSH TEMP24>
		    <DEAD TEMP24>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH RW18>
		    <CALL 'MOVE-ARG 2>
PHRASE61
		    <RETURN RW18>
		    <DEAD RW18>
PHRASE32
		    <NTHUV N9 4 = TEMP24>
		    <EQUAL? TEMP24 'STRCOMP - PHRASE68>
		    <DEAD TEMP24>
		    <FRAME 'DO-STR-EQ>
		    <PUSH N1-15>
		    <DEAD N1-15>
		    <PUSH N2-16>
		    <DEAD N2-16>
		    <PUSH %<>>
		    <PUSH %<>>
		    <PUSH 'STRCOMP>
		    <PUSH W10>
		    <DEAD W10>
		    <CALL 'DO-STR-EQ 6 = TEMP24>
		    <RETURN TEMP24>
		    <DEAD TEMP24>
PHRASE68
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = BRANCH12>
		    <FRAME 'DO-STR-EQ>
		    <PUSH N1-15>
		    <DEAD N1-15>
		    <PUSH N2-16>
		    <DEAD N2-16>
		    <PUSH NOTF11>
		    <DEAD NOTF11>
		    <PUSH BRANCH12>
		    <NTHUV N9 4 = STACK>
		    <DEAD N9>
		    <CALL 'DO-STR-EQ 5>
		    <EQUAL? W10 'DONT-CARE - PHRASE74>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = W10>
PHRASE74
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH 'T>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W10>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'DEALLOCATE-TEMP>
		    <PUSH W10>
		    <CALL 'DEALLOCATE-TEMP 1>
		    <FRAME 'BRANCH-TAG>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = B2-20>
		    <PUSH B2-20>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH BRANCH12>
		    <DEAD BRANCH12>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'MOVE-ARG>
		    <FRAME 'REFERENCE>
		    <PUSH %<>>
		    <CALL 'REFERENCE 1 = STACK>
		    <PUSH W10>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'LABEL-TAG>
		    <PUSH B2-20>
		    <DEAD B2-20>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'MOVE-ARG>
		    <PUSH W10>
		    <DEAD W10>
		    <PUSH RW18>
		    <DEAD RW18>
		    <CALL 'MOVE-ARG 2 = TEMP24>
		    <RETURN TEMP24>
		    <DEAD TEMP24>
		    <END =?-STRING-GEN>
#WORD *20207146271*
<GFCN DO-STR-EQ ("VALUE" ANY NODE NODE ANY ANY ANY "OPTIONAL" ANY) N1-6 N2-7 DIR8 BR9 NM10 W11>
		    <OPT-DISPATCH 5 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP TG1-19 D1-14 D2-15 TEMP33 INS18:STRING L1-12:TEMP L2-13:TEMP T1-16:TEMP T2-17:TEMP TEMP106 TEMP110:ATOM TG3-22>
		    <INTGO>
		    <TYPE? DIR8 <TYPE-CODE FALSE> + PHRASE25>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TG1-19>
PHRASE25
		    <FRAME 'GEN>
		    <PUSH N1-6>
		    <CALL 'GEN 1 = D1-14>
		    <FRAME 'GEN>
		    <PUSH N2-7>
		    <CALL 'GEN 1 = D2-15>
		    <EQUAL? NM10 'STRCOMP + PHRASE30>
		    <EQUAL? NM10 'S=? + PHRASE30>
		    <FRAME 'ISTYPE?>
		    <NTHUV N1-6 3 = STACK>
		    <CALL 'ISTYPE? 1 = TEMP33>
		    <VEQUAL? TEMP33 'STRING + PHRASE30>
		    <DEAD TEMP33>
		    <FRAME 'GEN-TYPE?>
		    <PUSH D1-14>
		    <PUSH 'STRING>
		    <TYPE? DIR8 <TYPE-CODE FALSE> + PHRASE36>
		    <SET TEMP33 TG1-19>
		    <JUMP + PHRASE37>
PHRASE36
		    <SET TEMP33 BR9>
PHRASE37
		    <PUSH TEMP33>
		    <DEAD TEMP33>
		    <PUSH %<>>
		    <CALL 'GEN-TYPE? 4>
		    <JUMP + PHRASE38>
PHRASE30
		    <EQUAL? NM10 'S=? + PHRASE38>
		    <EQUAL? NM10 'STRCOMP + PHRASE38>
		    <FRAME 'ISTYPE?>
		    <NTHUV N2-7 3 = STACK>
		    <CALL 'ISTYPE? 1 = TEMP33>
		    <VEQUAL? TEMP33 'STRING + PHRASE38>
		    <DEAD TEMP33>
		    <FRAME 'GEN-TYPE?>
		    <PUSH D2-15>
		    <PUSH 'STRING>
		    <TYPE? DIR8 <TYPE-CODE FALSE> + PHRASE43>
		    <SET TEMP33 TG1-19>
		    <JUMP + PHRASE44>
PHRASE43
		    <SET TEMP33 BR9>
PHRASE44
		    <PUSH TEMP33>
		    <DEAD TEMP33>
		    <PUSH %<>>
		    <CALL 'GEN-TYPE? 4>
PHRASE38
		    <EQUAL? NM10 'STRCOMP - PHRASE46>
		    <FRAME 'FIX-STR-TYP>
		    <NTHUV N1-6 3 = STACK>
		    <DEAD N1-6>
		    <PUSH D1-14>
		    <DEAD D1-14>
		    <CALL 'FIX-STR-TYP 2 = D1-14>
		    <FRAME 'FIX-STR-TYP>
		    <NTHUV N2-7 3 = STACK>
		    <PUSH D2-15>
		    <DEAD D2-15>
		    <CALL 'FIX-STR-TYP 2 = D2-15>
PHRASE46
		    <FRAME 'IEMIT>
		    <PUSH '`IFCAN>
		    <EQUAL? NM10 'STRCOMP - PHRASE51>
		    <SET INS18 "STRCOMP" (TYPE STRING)>
		    <JUMP + PHRASE52>
PHRASE51
		    <SET INS18 "STRING-EQUAL?" (TYPE STRING)>
PHRASE52
		    <PUSH INS18>
		    <CALL 'IEMIT 2>
		    <EQUAL? NM10 'STRCOMP - PHRASE54>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = BR9>
		    <FRAME 'IEMIT>
		    <PUSH '`STRCOMP>
		    <PUSH D1-14>
		    <PUSH D2-15>
		    <PUSH '=>
		    <EQUAL? W11 'DONT-CARE - PHRASE58>
		    <FRAME 'GEN-TEMP>
		    <CALL 'GEN-TEMP 0 = W11>
		    <SET TEMP33 W11>
		    <JUMP + PHRASE62>
PHRASE58
		    <TYPE? W11 <TYPE-CODE TEMP> - PHRASE60>
		    <FRAME 'USE-TEMP>
		    <PUSH W11>
		    <CALL 'USE-TEMP 1>
		    <SET TEMP33 W11>
		    <JUMP + PHRASE62>
PHRASE60
		    <SET TEMP33 W11>
PHRASE62
		    <PUSH TEMP33>
		    <DEAD TEMP33>
		    <CALL 'IEMIT 5>
		    <JUMP + PHRASE63>
PHRASE54
		    <FRAME 'IEMIT>
		    <PUSH '`STRING-EQUAL?>
		    <PUSH D1-14>
		    <PUSH D2-15>
		    <TYPE? DIR8 <TYPE-CODE FALSE> + PHRASE66>
		    <SET TEMP33 '+ (TYPE ATOM)>
		    <JUMP + PHRASE67>
PHRASE66
		    <SET TEMP33 '- (TYPE ATOM)>
PHRASE67
		    <PUSH TEMP33>
		    <DEAD TEMP33>
		    <PUSH BR9>
		    <CALL 'IEMIT 5>
PHRASE63
		    <FRAME 'IEMIT>
		    <PUSH '`ENDIF>
		    <PUSH INS18>
		    <CALL 'IEMIT 2>
		    <FRAME 'IEMIT>
		    <PUSH '`IFCANNOT>
		    <PUSH INS18>
		    <CALL 'IEMIT 2>
		    <TYPE? D1-14 <TYPE-CODE STRING> + BOOL72>
		    <TYPE? D1-14 <TYPE-CODE TEMP> - PHRASE71>
		    <NTHUV D1-14 2 = TEMP33 (TYPE FIX)>
		    <GRTR? TEMP33 1 - PHRASE71 (TYPE FIX)>
		    <DEAD TEMP33>
BOOL72
		    <FRAME 'MOVE-ARG>
		    <PUSH D1-14>
		    <DEAD D1-14>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = STACK>
		    <CALL 'MOVE-ARG 2 = D1-14>
PHRASE71
		    <TYPE? D2-15 <TYPE-CODE STRING> + BOOL80>
		    <TYPE? D2-15 <TYPE-CODE TEMP> - PHRASE79>
		    <NTHUV D2-15 2 = TEMP33 (TYPE FIX)>
		    <GRTR? TEMP33 1 - PHRASE79 (TYPE FIX)>
		    <DEAD TEMP33>
BOOL80
		    <FRAME 'MOVE-ARG>
		    <PUSH D2-15>
		    <DEAD D2-15>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = STACK>
		    <CALL 'MOVE-ARG 2 = D2-15>
PHRASE79
		    <FRAME 'LENGTH-STRING>
		    <PUSH D1-14>
		    <FRAME 'GEN-TEMP>
		    <CALL 'GEN-TEMP 0 = L1-12>
		    <PUSH L1-12>
		    <CALL 'LENGTH-STRING 2>
		    <EQUAL? NM10 'STRCOMP - PHRASE89>
		    <FRAME 'LENGTH-STRING>
		    <PUSH D2-15>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = L2-13>
		    <PUSH L2-13>
		    <CALL 'LENGTH-STRING 2>
		    <JUMP + PHRASE92>
PHRASE89
		    <FRAME 'GEN-VAL-==?>
		    <PUSH L1-12>
		    <NTHUV N2-7 1 = TEMP33 (TYPE FIX)>
		    <VEQUAL? TEMP33 2 - PHRASE95 (TYPE FIX)>
		    <DEAD TEMP33>
		    <NTHUV N2-7 4 = TEMP33>
		    <DEAD N2-7>
		    <LENUS TEMP33 = TEMP33 (TYPE FIX)>
		    <JUMP + PHRASE96>
PHRASE95
		    <FRAME 'LENGTH-STRING>
		    <PUSH D2-15>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = L2-13>
		    <PUSH L2-13>
		    <CALL 'LENGTH-STRING 2>
		    <FRAME 'FREE-TEMP>
		    <PUSH L2-13>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <SET TEMP33 L2-13>
PHRASE96
		    <PUSH TEMP33>
		    <DEAD TEMP33>
		    <PUSH %<>>
		    <TYPE? DIR8 <TYPE-CODE FALSE> + PHRASE101>
		    <SET TEMP33 TG1-19>
		    <JUMP + PHRASE102>
PHRASE101
		    <SET TEMP33 BR9>
PHRASE102
		    <PUSH TEMP33>
		    <DEAD TEMP33>
		    <CALL 'GEN-VAL-==? 4>
PHRASE92
		    <FRAME 'GEN-TEMP>
		    <CALL 'GEN-TEMP 0 = T1-16>
		    <FRAME 'GEN-TEMP>
		    <CALL 'GEN-TEMP 0 = T2-17>
		    <FRAME 'IEMIT>
		    <PUSH '`LOOP>
		    <CONS 'LENGTH () = TEMP33>
		    <CONS 'VALUE TEMP33 = TEMP33>
		    <NTHUV D1-14 1 = TEMP106 (TYPE ATOM)>
		    <CONS TEMP106 TEMP33 = STACK>
		    <DEAD TEMP106 TEMP33>
		    <CONS 'LENGTH () = TEMP33>
		    <CONS 'VALUE TEMP33 = TEMP33>
		    <NTHUV D2-15 1 = TEMP106 (TYPE ATOM)>
		    <CONS TEMP106 TEMP33 = STACK>
		    <DEAD TEMP106 TEMP33>
		    <CONS 'VALUE () = TEMP33>
		    <NTHUV L1-12 1 = TEMP106 (TYPE ATOM)>
		    <CONS TEMP106 TEMP33 = STACK>
		    <DEAD TEMP106 TEMP33>
		    <SET TEMP106 4 (TYPE FIX)>
		    <EQUAL? NM10 'STRCOMP - PHRASE108>
		    <CONS 'VALUE () = TEMP33>
		    <NTHUV L2-13 1 = TEMP110 (TYPE ATOM)>
		    <CONS TEMP110 TEMP33 = TEMP33>
		    <DEAD TEMP110>
		    <CONS TEMP33 () = TEMP33>
		    <JUMP + PHRASE111>
PHRASE108
		    <SET TEMP33 () (TYPE LIST)>
PHRASE111
		    <LOOP (TEMP33 VALUE) (TEMP106 VALUE)>
TAG112
		    <INTGO>
		    <EMPL? TEMP33 + TAG105>
		    <NTHL TEMP33 1 = STACK>
		    <RESTL TEMP33 1 = TEMP33 (TYPE LIST)>
		    <ADD TEMP106 1 = TEMP106 (TYPE FIX)>
		    <JUMP + TAG112>
TAG105
		    <CALL 'IEMIT TEMP106>
		    <DEAD TEMP106>
		    <FRAME 'LABEL-TAG>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP33>
		    <PUSH TEMP33>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'NTH-STRING>
		    <PUSH D1-14>
		    <PUSH T1-16>
		    <PUSH 1>
		    <CALL 'NTH-STRING 3>
		    <FRAME 'NTH-STRING>
		    <PUSH D2-15>
		    <PUSH T2-17>
		    <PUSH 1>
		    <CALL 'NTH-STRING 3>
		    <FRAME 'GEN-VAL-==?>
		    <PUSH T1-16>
		    <PUSH T2-17>
		    <PUSH %<>>
		    <TYPE? DIR8 <TYPE-CODE FALSE> + PHRASE120>
		    <SET TEMP106 TG1-19>
		    <JUMP + PHRASE121>
PHRASE120
		    <SET TEMP106 BR9>
PHRASE121
		    <PUSH TEMP106>
		    <DEAD TEMP106>
		    <CALL 'GEN-VAL-==? 4>
		    <EQUAL? NM10 'STRCOMP + PHRASE123>
		    <FRAME 'FREE-TEMP>
		    <PUSH T1-16>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'FREE-TEMP>
		    <PUSH T2-17>
		    <CALL 'FREE-TEMP 1>
PHRASE123
		    <FRAME 'REST-STRING>
		    <PUSH D1-14>
		    <PUSH D1-14>
		    <PUSH 1>
		    <CALL 'REST-STRING 3>
		    <FRAME 'REST-STRING>
		    <PUSH D2-15>
		    <PUSH D2-15>
		    <PUSH 1>
		    <CALL 'REST-STRING 3>
		    <EQUAL? NM10 'STRCOMP - PHRASE129>
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <PUSH L2-13>
		    <PUSH 1>
		    <PUSH '=>
		    <PUSH L2-13>
		    <PUSH (`TYPE FIX)>
		    <CALL 'IEMIT 6>
		    <FRAME 'IEMIT>
		    <PUSH '`GRTR?>
		    <PUSH L2-13>
		    <DEAD L2-13>
		    <PUSH 0>
		    <PUSH '->
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TG3-22>
		    <PUSH TG3-22>
		    <PUSH (`TYPE FIX)>
		    <CALL 'IEMIT 6>
PHRASE129
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <PUSH L1-12>
		    <PUSH 1>
		    <PUSH '=>
		    <PUSH L1-12>
		    <PUSH (`TYPE FIX)>
		    <CALL 'IEMIT 6>
		    <FRAME 'IEMIT>
		    <PUSH '`GRTR?>
		    <PUSH L1-12>
		    <PUSH 0>
		    <PUSH '+>
		    <PUSH TEMP33>
		    <DEAD TEMP33>
		    <PUSH (`TYPE FIX)>
		    <CALL 'IEMIT 6>
		    <EQUAL? NM10 'STRCOMP - PHRASE136>
		    <DEAD NM10>
		    <EQUAL? W11 'DONT-CARE - PHRASE138>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = W11>
PHRASE138
		    <FRAME 'MOVE-ARG>
		    <PUSH 1>
		    <PUSH W11>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'BRANCH-TAG>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP33>
		    <PUSH TEMP33>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH TG3-22>
		    <DEAD TG3-22>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'IEMIT>
		    <PUSH '`SUB>
		    <PUSH L1-12>
		    <PUSH 1>
		    <PUSH '=>
		    <PUSH L1-12>
		    <PUSH (`TYPE FIX)>
		    <CALL 'IEMIT 6>
		    <FRAME 'IEMIT>
		    <PUSH '`VEQUAL>
		    <PUSH L1-12>
		    <DEAD L1-12>
		    <PUSH 0>
		    <PUSH '->
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP106>
		    <PUSH TEMP106>
		    <CALL 'IEMIT 5>
		    <FRAME 'MOVE-ARG>
		    <PUSH 0>
		    <PUSH W11>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'BRANCH-TAG>
		    <PUSH TEMP33>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH TEMP106>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'MOVE-ARG>
		    <PUSH -1>
		    <PUSH W11>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'BRANCH-TAG>
		    <PUSH TEMP33>
		    <CALL 'BRANCH-TAG 1>
		    <FRAME 'LABEL-TAG>
		    <PUSH BR9>
		    <CALL 'LABEL-TAG 1>
		    <FRAME 'IEMIT>
		    <PUSH '`GRTR?>
		    <PUSH T1-16>
		    <PUSH T2-17>
		    <PUSH '->
		    <PUSH TEMP106>
		    <DEAD TEMP106>
		    <CALL 'IEMIT 5>
		    <FRAME 'FREE-TEMP>
		    <PUSH T1-16>
		    <DEAD T1-16>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'FREE-TEMP>
		    <PUSH T2-17>
		    <DEAD T2-17>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <PUSH 1>
		    <PUSH W11>
		    <CALL 'MOVE-ARG 2>
		    <FRAME 'LABEL-TAG>
		    <PUSH TEMP33>
		    <DEAD TEMP33>
		    <CALL 'LABEL-TAG 1>
PHRASE136
		    <TYPE? DIR8 <TYPE-CODE FALSE> + PHRASE159>
		    <FRAME 'BRANCH-TAG>
		    <PUSH BR9>
		    <DEAD BR9>
		    <CALL 'BRANCH-TAG 1>
PHRASE159
		    <FRAME 'FREE-TEMP>
		    <PUSH D1-14>
		    <DEAD D1-14>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'FREE-TEMP>
		    <PUSH D2-15>
		    <DEAD D2-15>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'IEMIT>
		    <PUSH '`ENDIF>
		    <PUSH INS18>
		    <DEAD INS18>
		    <CALL 'IEMIT 2>
		    <TYPE? DIR8 <TYPE-CODE FALSE> + PHRASE165>
		    <DEAD DIR8>
		    <FRAME 'LABEL-TAG>
		    <PUSH TG1-19>
		    <DEAD TG1-19>
		    <CALL 'LABEL-TAG 1>
PHRASE165
		    <TYPE? W11 <TYPE-CODE UNBOUND> - TAG169>
		    <RETURN %<>>
TAG169
		    <RETURN W11>
		    <DEAD W11>
		    <END DO-STR-EQ>
#WORD *23067515056*
<GFCN FIX-STR-TYP ("VALUE" ANY ANY ANY) TYP4 D5>
		    <TEMP TEMP12>
		    <INTGO>
		    <TYPE? TYP4 <TYPE-CODE FORM> - PHRASE8>
		    <DEAD TYP4>
		    <TYPE? D5 <TYPE-CODE TEMP> - PHRASE10>
		    <NTHUV D5 2 = TEMP12 (TYPE FIX)>
		    <GRTR? TEMP12 1 - PHRASE10 (TYPE FIX)>
		    <DEAD TEMP12>
		    <FRAME 'MOVE-ARG>
		    <PUSH D5>
		    <DEAD D5>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = STACK>
		    <CALL 'MOVE-ARG 2 = D5>
PHRASE10
		    <FRAME 'GEN-TYPE?>
		    <PUSH D5>
		    <PUSH 'STRING>
		    <FRAME 'MAKE-TAG>
		    <CALL 'MAKE-TAG 0 = TEMP12>
		    <PUSH TEMP12>
		    <PUSH 'T>
		    <CALL 'GEN-TYPE? 4>
		    <FRAME 'IEMIT>
		    <PUSH '`NTHR>
		    <PUSH D5>
		    <PUSH 3>
		    <PUSH '=>
		    <PUSH D5>
		    <CALL 'IEMIT 5>
		    <FRAME 'LABEL-TAG>
		    <PUSH TEMP12>
		    <DEAD TEMP12>
		    <CALL 'LABEL-TAG 1>
PHRASE8
		    <RETURN D5>
		    <DEAD D5>
		    <END FIX-STR-TYP>
#WORD *27030556640*
<GFCN ATOM-PART-GEN ("VALUE" ANY NODE ANY) N4 W5>
		    <TEMP NM7 RW8 TEMP11 CARE9>
		    <INTGO>
		    <NTHUV N4 4 = NM7>
		    <SET RW8 W5>
		    <GEN-LVAL 'CAREFUL = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> + TAG17>
		    <EQUAL? NM7 'LBIND - TAG15>
		    <SET TEMP11 'T (TYPE ATOM)>
		    <JUMP + TAG17>
TAG15
		    <EQUAL? NM7 'GBIND - TAG16>
		    <SET TEMP11 'T (TYPE ATOM)>
		    <JUMP + TAG17>
TAG16
		    <SET TEMP11 %<> (TYPE FALSE)>
TAG17
		    <SET CARE9 TEMP11>
		    <DEAD TEMP11>
		    <FRAME 'GEN>
		    <NTHUV N4 5 = TEMP11 (TYPE LIST)>
		    <NTHL TEMP11 1 = STACK (TYPE NODE)>
		    <DEAD TEMP11>
		    <CALL 'GEN 1 = TEMP11>
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP11>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <FRAME 'IEMIT>
		    <PUSH '`NTHR>
		    <PUSH TEMP11>
		    <DEAD TEMP11>
		    <EQUAL? NM7 'GBIND - PHRASE22>
		    <SET TEMP11 1 (TYPE FIX)>
		    <JUMP + PHRASE25>
PHRASE22
		    <EQUAL? NM7 'LBIND - PHRASE23>
		    <SET TEMP11 2 (TYPE FIX)>
		    <JUMP + PHRASE25>
PHRASE23
		    <EQUAL? NM7 'SPNAME - PHRASE24>
		    <DEAD NM7>
		    <SET TEMP11 3 (TYPE FIX)>
		    <JUMP + PHRASE25>
PHRASE24
		    <SET TEMP11 4 (TYPE FIX)>
PHRASE25
		    <PUSH TEMP11>
		    <DEAD TEMP11>
		    <PUSH '=>
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE27>
		    <FRAME 'USE-TEMP>
		    <PUSH W5>
		    <FRAME 'ISTYPE?>
		    <NTHUV N4 3 = STACK>
		    <DEAD N4>
		    <CALL 'ISTYPE? 1 = STACK>
		    <CALL 'USE-TEMP 2 = TEMP11>
		    <JUMP + PHRASE36>
PHRASE27
		    <EQUAL? W5 'DONT-CARE + BOOL31>
		    <TYPE? CARE9 <TYPE-CODE FALSE> + PHRASE30>
BOOL31
		    <FRAME 'GEN-TEMP>
		    <FRAME 'ISTYPE?>
		    <NTHUV N4 3 = STACK>
		    <DEAD N4>
		    <CALL 'ISTYPE? 1 = NM7>
		    <TYPE? NM7 <TYPE-CODE FALSE> - BOOL33>
		    <SET NM7 'T (TYPE ATOM)>
BOOL33
		    <PUSH NM7>
		    <DEAD NM7>
		    <CALL 'GEN-TEMP 1 = W5>
		    <SET TEMP11 W5>
		    <JUMP + PHRASE36>
PHRASE30
		    <SET TEMP11 W5>
PHRASE36
		    <PUSH TEMP11>
		    <DEAD TEMP11>
		    <PUSH (`RECORD-TYPE ATOM)>
		    <SET NM7 6 (TYPE FIX)>
		    <TYPE? CARE9 <TYPE-CODE FALSE> + PHRASE38>
		    <CONS (`BRANCH-FALSE + `COMPERR) () = TEMP11>
		    <JUMP + PHRASE39>
PHRASE38
		    <SET TEMP11 () (TYPE LIST)>
PHRASE39
		    <LOOP (TEMP11 VALUE) (NM7 VALUE)>
TAG40
		    <INTGO>
		    <EMPL? TEMP11 + TAG20>
		    <NTHL TEMP11 1 = STACK>
		    <RESTL TEMP11 1 = TEMP11 (TYPE LIST)>
		    <ADD NM7 1 = NM7 (TYPE FIX)>
		    <JUMP + TAG40>
TAG20
		    <CALL 'IEMIT NM7>
		    <DEAD NM7>
		    <TYPE? CARE9 <TYPE-CODE FALSE> + PHRASE43>
		    <DEAD CARE9>
		    <FRAME 'SPEC-IEMIT>
		    <PUSH '`TYPE?>
		    <PUSH W5>
		    <PUSH <`TYPE-CODE FALSE>>
		    <PUSH '+>
		    <PUSH '`COMPERR>
		    <CALL 'SPEC-IEMIT 5>
PHRASE43
		    <FRAME 'MOVE-ARG>
		    <PUSH W5>
		    <DEAD W5>
		    <PUSH RW8>
		    <DEAD RW8>
		    <CALL 'MOVE-ARG 2 = NM7>
		    <RETURN NM7>
		    <DEAD NM7>
		    <END ATOM-PART-GEN>
#WORD *3217271613*
<GFCN OFFSET-PART-GEN ("VALUE" ANY NODE ANY) N4 W5>
		    <TEMP NM7 K8:LIST RT10 D6>
		    <INTGO>
		    <NTHUV N4 4 = NM7>
		    <NTHUV N4 5 = K8 (TYPE LIST)>
		    <FRAME 'ISTYPE?>
		    <NTHUV N4 3 = STACK>
		    <DEAD N4>
		    <CALL 'ISTYPE? 1 = RT10>
		    <FRAME 'GEN>
		    <NTHL K8 1 = STACK (TYPE NODE)>
		    <CALL 'GEN 1 = D6>
		    <RESTL K8 1 = K8 (TYPE LIST)>
		    <EMPL? K8 - PHRASE14 (TYPE LIST)>
		    <FRAME 'FREE-TEMP>
		    <PUSH D6>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <FRAME 'IEMIT>
		    <PUSH '`NTHUV>
		    <PUSH D6>
		    <DEAD D6>
		    <EQUAL? NM7 'INDEX - PHRASE18>
		    <DEAD NM7>
		    <SET NM7 1 (TYPE FIX)>
		    <JUMP + PHRASE20>
PHRASE18
		    <SET NM7 3 (TYPE FIX)>
PHRASE20
		    <PUSH NM7>
		    <DEAD NM7>
		    <PUSH '=>
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE22>
		    <FRAME 'USE-TEMP>
		    <PUSH W5>
		    <SET NM7 RT10>
		    <DEAD RT10>
		    <TYPE? NM7 <TYPE-CODE FALSE> - BOOL24>
		    <SET NM7 'T (TYPE ATOM)>
BOOL24
		    <PUSH NM7>
		    <DEAD NM7>
		    <CALL 'USE-TEMP 2 = NM7>
		    <JUMP + PHRASE29>
PHRASE22
		    <EQUAL? W5 'DONT-CARE - PHRASE25>
		    <FRAME 'GEN-TEMP>
		    <TYPE? RT10 <TYPE-CODE FALSE> - BOOL27>
		    <SET RT10 'T (TYPE ATOM)>
BOOL27
		    <PUSH RT10>
		    <DEAD RT10>
		    <CALL 'GEN-TEMP 1 = W5>
		    <SET NM7 W5>
		    <JUMP + PHRASE29>
PHRASE25
		    <SET NM7 W5>
PHRASE29
		    <PUSH NM7>
		    <DEAD NM7>
		    <CALL 'IEMIT 5>
		    <RETURN W5>
		    <DEAD W5>
PHRASE14
		    <FRAME 'GEN>
		    <NTHL K8 1 = STACK (TYPE NODE)>
		    <DEAD K8>
		    <CALL 'GEN 1 = NM7>
		    <FRAME 'IEMIT>
		    <PUSH '`PUTUV>
		    <PUSH D6>
		    <PUSH 3>
		    <PUSH NM7>
		    <CALL 'IEMIT 4>
		    <FRAME 'FREE-TEMP>
		    <PUSH NM7>
		    <DEAD NM7>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <PUSH D6>
		    <DEAD D6>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MOVE-ARG 2 = W5>
		    <RETURN W5>
		    <DEAD W5>
		    <END OFFSET-PART-GEN>
#WORD *23623150161*
<GFCN PUT-GET-DECL-GEN ("VALUE" ANY NODE ANY) N4 W5>
		    <TEMP NM8 TEMP12 NN9 ST10>
		    <INTGO>
		    <NTHUV N4 4 = NM8>
		    <NTHUV N4 5 = TEMP12 (TYPE LIST)>
		    <NTHL TEMP12 1 = NN9 (TYPE NODE)>
		    <DEAD TEMP12>
		    <NTHUV NN9 3 = ST10>
		    <EQUAL? NM8 'GET-DECL - PHRASE14>
		    <DEAD NM8>
		    <FRAME 'GEN>
		    <PUSH NN9>
		    <DEAD NN9>
		    <CALL 'GEN 1 = NM8>
		    <FRAME 'FREE-TEMP>
		    <PUSH NM8>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <EQUAL? W5 'DONT-CARE - PHRASE18>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'T>
		    <CALL 'GEN-TEMP 1 = W5>
		    <JUMP + PHRASE20>
PHRASE18
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE20>
		    <FRAME 'USE-TEMP>
		    <PUSH W5>
		    <CALL 'USE-TEMP 1>
PHRASE20
		    <EQUAL? ST10 'OFFSET - PHRASE23>
		    <FRAME 'IEMIT>
		    <PUSH '`NTHUV>
		    <PUSH NM8>
		    <DEAD NM8>
		    <PUSH 2>
		    <PUSH '=>
		    <PUSH W5>
		    <CALL 'IEMIT 5>
		    <RETURN W5>
		    <DEAD W5>
PHRASE23
		    <FRAME 'IEMIT>
		    <PUSH '`NTHR>
		    <PUSH NM8>
		    <DEAD NM8>
		    <PUSH 3>
		    <PUSH '=>
		    <PUSH W5>
		    <CONS '`RECORD-TYPE () = TEMP12>
		    <FRAME 'ISTYPE?>
		    <PUSH ST10>
		    <DEAD ST10>
		    <CALL 'ISTYPE? 1 = NN9>
		    <CONS NN9 () = NN9>
		    <PUTREST TEMP12 NN9>
		    <DEAD NN9>
		    <PUSH TEMP12>
		    <DEAD TEMP12>
		    <CALL 'IEMIT 6>
		    <RETURN W5>
		    <DEAD W5>
PHRASE14
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE31>
		    <FRAME 'GEN>
		    <PUSH NN9>
		    <DEAD NN9>
		    <PUSH W5>
		    <CALL 'GEN 2 = NM8>
		    <JUMP + PHRASE33>
PHRASE31
		    <FRAME 'GEN>
		    <PUSH NN9>
		    <DEAD NN9>
		    <CALL 'GEN 1 = NM8>
PHRASE33
		    <FRAME 'GEN>
		    <NTHUV N4 5 = NN9 (TYPE LIST)>
		    <DEAD N4>
		    <RESTL NN9 1 = NN9 (TYPE LIST)>
		    <NTHL NN9 1 = STACK (TYPE NODE)>
		    <DEAD NN9>
		    <CALL 'GEN 1 = TEMP12>
		    <EQUAL? W5 'FLUSHED - PHRASE37>
		    <FRAME 'FREE-TEMP>
		    <PUSH NM8>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
PHRASE37
		    <FRAME 'FREE-TEMP>
		    <PUSH TEMP12>
		    <PUSH %<>>
		    <CALL 'FREE-TEMP 2>
		    <EQUAL? ST10 'OFFSET - PHRASE41>
		    <FRAME 'IEMIT>
		    <PUSH '`PUTUV>
		    <PUSH NM8>
		    <PUSH 2>
		    <PUSH TEMP12>
		    <DEAD TEMP12>
		    <CALL 'IEMIT 4>
		    <JUMP + PHRASE43>
PHRASE41
		    <FRAME 'IEMIT>
		    <PUSH '`PUTR>
		    <PUSH NM8>
		    <PUSH 3>
		    <PUSH TEMP12>
		    <DEAD TEMP12>
		    <CONS '`RECORD-TYPE () = NN9>
		    <FRAME 'ISTYPE?>
		    <PUSH ST10>
		    <DEAD ST10>
		    <CALL 'ISTYPE? 1 = TEMP12>
		    <CONS TEMP12 () = TEMP12>
		    <PUTREST NN9 TEMP12>
		    <DEAD TEMP12>
		    <PUSH NN9>
		    <DEAD NN9>
		    <CALL 'IEMIT 5>
PHRASE43
		    <EQUAL? W5 'FLUSHED + PHRASE48>
		    <FRAME 'MOVE-ARG>
		    <PUSH NM8>
		    <DEAD NM8>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MOVE-ARG 2 = W5>
PHRASE48
		    <RETURN W5>
		    <DEAD W5>
		    <END PUT-GET-DECL-GEN>
#WORD *26317626012*
		    <GFCN SUBSTRUC-GEN ("VALUE" ANY NODE ANY) N4 W5>
		    <TEMP K6 PT7 LN8 (OVERLAP9 'T) (DIR10 %<>) (RSTN13 %<>) (LNTN14 %<>) STRN15:NODE (RESN16 %<>) (THE-SYM19 %<>) (SRC-REST22:FIX 0) (DEST-REST23:FIX 0) TEMP31 NT18 NN21:NODE>
		    <INTGO>
		    <NTHUV N4 5 = K6 (TYPE LIST)>
		    <FRAME 'STRUCTYP>
		    <NTHUV N4 3 = STACK>
		    <CALL 'STRUCTYP 1 = PT7>
		    <LENL K6 = LN8 (TYPE FIX)>
		    <NTHL K6 1 = STRN15 (TYPE NODE)>
		    <GRTR? LN8 1 - PHRASE35 (TYPE FIX) (DEAD-FALL RSTN13)>
		    <RESTL K6 1 = TEMP31 (TYPE LIST)>
		    <NTHL TEMP31 1 = RSTN13 (TYPE NODE)>
		    <DEAD TEMP31>
		    <GRTR? LN8 2 - PHRASE35 (TYPE FIX) (DEAD-FALL LNTN14)>
		    <RESTL K6 1 = TEMP31 (TYPE LIST)>
		    <RESTL TEMP31 1 = TEMP31 (TYPE LIST)>
		    <NTHL TEMP31 1 = LNTN14 (TYPE NODE)>
		    <DEAD TEMP31>
		    <GRTR? LN8 3 - PHRASE35 (TYPE FIX) (DEAD-FALL RESN16)>
		    <RESTL K6 1 = TEMP31 (TYPE LIST)>
		    <RESTL TEMP31 1 = TEMP31 (TYPE LIST)>
		    <RESTL TEMP31 1 = TEMP31 (TYPE LIST)>
		    <NTHL TEMP31 1 = RESN16 (TYPE NODE)>
		    <DEAD TEMP31>
PHRASE35
		    <VEQUAL? RSTN13 0 + PHRASE37>
		    <NTHUV RSTN13 1 = TEMP31 (TYPE FIX)>
		    <VEQUAL? TEMP31 2 - PHRASE37 (TYPE FIX)>
		    <DEAD TEMP31>
		    <NTHUV RSTN13 4 = TEMP31 (TYPE FIX)>
		    <ADD TEMP31 SRC-REST22 = SRC-REST22 (TYPE FIX)>
		    <DEAD TEMP31>
PHRASE37
		    <NTHUV STRN15 1 = NT18 (TYPE FIX)>
		    <VEQUAL? NT18 10 - BOOL43 (TYPE FIX) (DEAD-FALL THE-SYM19)>
		    <NTHUV STRN15 4 = THE-SYM19>
		    <TYPE? THE-SYM19 <TYPE-CODE FALSE> - BOOL42 (DEAD-JUMP NT18)>
BOOL43
		    <VEQUAL? NT18 28 - PHRASE40 (TYPE FIX) (DEAD-JUMP N4 DEST-REST23)>
		    <DEAD NT18>
		    <NTHUV STRN15 5 = NT18 (TYPE LIST)>
		    <RESTL NT18 1 = TEMP31 (TYPE LIST)>
		    <NTHL TEMP31 1 = NN21 (TYPE NODE)>
		    <DEAD TEMP31>
		    <NTHUV NN21 1 = TEMP31 (TYPE FIX)>
		    <VEQUAL? TEMP31 2 - PHRASE40 (TYPE FIX) (DEAD-JUMP N4 NN21 NT18 DEST-REST23)>
		    <DEAD TEMP31>
		    <NTHUV NN21 4 = TEMP31 (TYPE FIX)>
		    <DEAD NN21>
		    <ADD TEMP31 SRC-REST22 = SRC-REST22 (TYPE FIX)>
		    <DEAD TEMP31>
		    <NTHL NT18 1 = NN21 (TYPE NODE)>
		    <DEAD NT18>
		    <NTHUV NN21 1 = TEMP31 (TYPE FIX)>
		    <VEQUAL? TEMP31 10 - PHRASE40 (TYPE FIX) (DEAD-JUMP N4 NN21 DEST-REST23) (DEAD-FALL THE-SYM19)>
		    <DEAD TEMP31>
		    <NTHUV NN21 4 = THE-SYM19>
		    <DEAD NN21>
		    <TYPE? THE-SYM19 <TYPE-CODE FALSE> + PHRASE40 (DEAD-JUMP N4 DEST-REST23)>
BOOL42
		    <VEQUAL? RSTN13 0 + PHRASE40 (DEAD-JUMP N4 DEST-REST23)>
		    <NTHUV RSTN13 1 = TEMP31 (TYPE FIX)>
		    <VEQUAL? TEMP31 2 - PHRASE40 (TYPE FIX) (DEAD-JUMP N4 DEST-REST23)>
		    <DEAD TEMP31>
		    <VEQUAL? LNTN14 0 + PHRASE40 (DEAD-JUMP N4 DEST-REST23)>
		    <LENUV LNTN14 = TEMP31 (TYPE FIX)>
		    <LESS? TEMP31 8 + BOOL45 (TYPE FIX)>
		    <DEAD TEMP31>
		    <NTHUV LNTN14 8 = TEMP31>
		    <TYPE? TEMP31 <TYPE-CODE FALSE> - PHRASE40 (DEAD-JUMP N4 DEST-REST23)>
		    <DEAD TEMP31>
BOOL45
		    <VEQUAL? RESN16 0 + PHRASE40 (DEAD-JUMP N4 DEST-REST23)>
		    <NTHUV RESN16 1 = NT18 (TYPE FIX)>
		    <VEQUAL? NT18 10 - BOOL47 (TYPE FIX) (DEAD-JUMP DEST-REST23)>
		    <NTHUV RESN16 4 = TEMP31>
		    <EQUAL? TEMP31 THE-SYM19 + BOOL46 (DEAD-JUMP NT18 LN8) (DEAD-FALL DEST-REST23)>
		    <DEAD TEMP31>
BOOL47
		    <VEQUAL? NT18 28 - PHRASE40 (TYPE FIX) (DEAD-JUMP N4)>
		    <DEAD NT18>
		    <NTHUV RESN16 5 = NT18 (TYPE LIST)>
		    <RESTL NT18 1 = TEMP31 (TYPE LIST)>
		    <NTHL TEMP31 1 = NN21 (TYPE NODE)>
		    <DEAD TEMP31>
		    <NTHUV NN21 1 = TEMP31 (TYPE FIX)>
		    <VEQUAL? TEMP31 2 - PHRASE40 (TYPE FIX) (DEAD-JUMP N4 NN21 NT18)>
		    <DEAD TEMP31>
		    <NTHUV NN21 4 = DEST-REST23 (TYPE FIX)>
		    <DEAD NN21>
		    <NTHL NT18 1 = NN21 (TYPE NODE)>
		    <DEAD NT18>
		    <NTHUV NN21 1 = TEMP31 (TYPE FIX)>
		    <VEQUAL? TEMP31 10 - PHRASE40 (TYPE FIX) (DEAD-JUMP N4 NN21 DEST-REST23)>
		    <DEAD TEMP31>
		    <NTHUV NN21 4 = TEMP31>
		    <DEAD NN21>
		    <EQUAL? TEMP31 THE-SYM19 - PHRASE40 (DEAD-JUMP N4 DEST-REST23) (DEAD-FALL LN8)>
		    <DEAD TEMP31>
BOOL46
		    <GRTR? SRC-REST22 DEST-REST23 + PEEP154 (TYPE FIX) (DEAD-JUMP N4 DEST-REST23 DIR10)>
		    <LESS? SRC-REST22 DEST-REST23 - PHRASE51 (TYPE FIX) (DEAD-FALL N4 DIR10)>
		    <DEAD DEST-REST23>
		    <SET DIR10 '`BACKWARD (TYPE ATOM)>
		    <JUMP + PHRASE54>
PHRASE51
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bogus SUBSTRUC turkey">
		    <PUSH N4>
		    <DEAD N4>
		    <CALL 'COMPILE-ERROR 2>
		    <JUMP + PHRASE54>
PHRASE40
		    <VEQUAL? LN8 4 + PHRASE54 (TYPE FIX) (DEAD-FALL DIR10 OVERLAP9)>
		    <DEAD LN8>
		    <SET OVERLAP9 %<> (TYPE FALSE)>
PEEP154
		    <SET DIR10 '`FORWARD (TYPE ATOM)>
PHRASE54
		    <TYPE? THE-SYM19 <TYPE-CODE FALSE> + PHRASE56 (DEAD-JUMP THE-SYM19 K6)>
		    <RESTL K6 1 = TEMP31 (TYPE LIST)>
		    <DEAD K6>
		    <LOOP>
MAP59
		    <INTGO>
		    <EMPL? TEMP31 + MAPAP62 (DEAD-JUMP TEMP31 STRN15)>
		    <NTHL TEMP31 1 = NN21>
		    <FRAME 'INTERFERE?>
		    <NTHUV THE-SYM19 10 = STACK (TYPE TEMP)>
		    <PUSH NN21>
		    <DEAD NN21>
		    <CALL 'INTERFERE? 2 = K6>
		    <TYPE? K6 <TYPE-CODE FALSE> - PHRASE56 (DEAD-JUMP TEMP31 THE-SYM19)>
		    <DEAD K6>
		    <RESTL TEMP31 1 = TEMP31 (TYPE LIST)>
		    <JUMP + MAP59>
MAPAP62
		    <FRAME 'USE-TEMP>
		    <NTHUV THE-SYM19 10 = THE-SYM19>
		    <PUSH THE-SYM19>
		    <CALL 'USE-TEMP 1>
		    <JUMP + PHRASE75>
PHRASE56
		    <FRAME 'GEN>
		    <PUSH STRN15>
		    <DEAD STRN15>
		    <FRAME 'GEN-TEMP>
		    <PUSH %<>>
		    <CALL 'GEN-TEMP 1 = STACK>
		    <CALL 'GEN 2 = THE-SYM19>
PHRASE75
		    <EQUAL? PT7 'VECTOR - PHRASE79>
		    <SET K6 '`RESTUV (TYPE ATOM)>
		    <SET LN8 '`LENUV (TYPE ATOM)>
		    <JUMP + PHRASE82>
PHRASE79
		    <EQUAL? PT7 'UVECTOR - PHRASE80>
		    <SET K6 '`RESTUU (TYPE ATOM)>
		    <SET LN8 '`LENUU (TYPE ATOM)>
		    <JUMP + PHRASE82>
PHRASE80
		    <EQUAL? PT7 'STRING - PHRASE81>
		    <SET K6 '`RESTUS (TYPE ATOM)>
		    <SET LN8 '`LENUS (TYPE ATOM)>
		    <JUMP + PHRASE82>
PHRASE81
		    <SET K6 '`RESTUB (TYPE ATOM)>
		    <SET LN8 '`LENUB (TYPE ATOM)>
PHRASE82
		    <TYPE? RSTN13 <TYPE-CODE FALSE> + PHRASE84>
		    <NTHUV RSTN13 1 = TEMP31 (TYPE FIX)>
		    <VEQUAL? TEMP31 2 + PHRASE84 (TYPE FIX) (DEAD-FALL SRC-REST22)>
		    <DEAD TEMP31>
		    <FRAME 'GEN>
		    <PUSH RSTN13>
		    <DEAD RSTN13>
		    <CALL 'GEN 1 = RSTN13>
		    <FRAME 'IEMIT>
		    <PUSH K6>
		    <DEAD K6>
		    <PUSH THE-SYM19>
		    <PUSH RSTN13>
		    <PUSH '=>
		    <NTHUV THE-SYM19 2 = TEMP31 (TYPE FIX)>
		    <GRTR? TEMP31 1 - PEEP153 (TYPE FIX)>
		    <DEAD TEMP31>
		    <FRAME 'FREE-TEMP>
		    <PUSH THE-SYM19>
		    <DEAD THE-SYM19>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'GEN-TEMP>
		    <PUSH PT7>
		    <CALL 'GEN-TEMP 1 = THE-SYM19>
PEEP153
		    <SET TEMP31 THE-SYM19>
		    <PUSH TEMP31>
		    <DEAD TEMP31>
		    <CALL 'IEMIT 5>
		    <FRAME 'FREE-TEMP>
		    <PUSH RSTN13>
		    <DEAD RSTN13>
		    <CALL 'FREE-TEMP 1>
		    <JUMP + PHRASE96>
PHRASE84
		    <TYPE? RSTN13 <TYPE-CODE FALSE> + PHRASE96 (DEAD-JUMP SRC-REST22 K6)>
		    <DEAD RSTN13>
		    <VEQUAL? SRC-REST22 0 + PHRASE96 (TYPE FIX) (DEAD-JUMP SRC-REST22 K6)>
		    <FRAME 'IEMIT>
		    <PUSH K6>
		    <DEAD K6>
		    <PUSH THE-SYM19>
		    <PUSH SRC-REST22>
		    <DEAD SRC-REST22>
		    <PUSH '=>
		    <NTHUV THE-SYM19 2 = RSTN13 (TYPE FIX)>
		    <GRTR? RSTN13 1 - PEEP152 (TYPE FIX)>
		    <DEAD RSTN13>
		    <FRAME 'FREE-TEMP>
		    <PUSH THE-SYM19>
		    <DEAD THE-SYM19>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'GEN-TEMP>
		    <PUSH PT7>
		    <CALL 'GEN-TEMP 1 = THE-SYM19>
PEEP152
		    <SET RSTN13 THE-SYM19>
		    <PUSH RSTN13>
		    <DEAD RSTN13>
		    <CALL 'IEMIT 5>
PHRASE96
		    <TYPE? LNTN14 <TYPE-CODE FALSE> + PHRASE109 (DEAD-JUMP LNTN14) (DEAD-FALL LN8)>
		    <FRAME 'GEN>
		    <PUSH LNTN14>
		    <DEAD LNTN14>
		    <CALL 'GEN 1 = LNTN14>
		    <JUMP + PHRASE111>
PHRASE109
		    <FRAME 'IEMIT>
		    <PUSH LN8>
		    <DEAD LN8>
		    <PUSH THE-SYM19>
		    <PUSH '=>
		    <FRAME 'GEN-TEMP>
		    <PUSH 'FIX>
		    <CALL 'GEN-TEMP 1 = LNTN14>
		    <PUSH LNTN14>
		    <CALL 'IEMIT 4>
PHRASE111
		    <TYPE? RESN16 <TYPE-CODE FALSE> + PHRASE115 (DEAD-JUMP RESN16)>
		    <FRAME 'GEN>
		    <PUSH RESN16>
		    <DEAD RESN16>
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE118>
		    <EQUAL? W5 THE-SYM19 + PHRASE118>
		    <SET RSTN13 W5>
		    <JUMP + PHRASE120>
PHRASE118
		    <SET RSTN13 'DONT-CARE (TYPE ATOM)>
PHRASE120
		    <PUSH RSTN13>
		    <DEAD RSTN13>
		    <CALL 'GEN 2 = RSTN13>
		    <EQUAL? PT7 'VECTOR + BOOL140 (DEAD-JUMP OVERLAP9)>
		    <EQUAL? PT7 'UVECTOR + BOOL140 (DEAD-JUMP OVERLAP9) (DEAD-FALL DIR10 PT7)>
		    <JUMP + PHRASE139>
PHRASE115
		    <FRAME 'IEMIT>
		    <PUSH '`UUBLOCK>
		    <FRAME 'FORM>
		    <PUSH '`TYPE-CODE>
		    <PUSH PT7>
		    <CALL 'FORM 2 = STACK>
		    <PUSH LNTN14>
		    <PUSH '=>
		    <TYPE? W5 <TYPE-CODE TEMP> - PHRASE133>
		    <EQUAL? W5 THE-SYM19 + PHRASE133>
		    <FRAME 'USE-TEMP>
		    <PUSH W5>
		    <CALL 'USE-TEMP 1>
		    <SET RSTN13 W5>
		    <JUMP + PEEP151>
PHRASE133
		    <FRAME 'GEN-TEMP>
		    <PUSH PT7>
		    <CALL 'GEN-TEMP 1 = RSTN13>
PEEP151
		    <SET TEMP31 RSTN13>
		    <PUSH TEMP31>
		    <DEAD TEMP31>
		    <CONS PT7 () = TEMP31>
		    <CONS '`TYPE TEMP31 = STACK>
		    <DEAD TEMP31>
		    <CALL 'IEMIT 6>
		    <EQUAL? PT7 'VECTOR + BOOL140 (DEAD-JUMP OVERLAP9)>
		    <EQUAL? PT7 'UVECTOR - PHRASE139 (DEAD-JUMP DIR10 PT7) (DEAD-FALL OVERLAP9)>
BOOL140
		    <FRAME 'IEMIT>
		    <PUSH '`MOVE-WORDS>
		    <PUSH THE-SYM19>
		    <PUSH RSTN13>
		    <PUSH LNTN14>
		    <CONS PT7 () = TEMP31>
		    <DEAD PT7>
		    <CONS '`TYPE TEMP31 = STACK>
		    <DEAD TEMP31>
		    <CONS DIR10 () = TEMP31>
		    <DEAD DIR10>
		    <CONS '`DIRECTION TEMP31 = STACK>
		    <DEAD TEMP31>
		    <CALL 'IEMIT 6>
		    <JUMP + PHRASE142>
PHRASE139
		    <FRAME 'IEMIT>
		    <PUSH '`MOVE-STRING>
		    <PUSH THE-SYM19>
		    <PUSH RSTN13>
		    <PUSH LNTN14>
		    <VEQUAL? OVERLAP9 0 - TAG144>
		    <DEAD OVERLAP9>
		    <SET TEMP31 'T (TYPE ATOM)>
		    <JUMP + TAG145>
TAG144
		    <SET TEMP31 %<> (TYPE FALSE)>
TAG145
		    <CONS TEMP31 () = TEMP31>
		    <CONS '`NO-OVERLAP TEMP31 = STACK>
		    <DEAD TEMP31>
		    <CALL 'IEMIT 5>
PHRASE142
		    <FRAME 'FREE-TEMP>
		    <PUSH THE-SYM19>
		    <DEAD THE-SYM19>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'FREE-TEMP>
		    <PUSH LNTN14>
		    <DEAD LNTN14>
		    <CALL 'FREE-TEMP 1>
		    <FRAME 'MOVE-ARG>
		    <PUSH RSTN13>
		    <DEAD RSTN13>
		    <PUSH W5>
		    <DEAD W5>
		    <CALL 'MOVE-ARG 2 = TEMP31>
		    <RETURN TEMP31>
		    <DEAD TEMP31>
		    <END SUBSTRUC-GEN>

<ENDPACK