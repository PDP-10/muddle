
<PACKAGE "PASS1">

<ENTRY PASS1 PCOMP PMACRO PAPPLY-OBJECT PAPPLY-TYPE PTHIS-OBJECT PTHIS-TYPE GEN-D ACT-FIX FIND_DECL SEG? PSUBR-C>

<RENTRY REFERENCED>

<USE "GC-DUMP" "CHKDCL" "COMPDEC" "MIMGEN" "ADVMESS" "CDRIVE">

"	This file contains the first pass of the MUDDLE compiler.
The functions therein take a MUDDLE function and build a more detailed
model of it.  Each entity in the function is represented by an object
of type NODE.  The entire function is represented by the functions node
and it points to the rest of the nodes for the function."

"	Nodes vary in complexity and size depending on what they represent.
A function or prog/repeat node is contains more information than a node
for a quoted object.  All nodes have some fields in common to allow
general programs to traverse the model."

"	The model built by PASS1 is used by the analyzer (SYMANA), the
variable allocator (VARANA) and the code generator (CODGEN).  In some
cases the analyzers and generators for certain classes of SUBRs are 
together in their own files (e.g.  CARITH, STRUCT, ISTRUC)."

"	This the top level program for PASS1.  It takes a function as
input and returns the data structure representing the model."

<COND (<NOT ,MIM> <SETG PMAX ,NUMPRI!-MUDDLE>)>

<SETG MAX-DENSE 2>

<NEWTYPE ORQ LIST>

<COND (<NOT ,MIM> <FLOAD "PRCOD.NBIN">)>

#WORD *5563321353*
<GFCN PASS1 ("VALUE" NODE ATOM FUNCTION) FNAME4 FUNC5>
		    <TEMP (TEMP3 ()) TEMP16 (DCL8 #DECL ()) (ARGL9:LIST ()) (HATOM10 %<>) FCN12 TEMP47>
		    <INTGO>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <BBIND 'FNAME 'ATOM %<> FNAME4>
		    <DEAD FNAME4>
		    <FIXBIND>
		    <BBIND 'RESULT 'NODE 'FIX>
		    <GVAL 'LVARTBL = TEMP16>
		    <BBIND 'VARTBL 'SYMTAB 'FIX TEMP16>
		    <DEAD TEMP16>
		    <SET FCN12 FUNC5>
		    <DEAD FUNC5>
		    <BBIND 'RQRG 'FIX 'FIX 0>
		    <BBIND 'TRG 'FIX 'FIX 0>
		    <EMPL? FCN12 - PHRASE18 (TYPE FUNCTION)>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Empty function:  ">
		    <NTHR 'FNAME 2 = TEMP16 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP16 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP16>
		    <CALL 'COMPILE-ERROR 2>
PHRASE18
		    <NTHL FCN12 1 = TEMP16>
		    <TYPE? TEMP16 <TYPE-CODE ATOM> + TAG24>
		    <TYPE? TEMP16 <TYPE-CODE ADECL> - PHRASE23>
		    <DEAD TEMP16>
TAG24
		    <NTHL FCN12 1 = HATOM10>
		    <RESTL FCN12 1 = FCN12 (TYPE LIST)>
		    <CHTYPE FCN12 <TYPE-CODE LIST> = FCN12>
PHRASE23
		    <EMPL? FCN12 - PHRASE26>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Empty function:  ">
		    <NTHR 'FNAME 2 = TEMP16 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP16 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP16>
		    <CALL 'COMPILE-ERROR 2>
PHRASE26
		    <NTHL FCN12 1 = ARGL9 (TYPE LIST)>
		    <RESTL FCN12 1 = FCN12 (TYPE LIST)>
		    <CHTYPE FCN12 <TYPE-CODE LIST> = FCN12>
		    <EMPL? FCN12 + PHRASE32 (TYPE LIST)>
		    <NTHL FCN12 1 = TEMP16>
		    <TYPE? TEMP16 <TYPE-CODE DECL> - PHRASE32>
		    <DEAD TEMP16>
		    <NTHL FCN12 1 = DCL8 (TYPE DECL)>
		    <RESTL FCN12 1 = FCN12 (TYPE LIST)>
PHRASE32
		    <EMPL? FCN12 - PHRASE35 (TYPE LIST)>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Function has no body:  ">
		    <NTHR 'FNAME 2 = TEMP16 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP16 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP16>
		    <CALL 'COMPILE-ERROR 2>
PHRASE35
		    <FRAME 'NODEF>
		    <PUSH 1>
		    <PUSH ()>
		    <FRAME 'FIND_DECL>
		    <PUSH 'VALUE>
		    <PUSH DCL8>
		    <CALL 'FIND_DECL 2 = STACK>
		    <NTHR 'FNAME 2 = TEMP16 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP16 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP16>
		    <PUSH ()>
		    <PUSH ()>
		    <PUSH ()>
		    <PUSH HATOM10>
		    <NTHR 'VARTBL 2 = TEMP16 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP16 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP16>
		    <PUSH 0>
		    <PUSH 0>
		    <CALL 'NODEF 11 = TEMP16>
		    <NTHR 'RESULT 2 = TEMP47 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP47 1 TEMP16 (RECORD-TYPE LBIND)>
		    <DEAD TEMP47 TEMP16>
		    <FRAME 'GEN-D>
		    <PUSH ARGL9>
		    <DEAD ARGL9>
		    <PUSH DCL8>
		    <DEAD DCL8>
		    <PUSH HATOM10>
		    <DEAD HATOM10>
		    <NTHR 'RESULT 2 = TEMP16 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP16 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP16>
		    <CALL 'GEN-D 4>
		    <FRAME 'PUTPROP>
		    <NTHR 'FNAME 2 = TEMP16 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP16 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP16>
		    <GEN-LVAL 'IND = STACK>
		    <NTHR 'RESULT 2 = TEMP47 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP47 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP47>
		    <CALL 'PUTPROP 3>
		    <PUSH "VALUE">
		    <NTHR 'RESULT 2 = TEMP47 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP47 1 = TEMP47 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP47 3 = STACK>
		    <DEAD TEMP47>
		    <SET DCL8 2 (TYPE FIX)>
		    <NTHR 'RESULT 2 = TEMP16 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP16 1 = TEMP16 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP16 9 = TEMP47>
		    <DEAD TEMP16>
		    <TYPE TEMP47 = TEMP16>
		    <AND TEMP16 7 = TEMP16>
		    <VEQUAL? TEMP16 1 + TAG66>
		    <DEAD TEMP16>
		    <LOOP (TEMP47 TYPE VALUE LENGTH) (DCL8 VALUE)>
TAG71
		    <INTGO>
		    <EMPTY? TEMP47 + TAG70>
		    <NTH1 TEMP47 = STACK>
		    <REST1 TEMP47 = TEMP47>
		    <ADD DCL8 1 = DCL8 (TYPE FIX)>
		    <JUMP + TAG71>
TAG70
		    <LIST DCL8 = TEMP16 (TYPE LIST)>
		    <DEAD DCL8>
		    <JUMP + TAG67>
TAG66
		    <LOOP>
TAG69
		    <VEQUAL? DCL8 0 + TAG68>
		    <POP = TEMP16>
		    <CONS TEMP16 TEMP47 = TEMP47 (TYPE LIST)>
		    <DEAD TEMP16>
		    <SUB DCL8 1 = DCL8 (TYPE FIX)>
		    <JUMP + TAG69>
TAG68
		    <SET TEMP16 TEMP47>
		    <DEAD TEMP47>
TAG67
		    <NTHR 'RESULT 2 = TEMP47 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP47 1 = TEMP47 (RECORD-TYPE LBIND)>
		    <PUTUV TEMP47 9 TEMP16>
		    <DEAD TEMP47 TEMP16>
		    <NTHR 'RESULT 2 = TEMP47 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP47 1 = TEMP47 (RECORD-TYPE LBIND)>
		    <SET HATOM10 () (TYPE LIST)>
		    <SET DCL8 () (TYPE LIST)>
		    <SET TEMP16 FCN12 (TYPE LIST)>
		    <DEAD FCN12>
		    <LOOP>
MAP77
		    <INTGO>
		    <EMPL? TEMP16 + MAPAP80>
		    <NTHL TEMP16 1 = FCN12>
		    <FRAME 'PCOMP>
		    <PUSH FCN12>
		    <DEAD FCN12>
		    <NTHR 'RESULT 2 = FCN12 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR FCN12 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD FCN12>
		    <CALL 'PCOMP 2 = FCN12>
		    <CONS FCN12 () = FCN12 (TYPE LIST)>
		    <EMPL? HATOM10 - TAG91>
		    <SET HATOM10 FCN12 (TYPE LIST)>
		    <JUMP + TAG92>
TAG91
		    <PUTREST DCL8 FCN12>
		    <DEAD DCL8>
TAG92
		    <SET DCL8 FCN12 (TYPE LIST)>
		    <DEAD FCN12>
		    <RESTL TEMP16 1 = TEMP16 (TYPE LIST)>
		    <JUMP + MAP77>
MAPAP80
		    <PUTUV TEMP47 5 HATOM10 (TYPE LIST)>
		    <DEAD TEMP47 HATOM10>
		    <FRAME 'ACT-FIX>
		    <NTHR 'RESULT 2 = TEMP47 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP47 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP47>
		    <NTHR 'RESULT 2 = TEMP47 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP47 1 = TEMP47 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP47 10 = STACK (TYPE LIST)>
		    <DEAD TEMP47>
		    <CALL 'ACT-FIX 2>
		    <FRAME 'PUTPROP>
		    <NTHR 'FNAME 2 = TEMP47 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP47 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP47>
		    <GEN-LVAL 'IND = STACK>
		    <CALL 'PUTPROP 2>
		    <FRAME 'PUTPROP>
		    <NTHR 'FNAME 2 = TEMP16 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP16 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP16>
		    <PUSH 'RSUB-DEC>
		    <NTHR 'RESULT 2 = TEMP16 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP16 1 = TEMP16 (RECORD-TYPE LBIND)>
		    <NTHUV TEMP16 9 = STACK>
		    <DEAD TEMP16>
		    <CALL 'PUTPROP 3>
		    <NTHR 'RESULT 2 = TEMP16 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP16 1 = TEMP16 (RECORD-TYPE LBIND)>
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -45>
		    <RETURN TEMP16>
		    <DEAD TEMP16>
		    <END PASS1>
"Vector of legal strings in decl list."

<SETG TOT-MODES ["BIND" "CALL" "OPT" "OPTIONAL" "ARGS" "TUPLE" "AUX" "EXTRA" "ACT" "NAME" "DECL" "VALUE"]>

<PROG ((N <LENGTH ,TOT-MODES>)) <MAPF <> <FUNCTION (S "AUX" (ATM <PARSE <STRING "ACODE-" .S>>)) <SETG .ATM .N> <MANIFEST .ATM> <SET N <- .N 1>>> ,TOT-MODES> <SET N <+ <LENGTH ,TOT-MODES> 1>> <MAPF <> <FUNCTION (ATM) <SETG .ATM .N> <MANIFEST .ATM> <SET N <+ .N 1>>> '[ACODE-INIT ACODE-INIT1 ACODE-ERR ACODE-NORM]>>

"Amount to rest off decl vector after each encounter."

<SETG RESTS ![1 1 1 2 1 2 1 2 1 2 1 1!]>

"	This function (and others on this page) take an arg list and
decls and parses them.

	1) An RSUBR decl list.

	2) A machine readable binding specification.

Atoms are also entered into the symbol table."

#WORD *17311645252*
<GFCN GEN-D ("VALUE" NODE LIST <PRIMTYPE LIST> ANY ANY) ARGL4 DCL5 HATOM6 FCNNOD7>
		    <TEMP TEMP3:LBIND TEMP22 RES_TOP9:LIST BNDL_TOP12:LIST TEMP25 (ST17 %<>) TEMP34 TIX14 TEMP53 TEMP66>
		    <INTGO>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <BBIND 'DCL <PRIMTYPE LIST> %<> DCL5>
		    <DEAD DCL5>
		    <FIXBIND>
		    <GEN-LVAL 'VARTBL = TEMP22>
		    <CONS () () = RES_TOP9>
		    <BBIND 'RES_BOT 'LIST 'FIX RES_TOP9>
		    <BBIND 'ARGN 'FIX 'FIX 1>
		    <CONS () () = BNDL_TOP12>
		    <BBIND 'BNDL_BOT 'LIST 'FIX BNDL_TOP12>
		    <GVAL 'TOT-MODES = TEMP25>
		    <BBIND 'MODE <VECTOR [REST STRING]> 'FIX TEMP25>
		    <DEAD TEMP25>
		    <BBIND 'IX 'FIX 'FIX 13>
		    <LOOP>
AGAIN27
		    <INTGO>
		    <EMPL? ARGL4 + EXIT26 (TYPE LIST)>
		    <NTHL ARGL4 1 = TEMP25>
		    <TYPE? TEMP25 <TYPE-CODE ATOM> + TAG32>
		    <TYPE? TEMP25 <TYPE-CODE FORM> + TAG32>
		    <TYPE? TEMP25 <TYPE-CODE LIST> + TAG32>
		    <TYPE? TEMP25 <TYPE-CODE ADECL> - PHRASE31>
TAG32
		    <SET ST17 %<> (TYPE FALSE)>
		    <FRAME 'RUN-ARGER>
		    <NTHR 'IX 2 = TEMP34 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP34 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP34>
		    <PUSH TEMP25>
		    <DEAD TEMP25>
		    <PUSH FCNNOD7>
		    <CALL 'RUN-ARGER 3>
		    <JUMP + PHRASE69>
PHRASE31
		    <TYPE? TEMP25 <TYPE-CODE STRING> - PHRASE37>
		    <TYPE? ST17 <TYPE-CODE FALSE> + PHRASE39>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Two arg list strings in a row:  ">
		    <PUSH ST17>
		    <DEAD ST17>
		    <PUSH TEMP25>
		    <CALL 'COMPILE-ERROR 3>
PHRASE39
		    <SET ST17 TEMP25>
		    <FRAME 'MEMBER>
		    <PUSH TEMP25>
		    <NTHR 'MODE 2 = TEMP34 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP34 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP34>
		    <CALL 'MEMBER 2 = TIX14>
		    <TYPE? TIX14 <TYPE-CODE FALSE> - PHRASE42>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Unrecognized arg list string:  ">
		    <PUSH TEMP25>
		    <DEAD TEMP25>
		    <CALL 'COMPILE-ERROR 2>
PHRASE42
		    <NTHR 'MODE 2 = TEMP34 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP34 1 = TEMP34 (RECORD-TYPE LBIND)>
		    <GVAL 'RESTS = TEMP25>
		    <LENUV TIX14 = TIX14 (TYPE FIX)>
		    <NTHR 'IX 2 = TEMP53 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP53 1 TIX14 (RECORD-TYPE LBIND)>
		    <DEAD TEMP53>
		    <NTHUU TEMP25 TIX14 = TEMP53 (TYPE FIX)>
		    <DEAD TEMP25 TIX14>
		    <RESTUV TEMP34 TEMP53 = TEMP53 (TYPE VECTOR)>
		    <DEAD TEMP34>
		    <NTHR 'MODE 2 = TEMP34 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP34 1 TEMP53 (RECORD-TYPE LBIND)>
		    <DEAD TEMP34 TEMP53>
		    <NTHR 'IX 2 = TEMP53 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP53 1 = TEMP53 (RECORD-TYPE LBIND)>
		    <LESS? TEMP53 7 + PHRASE69 (TYPE FIX)>
		    <DEAD TEMP53>
		    <NTHR 'IX 2 = TEMP53 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP53 1 = TEMP53 (RECORD-TYPE LBIND)>
		    <GRTR? TEMP53 11 + PHRASE69 (TYPE FIX)>
		    <DEAD TEMP53>
		    <FRAME 'PUT-RES>
		    <NTHL ARGL4 1 = TEMP53>
		    <TYPE? TEMP53 <TYPE-CODE STRING> - PHRASE65>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP53 "OPT" - PHRASE65>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP34 "OPT" (TYPE STRING)>
		    <LENUS TEMP53 = TIX14 (TYPE FIX)>
		    <VEQUAL? TIX14 3 - PHRASE65>
		    <LOOP (TEMP53 VALUE LENGTH) (TEMP34 VALUE LENGTH) (TIX14 VALUE)>
TAG67
		    <NTHUS TEMP53 1 = TEMP25>
		    <NTHUS TEMP34 1 = TEMP66>
		    <VEQUAL? TEMP25 TEMP66 - PHRASE65>
		    <DEAD TEMP25 TEMP66>
		    <RESTUS TEMP53 1 = TEMP53 (TYPE STRING)>
		    <RESTUS TEMP34 1 = TEMP34 (TYPE STRING)>
		    <SUB TIX14 1 = TIX14 (TYPE FIX)>
		    <GRTR? TIX14 0 + TAG67 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <SET TEMP34 "OPTIONAL" (TYPE STRING)>
		    <JUMP + PHRASE68>
PHRASE65
		    <NTHL ARGL4 1 = TEMP34>
PHRASE68
		    <CONS TEMP34 () = STACK>
		    <DEAD TEMP34>
		    <CALL 'PUT-RES 1>
		    <JUMP + PHRASE69>
PHRASE37
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Unknown type of object in arglist ">
		    <PUSH TEMP25>
		    <DEAD TEMP25>
		    <CALL 'COMPILE-ERROR 2>
PHRASE69
		    <RESTL ARGL4 1 = ARGL4 (TYPE LIST)>
		    <JUMP + AGAIN27>
EXIT26
		    <TYPE? HATOM6 <TYPE-CODE FALSE> + PHRASE72>
		    <FRAME 'ACT-D>
		    <PUSH HATOM6>
		    <DEAD HATOM6>
		    <CALL 'ACT-D 1>
PHRASE72
		    <LOOP>
AGAIN77
		    <INTGO>
		    <NTHR 'DCL 2 = TEMP53 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP53 1 = TEMP53 (RECORD-TYPE LBIND)>
		    <EMPL? TEMP53 + EXIT74>
		    <DEAD TEMP53>
		    <NTHR 'DCL 2 = TEMP66 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP66 1 = TEMP66 (RECORD-TYPE LBIND)>
		    <RESTL TEMP66 1 = TEMP53 (TYPE LIST)>
		    <DEAD TEMP66>
		    <CHTYPE TEMP53 <TYPE-CODE LIST> = TEMP53>
		    <EMPL? TEMP53 - PHRASE82 (TYPE LIST)>
		    <DEAD TEMP53>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "DECL in bad format (no DECL for):  ">
		    <NTHR 'DCL 2 = TEMP53 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP53 1 = TEMP53 (RECORD-TYPE LBIND)>
		    <NTHL TEMP53 1 = STACK>
		    <DEAD TEMP53>
		    <CALL 'COMPILE-ERROR 2>
PHRASE82
		    <NTHR 'DCL 2 = TEMP53 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP53 1 = TEMP53 (RECORD-TYPE LBIND)>
		    <RESTL TEMP53 1 = TEMP53 (TYPE LIST)>
		    <NTHL TEMP53 1 = ST17>
		    <DEAD TEMP53>
		    <TYPE? ST17 <TYPE-CODE FORM> - PHRASE91>
		    <SET TEMP25 ST17>
		    <EMPL? TEMP25 + PHRASE91>
		    <RESTL TEMP25 1 = TEMP53 (TYPE LIST)>
		    <EMPL? TEMP53 + PHRASE91>
		    <RESTL TEMP53 1 = TEMP53 (TYPE LIST)>
		    <EMPL? TEMP53 - PHRASE91>
		    <DEAD TEMP53>
		    <NTHL TEMP25 1 = TEMP53>
		    <EQUAL? TEMP53 'SPECIAL + BOOL93>
		    <DEAD TEMP53>
		    <NTHL TEMP25 1 = TEMP53>
		    <EQUAL? TEMP53 'UNSPECIAL - PHRASE91>
		    <DEAD TEMP53>
BOOL93
		    <RESTL TEMP25 1 = TEMP53 (TYPE LIST)>
		    <DEAD TEMP25>
		    <NTHL TEMP53 1 = ST17>
		    <DEAD TEMP53>
PHRASE91
		    <NTHR 'DCL 2 = TEMP25 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP25 1 = TEMP25 (RECORD-TYPE LBIND)>
		    <NTHL TEMP25 1 = TEMP25>
		    <CHTYPE TEMP25 <TYPE-CODE LIST> = TEMP25>
		    <LOOP>
MAP95
		    <INTGO>
		    <EMPL? TEMP25 + MAPAP98>
		    <NTHL TEMP25 1 = TEMP34>
		    <EQUAL? TEMP34 'VALUE + PHRASE107>
		    <FRAME 'SRCH-SYM>
		    <PUSH TEMP34>
		    <CALL 'SRCH-SYM 1 = TIX14>
		    <VEQUAL? TIX14 0 - PHRASE107>
		    <DEAD TIX14>
		    <FRAME 'ADDVAR>
		    <PUSH TEMP34>
		    <DEAD TEMP34>
		    <PUSH 'T>
		    <PUSH -1>
		    <PUSH 0>
		    <PUSH 'T>
		    <PUSH ST17>
		    <PUSH %<>>
		    <PUSH %<>>
		    <CALL 'ADDVAR 8>
PHRASE107
		    <RESTL TEMP25 1 = TEMP25 (TYPE LIST)>
		    <JUMP + MAP95>
MAPAP98
		    <NTHR 'DCL 2 = ST17 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR ST17 1 = ST17 (RECORD-TYPE LBIND)>
		    <RESTL ST17 1 = ST17 (TYPE LIST)>
		    <RESTL ST17 1 = TEMP25 (TYPE LIST)>
		    <DEAD ST17>
		    <CHTYPE TEMP25 <TYPE-CODE LIST> = TEMP25>
		    <NTHR 'DCL 2 = ST17 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR ST17 1 TEMP25 (RECORD-TYPE LBIND)>
		    <DEAD ST17 TEMP25>
		    <JUMP + AGAIN77>
EXIT74
		    <GEN-LVAL 'VARTBL = ST17>
		    <GEN-SET 'VARTBL TEMP22>
		    <VEQUAL? TEMP22 ST17 + EXIT122>
		    <SET TEMP25 ST17>
		    <LOOP>
AGAIN124
		    <INTGO>
		    <NTHUV TEMP25 1 = TEMP66>
		    <EQUAL? TEMP66 TEMP22 - PHRASE126>
		    <DEAD TEMP66>
		    <GEN-LVAL 'VARTBL = TEMP66>
		    <PUTUV TEMP25 1 TEMP66>
		    <DEAD TEMP25 TEMP66>
		    <GEN-SET 'VARTBL ST17>
		    <DEAD ST17>
		    <JUMP + EXIT122>
PHRASE126
		    <NTHUV TEMP25 1 = TEMP25 (TYPE SYMTAB)>
		    <JUMP + AGAIN124>
EXIT122
		    <NTHR 'ARGN 2 = TEMP66 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP66 1 = TEMP66 (RECORD-TYPE LBIND)>
		    <SUB TEMP66 1 = TEMP66 (TYPE FIX)>
		    <GEN-SET 'TRG TEMP66>
		    <LESS? TEMP66 0 - BOOL132 (TYPE FIX)>
		    <DEAD TEMP66>
		    <GEN-SET 'RQRG -1>
BOOL132
		    <RESTL BNDL_TOP12 1 = TEMP66 (TYPE LIST)>
		    <DEAD BNDL_TOP12>
		    <PUTUV FCNNOD7 10 TEMP66 (TYPE LIST)>
		    <DEAD TEMP66>
		    <NTHUV FCNNOD7 1 = TEMP66 (TYPE FIX)>
		    <VEQUAL? TEMP66 1 - PHRASE142 (TYPE FIX)>
		    <DEAD TEMP66>
		    <GEN-LVAL 'RQRG = TEMP66>
		    <PUTUV FCNNOD7 21 TEMP66>
		    <DEAD TEMP66>
		    <GEN-LVAL 'TRG = TEMP66>
		    <PUTUV FCNNOD7 20 TEMP66>
		    <DEAD TEMP66>
		    <RESTL RES_TOP9 1 = TEMP66 (TYPE LIST)>
		    <DEAD RES_TOP9>
		    <PUTUV FCNNOD7 9 TEMP66>
		    <DEAD TEMP66>
PHRASE142
		    <GEN-LVAL 'VARTBL = TEMP66>
		    <PUTUV FCNNOD7 11 TEMP66>
		    <DEAD TEMP66>
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -54>
		    <RETURN FCNNOD7>
		    <DEAD FCNNOD7>
		    <END GEN-D>
"RUN-ARGER dispatches to different arg handlers"

#WORD *25027635603*
<GFCN RUN-ARGER ("VALUE" ANY FIX ANY ANY) INDX4 ARG5 N6>
		    <TEMP TEMP25>
		    <INTGO>
		    <DISPATCH INDX4 1 CASE23 CASE22 CASE18 CASE17 CASE16 CASE15 CASE14 CASE13 CASE12 CASE11 CASE10 CASE9 CASE19 CASE20 CASE24 CASE21>
		    <DEAD INDX4>
		    <RETURN %<>>
CASE9
		    <FRAME 'BIND-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'BIND-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE10
		    <FRAME 'CALL-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'CALL-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE11
		    <FRAME 'OPT-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'OPT-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE12
		    <FRAME 'OPT-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'OPT-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE13
		    <FRAME 'ARGS-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'ARGS-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE14
		    <FRAME 'TUPL-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'TUPL-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE15
		    <FRAME 'AUX-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'AUX-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE16
		    <FRAME 'AUX-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'AUX-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE17
		    <FRAME 'ACT-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'ACT-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE18
		    <FRAME 'ACT-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'ACT-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE19
		    <FRAME 'INIT-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'INIT-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE20
		    <FRAME 'INIT1-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'INIT1-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE21
		    <FRAME 'NORM-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'NORM-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE22
		    <FRAME 'DECL-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'DECL-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE23
		    <FRAME 'VDECL-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <PUSH N6>
		    <DEAD N6>
		    <CALL 'VDECL-D 2 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
CASE24
		    <FRAME 'ERR-D>
		    <PUSH ARG5>
		    <DEAD ARG5>
		    <CALL 'ERR-D 1 = TEMP25>
		    <RETURN TEMP25>
		    <DEAD TEMP25>
		    <END RUN-ARGER>
#WORD *13154210207*
<GFCN SRCH-SYM ("VALUE" <OR !<FALSE> <<PRIMTYPE VECTOR> ANY ATOM>> ATOM) ATM4>
		    <TEMP TEMP6 TEMP17:ATOM>
		    <INTGO>
		    <GEN-LVAL 'VARTBL = TEMP6>
		    <LOOP>
AGAIN12
		    <INTGO>
		    <EMPUV? TEMP6 - PHRASE14>
		    <RETURN %<>>
PHRASE14
		    <NTHUV TEMP6 2 = TEMP17 (TYPE ATOM)>
		    <VEQUAL? TEMP17 ATM4 - PHRASE16>
		    <DEAD TEMP17>
		    <RETURN TEMP6>
		    <DEAD TEMP6>
PHRASE16
		    <NTHUV TEMP6 1 = TEMP6>
		    <JUMP + AGAIN12>
		    <END SRCH-SYM>
"This function used for normal args when \"BIND\" and \"CALL\" still possible."

#WORD *32344334262*
<GFCN INIT-D ("VALUE" <OR FALSE FIX> ANY) OBJ4>
		    <TEMP TEMP5>
		    <INTGO>
		    <GEN-LVAL 'MODE = TEMP5>
		    <RESTUV TEMP5 1 = TEMP5 (TYPE VECTOR)>
		    <GEN-SET 'MODE TEMP5>
		    <DEAD TEMP5>
		    <FRAME 'INIT1-D>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'INIT1-D 1 = TEMP5>
		    <RETURN TEMP5>
		    <DEAD TEMP5>
		    <END INIT-D>
"This function for normal args when \"CALL\" still possible."

#WORD *12614350776*
<GFCN INIT1-D ("VALUE" <OR FALSE FIX> ANY) OBJ4>
		    <TEMP TEMP5>
		    <INTGO>
		    <GEN-LVAL 'MODE = TEMP5>
		    <RESTUV TEMP5 1 = TEMP5 (TYPE VECTOR)>
		    <GEN-SET 'MODE TEMP5>
		    <DEAD TEMP5>
		    <GEN-SET 'IX 16>
		    <FRAME 'NORM-D>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'NORM-D 1 = TEMP5>
		    <RETURN TEMP5>
		    <DEAD TEMP5>
		    <END INIT1-D>
"Handle a normal argument or quoted normal argument."

#WORD *24732503627*
<GFCN NORM-D ("VALUE" <OR FALSE FIX> ANY "OPTIONAL" ANY) OBJ6 DC7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP DC1-8 TEMP18>
		    <INTGO>
		    <TYPE? OBJ6 <TYPE-CODE LIST> - PHRASE10>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "LIST not in OPT(IONAL) or AUX:  ">
		    <PUSH OBJ6>
		    <CALL 'COMPILE-ERROR 2>
PHRASE10
		    <TYPE? OBJ6 <TYPE-CODE ATOM> - PHRASE13>
		    <FRAME 'PUT-RES>
		    <FRAME 'PUT-DCL>
		    <PUSH 13>
		    <PUSH OBJ6>
		    <PUSH %<>>
		    <TYPE? DC7 <TYPE-CODE UNBOUND> + PHRASE17>
		    <SET TEMP18 DC7>
		    <JUMP + PHRASE19>
PHRASE17
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ6>
		    <DEAD OBJ6>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = TEMP18>
PHRASE19
		    <PUSH TEMP18>
		    <DEAD TEMP18>
		    <PUSH 'T>
		    <CALL 'PUT-DCL 5 = TEMP18>
		    <CONS TEMP18 () = STACK>
		    <DEAD TEMP18>
		    <CALL 'PUT-RES 1>
		    <JUMP + PHRASE29>
PHRASE13
		    <TYPE? OBJ6 <TYPE-CODE ADECL> - PHRASE24>
		    <LENUV OBJ6 = TEMP18 (TYPE FIX)>
		    <VEQUAL? TEMP18 2 + PHRASE26 (TYPE FIX)>
		    <DEAD TEMP18>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ6>
		    <CALL 'COMPILE-ERROR 2>
PHRASE26
		    <FRAME 'NORM-D>
		    <NTHUV OBJ6 1 = STACK>
		    <NTHUV OBJ6 2 = STACK>
		    <DEAD OBJ6>
		    <CALL 'NORM-D 2>
		    <JUMP + PHRASE29>
PHRASE24
		    <FRAME 'QUOTCH>
		    <PUSH OBJ6>
		    <DEAD OBJ6>
		    <CALL 'QUOTCH 1 = OBJ6>
		    <TYPE? OBJ6 <TYPE-CODE ADECL> - PHRASE32>
		    <LENUV OBJ6 = TEMP18 (TYPE FIX)>
		    <VEQUAL? TEMP18 2 + PHRASE34 (TYPE FIX)>
		    <DEAD TEMP18>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ6>
		    <CALL 'COMPILE-ERROR 2>
PHRASE34
		    <NTHUV OBJ6 2 = DC1-8>
		    <NTHUV OBJ6 1 = OBJ6>
PHRASE32
		    <FRAME 'PUT-RES>
		    <CONS "QUOTE" () = TEMP18>
		    <FRAME 'PUT-DCL>
		    <PUSH 12>
		    <PUSH OBJ6>
		    <PUSH %<>>
		    <TYPE? DC7 <TYPE-CODE UNBOUND> + PHRASE39>
		    <SET DC1-8 DC7>
		    <JUMP + PHRASE42>
PHRASE39
		    <TYPE? DC1-8 <TYPE-CODE UNBOUND> - PHRASE42>
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ6>
		    <DEAD OBJ6>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = DC1-8>
PHRASE42
		    <PUSH DC1-8>
		    <DEAD DC1-8>
		    <PUSH 'T>
		    <CALL 'PUT-DCL 5 = DC1-8>
		    <CONS DC1-8 () = DC1-8>
		    <PUTREST TEMP18 DC1-8>
		    <DEAD DC1-8>
		    <PUSH TEMP18>
		    <DEAD TEMP18>
		    <CALL 'PUT-RES 1>
PHRASE29
		    <TYPE? DC7 <TYPE-CODE UNBOUND> + TAG49>
		    <DEAD DC7>
		    <RETURN %<>>
TAG49
		    <GEN-LVAL 'ARGN = DC1-8>
		    <ADD DC1-8 1 = DC1-8 (TYPE FIX)>
		    <GEN-SET 'ARGN DC1-8>
		    <DEAD DC1-8>
		    <GEN-LVAL 'RQRG = DC1-8>
		    <ADD DC1-8 1 = TEMP18 (TYPE FIX)>
		    <DEAD DC1-8>
		    <GEN-SET 'RQRG TEMP18>
		    <RETURN TEMP18>
		    <DEAD TEMP18>
		    <END NORM-D>
"Handle \"BIND\" decl."

#WORD *13677320114*
<GFCN BIND-D ("VALUE" FIX ANY) OBJ4>
		    <TEMP DC5>
		    <INTGO>
		    <TYPE? OBJ4 <TYPE-CODE ADECL> - PHRASE7>
		    <LENUV OBJ4 = DC5 (TYPE FIX)>
		    <VEQUAL? DC5 2 + PHRASE9 (TYPE FIX)>
		    <DEAD DC5>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE9
		    <NTHUV OBJ4 1 = OBJ4>
		    <FRAME 'NTH>
		    <PUSH OBJ4>
		    <PUSH 2>
		    <CALL 'NTH 2 = DC5>
PHRASE7
		    <TYPE? OBJ4 <TYPE-CODE ATOM> + PHRASE14>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad object after \"BIND\":  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE14
		    <FRAME 'PUT-DCL>
		    <PUSH 11>
		    <PUSH OBJ4>
		    <PUSH %<>>
		    <TYPE? DC5 <TYPE-CODE UNBOUND> - PHRASE19>
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ4>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = DC5>
PHRASE19
		    <PUSH DC5>
		    <DEAD DC5>
		    <PUSH 'T>
		    <CALL 'PUT-DCL 5 = DC5>
		    <FRAME 'TYPE-ATOM-OK?>
		    <PUSH DC5>
		    <DEAD DC5>
		    <PUSH 'FRAME>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'TYPE-ATOM-OK? 3>
		    <GEN-SET 'IX 14>
		    <RETURN 14>
		    <END BIND-D>
"Handle \"CALL\" decl."

#WORD *11152003471*
<GFCN CALL-D ("VALUE" FIX ANY) OBJ4>
		    <TEMP DC5 TEMP6>
		    <INTGO>
		    <GEN-LVAL 'RQRG = TEMP6>
		    <ADD TEMP6 1 = TEMP6 (TYPE FIX)>
		    <GEN-SET 'RQRG TEMP6>
		    <DEAD TEMP6>
		    <TYPE? OBJ4 <TYPE-CODE ADECL> - PHRASE12>
		    <LENUV OBJ4 = TEMP6 (TYPE FIX)>
		    <VEQUAL? TEMP6 2 + PHRASE14 (TYPE FIX)>
		    <DEAD TEMP6>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE14
		    <NTHUV OBJ4 2 = DC5>
		    <NTHUV OBJ4 1 = OBJ4>
PHRASE12
		    <TYPE? OBJ4 <TYPE-CODE ATOM> + PHRASE17>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad object after \"CALL\":  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE17
		    <FRAME 'PUT-RES>
		    <FRAME 'PUT-DCL>
		    <PUSH 10>
		    <PUSH OBJ4>
		    <PUSH %<>>
		    <TYPE? DC5 <TYPE-CODE UNBOUND> + PHRASE22>
		    <SET TEMP6 DC5>
		    <DEAD DC5>
		    <JUMP + PHRASE23>
PHRASE22
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ4>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = TEMP6>
PHRASE23
		    <PUSH TEMP6>
		    <DEAD TEMP6>
		    <PUSH 'T>
		    <CALL 'PUT-DCL 5 = DC5>
		    <CONS DC5 () = STACK>
		    <CALL 'PUT-RES 1>
		    <FRAME 'TYPE-ATOM-OK?>
		    <PUSH DC5>
		    <DEAD DC5>
		    <PUSH 'FORM>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'TYPE-ATOM-OK? 3>
		    <GEN-LVAL 'ARGN = TEMP6>
		    <ADD TEMP6 1 = TEMP6 (TYPE FIX)>
		    <GEN-SET 'ARGN TEMP6>
		    <DEAD TEMP6>
		    <GEN-SET 'IX 15>
		    <RETURN 15>
		    <END CALL-D>
"Flush on extra atoms after \"CALL\", \"ARGS\" etc."

#WORD *1156071750*
<GFCN ERR-D ("VALUE" ANY ANY) OBJ4>
		    <TEMP TEMP6>
		    <INTGO>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad DECL syntax:  ">
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'COMPILE-ERROR 2 = TEMP6>
		    <RETURN TEMP6>
		    <DEAD TEMP6>
		    <END ERR-D>
"Handle \"OPTIONAL\" decl."

#WORD *12724315732*
<GFCN OPT-D ("VALUE" FIX ANY) OBJ4>
		    <TEMP DC5 TEMP11 OBJ1-6 TEMP66>
		    <INTGO>
		    <TYPE? OBJ4 <TYPE-CODE ADECL> - PHRASE8>
		    <LENUV OBJ4 = TEMP11 (TYPE FIX)>
		    <VEQUAL? TEMP11 2 + PHRASE10 (TYPE FIX)>
		    <DEAD TEMP11>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE10
		    <NTHUV OBJ4 2 = DC5>
		    <NTHUV OBJ4 1 = OBJ4>
PHRASE8
		    <TYPE? OBJ4 <TYPE-CODE ATOM> - PHRASE14>
		    <FRAME 'PUT-RES>
		    <FRAME 'PUT-DCL>
		    <PUSH 9>
		    <PUSH OBJ4>
		    <PUSH %<>>
		    <TYPE? DC5 <TYPE-CODE UNBOUND> + PHRASE18>
		    <SET TEMP11 DC5>
		    <DEAD DC5>
		    <JUMP + PHRASE19>
PHRASE18
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = TEMP11>
PHRASE19
		    <PUSH TEMP11>
		    <DEAD TEMP11>
		    <PUSH %<>>
		    <CALL 'PUT-DCL 5 = TEMP11>
		    <CONS TEMP11 () = STACK>
		    <DEAD TEMP11>
		    <CALL 'PUT-RES 1>
		    <JUMP + PHRASE74>
PHRASE14
		    <TYPE? OBJ4 <TYPE-CODE FORM> - PHRASE24>
		    <FRAME 'QUOTCH>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'QUOTCH 1 = OBJ4>
		    <TYPE? OBJ4 <TYPE-CODE ADECL> - PHRASE27>
		    <LENUV OBJ4 = TEMP11 (TYPE FIX)>
		    <VEQUAL? TEMP11 2 + PHRASE29 (TYPE FIX)>
		    <DEAD TEMP11>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE29
		    <NTHUV OBJ4 2 = DC5>
		    <NTHUV OBJ4 1 = OBJ4>
PHRASE27
		    <FRAME 'PUT-RES>
		    <CONS "QUOTE" () = TEMP11>
		    <FRAME 'PUT-DCL>
		    <PUSH 8>
		    <PUSH OBJ4>
		    <PUSH %<>>
		    <TYPE? DC5 <TYPE-CODE UNBOUND> - PHRASE36>
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = DC5>
PHRASE36
		    <PUSH DC5>
		    <DEAD DC5>
		    <PUSH %<>>
		    <CALL 'PUT-DCL 5 = DC5>
		    <CONS DC5 () = DC5>
		    <PUTREST TEMP11 DC5>
		    <DEAD DC5>
		    <PUSH TEMP11>
		    <DEAD TEMP11>
		    <CALL 'PUT-RES 1>
		    <JUMP + PHRASE74>
PHRASE24
		    <FRAME 'LISTCH>
		    <PUSH OBJ4>
		    <CALL 'LISTCH 1 = OBJ1-6>
		    <TYPE? OBJ1-6 <TYPE-CODE ATOM> + TAG43>
		    <TYPE? OBJ1-6 <TYPE-CODE ADECL> - PHRASE41>
TAG43
		    <TYPE? OBJ1-6 <TYPE-CODE ADECL> - PHRASE45>
		    <LENUV OBJ1-6 = TEMP11 (TYPE FIX)>
		    <VEQUAL? TEMP11 2 + PHRASE47 (TYPE FIX)>
		    <DEAD TEMP11>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ1-6>
		    <CALL 'COMPILE-ERROR 2>
PHRASE47
		    <NTHUV OBJ1-6 2 = DC5>
		    <NTHUV OBJ1-6 1 = OBJ1-6>
PHRASE45
		    <FRAME 'PUT-RES>
		    <FRAME 'PAUX>
		    <PUSH OBJ1-6>
		    <RESTL OBJ4 1 = TEMP11 (TYPE LIST)>
		    <DEAD OBJ4>
		    <NTHL TEMP11 1 = STACK>
		    <DEAD TEMP11>
		    <TYPE? DC5 <TYPE-CODE UNBOUND> + PHRASE52>
		    <SET TEMP11 DC5>
		    <DEAD DC5>
		    <JUMP + PHRASE53>
PHRASE52
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ1-6>
		    <DEAD OBJ1-6>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = TEMP11>
PHRASE53
		    <PUSH TEMP11>
		    <DEAD TEMP11>
		    <PUSH 7>
		    <CALL 'PAUX 4 = TEMP11>
		    <CONS TEMP11 () = STACK>
		    <DEAD TEMP11>
		    <CALL 'PUT-RES 1>
		    <JUMP + PHRASE74>
PHRASE41
		    <TYPE? OBJ1-6 <TYPE-CODE FORM> - PHRASE57>
		    <FRAME 'QUOTCH>
		    <PUSH OBJ1-6>
		    <DEAD OBJ1-6>
		    <CALL 'QUOTCH 1 = OBJ1-6>
		    <TYPE? OBJ1-6 <TYPE-CODE ADECL> - PHRASE60>
		    <LENUV OBJ1-6 = TEMP11 (TYPE FIX)>
		    <VEQUAL? TEMP11 2 + PHRASE62 (TYPE FIX)>
		    <DEAD TEMP11>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ1-6>
		    <CALL 'COMPILE-ERROR 2>
PHRASE62
		    <NTHUV OBJ1-6 2 = DC5>
		    <NTHUV OBJ1-6 1 = OBJ1-6>
PHRASE60
		    <FRAME 'PUT-RES>
		    <CONS "QUOTE" () = TEMP11>
		    <FRAME 'PAUX>
		    <PUSH OBJ1-6>
		    <RESTL OBJ4 1 = TEMP66 (TYPE LIST)>
		    <DEAD OBJ4>
		    <NTHL TEMP66 1 = STACK>
		    <DEAD TEMP66>
		    <TYPE? DC5 <TYPE-CODE UNBOUND> + PHRASE68>
		    <SET TEMP66 DC5>
		    <DEAD DC5>
		    <JUMP + PHRASE69>
PHRASE68
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ1-6>
		    <DEAD OBJ1-6>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = TEMP66>
PHRASE69
		    <PUSH TEMP66>
		    <DEAD TEMP66>
		    <PUSH 6>
		    <CALL 'PAUX 4 = TEMP66>
		    <CONS TEMP66 () = TEMP66>
		    <PUTREST TEMP11 TEMP66>
		    <DEAD TEMP66>
		    <PUSH TEMP11>
		    <DEAD TEMP11>
		    <CALL 'PUT-RES 1>
		    <JUMP + PHRASE74>
PHRASE57
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad use of \"OPT(IONAL)\":  ">
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE74
		    <GEN-LVAL 'ARGN = TEMP11>
		    <ADD TEMP11 1 = TEMP11 (TYPE FIX)>
		    <GEN-SET 'ARGN TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
		    <END OPT-D>
"Handle \"ARGS\" decl."

#WORD *340177530*
<GFCN ARGS-D ("VALUE" FIX ANY) OBJ4>
		    <TEMP DC5>
		    <INTGO>
		    <TYPE? OBJ4 <TYPE-CODE ADECL> - PHRASE7>
		    <LENUV OBJ4 = DC5 (TYPE FIX)>
		    <VEQUAL? DC5 2 + PHRASE9 (TYPE FIX)>
		    <DEAD DC5>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE9
		    <NTHUV OBJ4 2 = DC5>
		    <NTHUV OBJ4 1 = OBJ4>
PHRASE7
		    <TYPE? OBJ4 <TYPE-CODE ATOM> + PHRASE13>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad use of \"ARGS\":  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE13
		    <FRAME 'PUT-RES>
		    <FRAME 'PUT-DCL>
		    <PUSH 5>
		    <PUSH OBJ4>
		    <PUSH %<>>
		    <TYPE? DC5 <TYPE-CODE UNBOUND> - PHRASE19>
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ4>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = DC5>
PHRASE19
		    <PUSH DC5>
		    <DEAD DC5>
		    <PUSH %<>>
		    <CALL 'PUT-DCL 5 = DC5>
		    <CONS DC5 () = STACK>
		    <CALL 'PUT-RES 1>
		    <FRAME 'TYPE-ATOM-OK?>
		    <PUSH DC5>
		    <DEAD DC5>
		    <PUSH 'LIST>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'TYPE-ATOM-OK? 3>
		    <GEN-SET 'IX 15>
		    <GEN-LVAL 'ARGN = DC5>
		    <ADD DC5 1 = DC5 (TYPE FIX)>
		    <GEN-SET 'ARGN DC5>
		    <RETURN DC5>
		    <DEAD DC5>
		    <END ARGS-D>
"Handle \"TUPLE\" decl."

#WORD *12450343172*
<GFCN TUPL-D ("VALUE" FIX ANY) OBJ4>
		    <TEMP DC5>
		    <INTGO>
		    <TYPE? OBJ4 <TYPE-CODE ADECL> - PHRASE7>
		    <LENUV OBJ4 = DC5 (TYPE FIX)>
		    <VEQUAL? DC5 2 + PHRASE9 (TYPE FIX)>
		    <DEAD DC5>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE9
		    <NTHUV OBJ4 2 = DC5>
		    <NTHUV OBJ4 1 = OBJ4>
PHRASE7
		    <TYPE? OBJ4 <TYPE-CODE ATOM> + PHRASE13>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad use of \"TUPLE\":  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE13
		    <FRAME 'PUT-RES>
		    <FRAME 'PUT-DCL>
		    <PUSH 4>
		    <PUSH OBJ4>
		    <PUSH %<>>
		    <TYPE? DC5 <TYPE-CODE UNBOUND> - PHRASE19>
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ4>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = DC5>
PHRASE19
		    <PUSH DC5>
		    <DEAD DC5>
		    <PUSH %<>>
		    <CALL 'PUT-DCL 5 = DC5>
		    <CONS DC5 () = STACK>
		    <CALL 'PUT-RES 1>
		    <FRAME 'TYPE-ATOM-OK?>
		    <PUSH DC5>
		    <DEAD DC5>
		    <PUSH 'TUPLE>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'TYPE-ATOM-OK? 3>
		    <GEN-SET 'IX 15>
		    <RETURN 15>
		    <END TUPL-D>
"Handle \"AUX\" decl."

#WORD *3000766575*
<GFCN AUX-D ("VALUE" ANY ANY) OBJ4>
		    <TEMP DC5 OBJ1-6 TEMP31>
		    <INTGO>
		    <TYPE? OBJ4 <TYPE-CODE ADECL> - PHRASE8>
		    <LENUV OBJ4 = DC5 (TYPE FIX)>
		    <VEQUAL? DC5 2 + PHRASE10 (TYPE FIX)>
		    <DEAD DC5>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE10
		    <NTHUV OBJ4 2 = DC5>
		    <NTHUV OBJ4 1 = OBJ4>
PHRASE8
		    <TYPE? OBJ4 <TYPE-CODE ATOM> - PHRASE14>
		    <FRAME 'PUT-DCL>
		    <PUSH 3>
		    <PUSH OBJ4>
		    <PUSH %<>>
		    <TYPE? DC5 <TYPE-CODE UNBOUND> - PHRASE18>
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = DC5>
PHRASE18
		    <PUSH DC5>
		    <DEAD DC5>
		    <PUSH %<>>
		    <CALL 'PUT-DCL 5 = DC5>
		    <RETURN DC5>
		    <DEAD DC5>
PHRASE14
		    <TYPE? OBJ4 <TYPE-CODE LIST> - PHRASE23>
		    <FRAME 'LISTCH>
		    <PUSH OBJ4>
		    <CALL 'LISTCH 1 = OBJ1-6>
		    <TYPE? OBJ1-6 <TYPE-CODE ADECL> + TAG26>
		    <TYPE? OBJ1-6 <TYPE-CODE ATOM> - PHRASE23>
TAG26
		    <TYPE? OBJ1-6 <TYPE-CODE ADECL> - PHRASE28>
		    <LENUV OBJ1-6 = TEMP31 (TYPE FIX)>
		    <VEQUAL? TEMP31 2 + PHRASE30 (TYPE FIX)>
		    <DEAD TEMP31>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ1-6>
		    <CALL 'COMPILE-ERROR 2>
PHRASE30
		    <NTHUV OBJ1-6 2 = DC5>
		    <NTHUV OBJ1-6 1 = OBJ1-6>
PHRASE28
		    <FRAME 'PAUX>
		    <PUSH OBJ1-6>
		    <RESTL OBJ4 1 = TEMP31 (TYPE LIST)>
		    <DEAD OBJ4>
		    <NTHL TEMP31 1 = STACK>
		    <DEAD TEMP31>
		    <TYPE? DC5 <TYPE-CODE UNBOUND> + PHRASE35>
		    <SET TEMP31 DC5>
		    <DEAD DC5>
		    <JUMP + PHRASE36>
PHRASE35
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ1-6>
		    <DEAD OBJ1-6>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = TEMP31>
PHRASE36
		    <PUSH TEMP31>
		    <DEAD TEMP31>
		    <PUSH 2>
		    <CALL 'PAUX 4 = DC5>
		    <RETURN DC5>
		    <DEAD DC5>
PHRASE23
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad usage of \"AUX\" :  ">
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'COMPILE-ERROR 2 = DC5>
		    <RETURN DC5>
		    <DEAD DC5>
		    <END AUX-D>
"Handle \"NAME\" and \"ACT\" decl."

#WORD *22266347075*
<GFCN ACT-D ("VALUE" ANY ANY) OBJ4>
		    <TEMP DC5>
		    <INTGO>
		    <TYPE? OBJ4 <TYPE-CODE ADECL> - PHRASE7>
		    <LENUV OBJ4 = DC5 (TYPE FIX)>
		    <VEQUAL? DC5 2 + PHRASE9 (TYPE FIX)>
		    <DEAD DC5>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad ADECL:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE9
		    <NTHUV OBJ4 2 = DC5>
		    <NTHUV OBJ4 1 = OBJ4>
PHRASE7
		    <TYPE? OBJ4 <TYPE-CODE ATOM> + PHRASE13>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad use of \"ACT\":  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE13
		    <FRAME 'PUT-DCL>
		    <PUSH 1>
		    <PUSH OBJ4>
		    <PUSH %<>>
		    <TYPE? DC5 <TYPE-CODE UNBOUND> - PHRASE18>
		    <FRAME 'FIND_DECL>
		    <PUSH OBJ4>
		    <GEN-LVAL 'DCL = STACK>
		    <CALL 'FIND_DECL 2 = DC5>
PHRASE18
		    <PUSH DC5>
		    <DEAD DC5>
		    <PUSH %<>>
		    <CALL 'PUT-DCL 5 = DC5>
		    <FRAME 'TYPE-ATOM-OK?>
		    <PUSH DC5>
		    <DEAD DC5>
		    <PUSH 'FRAME>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'TYPE-ATOM-OK? 3 = DC5>
		    <RETURN DC5>
		    <DEAD DC5>
		    <END ACT-D>
"Fixup activation atoms after node generated."

#WORD *23701426367*
<GFCN ACT-FIX ("VALUE" <OR ATOM FALSE> NODE <LIST [REST SYMTAB]>) N4 L5>
		    <TEMP (FLG6 %<>) SYM10:SYMTAB TEMP17>
		    <INTGO>
		    <LOOP>
AGAIN11
		    <INTGO>
		    <EMPL? L5 - PHRASE13 (TYPE LIST)>
		    <RETURN FLG6>
		    <DEAD FLG6>
PHRASE13
		    <NTHL L5 1 = SYM10 (TYPE SYMTAB)>
		    <NTHUV SYM10 4 = TEMP17 (TYPE FIX)>
		    <VEQUAL? TEMP17 1 - PHRASE15 (TYPE FIX)>
		    <DEAD TEMP17>
		    <SET FLG6 'T (TYPE ATOM)>
		    <NTHUV SYM10 3 = TEMP17>
		    <TYPE? TEMP17 <TYPE-CODE FALSE> - PHRASE15>
		    <DEAD TEMP17>
		    <PUTUV SYM10 11 N4>
		    <DEAD SYM10>
PHRASE15
		    <RESTL L5 1 = L5 (TYPE LIST)>
		    <JUMP + AGAIN11>
		    <END ACT-FIX>
#WORD *26463156127*
<GFCN DECL-D ("VALUE" ANY ANY) ARG4>
		    <TEMP TEMP11>
		    <INTGO>
		    <TYPE? ARG4 <TYPE-CODE ADECL> - PHRASE6>
		    <FRAME 'SRCH-SYM>
		    <NTHUV ARG4 1 = STACK (TYPE ATOM)>
		    <CALL 'SRCH-SYM 1 = TEMP11>
		    <VEQUAL? TEMP11 0 + TAG12>
		    <DEAD TEMP11>
		    <RETURN %<>>
TAG12
		    <FRAME 'ADDVAR>
		    <NTHUV ARG4 1 = STACK>
		    <PUSH 'T>
		    <PUSH -1>
		    <PUSH 0>
		    <PUSH 'T>
		    <NTHUV ARG4 2 = STACK>
		    <DEAD ARG4>
		    <PUSH %<>>
		    <PUSH %<>>
		    <CALL 'ADDVAR 8 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE6
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "DECL in bad format (no DECL for):  ">
		    <PUSH ARG4>
		    <DEAD ARG4>
		    <CALL 'COMPILE-ERROR 2 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
		    <END DECL-D>
#WORD *2200435314*
<GFCN VDECL-D ("VALUE" NODE ANY NODE) ARG4 N5>
		    <TEMP>
		    <INTGO>
		    <PUTUV N5 3 ARG4>
		    <PUTUV N5 17 ARG4>
		    <DEAD ARG4>
		    <RETURN N5>
		    <DEAD N5>
		    <END VDECL-D>
<GDECL (TOT-MODES) <VECTOR [REST STRING]> (RESTS) <UVECTOR [REST FIX]>>

"Check for quoted arguments."

#WORD *6300631300*
<GFCN QUOTCH ("VALUE" <OR ADECL ATOM> FORM) OB4>
		    <TEMP TEMP8>
		    <INTGO>
		    <EMPL? OB4 + PHRASE6>
		    <RESTL OB4 1 = TEMP8 (TYPE LIST)>
		    <EMPL? TEMP8 + PHRASE6>
		    <RESTL TEMP8 1 = TEMP8 (TYPE LIST)>
		    <EMPL? TEMP8 - PHRASE6>
		    <DEAD TEMP8>
		    <NTHL OB4 1 = TEMP8>
		    <EQUAL? TEMP8 'QUOTE - PHRASE6>
		    <DEAD TEMP8>
		    <RESTL OB4 1 = TEMP8 (TYPE LIST)>
		    <NTHL TEMP8 1 = TEMP8>
		    <TYPE? TEMP8 <TYPE-CODE ATOM> + TAG9>
		    <TYPE? TEMP8 <TYPE-CODE ADECL> - PHRASE6>
		    <DEAD TEMP8>
TAG9
		    <RESTL OB4 1 = TEMP8 (TYPE LIST)>
		    <DEAD OB4>
		    <NTHL TEMP8 1 = TEMP8>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
PHRASE6
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad form in argument list">
		    <PUSH OB4>
		    <DEAD OB4>
		    <CALL 'COMPILE-ERROR 2>
		    <RETURN 'T>
		    <END QUOTCH>
"Chech for (arg init) or ('arg init)."

#WORD *21263377111*
<GFCN LISTCH ("VALUE" ANY LIST) OB4>
		    <TEMP TEMP8>
		    <INTGO>
		    <EMPL? OB4 + PHRASE6>
		    <RESTL OB4 1 = TEMP8 (TYPE LIST)>
		    <EMPL? TEMP8 + PHRASE6>
		    <RESTL TEMP8 1 = TEMP8 (TYPE LIST)>
		    <EMPL? TEMP8 - PHRASE6>
		    <DEAD TEMP8>
		    <NTHL OB4 1 = TEMP8>
		    <TYPE? TEMP8 <TYPE-CODE ATOM> + BOOL9>
		    <TYPE? TEMP8 <TYPE-CODE ADECL> + BOOL9>
		    <DEAD TEMP8>
		    <NTHL OB4 1 = TEMP8>
		    <TYPE? TEMP8 <TYPE-CODE FORM> - PHRASE6>
		    <DEAD TEMP8>
		    <FRAME 'QUOTCH>
		    <NTHL OB4 1 = STACK (TYPE FORM)>
		    <CALL 'QUOTCH 1>
BOOL9
		    <NTHL OB4 1 = TEMP8>
		    <DEAD OB4>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
PHRASE6
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Bad list in arg list:  ">
		    <PUSH OB4>
		    <DEAD OB4>
		    <CALL 'COMPILE-ERROR 2>
		    <RETURN 'T>
		    <END LISTCH>
"Add a decl to RSUBR decls and update AC call spec."

#WORD *10221127105*
<GFCN PUT-RES ("VALUE" ATOM LIST) L4>
		    <TEMP TEMP5 TEMP8:FIX>
		    <INTGO>
		    <GEN-LVAL 'RES_BOT = TEMP5>
		    <PUTREST TEMP5 L4>
		    <LENL L4 = TEMP8 (TYPE FIX)>
		    <DEAD L4>
		    <GRTR? TEMP8 0 - RESTL10 (TYPE FIX)>
		    <LOOP (TEMP5 VALUE) (TEMP8 VALUE)>
RESTL9
		    <INTGO>
		    <RESTL TEMP5 1 = TEMP5 (TYPE LIST)>
		    <SUB TEMP8 1 = TEMP8 (TYPE FIX)>
		    <GRTR? TEMP8 0 + RESTL9 (TYPE FIX)>
RESTL10
		    <GEN-SET 'RES_BOT TEMP5>
		    <DEAD TEMP5>
		    <RETURN 'T>
		    <END PUT-RES>
"Add code to set up a certain kind of argument."

#WORD *34156322543*
<GFCN PUT-DCL ("VALUE" ANY FIX ATOM ANY ANY ANY) COD4 ATM5 VAL6 DC7 COM8>
		    <TEMP DC1-10 TEMP16 SPC9>
		    <INTGO>
		    <TYPE? DC7 <TYPE-CODE FORM> - PHRASE14>
		    <SET DC1-10 DC7>
		    <EMPL? DC1-10 + PHRASE14>
		    <RESTL DC1-10 1 = TEMP16 (TYPE LIST)>
		    <EMPL? TEMP16 + PHRASE14>
		    <RESTL TEMP16 1 = TEMP16 (TYPE LIST)>
		    <EMPL? TEMP16 - PHRASE14>
		    <DEAD TEMP16>
		    <SET SPC9 %<> (TYPE FALSE)>
		    <NTHL DC1-10 1 = TEMP16>
		    <EQUAL? TEMP16 'SPECIAL - TAG18>
		    <DEAD TEMP16>
		    <SET SPC9 'T (TYPE ATOM)>
		    <JUMP + BOOL17>
TAG18
		    <NTHL DC1-10 1 = TEMP16>
		    <EQUAL? TEMP16 'UNSPECIAL - PHRASE14>
		    <DEAD TEMP16>
BOOL17
		    <RESTL DC1-10 1 = TEMP16 (TYPE LIST)>
		    <DEAD DC1-10>
		    <NTHL TEMP16 1 = DC7>
		    <DEAD TEMP16>
		    <JUMP + PHRASE19>
PHRASE14
		    <GEN-LVAL 'GLOSP = SPC9>
PHRASE19
		    <FRAME 'ADDVAR>
		    <PUSH ATM5>
		    <DEAD ATM5>
		    <PUSH SPC9>
		    <DEAD SPC9>
		    <PUSH COD4>
		    <DEAD COD4>
		    <GEN-LVAL 'ARGN = STACK>
		    <PUSH 'T>
		    <PUSH DC7>
		    <PUSH %<>>
		    <PUSH VAL6>
		    <DEAD VAL6>
		    <CALL 'ADDVAR 8 = TEMP16>
		    <GEN-LVAL 'BNDL_BOT = DC1-10>
		    <CONS TEMP16 () = TEMP16>
		    <PUTREST DC1-10 TEMP16>
		    <DEAD DC1-10>
		    <GEN-SET 'BNDL_BOT TEMP16>
		    <DEAD TEMP16>
		    <RETURN DC7>
		    <DEAD DC7>
		    <END PUT-DCL>
"Find decl associated with a variable, if none, use ANY."

#WORD *21213755333*
<GFCN FIND_DECL ("VALUE" ANY ATOM "OPTIONAL" <PRIMTYPE LIST>) ATM6 DC7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP TEMP10 TT16:LIST TEMP30>
		    <INTGO>
		    <TYPE? DC7 <TYPE-CODE UNBOUND> - TAG8>
		    <GEN-LVAL 'DECLS = DC7>
TAG8
		    <LOOP>
AGAIN17
		    <INTGO>
		    <EMPL? DC7 + BOOL20>
		    <RESTL DC7 1 = TT16 (TYPE LIST)>
		    <CHTYPE TT16 <TYPE-CODE LIST> = TT16>
		    <EMPL? TT16 - PHRASE19 (TYPE LIST)>
BOOL20
		    <RETURN 'ANY>
PHRASE19
		    <NTHL DC7 1 = TEMP10>
		    <TYPE? TEMP10 <TYPE-CODE LIST> + PHRASE22>
		    <DEAD TEMP10>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Malformed DECL:  ">
		    <PUSH DC7>
		    <CALL 'COMPILE-ERROR 2>
PHRASE22
		    <NTHL DC7 1 = TEMP10>
		    <DEAD DC7>
		    <CHTYPE TEMP10 <TYPE-CODE LIST> = TEMP10>
		    <EMPL? TEMP10 + PHRASE26>
		    <LOOP (ATM6 VALUE) (TEMP10 VALUE)>
TAG28
		    <NTHL TEMP10 1 = TEMP30>
		    <TYPE? TEMP30 <TYPE-CODE ATOM> - TAG29>
		    <VEQUAL? TEMP30 ATM6 + TAG27>
		    <DEAD TEMP30>
TAG29
		    <RESTL TEMP10 1 = TEMP10 (TYPE LIST)>
		    <EMPL? TEMP10 - TAG28>
		    <JUMP + PHRASE26>
TAG27
		    <NTHL TT16 1 = TEMP10>
		    <DEAD TT16>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
PHRASE26
		    <RESTL TT16 1 = DC7 (TYPE LIST)>
		    <DEAD TT16>
		    <JUMP + AGAIN17>
		    <END FIND_DECL>
"Add an AUX variable spec to structure."

<SETG OBJ-BUILDERS '[VECTOR UVECTOR STRING BYTES ISTRING IBYTES IVECTOR IUVECTOR]>

<GDECL (OBJ-BUILDERS) <VECTOR [REST ATOM]>>

#WORD *33016410307*
<GFCN PAUX ("VALUE" ANY ATOM ANY ANY FIX) ATM4 OBJ5 DC6 NTUP7>
		    <TEMP OBJ16 AP10 TEMP23 OBJ2-11 TEMP29 TEMP30 TT9:NODE>
		    <INTGO>
		    <SET OBJ16 OBJ5>
		    <LOOP>
AGAIN17
		    <INTGO>
		    <TYPE? OBJ16 <TYPE-CODE FORM> - PHRASE63>
		    <EMPL? OBJ16 + PHRASE63 (TYPE FORM)>
		    <NTHL OBJ16 1 = AP10>
		    <EQUAL? AP10 'STACK - BOOL22>
		    <EMPL? OBJ16 + BOOL22>
		    <RESTL OBJ16 1 = TEMP23 (TYPE LIST)>
		    <EMPL? TEMP23 + BOOL22>
		    <RESTL TEMP23 1 = TEMP23 (TYPE LIST)>
		    <EMPL? TEMP23 - BOOL22>
		    <DEAD TEMP23>
		    <RESTL OBJ16 1 = TEMP23 (TYPE LIST)>
		    <NTHL TEMP23 1 = OBJ2-11>
		    <DEAD TEMP23>
		    <TYPE? OBJ2-11 <TYPE-CODE FORM> - TAG26>
		    <EMPL? OBJ2-11 + TAG26 (TYPE FORM)>
		    <NTHL OBJ2-11 1 = TEMP23>
		    <GVAL 'OBJ-BUILDERS = TEMP29>
		    <TYPE? TEMP23 <TYPE-CODE ATOM> - TAG26>
		    <EMPUV? TEMP29 + TAG26>
		    <LOOP (TEMP23 VALUE) (TEMP29 LENGTH VALUE)>
TAG27
		    <NTHUV TEMP29 1 = TEMP30>
		    <VEQUAL? TEMP30 TEMP23 + BOOL21>
		    <DEAD TEMP30>
		    <RESTUV TEMP29 1 = TEMP29 (TYPE VECTOR)>
		    <EMPUV? TEMP29 - TAG27>
TAG26
		    <TYPE? OBJ2-11 <TYPE-CODE VECTOR> + BOOL21>
		    <TYPE? OBJ2-11 <TYPE-CODE UVECTOR> + BOOL21>
BOOL22
		    <EQUAL? AP10 'CHTYPE - PHRASE20>
		    <SET TEMP29 OBJ16>
		    <SET TEMP23 3 (TYPE FIX)>
		    <LOOP (TEMP29 VALUE) (TEMP23 VALUE)>
TAG32
		    <EMPL? TEMP29 + PHRASE20>
		    <RESTL TEMP29 1 = TEMP29 (TYPE LIST)>
		    <SUB TEMP23 1 = TEMP23 (TYPE FIX)>
		    <GRTR? TEMP23 0 + TAG32 (TYPE FIX)>
		    <EMPL? TEMP29 - PHRASE20>
		    <DEAD TEMP29>
		    <RESTL OBJ16 1 = TEMP29 (TYPE LIST)>
		    <NTHL TEMP29 1 = OBJ2-11>
		    <DEAD TEMP29>
		    <TYPE? OBJ2-11 <TYPE-CODE FORM> - PHRASE20>
		    <EMPL? OBJ2-11 + PHRASE20>
		    <RESTL OBJ2-11 1 = TEMP29 (TYPE LIST)>
		    <EMPL? TEMP29 + PHRASE20>
		    <RESTL TEMP29 1 = TEMP29 (TYPE LIST)>
		    <EMPL? TEMP29 - PHRASE20>
		    <DEAD TEMP29>
		    <NTHL OBJ2-11 1 = TEMP29>
		    <EQUAL? TEMP29 'STACK - PHRASE20>
		    <DEAD TEMP29>
		    <RESTL OBJ2-11 1 = TEMP29 (TYPE LIST)>
		    <DEAD OBJ2-11>
		    <NTHL TEMP29 1 = OBJ2-11>
		    <DEAD TEMP29>
		    <TYPE? OBJ2-11 <TYPE-CODE FORM> - TAG35>
		    <EMPL? OBJ2-11 + TAG35 (TYPE FORM)>
		    <NTHL OBJ2-11 1 = TEMP29>
		    <GVAL 'OBJ-BUILDERS = TEMP30>
		    <TYPE? TEMP29 <TYPE-CODE ATOM> - TAG35>
		    <EMPUV? TEMP30 + TAG35>
		    <LOOP (TEMP29 VALUE) (TEMP30 LENGTH VALUE)>
TAG36
		    <NTHUV TEMP30 1 = TEMP23>
		    <VEQUAL? TEMP23 TEMP29 + TAG39>
		    <DEAD TEMP23>
		    <RESTUV TEMP30 1 = TEMP30 (TYPE VECTOR)>
		    <EMPUV? TEMP30 - TAG36>
TAG35
		    <TYPE? OBJ2-11 <TYPE-CODE VECTOR> + TAG39>
		    <TYPE? OBJ2-11 <TYPE-CODE UVECTOR> - PHRASE20>
TAG39
		    <RESTL OBJ16 1 = TEMP30 (TYPE LIST)>
		    <DEAD OBJ16>
		    <RESTL TEMP30 1 = TEMP30 (TYPE LIST)>
		    <NTHL TEMP30 1 = TEMP30>
		    <CONS TEMP30 () = TEMP30>
		    <CONS OBJ2-11 TEMP30 = TEMP30>
		    <DEAD OBJ2-11>
		    <CONS 'CHTYPE TEMP30 = TEMP30>
		    <CHTYPE TEMP30 <TYPE-CODE FORM> = OBJ2-11>
		    <DEAD TEMP30>
BOOL21
		    <FRAME 'NODEFM>
		    <PUSH 98>
		    <PUSH ()>
		    <PUSH %<>>
		    <PUSH 'STACK>
		    <PUSH ()>
		    <PUSH 'STACK>
		    <CALL 'NODEFM 6 = TT9>
		    <FRAME 'PCOMP>
		    <PUSH OBJ2-11>
		    <DEAD OBJ2-11>
		    <PUSH TT9>
		    <CALL 'PCOMP 2 = TEMP30>
		    <CONS TEMP30 () = TEMP30>
		    <PUTUV TT9 5 TEMP30 (TYPE LIST)>
		    <DEAD TEMP30>
		    <JUMP + PHRASE66>
PHRASE20
		    <EQUAL? AP10 'TUPLE - PHRASE42>
		    <FRAME 'NODEFM>
		    <PUSH 15>
		    <PUSH ()>
		    <PUSH 'TUPLE>
		    <PUSH AP10>
		    <PUSH ()>
		    <PUSH AP10>
		    <DEAD AP10>
		    <CALL 'NODEFM 6 = TT9>
		    <SET AP10 () (TYPE LIST)>
		    <SET TEMP29 () (TYPE LIST)>
		    <RESTL OBJ16 1 = TEMP23 (TYPE LIST)>
		    <DEAD OBJ16>
		    <CHTYPE TEMP23 <TYPE-CODE LIST> = TEMP23>
		    <LOOP>
MAP45
		    <INTGO>
		    <EMPL? TEMP23 + MAPAP48>
		    <NTHL TEMP23 1 = OBJ16>
		    <FRAME 'PCOMP>
		    <PUSH OBJ16>
		    <DEAD OBJ16>
		    <PUSH TT9>
		    <CALL 'PCOMP 2 = OBJ16>
		    <CONS OBJ16 () = OBJ16 (TYPE LIST)>
		    <EMPL? AP10 - TAG56>
		    <SET AP10 OBJ16 (TYPE LIST)>
		    <JUMP + TAG57>
TAG56
		    <PUTREST TEMP29 OBJ16>
		    <DEAD TEMP29>
TAG57
		    <SET TEMP29 OBJ16 (TYPE LIST)>
		    <DEAD OBJ16>
		    <RESTL TEMP23 1 = TEMP23 (TYPE LIST)>
		    <JUMP + MAP45>
MAPAP48
		    <PUTUV TT9 5 AP10 (TYPE LIST)>
		    <DEAD AP10>
		    <JUMP + PHRASE66>
PHRASE42
		    <EQUAL? AP10 'ITUPLE - PHRASE58>
		    <GETS 'BIND = TEMP23 (TYPE LBIND)>
		    <BBIND 'PARENT 'ANY 'FIX ()>
		    <FRAME 'PSTRUC>
		    <PUSH OBJ16>
		    <DEAD OBJ16>
		    <PUSH 'ITUPLE>
		    <PUSH 'ITUPLE>
		    <PUSH 'TUPLE>
		    <CALL 'PSTRUC 4 = TT9>
		    <UNBIND TEMP23>
		    <DEAD TEMP23>
		    <ADJ -9>
		    <JUMP + PHRASE66>
PHRASE58
		    <TYPE? AP10 <TYPE-CODE ATOM> - PHRASE63>
		    <NTHR AP10 1 = TEMP23 (RECORD-TYPE ATOM) (BRANCH-FALSE + PHRASE63)>
		    <TYPE? TEMP23 <TYPE-CODE FALSE> + PHRASE63>
		    <NTHR TEMP23 1 = TEMP23 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP23 <TYPE-CODE UNBOUND> + PHRASE63>
		    <DEAD TEMP23>
		    <GVAL AP10 = TEMP23>
		    <DEAD AP10>
		    <TYPE? TEMP23 <TYPE-CODE MACRO> - PHRASE63>
		    <DEAD TEMP23>
		    <FRAME 'EXPAND>
		    <PUSH OBJ16>
		    <DEAD OBJ16>
		    <CALL 'EXPAND 1 = OBJ16>
		    <JUMP + AGAIN17>
PHRASE63
		    <FRAME 'PCOMP>
		    <PUSH OBJ5>
		    <DEAD OBJ5>
		    <PUSH ()>
		    <CALL 'PCOMP 2 = TT9>
PHRASE66
		    <FRAME 'PUT-DCL>
		    <PUSH NTUP7>
		    <DEAD NTUP7>
		    <PUSH ATM4>
		    <DEAD ATM4>
		    <PUSH TT9>
		    <DEAD TT9>
		    <PUSH DC6>
		    <DEAD DC6>
		    <PUSH %<>>
		    <CALL 'PUT-DCL 5 = TEMP23>
		    <RETURN TEMP23>
		    <DEAD TEMP23>
		    <END PAUX>
"Main dispatch function during pass1."

#WORD *24570470634*
<GFCN PCOMP ("VALUE" NODE ANY ANY) OBJ4 PARENT5>
		    <TEMP TEMP3:LBIND TEMP8>
		    <INTGO>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <BBIND 'PARENT 'ANY %<> PARENT5>
		    <DEAD PARENT5>
		    <FIXBIND>
		    <FRAME>
		    <FRAME 'GETPROP>
		    <PUSH OBJ4>
		    <PUSH 'PTHIS-OBJECT>
		    <CALL 'GETPROP 2 = TEMP8>
		    <TYPE? TEMP8 <TYPE-CODE FALSE> - BOOL7>
		    <FRAME 'GETPROP>
		    <FRAME 'TYPE>
		    <PUSH OBJ4>
		    <CALL 'TYPE 1 = STACK>
		    <PUSH 'PTHIS-TYPE>
		    <CALL 'GETPROP 2 = TEMP8>
		    <TYPE? TEMP8 <TYPE-CODE FALSE> - BOOL7>
		    <GVAL 'PDEFAULT = TEMP8>
BOOL7
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <ACALL TEMP8 1 = TEMP8>
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -9>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
		    <END PCOMP>
"Build a node for <> or #FALSE ()."

#WORD *20431306702*
<GFCN FALSE-QT ("VALUE" NODE ANY) O4>
		    <TEMP TEMP6>
		    <INTGO>
		    <FRAME 'NODE1>
		    <PUSH 2>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH 'BOOL-FALSE>
		    <PUSH %<>>
		    <PUSH ()>
		    <CALL 'NODE1 5 = TEMP6>
		    <RETURN TEMP6>
		    <DEAD TEMP6>
		    <END FALSE-QT>
<COND (<GASSIGNED? FALSE-QT> <PUTPROP '<> PTHIS-OBJECT ,FALSE-QT>)>

"Build a node for ()."

#WORD *7711342443*
<GFCN NIL-QT ("VALUE" NODE ANY) O4>
		    <TEMP TEMP6>
		    <INTGO>
		    <FRAME 'NODE1>
		    <PUSH 2>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH 'LIST>
		    <PUSH ()>
		    <PUSH ()>
		    <CALL 'NODE1 5 = TEMP6>
		    <RETURN TEMP6>
		    <DEAD TEMP6>
		    <END NIL-QT>
<COND (<GASSIGNED? NIL-QT> <PUTPROP () PTHIS-OBJECT ,NIL-QT>)>

"Build a node for a LIST, VECTOR or UVECTOR."

#WORD *16043463236*
<GFCN PCOPY ("VALUE" NODE ANY) OBJ4>
		    <TEMP TEMP7 TT5:NODE TEMP19 TEMP18 O23>
		    <INTGO>
		    <FRAME 'NODEFM>
		    <PUSH 15>
		    <GEN-LVAL 'PARENT = STACK>
		    <FRAME 'TYPE>
		    <PUSH OBJ4>
		    <CALL 'TYPE 1 = STACK>
		    <FRAME 'TYPE>
		    <PUSH OBJ4>
		    <CALL 'TYPE 1 = STACK>
		    <PUSH ()>
		    <PUSH %<>>
		    <CALL 'NODEFM 6 = TT5>
		    <SET TEMP7 () (TYPE LIST)>
		    <SET TEMP19 () (TYPE LIST)>
		    <SET TEMP18 OBJ4>
		    <DEAD OBJ4>
		    <LOOP>
MAP13
		    <INTGO>
		    <EMPTY? TEMP18 + MAPAP16>
		    <NTH1 TEMP18 = O23>
		    <FRAME 'PCOMP>
		    <PUSH O23>
		    <DEAD O23>
		    <PUSH TT5>
		    <CALL 'PCOMP 2 = O23>
		    <CONS O23 () = O23 (TYPE LIST)>
		    <EMPL? TEMP7 - TAG26>
		    <SET TEMP7 O23 (TYPE LIST)>
		    <JUMP + TAG27>
TAG26
		    <PUTREST TEMP19 O23>
		    <DEAD TEMP19>
TAG27
		    <SET TEMP19 O23 (TYPE LIST)>
		    <DEAD O23>
		    <REST1 TEMP18 = TEMP18>
		    <JUMP + MAP13>
MAPAP16
		    <PUTUV TT5 5 TEMP7 (TYPE LIST)>
		    <DEAD TEMP7>
		    <RETURN TT5>
		    <DEAD TT5>
		    <END PCOPY>
<COND (<GASSIGNED? PCOPY> <PUTPROP VECTOR PTHIS-TYPE ,PCOPY> <PUTPROP UVECTOR PTHIS-TYPE ,PCOPY> <PUTPROP LIST PTHIS-TYPE ,PCOPY>)>

"Build a node for unknown things."

#WORD *15233363660*
<GFCN PDEFAULT ("VALUE" NODE ANY) OBJ4>
		    <TEMP TEMP6>
		    <INTGO>
		    <FRAME 'NODE1>
		    <PUSH 2>
		    <GEN-LVAL 'PARENT = STACK>
		    <FRAME 'TYPE>
		    <PUSH OBJ4>
		    <CALL 'TYPE 1 = STACK>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <PUSH ()>
		    <CALL 'NODE1 5 = TEMP6>
		    <RETURN TEMP6>
		    <DEAD TEMP6>
		    <END PDEFAULT>
"Further analyze a FORM and build appropriate node."

#WORD *27242350624*
<GFCN PFORM ("VALUE" NODE <FORM ANY>) OBJ4>
		    <TEMP TEMP5>
		    <INTGO>
		    <ICALL EXIT6 = TEMP5>
		    <TEMP TEMP7 TEMP11 TEMP12>
		    <INTGO>
		    <CFRAME = TEMP7>
		    <NTHR TEMP7 5 = TEMP7 (RECORD-TYPE FRAME)>
		    <SETLR TEMP12 TEMP7 OBJ4>
		    <NTHL TEMP12 1 = TEMP11>
		    <DEAD TEMP12>
		    <BBIND 'APPLY 'ANY 'FIX TEMP11>
		    <DEAD TEMP11>
		    <CFRAME = TEMP11 (TYPE FRAME)>
		    <BBIND 'APPLICATION 'ANY 'FIX TEMP11>
		    <DEAD TEMP11>
		    <ACTIVATION>
		    <FRAME>
		    <FRAME 'GETPROP>
		    <NTHR 'APPLY 2 = TEMP12 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP12 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP12>
		    <PUSH 'PAPPLY-OBJECT>
		    <CALL 'GETPROP 2 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - BOOL15>
		    <FRAME 'GETPROP>
		    <NTHR 'APPLY 2 = TEMP12 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP12 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP12>
		    <PUSH 'ANALYSIS>
		    <CALL 'GETPROP 2 = TEMP12>
		    <TYPE? TEMP12 <TYPE-CODE FALSE> + BOOL19>
		    <DEAD TEMP12>
		    <GVAL 'PSUBR-C = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - BOOL15>
BOOL19
		    <FRAME 'GETPROP>
		    <FRAME 'TYPE>
		    <NTHR 'APPLY 2 = TEMP12 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP12 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP12>
		    <CALL 'TYPE 1 = STACK>
		    <PUSH 'PAPPLY-TYPE>
		    <CALL 'GETPROP 2 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - BOOL15>
		    <GVAL 'PAPDEF = TEMP11>
BOOL15
		    <SETLR TEMP12 TEMP7 OBJ4>
		    <PUSH TEMP12>
		    <DEAD TEMP12>
		    <NTHR 'APPLY 2 = TEMP12 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP12 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP12>
		    <ACALL TEMP11 2 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
EXIT6
		    <RETURN TEMP5>
		    <DEAD TEMP5>
		    <END PFORM>
<COND (<GASSIGNED? PFORM> <PUTPROP FORM PTHIS-TYPE ,PFORM>)>

"Build a SEGMENT node."

#WORD *31057654523*
<GFCN SEG-FCN ("VALUE" NODE ANY) OBJ4>
		    <TEMP TEMP7 TT5:NODE TEMP12:LBIND>
		    <INTGO>
		    <FRAME 'NODE1>
		    <PUSH 3>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH %<>>
		    <PUSH ()>
		    <CALL 'NODE1 5 = TT5>
		    <GETS 'BIND = TEMP12 (TYPE LBIND)>
		    <BBIND 'PARENT 'NODE 'FIX TT5>
		    <FRAME 'PFORM>
		    <CHTYPE OBJ4 <TYPE-CODE FORM> = STACK>
		    <DEAD OBJ4>
		    <CALL 'PFORM 1 = TEMP7>
		    <CONS TEMP7 () = TEMP7>
		    <PUTUV TT5 5 TEMP7 (TYPE LIST)>
		    <DEAD TEMP7>
		    <UNBIND TEMP12>
		    <DEAD TEMP12>
		    <ADJ -9>
		    <RETURN TT5>
		    <DEAD TT5>
		    <END SEG-FCN>
<COND (<GASSIGNED? SEG-FCN> <PUTPROP SEGMENT PTHIS-TYPE ,SEG-FCN>)>

"Analyze a form or the form <ATM .....>"

#WORD *35676301112*
		    <GFCN ATOM-FCN ("VALUE" ANY ANY ATOM) OB4 AP5>
		    <TEMP TEMP9 L6 TEMP29:FIX>
		    <INTGO>
		    <NTHR AP5 1 = TEMP9 (RECORD-TYPE ATOM) (BRANCH-FALSE + PHRASE8)>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> + PHRASE8>
		    <NTHR TEMP9 1 = TEMP9 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP9 <TYPE-CODE UNBOUND> + PHRASE8>
		    <DEAD TEMP9>
		    <GVAL AP5 = TEMP9>
		    <DEAD AP5>
		    <GEN-SET 'APPLY TEMP9>
		    <DEAD TEMP9>
		    <FRAME 'AGAIN>
		    <GEN-LVAL 'APPLICATION = STACK>
		    <CALL 'AGAIN 1 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
PHRASE8
		    <GEN-LVAL 'REASONABLE = TEMP9>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> + PHRASE16>
		    <DEAD TEMP9>
		    <NTHR 'REFERENCED 1 = TEMP9 (RECORD-TYPE ATOM) (BRANCH-FALSE + TAG22)>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> + TAG22>
		    <NTHR TEMP9 1 = TEMP9 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP9 <TYPE-CODE UNBOUND> - PHRASE21>
		    <DEAD TEMP9>
TAG22
		    <CONS 1 () = TEMP9>
		    <CONS AP5 TEMP9 = TEMP9>
		    <DEAD AP5>
		    <SETG 'REFERENCED TEMP9>
		    <DEAD TEMP9>
		    <JUMP + PHRASE38>
PHRASE21
		    <GVAL 'REFERENCED = L6>
		    <EMPL? L6 + TAG25>
		    <LOOP (AP5 VALUE) (L6 VALUE)>
TAG26
		    <NTHL L6 1 = TEMP9>
		    <TYPE? TEMP9 <TYPE-CODE ATOM> - TAG27>
		    <VEQUAL? TEMP9 AP5 + PHRASE23>
		    <DEAD TEMP9>
TAG27
		    <RESTL L6 1 = L6 (TYPE LIST)>
		    <EMPL? L6 - TAG26>
TAG25
		    <PUSH AP5>
		    <DEAD AP5>
		    <PUSH 1>
		    <SET TEMP29 2 (TYPE FIX)>
		    <GVAL 'REFERENCED = TEMP9>
		    <TYPE TEMP9 = L6>
		    <AND L6 7 = L6>
		    <VEQUAL? L6 1 + TAG31>
		    <DEAD L6>
		    <LOOP (TEMP9 TYPE VALUE LENGTH) (TEMP29 VALUE)>
TAG37
		    <INTGO>
		    <EMPTY? TEMP9 + TAG36>
		    <NTH1 TEMP9 = STACK>
		    <REST1 TEMP9 = TEMP9>
		    <ADD TEMP29 1 = TEMP29 (TYPE FIX)>
		    <JUMP + TAG37>
TAG36
		    <LIST TEMP29 = TEMP9 (TYPE LIST)>
		    <DEAD TEMP29>
		    <JUMP + TAG33>
TAG31
		    <LOOP>
TAG34
		    <VEQUAL? TEMP29 0 + TAG33>
		    <POP = L6>
		    <CONS L6 TEMP9 = TEMP9 (TYPE LIST)>
		    <DEAD L6>
		    <SUB TEMP29 1 = TEMP29 (TYPE FIX)>
		    <JUMP + TAG34>
TAG33
		    <SETG 'REFERENCED TEMP9>
		    <DEAD TEMP9>
		    <JUMP + PHRASE38>
PHRASE23
		    <RESTL L6 1 = TEMP9 (TYPE LIST)>
		    <NTHL TEMP9 1 = TEMP9 (TYPE FIX)>
		    <ADD TEMP9 1 = TEMP9 (TYPE FIX)>
		    <RESTL L6 1 = L6 (TYPE LIST)>
		    <PUTL L6 1 TEMP9>
		    <DEAD L6 TEMP9>
PHRASE38
		    <FRAME 'PSUBR-C>
		    <PUSH OB4>
		    <DEAD OB4>
		    <PUSH 'DUMMY>
		    <CALL 'PSUBR-C 2 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
PHRASE16
		    <FRAME 'COMPILE-WARNING>
		    <PUSH "No value for:  ">
		    <PUSH AP5>
		    <PUSH " using EVAL">
		    <CALL 'COMPILE-WARNING 3>
		    <FRAME 'PAPDEF>
		    <PUSH OB4>
		    <DEAD OB4>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'PAPDEF 2 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END ATOM-FCN>

<COND (<GASSIGNED? ATOM-FCN> <PUTPROP ATOM PAPPLY-TYPE ,ATOM-FCN>)>

"Expand MACRO and process result."

<NEWTYPE FUNNY VECTOR>

#WORD *16333225151*
<GFCN PMACRO ("VALUE" ANY ANY ANY) OBJ4 AP5>
		    <TEMP ERR6 TEM7>
		    <INTGO>
		    <FRAME 'ON>
		    <FRAME 'HANDLER>
		    <PUSH "ERROR">
		    <GVAL 'MACROERR = STACK>
		    <PUSH 100>
		    <CALL 'HANDLER 3 = ERR6>
		    <PUSH ERR6>
		    <CALL 'ON 1>
		    <ICALL EXIT10 = TEM7>
		    <TEMP TEMP11 TEMP14>
		    <INTGO>
		    <CFRAME = TEMP11>
		    <NTHR TEMP11 5 = TEMP11 (RECORD-TYPE FRAME)>
		    <CFRAME = TEMP14 (TYPE FRAME)>
		    <BBIND 'MACACT 'ANY 'FIX TEMP14>
		    <DEAD TEMP14>
		    <ACTIVATION>
		    <SETLR TEMP14 TEMP11 ERR6>
		    <SETG 'ERR TEMP14>
		    <DEAD TEMP14>
		    <NTHR 'MACACT 2 = TEMP14 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP14 1 = TEMP14 (RECORD-TYPE LBIND)>
		    <SETG 'MACACT TEMP14>
		    <DEAD TEMP14>
		    <FRAME 'EXPAND>
		    <SETLR TEMP14 TEMP11 OBJ4>
		    <PUSH TEMP14>
		    <DEAD TEMP14>
		    <CALL 'EXPAND 1 = TEMP14>
		    <RETURN TEMP14>
		    <DEAD TEMP14>
EXIT10
		    <FRAME 'OFF>
		    <PUSH ERR6>
		    <DEAD ERR6>
		    <CALL 'OFF 1>
		    <TYPE? TEM7 <TYPE-CODE FUNNY> - PHRASE21>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "ERROR during macro expansion">
		    <GVAL 'CR = STACK>
		    <SET ERR6 2 (TYPE FIX)>
		    <LOOP (TEM7 VALUE LENGTH) (ERR6 VALUE)>
TAG25
		    <INTGO>
		    <EMPUV? TEM7 + TAG22>
		    <NTHUV TEM7 1 = STACK>
		    <RESTUV TEM7 1 = TEM7 (TYPE VECTOR)>
		    <ADD ERR6 1 = ERR6 (TYPE FIX)>
		    <JUMP + TAG25>
TAG22
		    <CALL 'COMPILE-ERROR ERR6 = ERR6>
		    <RETURN ERR6>
		    <DEAD ERR6>
PHRASE21
		    <FRAME 'PCOMP>
		    <PUSH TEM7>
		    <DEAD TEM7>
		    <GEN-LVAL 'PARENT = STACK>
		    <CALL 'PCOMP 2 = ERR6>
		    <RETURN ERR6>
		    <DEAD ERR6>
		    <END PMACRO>
<COND (<GASSIGNED? PMACRO> <PUTPROP MACRO PAPPLY-TYPE ,PMACRO>)>

#WORD *17241071460*
<GFCN MACROERR ("VALUE" ANY ANY ANY "TUPLE" TUPLE) IGN4 FR5>
		    <MAKTUP T6:TUPLE TEMP10 TEMP14 = T6>
		    <INTGO>
		    <EMPUV? T6 + PHRASE8 (TYPE TUPLE)>
		    <NTHUV T6 1 = TEMP10>
		    <EQUAL? TEMP10 'CONTROL-G!-ERRORS - PHRASE8>
		    <DEAD TEMP10>
		    <FRAME 'INT-LEVEL>
		    <PUSH 0>
		    <CALL 'INT-LEVEL 1>
		    <FRAME 'OFF>
		    <GVAL 'ERR = STACK>
		    <CALL 'OFF 1>
		    <FRAME 'ERROR>
		    <SET TEMP14 0 (TYPE FIX)>
		    <SET TEMP10 T6>
		    <DEAD T6>
		    <LOOP (TEMP10 VALUE LENGTH) (TEMP14 VALUE)>
TAG15
		    <INTGO>
		    <EMPUV? TEMP10 + TAG13>
		    <NTHUV TEMP10 1 = STACK>
		    <RESTUV TEMP10 1 = TEMP10 (TYPE VECTOR)>
		    <ADD TEMP14 1 = TEMP14 (TYPE FIX)>
		    <JUMP + TAG15>
TAG13
		    <CALL 'ERROR TEMP14>
		    <DEAD TEMP14>
		    <FRAME 'ON>
		    <GVAL 'ERR = STACK>
		    <CALL 'ON 1>
		    <FRAME 'ERRET>
		    <PUSH 'T>
		    <PUSH FR5>
		    <DEAD FR5>
		    <CALL 'ERRET 2 = TEMP14>
		    <RETURN TEMP14>
		    <DEAD TEMP14>
PHRASE8
		    <NTHR 'MACACT 1 = TEMP10 (RECORD-TYPE ATOM) (BRANCH-FALSE + PHRASE19)>
		    <TYPE? TEMP10 <TYPE-CODE FALSE> + PHRASE19>
		    <NTHR TEMP10 1 = TEMP10 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP10 <TYPE-CODE UNBOUND> + PHRASE19>
		    <DEAD TEMP10>
		    <FRAME 'LEGAL?>
		    <GVAL 'MACACT = STACK>
		    <CALL 'LEGAL? 1 = TEMP10>
		    <TYPE? TEMP10 <TYPE-CODE FALSE> + PHRASE19>
		    <DEAD TEMP10>
		    <FRAME 'DISMISS>
		    <SET TEMP14 0 (TYPE FIX)>
		    <SET TEMP10 T6>
		    <DEAD T6>
		    <LOOP (TEMP10 VALUE LENGTH) (TEMP14 VALUE)>
TAG25
		    <INTGO>
		    <EMPUV? TEMP10 + TAG23>
		    <NTHUV TEMP10 1 = STACK>
		    <RESTUV TEMP10 1 = TEMP10 (TYPE VECTOR)>
		    <ADD TEMP14 1 = TEMP14 (TYPE FIX)>
		    <JUMP + TAG25>
TAG23
		    <UBLOCK <TYPE-CODE VECTOR> TEMP14 = TEMP10>
		    <DEAD TEMP14>
		    <CHTYPE TEMP10 <TYPE-CODE FUNNY> = STACK>
		    <DEAD TEMP10>
		    <GVAL 'MACACT = STACK>
		    <CALL 'DISMISS 2 = TEMP14>
		    <RETURN TEMP14>
		    <DEAD TEMP14>
PHRASE19
		    <FRAME 'OFF>
		    <GVAL 'ERR = STACK>
		    <CALL 'OFF 1>
		    <FRAME 'ERROR>
		    <PUSH 'INTERNAL-COMPILER-LOSSAGE!-ERRORS>
		    <CALL 'ERROR 1 = TEMP14>
		    <RETURN TEMP14>
		    <DEAD TEMP14>
		    <END MACROERR>
"Build a node for a form whose 1st element is a form (could be NTH)."

#WORD *13657631562*
<GFCN PFORM-FORM ("VALUE" NODE FORM ANY) OBJ4 AP5>
		    <TEMP TEMP10 TT6:NODE TEMP22 TEMP21 O26>
		    <INTGO>
		    <EMPL? OBJ4 + PHRASE8>
		    <RESTL OBJ4 1 = TEMP10 (TYPE LIST)>
		    <EMPL? TEMP10 + PHRASE8>
		    <RESTL TEMP10 1 = TEMP10 (TYPE LIST)>
		    <EMPL? TEMP10 - PHRASE8>
		    <DEAD TEMP10>
		    <FRAME 'SEG?>
		    <PUSH OBJ4>
		    <CALL 'SEG? 1 = TEMP10>
		    <VEQUAL? TEMP10 0 - PHRASE8>
		    <DEAD TEMP10>
		    <FRAME 'NODEFM>
		    <PUSH 74>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH OBJ4>
		    <PUSH ()>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'NODEFM 6 = TT6>
		    <SET TEMP10 () (TYPE LIST)>
		    <SET TEMP22 () (TYPE LIST)>
		    <CHTYPE OBJ4 <TYPE-CODE LIST> = TEMP21>
		    <DEAD OBJ4>
		    <LOOP>
MAP16
		    <INTGO>
		    <EMPL? TEMP21 + MAPAP19>
		    <NTHL TEMP21 1 = O26>
		    <FRAME 'PCOMP>
		    <PUSH O26>
		    <DEAD O26>
		    <PUSH TT6>
		    <CALL 'PCOMP 2 = O26>
		    <CONS O26 () = O26 (TYPE LIST)>
		    <EMPL? TEMP10 - TAG29>
		    <SET TEMP10 O26 (TYPE LIST)>
		    <JUMP + TAG30>
TAG29
		    <PUTREST TEMP22 O26>
		    <DEAD TEMP22>
TAG30
		    <SET TEMP22 O26 (TYPE LIST)>
		    <DEAD O26>
		    <RESTL TEMP21 1 = TEMP21 (TYPE LIST)>
		    <JUMP + MAP16>
MAPAP19
		    <PUTUV TT6 5 TEMP10 (TYPE LIST)>
		    <DEAD TEMP10>
		    <RETURN TT6>
		    <DEAD TT6>
PHRASE8
		    <FRAME 'PAPDEF>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'PAPDEF 2 = TEMP21>
		    <RETURN TEMP21>
		    <DEAD TEMP21>
		    <END PFORM-FORM>
<COND (<GASSIGNED? PFORM-FORM> <PUTPROP FORM PAPPLY-TYPE ,PFORM-FORM>)>

"Build a node for strange forms."

#WORD *37543221101*
<GFCN PAPDEF ("VALUE" NODE ANY ANY) OBJ4 AP5>
		    <TEMP TEMP9>
		    <INTGO>
		    <FRAME 'COMPILE-WARNING>
		    <PUSH "Form not being compiled:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-WARNING 2>
		    <FRAME 'SPECIALIZE>
		    <PUSH OBJ4>
		    <CALL 'SPECIALIZE 1>
		    <FRAME 'NODEFM>
		    <PUSH 4>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <PUSH ()>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'NODEFM 6 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END PAPDEF>
"For objects that require EVAL, make sure all atoms used are special."

#WORD *4543022214*
<GFCN SPECIALIZE ("VALUE" ANY ANY) OBJ4>
		    <TEMP OB8 T1-5:FIX TEMP15 SYM7>
		    <INTGO>
		    <TYPE? OBJ4 <TYPE-CODE FORM> + TAG12>
		    <TYPE? OBJ4 <TYPE-CODE SEGMENT> - PHRASE19>
TAG12
		    <CHTYPE OBJ4 <TYPE-CODE FORM> = OB8>
		    <LENL OB8 = T1-5 (TYPE FIX)>
		    <VEQUAL? T1-5 2 - BOOL14 (TYPE FIX)>
		    <NTHL OB8 1 = TEMP15>
		    <EQUAL? TEMP15 'LVAL - BOOL14>
		    <DEAD TEMP15>
		    <RESTL OB8 1 = TEMP15 (TYPE LIST)>
		    <NTHL TEMP15 1 = SYM7>
		    <DEAD TEMP15>
		    <TYPE? SYM7 <TYPE-CODE ATOM> + BOOL13>
BOOL14
		    <VEQUAL? T1-5 3 - PHRASE19 (TYPE FIX)>
		    <DEAD T1-5>
		    <NTHL OB8 1 = TEMP15>
		    <EQUAL? TEMP15 'SET - PHRASE19>
		    <DEAD TEMP15>
		    <RESTL OB8 1 = TEMP15 (TYPE LIST)>
		    <DEAD OB8>
		    <NTHL TEMP15 1 = SYM7>
		    <DEAD TEMP15>
		    <TYPE? SYM7 <TYPE-CODE ATOM> - PHRASE19>
BOOL13
		    <FRAME 'SRCH-SYM>
		    <PUSH SYM7>
		    <CALL 'SRCH-SYM 1 = OB8>
		    <VEQUAL? OB8 0 + PHRASE19>
		    <NTHUV OB8 3 = TEMP15>
		    <TYPE? TEMP15 <TYPE-CODE FALSE> - PHRASE19>
		    <DEAD TEMP15>
		    <FRAME 'COMPILE-NOTE>
		    <PUSH "Redclared special:  ">
		    <PUSH SYM7>
		    <DEAD SYM7>
		    <CALL 'COMPILE-NOTE 2>
		    <PUTUV OB8 3 'T>
		    <DEAD OB8>
PHRASE19
		    <FRAME 'PRIMTYPE>
		    <PUSH OBJ4>
		    <CALL 'PRIMTYPE 1 = SYM7>
		    <SET TEMP15 [FORM LIST UVECTOR VECTOR] (TYPE VECTOR)>
		    <LOOP (SYM7 VALUE) (TEMP15 LENGTH VALUE)>
TAG25
		    <NTHUV TEMP15 1 = OB8>
		    <VEQUAL? OB8 SYM7 + TAG24>
		    <DEAD OB8>
		    <RESTUV TEMP15 1 = TEMP15 (TYPE VECTOR)>
		    <EMPUV? TEMP15 - TAG25>
		    <RETURN %<>>
TAG24
		    <SET OB8 %<> (TYPE FALSE)>
		    <SET SYM7 OBJ4>
		    <DEAD OBJ4>
		    <LOOP>
MAP31
		    <INTGO>
		    <EMPTY? SYM7 + MAP30>
		    <FRAME 'SPECIALIZE>
		    <NTH1 SYM7 = STACK>
		    <CALL 'SPECIALIZE 1 = OB8>
		    <REST1 SYM7 = SYM7>
		    <JUMP + MAP31>
MAP30
		    <RETURN OB8>
		    <DEAD OB8>
		    <END SPECIALIZE>
"Build a MSUBR call node."

#WORD *25171440235*
<GFCN PSUBR-C ("VALUE" NODE FORM ANY) OBJ4 AP5>
		    <TEMP TEMP8 TT6:NODE TEMP21 TEMP25:LIST O26>
		    <INTGO>
		    <FRAME 'NODEFM>
		    <PUSH 6>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <TYPE? AP5 <TYPE-CODE MSUBR> - PHRASE12>
		    <NTHUV AP5 2 = TEMP8>
		    <JUMP + PHRASE14>
PHRASE12
		    <NTHL OBJ4 1 = TEMP8>
PHRASE14
		    <PUSH TEMP8>
		    <DEAD TEMP8>
		    <PUSH ()>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'NODEFM 6 = TT6>
		    <SET TEMP8 () (TYPE LIST)>
		    <SET TEMP21 () (TYPE LIST)>
		    <RESTL OBJ4 1 = TEMP25 (TYPE LIST)>
		    <DEAD OBJ4>
		    <CHTYPE TEMP25 <TYPE-CODE LIST> = TEMP25>
		    <LOOP>
MAP16
		    <INTGO>
		    <EMPL? TEMP25 + MAPAP19>
		    <NTHL TEMP25 1 = O26>
		    <FRAME 'PCOMP>
		    <PUSH O26>
		    <DEAD O26>
		    <PUSH TT6>
		    <CALL 'PCOMP 2 = O26>
		    <CONS O26 () = O26 (TYPE LIST)>
		    <EMPL? TEMP8 - TAG29>
		    <SET TEMP8 O26 (TYPE LIST)>
		    <JUMP + TAG30>
TAG29
		    <PUTREST TEMP21 O26>
		    <DEAD TEMP21>
TAG30
		    <SET TEMP21 O26 (TYPE LIST)>
		    <DEAD O26>
		    <RESTL TEMP25 1 = TEMP25 (TYPE LIST)>
		    <JUMP + MAP16>
MAPAP19
		    <PUTUV TT6 5 TEMP8 (TYPE LIST)>
		    <DEAD TEMP8>
		    <RETURN TT6>
		    <DEAD TT6>
		    <END PSUBR-C>
#WORD *76207176*
<GFCN LVAL-FCN ("VALUE" NODE ANY) OBJ4>
		    <TEMP TEMP7 TT5:NODE>
		    <INTGO>
		    <FRAME 'NODEFM>
		    <PUSH 6>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH 'LVAL>
		    <PUSH ()>
		    <GVAL 'LVAL = STACK>
		    <CALL 'NODEFM 6 = TT5>
		    <FRAME 'PCOMP>
		    <CHTYPE OBJ4 <TYPE-CODE ATOM> = STACK>
		    <DEAD OBJ4>
		    <PUSH TT5>
		    <CALL 'PCOMP 2 = TEMP7>
		    <CONS TEMP7 () = TEMP7>
		    <PUTUV TT5 5 TEMP7 (TYPE LIST)>
		    <DEAD TEMP7>
		    <RETURN TT5>
		    <DEAD TT5>
		    <END LVAL-FCN>
#WORD *7076207177*
<GFCN GVAL-FCN ("VALUE" NODE ANY) OBJ4>
		    <TEMP TEMP7 TT5:NODE>
		    <INTGO>
		    <FRAME 'NODEFM>
		    <PUSH 6>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH 'GVAL>
		    <PUSH ()>
		    <GVAL 'GVAL = STACK>
		    <CALL 'NODEFM 6 = TT5>
		    <FRAME 'PCOMP>
		    <CHTYPE OBJ4 <TYPE-CODE ATOM> = STACK>
		    <DEAD OBJ4>
		    <PUSH TT5>
		    <CALL 'PCOMP 2 = TEMP7>
		    <CONS TEMP7 () = TEMP7>
		    <PUTUV TT5 5 TEMP7 (TYPE LIST)>
		    <DEAD TEMP7>
		    <RETURN TT5>
		    <DEAD TT5>
		    <END GVAL-FCN>
<COND (<GASSIGNED? LVAL-FCN> <PUTPROP LVAL PTHIS-TYPE ,LVAL-FCN> <PUTPROP GVAL PTHIS-TYPE ,GVAL-FCN>)>

#WORD *27240733145*
<GFCN FIX-FCN ("VALUE" NODE FORM ANY) OBJ4 AP5>
		    <TEMP LN7 TEMP13 TT6:NODE TEMP25>
		    <INTGO>
		    <LENL OBJ4 = LN7 (TYPE FIX)>
		    <VEQUAL? LN7 2 + PHRASE9 (TYPE FIX)>
		    <VEQUAL? LN7 3 + PHRASE9 (TYPE FIX)>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Number (FIX) applied to other than 2 or 3 args:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE9
		    <FRAME 'NODEFM>
		    <PUSH 6>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <VEQUAL? LN7 2 - PHRASE17 (TYPE FIX)>
		    <SET TEMP13 'INTH (TYPE ATOM)>
		    <JUMP + PHRASE19>
PHRASE17
		    <SET TEMP13 'IPUT (TYPE ATOM)>
PHRASE19
		    <PUSH TEMP13>
		    <DEAD TEMP13>
		    <PUSH ()>
		    <VEQUAL? LN7 2 - PHRASE21 (TYPE FIX)>
		    <GVAL 'NTH = TEMP13>
		    <JUMP + PHRASE22>
PHRASE21
		    <GVAL 'PUT = TEMP13>
PHRASE22
		    <PUSH TEMP13>
		    <DEAD TEMP13>
		    <CALL 'NODEFM 6 = TT6>
		    <FRAME 'PCOMP>
		    <RESTL OBJ4 1 = TEMP13 (TYPE LIST)>
		    <NTHL TEMP13 1 = STACK>
		    <DEAD TEMP13>
		    <PUSH TT6>
		    <CALL 'PCOMP 2 = TEMP13>
		    <CONS TEMP13 () = TEMP13>
		    <FRAME 'PCOMP>
		    <PUSH AP5>
		    <DEAD AP5>
		    <PUSH TT6>
		    <CALL 'PCOMP 2 = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <PUTREST TEMP13 TEMP25>
		    <VEQUAL? LN7 2 - PHRASE27 (TYPE FIX)>
		    <DEAD LN7>
		    <SET LN7 () (TYPE LIST)>
		    <JUMP + PHRASE29>
PHRASE27
		    <FRAME 'PCOMP>
		    <RESTL OBJ4 1 = LN7 (TYPE LIST)>
		    <DEAD OBJ4>
		    <RESTL LN7 1 = LN7 (TYPE LIST)>
		    <NTHL LN7 1 = STACK>
		    <DEAD LN7>
		    <PUSH TT6>
		    <CALL 'PCOMP 2 = LN7>
		    <CONS LN7 () = LN7>
PHRASE29
		    <PUTREST TEMP25 LN7>
		    <DEAD TEMP25 LN7>
		    <PUTUV TT6 5 TEMP13 (TYPE LIST)>
		    <DEAD TEMP13>
		    <RETURN TT6>
		    <DEAD TT6>
		    <END FIX-FCN>
<COND (<GASSIGNED? FIX-FCN> <PUTPROP FIX PAPPLY-TYPE ,FIX-FCN> <PUTPROP OFFSET PAPPLY-TYPE ,FIX-FCN>)>

"PROG/REPEAT node."

#WORD *36177460175*
<GFCN PPROG-REPEAT ("VALUE" NODE <PRIMTYPE LIST> ANY) OBJ4 AP5>
		    <TEMP NAME6 (DCL8 #DECL ()) (HATOM9 %<>) TEMP3:LBIND TEMP13 ARGL10:LIST TT7:NODE>
		    <INTGO>
		    <NTHL OBJ4 1 = NAME6>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <GEN-LVAL 'VARTBL = TEMP13>
		    <BBIND 'VARTBL 'SYMTAB 'FIX TEMP13>
		    <DEAD TEMP13>
		    <GEN-ASSIGNED? 'IN-IFSYS + TAG18>
		    <SET TEMP13 %<> (TYPE FALSE)>
		    <JUMP + PHRASE17>
TAG18
		    <GEN-LVAL 'IN-IFSYS = TEMP13>
PHRASE17
		    <BBIND 'IN-IFSYS 'ANY 'FIX TEMP13>
		    <DEAD TEMP13>
		    <RESTL OBJ4 1 = OBJ4 (TYPE LIST)>
		    <CHTYPE OBJ4 <TYPE-CODE LIST> = OBJ4>
		    <EMPL? OBJ4 - PHRASE24 (TYPE LIST)>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Empty ">
		    <PUSH NAME6>
		    <PUSH " ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 4>
PHRASE24
		    <NTHL OBJ4 1 = TEMP13>
		    <TYPE? TEMP13 <TYPE-CODE ATOM> + TAG28>
		    <TYPE? TEMP13 <TYPE-CODE ADECL> - PHRASE27>
		    <DEAD TEMP13>
TAG28
		    <NTHL OBJ4 1 = HATOM9>
		    <RESTL OBJ4 1 = OBJ4 (TYPE LIST)>
PHRASE27
		    <NTHL OBJ4 1 = ARGL10 (TYPE LIST)>
		    <RESTL OBJ4 1 = OBJ4 (TYPE LIST)>
		    <EMPL? OBJ4 + PHRASE30 (TYPE LIST)>
		    <NTHL OBJ4 1 = TEMP13>
		    <TYPE? TEMP13 <TYPE-CODE DECL> - PHRASE30>
		    <DEAD TEMP13>
		    <NTHL OBJ4 1 = DCL8 (TYPE DECL)>
		    <RESTL OBJ4 1 = OBJ4 (TYPE LIST)>
PHRASE30
		    <EMPL? OBJ4 - PHRASE34 (TYPE LIST)>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Empty body for ">
		    <PUSH NAME6>
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 3>
PHRASE34
		    <FRAME 'NODEPR>
		    <PUSH 5>
		    <GEN-LVAL 'PARENT = STACK>
		    <FRAME 'FIND_DECL>
		    <PUSH 'VALUE>
		    <PUSH DCL8>
		    <CALL 'FIND_DECL 2 = STACK>
		    <PUSH NAME6>
		    <DEAD NAME6>
		    <PUSH ()>
		    <PUSH AP5>
		    <DEAD AP5>
		    <PUSH ()>
		    <PUSH HATOM9>
		    <NTHR 'VARTBL 2 = NAME6 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR NAME6 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD NAME6>
		    <CALL 'NODEPR 9 = TT7>
		    <FRAME 'GEN-D>
		    <EMPL? ARGL10 + PHRASE45 (TYPE LIST)>
		    <NTHL ARGL10 1 = NAME6>
		    <TYPE? NAME6 <TYPE-CODE STRING> - PHRASE45>
		    <DEAD NAME6>
		    <SET NAME6 ARGL10>
		    <DEAD ARGL10>
		    <JUMP + PHRASE47>
PHRASE45
		    <CONS "AUX" ARGL10 = NAME6>
		    <DEAD ARGL10>
PHRASE47
		    <PUSH NAME6>
		    <DEAD NAME6>
		    <PUSH DCL8>
		    <DEAD DCL8>
		    <PUSH HATOM9>
		    <DEAD HATOM9>
		    <PUSH TT7>
		    <CALL 'GEN-D 4>
		    <FRAME 'ACT-FIX>
		    <PUSH TT7>
		    <NTHUV TT7 10 = STACK (TYPE LIST)>
		    <CALL 'ACT-FIX 2>
		    <SET HATOM9 () (TYPE LIST)>
		    <SET TEMP13 () (TYPE LIST)>
		    <SET NAME6 OBJ4 (TYPE LIST)>
		    <DEAD OBJ4>
		    <LOOP>
MAP50
		    <INTGO>
		    <EMPL? NAME6 + MAPAP53>
		    <NTHL NAME6 1 = DCL8>
		    <FRAME 'PCOMP>
		    <PUSH DCL8>
		    <DEAD DCL8>
		    <PUSH TT7>
		    <CALL 'PCOMP 2 = DCL8>
		    <CONS DCL8 () = DCL8 (TYPE LIST)>
		    <EMPL? HATOM9 - TAG62>
		    <SET HATOM9 DCL8 (TYPE LIST)>
		    <JUMP + TAG63>
TAG62
		    <PUTREST TEMP13 DCL8>
		    <DEAD TEMP13>
TAG63
		    <SET TEMP13 DCL8 (TYPE LIST)>
		    <DEAD DCL8>
		    <RESTL NAME6 1 = NAME6 (TYPE LIST)>
		    <JUMP + MAP50>
MAPAP53
		    <PUTUV TT7 5 HATOM9 (TYPE LIST)>
		    <DEAD HATOM9>
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -18>
		    <RETURN TT7>
		    <DEAD TT7>
		    <END PPROG-REPEAT>
<COND (<GASSIGNED? PPROG-REPEAT> <PUTPROP ,PROG PAPPLY-OBJECT ,PPROG-REPEAT> <PUTPROP ,REPEAT PAPPLY-OBJECT ,PPROG-REPEAT> <PUTPROP ,BIND PAPPLY-OBJECT ,PPROG-REPEAT>)>

"Unwind compiler."

#WORD *7746301725*
<GFCN UNWIND-FCN ("VALUE" NODE FORM ANY) OBJ4 AP5>
		    <TEMP TEMP8 TT6:NODE TEMP14>
		    <INTGO>
		    <FRAME 'NODEFM>
		    <PUSH 65>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <NTHL OBJ4 1 = STACK>
		    <PUSH ()>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'NODEFM 6 = TT6>
		    <SET TEMP8 OBJ4>
		    <SET TEMP14 3 (TYPE FIX)>
		    <LOOP (TEMP8 VALUE) (TEMP14 VALUE)>
TAG15
		    <EMPL? TEMP8 + PHRASE12>
		    <RESTL TEMP8 1 = TEMP8 (TYPE LIST)>
		    <SUB TEMP14 1 = TEMP14 (TYPE FIX)>
		    <GRTR? TEMP14 0 + TAG15 (TYPE FIX)>
		    <EMPL? TEMP8 - PHRASE12>
		    <DEAD TEMP8>
		    <FRAME 'PCOMP>
		    <RESTL OBJ4 1 = TEMP8 (TYPE LIST)>
		    <NTHL TEMP8 1 = STACK>
		    <DEAD TEMP8>
		    <PUSH TT6>
		    <CALL 'PCOMP 2 = TEMP8>
		    <CONS TEMP8 () = TEMP8>
		    <FRAME 'PCOMP>
		    <RESTL OBJ4 1 = TEMP14 (TYPE LIST)>
		    <DEAD OBJ4>
		    <RESTL TEMP14 1 = TEMP14 (TYPE LIST)>
		    <NTHL TEMP14 1 = STACK>
		    <DEAD TEMP14>
		    <PUSH TT6>
		    <CALL 'PCOMP 2 = TEMP14>
		    <CONS TEMP14 () = TEMP14>
		    <PUTREST TEMP8 TEMP14>
		    <DEAD TEMP14>
		    <PUTUV TT6 5 TEMP8 (TYPE LIST)>
		    <DEAD TEMP8>
		    <RETURN TT6>
		    <DEAD TT6>
PHRASE12
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Wrong number of args to UNIWND: ">
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'COMPILE-ERROR 2 = TEMP8>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
		    <END UNWIND-FCN>
<COND (<AND <GASSIGNED? UNWIND-FCN> <GASSIGNED? UNWIND>> <PUTPROP ,UNWIND PAPPLY-OBJECT ,UNWIND-FCN>)>

"Build a node for a COND."

#WORD *5730246115*
<GFCN COND-FCN ("VALUE" NODE <FORM ANY> ANY) OBJ4 AP5>
		    <TEMP TEMP3:LBIND TEMP8 TEMP11:NODE TEMP21 TEMP25:LIST CLA26 TEMP29 TT27 TEMP42 O47>
		    <INTGO>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <FRAME 'NODECOND>
		    <PUSH 7>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH 'COND>
		    <PUSH ()>
		    <CALL 'NODECOND 5 = TEMP11>
		    <BBIND 'PARENT 'NODE 'FIX TEMP11>
		    <DEAD TEMP11>
		    <NTHR 'PARENT 2 = TEMP8 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP8 1 = TEMP11 (RECORD-TYPE LBIND)>
		    <DEAD TEMP8>
		    <SET TEMP8 () (TYPE LIST)>
		    <SET TEMP21 () (TYPE LIST)>
		    <RESTL OBJ4 1 = TEMP25 (TYPE LIST)>
		    <CHTYPE TEMP25 <TYPE-CODE LIST> = TEMP25>
		    <LOOP>
MAP16
		    <INTGO>
		    <EMPL? TEMP25 + MAPAP19>
		    <NTHL TEMP25 1 = CLA26>
		    <FRAME 'NODEB>
		    <PUSH 8>
		    <NTHR 'PARENT 2 = TEMP29 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP29 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP29>
		    <PUSH %<>>
		    <PUSH %<>>
		    <PUSH ()>
		    <CALL 'NODEB 5 = TT27>
		    <TYPE? CLA26 <TYPE-CODE LIST> - PHRASE33>
		    <EMPL? CLA26 + PHRASE33 (TYPE LIST)>
		    <FRAME 'PCOMP>
		    <NTHL CLA26 1 = STACK>
		    <PUSH TT27>
		    <CALL 'PCOMP 2 = TEMP29>
		    <PUTUV TT27 4 TEMP29>
		    <DEAD TEMP29>
		    <SET TEMP29 () (TYPE LIST)>
		    <SET TEMP42 () (TYPE LIST)>
		    <RESTL CLA26 1 = CLA26 (TYPE LIST)>
		    <LOOP>
MAP37
		    <INTGO>
		    <EMPL? CLA26 + MAPAP40>
		    <NTHL CLA26 1 = O47>
		    <FRAME 'PCOMP>
		    <PUSH O47>
		    <DEAD O47>
		    <PUSH TT27>
		    <CALL 'PCOMP 2 = O47>
		    <CONS O47 () = O47 (TYPE LIST)>
		    <EMPL? TEMP29 - TAG50>
		    <SET TEMP29 O47 (TYPE LIST)>
		    <JUMP + TAG51>
TAG50
		    <PUTREST TEMP42 O47>
		    <DEAD TEMP42>
TAG51
		    <SET TEMP42 O47 (TYPE LIST)>
		    <DEAD O47>
		    <RESTL CLA26 1 = CLA26 (TYPE LIST)>
		    <JUMP + MAP37>
MAPAP40
		    <PUTUV TT27 5 TEMP29 (TYPE LIST)>
		    <DEAD TEMP29>
		    <SET CLA26 TT27>
		    <DEAD TT27>
		    <JUMP + PHRASE52>
PHRASE33
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "COND clause not a LIST or empty:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2 = CLA26>
PHRASE52
		    <CONS CLA26 () = CLA26 (TYPE LIST)>
		    <EMPL? TEMP8 - TAG54>
		    <SET TEMP8 CLA26 (TYPE LIST)>
		    <JUMP + TAG55>
TAG54
		    <PUTREST TEMP21 CLA26>
		    <DEAD TEMP21>
TAG55
		    <SET TEMP21 CLA26 (TYPE LIST)>
		    <DEAD CLA26>
		    <RESTL TEMP25 1 = TEMP25 (TYPE LIST)>
		    <JUMP + MAP16>
MAPAP19
		    <PUTUV TEMP11 5 TEMP8 (TYPE LIST)>
		    <DEAD TEMP8>
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -9>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
		    <END COND-FCN>
<COND (<GASSIGNED? COND-FCN> <PUTPROP ,COND PAPPLY-OBJECT ,COND-FCN> <PUTPROP ,AND PAPPLY-OBJECT ,PSUBR-C> <PUTPROP ,OR PAPPLY-OBJECT ,PSUBR-C>)>

"Build a node for '<-object>-."

#WORD *25276330101*
<GFCN QUOTE-FCN ("VALUE" <OR FALSE NODE> FORM ANY) OBJ4 AP5>
		    <TEMP TEMP8 TT6:NODE>
		    <INTGO>
		    <FRAME 'NODE1>
		    <PUSH 2>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH ()>
		    <PUSH ()>
		    <CALL 'NODE1 5 = TT6>
		    <RESTL OBJ4 1 = TEMP8 (TYPE LIST)>
		    <CHTYPE TEMP8 <TYPE-CODE LIST> = TEMP8>
		    <EMPL? TEMP8 - TAG14 (TYPE LIST)>
		    <DEAD TEMP8>
		    <RETURN %<>>
TAG14
		    <RESTL OBJ4 1 = TEMP8 (TYPE LIST)>
		    <NTHL TEMP8 1 = TEMP8>
		    <EQUAL? TEMP8 %<> - PHRASE17>
		    <DEAD TEMP8>
		    <SET TEMP8 'BOOL-FALSE (TYPE ATOM)>
		    <JUMP + PHRASE18>
PHRASE17
		    <FRAME 'TYPE>
		    <RESTL OBJ4 1 = TEMP8 (TYPE LIST)>
		    <NTHL TEMP8 1 = STACK>
		    <DEAD TEMP8>
		    <CALL 'TYPE 1 = TEMP8>
PHRASE18
		    <PUTUV TT6 3 TEMP8>
		    <DEAD TEMP8>
		    <RESTL OBJ4 1 = TEMP8 (TYPE LIST)>
		    <DEAD OBJ4>
		    <NTHL TEMP8 1 = TEMP8>
		    <PUTUV TT6 4 TEMP8>
		    <DEAD TEMP8>
		    <RETURN TT6>
		    <DEAD TT6>
		    <END QUOTE-FCN>
<COND (<GASSIGNED? QUOTE-FCN> <PUTPROP ,QUOTE PAPPLY-OBJECT ,QUOTE-FCN>)>

"Build a node for a call to an RSUBR."

#WORD *5643055662*
<GFCN RSUBR-FCN ("VALUE" NODE FORM MSUBR) OBJ4 AP5>
		    <TEMP TEMP3:LBIND TEMP8 TEMP16:NODE>
		    <INTGO>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <FRAME 'NODEFM>
		    <PUSH 9>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <NTHL OBJ4 1 = STACK>
		    <PUSH ()>
		    <PUSH AP5>
		    <CALL 'NODEFM 6 = TEMP8>
		    <BBIND 'PARENT 'NODE 'FIX TEMP8>
		    <DEAD TEMP8>
		    <LENUV AP5 = TEMP8 (TYPE FIX)>
		    <GRTR? TEMP8 2 - PHRASE13 (TYPE FIX)>
		    <DEAD TEMP8>
		    <NTHUV AP5 3 = TEMP8>
		    <TYPE? TEMP8 <TYPE-CODE DECL> + TAG15>
		    <TYPE? TEMP8 <TYPE-CODE LIST> - PHRASE13>
		    <DEAD TEMP8>
TAG15
		    <NTHR 'PARENT 2 = TEMP8 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP8 1 = TEMP16 (RECORD-TYPE LBIND)>
		    <DEAD TEMP8>
		    <FRAME 'PRSUBR-C>
		    <NTHL OBJ4 1 = STACK>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <NTHUV AP5 3 = STACK>
		    <CALL 'PRSUBR-C 3 = TEMP8>
		    <PUTUV TEMP16 5 TEMP8>
		    <DEAD TEMP16 TEMP8>
		    <NTHR 'PARENT 2 = TEMP8 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP8 1 = TEMP16 (RECORD-TYPE LBIND)>
		    <DEAD TEMP8>
		    <FRAME 'SANITIZE-DECL>
		    <NTHUV AP5 3 = STACK (TYPE LIST)>
		    <DEAD AP5>
		    <CALL 'SANITIZE-DECL 1 = TEMP8>
		    <PUTUV TEMP16 7 TEMP8 (TYPE LIST)>
		    <DEAD TEMP8>
		    <JUMP + PHRASE24>
PHRASE13
		    <FRAME 'PSUBR-C>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'PSUBR-C 2 = TEMP16>
PHRASE24
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -9>
		    <RETURN TEMP16>
		    <DEAD TEMP16>
		    <END RSUBR-FCN>
<COND (<GASSIGNED? RSUBR-FCN> <PUTPROP MSUBR PAPPLY-TYPE ,RSUBR-FCN>)>

#WORD *22536232165*
<GFCN SANITIZE-DECL ("VALUE" <LIST [REST <LIST ATOM ANY>]> LIST) DCL4>
		    <TEMP (OPT5 %<>) (TUPF6 %<>) TEMP9 TEMP10 TEMP11 TEMP12 TEMP13 TEMP28 TEMP29 TEMP30 TEMP31>
		    <INTGO>
		    <NTHL DCL4 1 = TEMP9>
		    <TYPE? TEMP9 <TYPE-CODE STRING> - PHRASE8>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP9 "VALUE" - PHRASE8>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP10 "VALUE" (TYPE STRING)>
		    <LENUS TEMP9 = TEMP11 (TYPE FIX)>
		    <VEQUAL? TEMP11 5 - PHRASE8>
		    <LOOP (TEMP9 VALUE LENGTH) (TEMP10 VALUE LENGTH) (TEMP11 VALUE)>
TAG14
		    <NTHUS TEMP9 1 = TEMP12>
		    <NTHUS TEMP10 1 = TEMP13>
		    <VEQUAL? TEMP12 TEMP13 - PHRASE8>
		    <DEAD TEMP12 TEMP13>
		    <RESTUS TEMP9 1 = TEMP9 (TYPE STRING)>
		    <RESTUS TEMP10 1 = TEMP10 (TYPE STRING)>
		    <SUB TEMP11 1 = TEMP11 (TYPE FIX)>
		    <GRTR? TEMP11 0 + TAG14 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <RESTL DCL4 1 = DCL4 (TYPE LIST)>
		    <RESTL DCL4 1 = DCL4 (TYPE LIST)>
PHRASE8
		    <SET TEMP12 () (TYPE LIST)>
		    <SET TEMP9 () (TYPE LIST)>
		    <SET TEMP10 DCL4 (TYPE LIST)>
		    <DEAD DCL4>
		    <LOOP>
MAP16
		    <INTGO>
		    <EMPL? TEMP10 + MAPAP19>
		    <NTHL TEMP10 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE STRING> - TAG26>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP11 "QUOTE" + MAP17>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP13 TEMP11>
		    <SET TEMP28 "QUOTE" (TYPE STRING)>
		    <LENUS TEMP13 = TEMP29 (TYPE FIX)>
		    <VEQUAL? TEMP29 5 - TAG26>
		    <LOOP (TEMP13 VALUE LENGTH) (TEMP28 VALUE LENGTH) (TEMP29 VALUE)>
TAG32
		    <NTHUS TEMP13 1 = TEMP30>
		    <NTHUS TEMP28 1 = TEMP31>
		    <VEQUAL? TEMP30 TEMP31 - TAG26>
		    <DEAD TEMP30 TEMP31>
		    <RESTUS TEMP13 1 = TEMP13 (TYPE STRING)>
		    <RESTUS TEMP28 1 = TEMP28 (TYPE STRING)>
		    <SUB TEMP29 1 = TEMP29 (TYPE FIX)>
		    <GRTR? TEMP29 0 + TAG32 (TYPE FIX)>
		    <JUMP + MAP17>
		    <ENDIF "STRING-EQUAL?">
TAG26
		    <TYPE? TEMP11 <TYPE-CODE STRING> - PHRASE24>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP11 "ARGS" - PHRASE24>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP28 TEMP11>
		    <SET TEMP13 "ARGS" (TYPE STRING)>
		    <LENUS TEMP28 = TEMP31 (TYPE FIX)>
		    <VEQUAL? TEMP31 4 - PHRASE24>
		    <LOOP (TEMP28 VALUE LENGTH) (TEMP13 VALUE LENGTH) (TEMP31 VALUE)>
TAG34
		    <NTHUS TEMP28 1 = TEMP30>
		    <NTHUS TEMP13 1 = TEMP29>
		    <VEQUAL? TEMP30 TEMP29 - PHRASE24>
		    <DEAD TEMP30 TEMP29>
		    <RESTUS TEMP28 1 = TEMP28 (TYPE STRING)>
		    <RESTUS TEMP13 1 = TEMP13 (TYPE STRING)>
		    <SUB TEMP31 1 = TEMP31 (TYPE FIX)>
		    <GRTR? TEMP31 0 + TAG34 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <JUMP + MAP17>
PHRASE24
		    <TYPE? TEMP11 <TYPE-CODE STRING> - TAG38>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP11 "OPT" + BOOL37>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP13 TEMP11>
		    <SET TEMP28 "OPT" (TYPE STRING)>
		    <LENUS TEMP13 = TEMP29 (TYPE FIX)>
		    <VEQUAL? TEMP29 3 - TAG38>
		    <LOOP (TEMP13 VALUE LENGTH) (TEMP28 VALUE LENGTH) (TEMP29 VALUE)>
TAG40
		    <NTHUS TEMP13 1 = TEMP30>
		    <NTHUS TEMP28 1 = TEMP31>
		    <VEQUAL? TEMP30 TEMP31 - TAG38>
		    <DEAD TEMP30 TEMP31>
		    <RESTUS TEMP13 1 = TEMP13 (TYPE STRING)>
		    <RESTUS TEMP28 1 = TEMP28 (TYPE STRING)>
		    <SUB TEMP29 1 = TEMP29 (TYPE FIX)>
		    <GRTR? TEMP29 0 + TAG40 (TYPE FIX)>
		    <JUMP + BOOL37>
		    <ENDIF "STRING-EQUAL?">
TAG38
		    <TYPE? TEMP11 <TYPE-CODE STRING> - PHRASE36>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP11 "OPTIONAL" - PHRASE36>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP28 TEMP11>
		    <SET TEMP13 "OPTIONAL" (TYPE STRING)>
		    <LENUS TEMP28 = TEMP31 (TYPE FIX)>
		    <VEQUAL? TEMP31 8 - PHRASE36>
		    <LOOP (TEMP28 VALUE LENGTH) (TEMP13 VALUE LENGTH) (TEMP31 VALUE)>
TAG42
		    <NTHUS TEMP28 1 = TEMP30>
		    <NTHUS TEMP13 1 = TEMP29>
		    <VEQUAL? TEMP30 TEMP29 - PHRASE36>
		    <DEAD TEMP30 TEMP29>
		    <RESTUS TEMP28 1 = TEMP28 (TYPE STRING)>
		    <RESTUS TEMP13 1 = TEMP13 (TYPE STRING)>
		    <SUB TEMP31 1 = TEMP31 (TYPE FIX)>
		    <GRTR? TEMP31 0 + TAG42 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
BOOL37
		    <SET OPT5 'T (TYPE ATOM)>
		    <JUMP + MAP17>
PHRASE36
		    <TYPE? TEMP11 <TYPE-CODE STRING> - PHRASE44>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP11 "TUPLE" - PHRASE44>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP13 TEMP11>
		    <SET TEMP28 "TUPLE" (TYPE STRING)>
		    <LENUS TEMP13 = TEMP29 (TYPE FIX)>
		    <VEQUAL? TEMP29 5 - PHRASE44>
		    <LOOP (TEMP13 VALUE LENGTH) (TEMP28 VALUE LENGTH) (TEMP29 VALUE)>
TAG46
		    <NTHUS TEMP13 1 = TEMP30>
		    <NTHUS TEMP28 1 = TEMP31>
		    <VEQUAL? TEMP30 TEMP31 - PHRASE44>
		    <DEAD TEMP30 TEMP31>
		    <RESTUS TEMP13 1 = TEMP13 (TYPE STRING)>
		    <RESTUS TEMP28 1 = TEMP28 (TYPE STRING)>
		    <SUB TEMP29 1 = TEMP29 (TYPE FIX)>
		    <GRTR? TEMP29 0 + TAG46 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <SET TUPF6 'T (TYPE ATOM)>
		    <JUMP + MAP17>
PHRASE44
		    <VEQUAL? TUPF6 0 + PHRASE49>
		    <CONS TEMP11 () = TEMP28>
		    <DEAD TEMP11>
		    <CONS 'TUPLE TEMP28 = TEMP28>
		    <JUMP + PHRASE51>
PHRASE49
		    <VEQUAL? OPT5 0 + PHRASE50>
		    <CONS TEMP11 () = TEMP28>
		    <DEAD TEMP11>
		    <CONS 'OPTIONAL TEMP28 = TEMP28>
		    <JUMP + PHRASE51>
PHRASE50
		    <CONS TEMP11 () = TEMP28>
		    <DEAD TEMP11>
		    <CONS 'NORMAL TEMP28 = TEMP28>
PHRASE51
		    <CONS TEMP28 () = TEMP28 (TYPE LIST)>
		    <EMPL? TEMP12 - TAG52>
		    <SET TEMP12 TEMP28 (TYPE LIST)>
		    <JUMP + TAG53>
TAG52
		    <PUTREST TEMP9 TEMP28>
		    <DEAD TEMP9>
TAG53
		    <SET TEMP9 TEMP28 (TYPE LIST)>
		    <DEAD TEMP28>
MAP17
		    <RESTL TEMP10 1 = TEMP10 (TYPE LIST)>
		    <JUMP + MAP16>
MAPAP19
		    <RETURN TEMP12>
		    <DEAD TEMP12>
		    <END SANITIZE-DECL>
"Predicate:  any segments in this object?"

#WORD *7130071033*
<GFCN SEG? ("VALUE" <OR ATOM !<FALSE>> <PRIMTYPE LIST>) OB4>
		    <TEMP TEMP5>
		    <INTGO>
		    <LOOP>
AGAIN8
		    <INTGO>
		    <EMPL? OB4 - PHRASE10>
		    <RETURN %<>>
PHRASE10
		    <NTHL OB4 1 = TEMP5>
		    <TYPE? TEMP5 <TYPE-CODE SEGMENT> - PHRASE12>
		    <DEAD TEMP5>
		    <RETURN 'T>
PHRASE12
		    <RESTL OB4 1 = OB4 (TYPE LIST)>
		    <CHTYPE OB4 <TYPE-CODE LIST> = OB4>
		    <JUMP + AGAIN8>
		    <END SEG?>
"Analyze a call to an MSUBR with decls checking number of args and types wherever
 possible."

#WORD *24214155136*
<FCN PRSUBR-C ("VALUE" ANY ANY <PRIMTYPE LIST> <PRIMTYPE LIST>) NAME4 OBJ5 RDCL6>
		    <TEMP TEMP3:LBIND TEMP23 (SGD9:FORM <>) (SGP10:LIST (1)) (IX12 0) (ARG-NUMBER15:FIX 0) OB19:LIST (ST20 %<>) (ODC21 "FOO") DC13 TEMP42 TEMP52 TEMP53 SGN11 TT132:NODE>
		    <INTGO>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <BBIND 'NAME 'ANY %<> NAME4>
		    <DEAD NAME4>
		    <BBIND 'OBJ <PRIMTYPE LIST> %<> OBJ5>
		    <DEAD OBJ5>
		    <BBIND 'RDCL <PRIMTYPE LIST> %<> RDCL6>
		    <DEAD RDCL6>
		    <FIXBIND>
		    <GVAL 'INIT-R = TEMP23>
		    <BBIND 'DOIT 'ANY 'FIX TEMP23>
		    <DEAD TEMP23>
		    <BBIND 'SEGSW 'ANY 'FIX %<>>
		    <GVAL 'RMODES = TEMP23>
		    <BBIND 'RM <VECTOR [REST STRING]> 'FIX TEMP23>
		    <DEAD TEMP23>
		    <CONS () () = TEMP23>
		    <BBIND 'KDS 'LIST 'FIX TEMP23>
		    <DEAD TEMP23>
		    <NTHR 'KDS 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = TEMP23 (RECORD-TYPE LBIND)>
		    <BBIND 'TKDS 'LIST 'FIX TEMP23>
		    <DEAD TEMP23>
		    <NTHR 'OBJ 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = TEMP23 (RECORD-TYPE LBIND)>
		    <RESTL TEMP23 1 = OB19 (TYPE LIST)>
		    <DEAD TEMP23>
		    <CHTYPE OB19 <TYPE-CODE LIST> = OB19>
		    <CFRAME = TEMP23 (TYPE FRAME)>
		    <BBIND 'RSB 'ANY 'FIX TEMP23>
		    <DEAD TEMP23>
		    <ACTIVATION>
		    <LOOP>
AGAIN30
		    <INTGO>
		    <NTHR 'RDCL 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = TEMP23 (RECORD-TYPE LBIND)>
		    <EMPL? TEMP23 + PHRASE32>
		    <DEAD TEMP23>
		    <NTHR 'RM 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = TEMP23 (RECORD-TYPE LBIND)>
		    <EMPUV? TEMP23 + PHRASE37 (TYPE VECTOR)>
		    <DEAD TEMP23>
		    <NTHR 'RDCL 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = TEMP23 (RECORD-TYPE LBIND)>
		    <NTHL TEMP23 1 = DC13>
		    <DEAD TEMP23>
		    <NTHR 'RDCL 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = TEMP42 (RECORD-TYPE LBIND)>
		    <RESTL TEMP42 1 = TEMP23 (TYPE LIST)>
		    <DEAD TEMP42>
		    <CHTYPE TEMP23 <TYPE-CODE LIST> = TEMP23>
		    <NTHR 'RDCL 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP42 1 TEMP23 (RECORD-TYPE LBIND)>
		    <DEAD TEMP42 TEMP23>
PHRASE37
		    <TYPE? DC13 <TYPE-CODE STRING> - PHRASE48>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? DC13 "OPT" - PHRASE50>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP23 DC13>
		    <SET TEMP42 "OPT" (TYPE STRING)>
		    <LENUS TEMP23 = IX12 (TYPE FIX)>
		    <VEQUAL? IX12 3 - PHRASE50>
		    <LOOP (TEMP23 VALUE LENGTH) (TEMP42 VALUE LENGTH) (IX12 VALUE)>
TAG54
		    <NTHUS TEMP23 1 = TEMP52>
		    <NTHUS TEMP42 1 = TEMP53>
		    <VEQUAL? TEMP52 TEMP53 - PHRASE50>
		    <DEAD TEMP52 TEMP53>
		    <RESTUS TEMP23 1 = TEMP23 (TYPE STRING)>
		    <RESTUS TEMP42 1 = TEMP42 (TYPE STRING)>
		    <SUB IX12 1 = IX12 (TYPE FIX)>
		    <GRTR? IX12 0 + TAG54 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <SET DC13 "OPTIONAL" (TYPE STRING)>
PHRASE50
		    <FRAME 'MEMBER>
		    <PUSH DC13>
		    <NTHR 'RM 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP42>
		    <CALL 'MEMBER 2 = TEMP23>
		    <TYPE? TEMP23 <TYPE-CODE FALSE> - PHRASE56>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Unknown string in MSUBR decl: ">
		    <PUSH DC13>
		    <PUSH " ">
		    <NTHR 'NAME 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP42>
		    <CALL 'COMPILE-ERROR 4>
PHRASE56
		    <NTHR 'RM 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP42 1 TEMP23 (RECORD-TYPE LBIND)>
		    <DEAD TEMP42 TEMP23>
		    <GVAL 'RDOIT = TEMP42>
		    <NTHR 'RM 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = TEMP23 (RECORD-TYPE LBIND)>
		    <LENUV TEMP23 = IX12 (TYPE FIX)>
		    <DEAD TEMP23>
		    <NTHUV TEMP42 IX12 = TEMP23>
		    <DEAD TEMP42>
		    <NTHR 'DOIT 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP42 1 TEMP23 (RECORD-TYPE LBIND)>
		    <DEAD TEMP42 TEMP23>
		    <FRAME>
		    <GVAL 'SDOIT = TEMP23>
		    <NTHUV TEMP23 IX12 = TEMP42>
		    <DEAD TEMP23 IX12>
		    <PUSH ST20>
		    <DEAD ST20>
		    <PUSH DC13>
		    <PUSH ODC21>
		    <ACALL TEMP42 3 = ST20>
		    <DEAD TEMP42>
		    <SET ODC21 DC13>
		    <NTHR 'RM 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = TEMP42 (RECORD-TYPE LBIND)>
		    <EMPUV? TEMP42 - AGAIN30 (TYPE VECTOR)>
		    <DEAD TEMP42>
		    <FRAME 'GET-ELE-TYPE>
		    <NTHR 'RDCL 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = TEMP42 (RECORD-TYPE LBIND)>
		    <NTHL TEMP42 1 = STACK>
		    <DEAD TEMP42>
		    <PUSH 'ALL>
		    <CALL 'GET-ELE-TYPE 2 = DC13>
		    <JUMP + AGAIN30>
PHRASE48
		    <EMPL? OB19 - PHRASE78 (TYPE LIST)>
		    <NTHR 'RM 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = TEMP42 (RECORD-TYPE LBIND)>
		    <LENUV TEMP42 = TEMP42 (TYPE FIX)>
		    <LESS? TEMP42 4 - BOOL79 (TYPE FIX)>
		    <DEAD TEMP42>
		    <NTHR 'TKDS 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = TEMP42 (RECORD-TYPE LBIND)>
		    <RESTL TEMP42 1 = TEMP23 (TYPE LIST)>
		    <DEAD TEMP42>
		    <JUMP + EXIT28>
BOOL79
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Too few arguments to:  ">
		    <NTHR 'NAME 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP42>
		    <PUSH " ">
		    <NTHR 'OBJ 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP42>
		    <CALL 'COMPILE-ERROR 4>
		    <JUMP + AGAIN30>
PHRASE78
		    <NTHR 'SEGSW 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = TEMP42 (RECORD-TYPE LBIND)>
		    <TYPE? TEMP42 <TYPE-CODE FALSE> + PHRASE89>
		    <DEAD TEMP42>
		    <SET ST20 %<> (TYPE FALSE)>
		    <NTHR 'RM 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = TEMP42 (RECORD-TYPE LBIND)>
		    <EMPUV? TEMP42 - PHRASE93 (TYPE VECTOR)>
		    <DEAD TEMP42>
		    <PUSH 'REST>
		    <PUSH DC13>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP42>
		    <CONS TEMP42 () = TEMP42>
		    <PUTREST SGP10 TEMP42>
		    <DEAD TEMP42>
		    <FRAME 'TYPE-AND>
		    <NTHUV SGN11 3 = STACK>
		    <PUSH SGD9>
		    <CALL 'TYPE-AND 2 = TEMP42>
		    <PUTUV SGN11 3 TEMP42>
		    <DEAD SGN11 TEMP42>
		    <NTHR 'TKDS 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = TEMP42 (RECORD-TYPE LBIND)>
		    <RESTL TEMP42 1 = TEMP23 (TYPE LIST)>
		    <DEAD TEMP42>
		    <JUMP + EXIT28>
PHRASE93
		    <CONS DC13 () = TEMP42>
		    <PUTREST SGP10 TEMP42>
		    <DEAD SGP10>
		    <SET SGP10 TEMP42>
		    <DEAD TEMP42>
		    <JUMP + AGAIN30>
PHRASE89
		    <NTHL OB19 1 = TEMP42>
		    <TYPE? TEMP42 <TYPE-CODE SEGMENT> - PHRASE101>
		    <DEAD TEMP42>
		    <NTHR 'KDS 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP42 1 = TEMP42 (RECORD-TYPE LBIND)>
		    <FRAME 'SEGCHK>
		    <NTHL OB19 1 = STACK (TYPE SEGMENT)>
		    <CALL 'SEGCHK 1 = SGN11>
		    <CONS SGN11 () = TEMP23>
		    <PUTREST TEMP42 TEMP23>
		    <DEAD TEMP42>
		    <NTHR 'KDS 2 = TEMP42 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP42 1 TEMP23 (RECORD-TYPE LBIND)>
		    <DEAD TEMP42 TEMP23>
		    <RESTL OB19 1 = TEMP23 (TYPE LIST)>
		    <EMPL? TEMP23 - PHRASE108 (TYPE LIST)>
		    <DEAD TEMP23>
		    <NTHR 'RM 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = TEMP23 (RECORD-TYPE LBIND)>
		    <EMPUV? TEMP23 - PHRASE110 (TYPE VECTOR)>
		    <DEAD TEMP23>
		    <FRAME 'SEGCH1>
		    <PUSH DC13>
		    <NTHUV SGN11 3 = STACK>
		    <NTHL OB19 1 = STACK>
		    <CALL 'SEGCH1 3 = TEMP23>
		    <PUTUV SGN11 3 TEMP23>
		    <DEAD SGN11 TEMP23>
		    <NTHR 'TKDS 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = TEMP23 (RECORD-TYPE LBIND)>
		    <RESTL TEMP23 1 = TEMP23 (TYPE LIST)>
		    <JUMP + EXIT28>
PHRASE110
		    <NTHR 'SEGSW 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP23 1 'T (RECORD-TYPE LBIND)>
		    <DEAD TEMP23>
		    <JUMP + PHRASE119>
PHRASE108
		    <NTHR 'KDS 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = TEMP23 (RECORD-TYPE LBIND)>
		    <SET TEMP42 () (TYPE LIST)>
		    <SET TEMP53 () (TYPE LIST)>
		    <RESTL OB19 1 = IX12 (TYPE LIST)>
		    <LOOP>
MAP123
		    <INTGO>
		    <EMPL? IX12 + MAPAP126>
		    <NTHL IX12 1 = TEMP52>
		    <FRAME 'PCOMP>
		    <PUSH TEMP52>
		    <DEAD TEMP52>
		    <GEN-LVAL 'PARENT = STACK>
		    <CALL 'PCOMP 2 = TT132>
		    <NTHR 'RM 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = TEMP52 (RECORD-TYPE LBIND)>
		    <EMPUV? TEMP52 - PHRASE161 (TYPE VECTOR)>
		    <DEAD TEMP52>
		    <NTHUV TT132 1 = TEMP52 (TYPE FIX)>
		    <VEQUAL? TEMP52 3 - PHRASE144 (TYPE FIX)>
		    <DEAD TEMP52>
		    <FRAME 'TYPE-OK?>
		    <NTHUV TT132 5 = TEMP52 (TYPE LIST)>
		    <NTHL TEMP52 1 = TEMP52 (TYPE NODE)>
		    <NTHUV TEMP52 3 = STACK>
		    <DEAD TEMP52>
		    <FRAME 'FORM>
		    <PUSH <OR MULTI STRUCTURED>>
		    <PUSH 'REST>
		    <PUSH DC13>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = STACK>
		    <CALL 'FORM 2 = STACK>
		    <CALL 'TYPE-OK? 2 = TEMP52>
		    <TYPE? TEMP52 <TYPE-CODE FALSE> - PHRASE161>
		    <DEAD TEMP52>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Argument wrong type to:  ">
		    <NTHR 'NAME 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP52>
		    <PUSH OB19>
		    <CALL 'COMPILE-ERROR 3>
		    <JUMP + PHRASE161>
PHRASE144
		    <FRAME 'TYPE-OK?>
		    <NTHUV TT132 3 = STACK>
		    <PUSH DC13>
		    <CALL 'TYPE-OK? 2 = TEMP52>
		    <TYPE? TEMP52 <TYPE-CODE FALSE> - PHRASE155>
		    <DEAD TEMP52>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Argument wrong type to:  ">
		    <NTHR 'NAME 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP52>
		    <PUSH OB19>
		    <CALL 'COMPILE-ERROR 3>
PHRASE155
		    <NTHUV TT132 3 = TEMP52>
		    <TYPE? TEMP52 <TYPE-CODE FALSE> - PHRASE161>
		    <DEAD TEMP52>
		    <PUTUV TT132 3 DC13>
PHRASE161
		    <CONS TT132 () = TEMP52 (TYPE LIST)>
		    <DEAD TT132>
		    <EMPL? TEMP42 - TAG162>
		    <SET TEMP42 TEMP52 (TYPE LIST)>
		    <JUMP + TAG163>
TAG162
		    <PUTREST TEMP53 TEMP52>
		    <DEAD TEMP53>
TAG163
		    <SET TEMP53 TEMP52 (TYPE LIST)>
		    <DEAD TEMP52>
		    <RESTL IX12 1 = IX12 (TYPE LIST)>
		    <JUMP + MAP123>
MAPAP126
		    <PUTREST TEMP23 TEMP42>
		    <DEAD TEMP23 TEMP42>
		    <NTHR 'TKDS 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = TEMP23 (RECORD-TYPE LBIND)>
		    <RESTL TEMP23 1 = TEMP23 (TYPE LIST)>
		    <JUMP + EXIT28>
PHRASE119
		    <FRAME 'FORM>
		    <PUSH 'STRUCTURED>
		    <PUSH DC13>
		    <CALL 'FORM 2 = SGD9>
		    <RESTL SGD9 1 = SGP10 (TYPE LIST)>
		    <CHTYPE SGP10 <TYPE-CODE LIST> = SGP10>
		    <SET ST20 %<> (TYPE FALSE)>
		    <JUMP + AGAIN30>
PHRASE101
		    <NTHR 'KDS 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = TEMP23 (RECORD-TYPE LBIND)>
		    <FRAME>
		    <NTHR 'DOIT 2 = IX12 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR IX12 1 = IX12 (RECORD-TYPE LBIND)>
		    <PUSH DC13>
		    <PUSH OB19>
		    <ACALL IX12 2 = TEMP52>
		    <DEAD IX12>
		    <CONS TEMP52 () = TEMP52>
		    <PUTREST TEMP23 TEMP52>
		    <DEAD TEMP23>
		    <NTHR 'KDS 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP23 1 TEMP52 (RECORD-TYPE LBIND)>
		    <DEAD TEMP23 TEMP52>
		    <RESTL OB19 1 = OB19 (TYPE LIST)>
		    <ADD ARG-NUMBER15 1 = ARG-NUMBER15 (TYPE FIX)>
		    <SET ST20 %<> (TYPE FALSE)>
		    <JUMP + AGAIN30>
PHRASE32
		    <EMPL? OB19 - PHRASE175 (TYPE LIST)>
		    <NTHR 'TKDS 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = TEMP52 (RECORD-TYPE LBIND)>
		    <RESTL TEMP52 1 = TEMP23 (TYPE LIST)>
		    <DEAD TEMP52>
		    <JUMP + EXIT28>
PHRASE175
		    <NTHR 'SEGSW 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = TEMP52 (RECORD-TYPE LBIND)>
		    <TYPE? TEMP52 <TYPE-CODE FALSE> + PHRASE178>
		    <DEAD TEMP52>
		    <NTHUV SGN11 3 = TEMP52>
		    <TYPE? TEMP52 <TYPE-CODE FALSE> + PHRASE182>
		    <DEAD TEMP52>
		    <FRAME 'TYPE-AND>
		    <NTHUV SGN11 3 = STACK>
		    <PUSH SGD9>
		    <CALL 'TYPE-AND 2 = TEMP52>
		    <JUMP + PHRASE184>
PHRASE182
		    <SET TEMP52 SGD9>
		    <DEAD SGD9>
PHRASE184
		    <PUTUV SGN11 3 TEMP52>
		    <DEAD SGN11 TEMP52>
		    <NTHR 'TKDS 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = TEMP52 (RECORD-TYPE LBIND)>
		    <RESTL TEMP52 1 = TEMP23 (TYPE LIST)>
		    <DEAD TEMP52>
		    <JUMP + EXIT28>
PHRASE178
		    <SET TEMP52 OB19 (TYPE LIST)>
		    <LOOP>
MAP189
		    <INTGO>
		    <EMPL? TEMP52 + MAPAP192>
		    <NTHL TEMP52 1 = TEMP23>
		    <TYPE? TEMP23 <TYPE-CODE SEGMENT> - PHRASE187>
		    <DEAD TEMP23>
		    <RESTL TEMP52 1 = TEMP52 (TYPE LIST)>
		    <JUMP + MAP189>
MAPAP192
		    <NTHR 'KDS 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = TEMP52 (RECORD-TYPE LBIND)>
		    <FRAME 'SEGCHK>
		    <NTHL OB19 1 = STACK>
		    <CALL 'SEGCHK 1 = SGN11>
		    <CONS SGN11 () = TEMP23>
		    <PUTREST TEMP52 TEMP23>
		    <DEAD TEMP52>
		    <NTHR 'KDS 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP52 1 TEMP23 (RECORD-TYPE LBIND)>
		    <DEAD TEMP52 TEMP23>
		    <NTHR 'TKDS 2 = TEMP52 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP52 1 = TEMP23 (RECORD-TYPE LBIND)>
		    <DEAD TEMP52>
		    <RESTL TEMP23 1 = TEMP23 (TYPE LIST)>
		    <JUMP + EXIT28>
PHRASE187
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Too many arguments too: ">
		    <NTHR 'NAME 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP23>
		    <PUSH " ">
		    <NTHR 'OBJ 2 = TEMP23 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP23 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP23>
		    <CALL 'COMPILE-ERROR 4>
		    <JUMP + AGAIN30>
EXIT28
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -81>
		    <RETURN TEMP23>
		    <DEAD TEMP23>
		    <END PRSUBR-C>
#WORD *772350765*
<GFCN SQUOT ("VALUE" ATOM ANY ANY ANY) F4 S1-5 S2-6>
		    <TEMP>
		    <INTGO>
		    <RETURN 'T>
		    <END SQUOT>
"Flush one possible decl away."

#WORD *2037740012*
<GFCN CHOPPER ("VALUE" ATOM ANY ANY ANY) F4 S1-5 S2-6>
		    <TEMP TEMP10>
		    <INTGO>
		    <TYPE? F4 <TYPE-CODE FALSE> + PHRASE8>
		    <DEAD F4>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Two DECL strings in a row in:  ">
		    <PUSH S1-5>
		    <DEAD S1-5>
		    <PUSH " ">
		    <PUSH S2-6>
		    <DEAD S2-6>
		    <CALL 'COMPILE-ERROR 4>
PHRASE8
		    <GEN-LVAL 'RM = TEMP10>
		    <RESTUV TEMP10 1 = TEMP10 (TYPE VECTOR)>
		    <GEN-SET 'RM TEMP10>
		    <DEAD TEMP10>
		    <RETURN 'T>
		    <END CHOPPER>
"Handle Normal arg when \"VALUE\" still possible."

#WORD *23076477562*
<GFCN INIT-R ("VALUE" NODE ANY ANY) DC4 OB5>
		    <TEMP TEMP6>
		    <INTGO>
		    <GEN-LVAL 'RM = TEMP6>
		    <RESTUV TEMP6 2 = TEMP6 (TYPE VECTOR)>
		    <GEN-SET 'RM TEMP6>
		    <DEAD TEMP6>
		    <GVAL 'INIT1-R = TEMP6>
		    <GEN-SET 'DOIT TEMP6>
		    <DEAD TEMP6>
		    <FRAME 'INIT1-R>
		    <PUSH DC4>
		    <DEAD DC4>
		    <PUSH OB5>
		    <DEAD OB5>
		    <CALL 'INIT1-R 2 = TEMP6>
		    <RETURN TEMP6>
		    <DEAD TEMP6>
		    <END INIT-R>
"Handle Normal arg when \"CALL\" still possible."

#WORD *22417044032*
<GFCN INIT2-R ("VALUE" NODE ANY ANY) DC4 OB5>
		    <TEMP TEMP6>
		    <INTGO>
		    <GEN-LVAL 'RM = TEMP6>
		    <RESTUV TEMP6 1 = TEMP6 (TYPE VECTOR)>
		    <GEN-SET 'RM TEMP6>
		    <DEAD TEMP6>
		    <GVAL 'INIT1-R = TEMP6>
		    <GEN-SET 'DOIT TEMP6>
		    <DEAD TEMP6>
		    <FRAME 'INIT1-R>
		    <PUSH DC4>
		    <DEAD DC4>
		    <PUSH OB5>
		    <DEAD OB5>
		    <CALL 'INIT1-R 2 = TEMP6>
		    <RETURN TEMP6>
		    <DEAD TEMP6>
		    <END INIT2-R>
"Handle normal arg."

#WORD *31036001645*
<GFCN INIT1-R ("VALUE" NODE ANY LIST) DC4 OB5>
		    <TEMP TEMP11 TT6:NODE>
		    <INTGO>
		    <FRAME 'TYPE-OK?>
		    <FRAME 'PCOMP>
		    <NTHL OB5 1 = STACK>
		    <GEN-LVAL 'PARENT = STACK>
		    <CALL 'PCOMP 2 = TT6>
		    <NTHUV TT6 3 = STACK>
		    <PUSH DC4>
		    <CALL 'TYPE-OK? 2 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - PHRASE8>
		    <DEAD TEMP11>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Argument wrong type to:  ">
		    <GEN-LVAL 'NAME = STACK>
		    <PUSH " ">
		    <NTHL OB5 1 = STACK>
		    <DEAD OB5>
		    <CALL 'COMPILE-ERROR 4>
PHRASE8
		    <NTHUV TT6 3 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - PHRASE19>
		    <DEAD TEMP11>
		    <PUTUV TT6 3 DC4>
		    <DEAD DC4>
PHRASE19
		    <RETURN TT6>
		    <DEAD TT6>
		    <END INIT1-R>
"Handle \"QUOTE\" arg."

#WORD *13427741371*
<GFCN QINIT-R ("VALUE" NODE ANY LIST) DC4 OB5>
		    <TEMP TEMP11 TT6:NODE>
		    <INTGO>
		    <FRAME 'TYPE-OK?>
		    <FRAME 'NODE1>
		    <PUSH 2>
		    <GEN-LVAL 'PARENT = STACK>
		    <FRAME 'TYPE>
		    <NTHL OB5 1 = STACK>
		    <CALL 'TYPE 1 = STACK>
		    <NTHL OB5 1 = STACK>
		    <PUSH ()>
		    <CALL 'NODE1 5 = TT6>
		    <NTHUV TT6 3 = STACK>
		    <PUSH DC4>
		    <DEAD DC4>
		    <CALL 'TYPE-OK? 2 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - PHRASE8>
		    <DEAD TEMP11>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Argument wrong type to:  ">
		    <GEN-LVAL 'NAME = STACK>
		    <PUSH " ">
		    <NTHL OB5 1 = STACK>
		    <DEAD OB5>
		    <CALL 'COMPILE-ERROR 4>
PHRASE8
		    <GVAL 'INIT1-R = TEMP11>
		    <GEN-SET 'DOIT TEMP11>
		    <DEAD TEMP11>
		    <RETURN TT6>
		    <DEAD TT6>
		    <END QINIT-R>
"Handle \"CALL\" decl."

#WORD *7274472467*
<GFCN CAL-R ("VALUE" ANY ANY ANY) DC4 OB5>
		    <TEMP TEMP11 TT6>
		    <INTGO>
		    <FRAME 'TYPE-OK?>
		    <FRAME 'NODE1>
		    <PUSH 2>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH 'FORM>
		    <GEN-LVAL 'OBJ = STACK>
		    <PUSH ()>
		    <CALL 'NODE1 5 = TT6>
		    <NTHUV TT6 3 = STACK>
		    <PUSH DC4>
		    <DEAD DC4>
		    <CALL 'TYPE-OK? 2 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - PHRASE8>
		    <DEAD TEMP11>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Argument wrong type to:  ">
		    <GEN-LVAL 'NAME = STACK>
		    <PUSH " ">
		    <NTH1 OB5 = STACK>
		    <DEAD OB5>
		    <CALL 'COMPILE-ERROR 4>
PHRASE8
		    <GEN-LVAL 'KDS = TEMP11>
		    <CONS TT6 () = TT6>
		    <PUTREST TEMP11 TT6>
		    <DEAD TEMP11 TT6>
		    <FRAME 'RETURN>
		    <GEN-LVAL 'TKDS = TEMP11>
		    <RESTL TEMP11 1 = STACK (TYPE LIST)>
		    <DEAD TEMP11>
		    <GEN-LVAL 'RSB = STACK>
		    <CALL 'RETURN 2 = TT6>
		    <RETURN TT6>
		    <DEAD TT6>
		    <END CAL-R>
"Handle \"ARGS\" decl."

#WORD *414200360*
<GFCN ARGS-R ("VALUE" ANY ANY ANY) DC4 OB5>
		    <TEMP TEMP11 TT6>
		    <INTGO>
		    <FRAME 'TYPE-OK?>
		    <FRAME 'NODE1>
		    <PUSH 2>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH 'LIST>
		    <PUSH OB5>
		    <PUSH ()>
		    <CALL 'NODE1 5 = TT6>
		    <NTHUV TT6 3 = STACK>
		    <PUSH DC4>
		    <DEAD DC4>
		    <CALL 'TYPE-OK? 2 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - PHRASE8>
		    <DEAD TEMP11>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Argument wrong type to:  ">
		    <GEN-LVAL 'NAME = STACK>
		    <PUSH " ">
		    <NTH1 OB5 = STACK>
		    <DEAD OB5>
		    <CALL 'COMPILE-ERROR 4>
PHRASE8
		    <GEN-LVAL 'KDS = TEMP11>
		    <CONS TT6 () = TT6>
		    <PUTREST TEMP11 TT6>
		    <DEAD TEMP11 TT6>
		    <FRAME 'RETURN>
		    <GEN-LVAL 'TKDS = TEMP11>
		    <RESTL TEMP11 1 = STACK (TYPE LIST)>
		    <DEAD TEMP11>
		    <GEN-LVAL 'RSB = STACK>
		    <CALL 'RETURN 2 = TT6>
		    <RETURN TT6>
		    <DEAD TT6>
		    <END ARGS-R>
"Handle \"TUPLE\" decl."

#WORD *21271652253*
<GFCN TUPL-R ("VALUE" NODE ANY LIST) DC4 OB5>
		    <TEMP TEMP11 TT6:NODE>
		    <INTGO>
		    <FRAME 'TYPE-OK?>
		    <FRAME 'PCOMP>
		    <NTHL OB5 1 = STACK>
		    <GEN-LVAL 'PARENT = STACK>
		    <CALL 'PCOMP 2 = TT6>
		    <NTHUV TT6 3 = STACK>
		    <PUSH DC4>
		    <CALL 'TYPE-OK? 2 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - PHRASE8>
		    <DEAD TEMP11>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Argument wrong type to:  ">
		    <GEN-LVAL 'NAME = STACK>
		    <PUSH " ">
		    <NTHL OB5 1 = STACK>
		    <DEAD OB5>
		    <CALL 'COMPILE-ERROR 4>
PHRASE8
		    <NTHUV TT6 3 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - PHRASE19>
		    <DEAD TEMP11>
		    <PUTUV TT6 3 DC4>
		    <DEAD DC4>
PHRASE19
		    <RETURN TT6>
		    <DEAD TT6>
		    <END TUPL-R>
"Handle stuff with segments in arguments."

#WORD *20070237142*
<GFCN SEGCHK ("VALUE" NODE ANY) OB4>
		    <TEMP TEMP10 TT5:NODE>
		    <INTGO>
		    <FRAME 'TYPE-OK?>
		    <FRAME 'PCOMP>
		    <PUSH OB4>
		    <GEN-LVAL 'PARENT = STACK>
		    <CALL 'PCOMP 2 = TT5>
		    <NTHUV TT5 3 = STACK>
		    <PUSH <OR MULTI STRUCTURED>>
		    <CALL 'TYPE-OK? 2 = TEMP10>
		    <TYPE? TEMP10 <TYPE-CODE FALSE> - PHRASE7>
		    <DEAD TEMP10>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Non-structured segment?  ">
		    <PUSH OB4>
		    <DEAD OB4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE7
		    <RETURN TT5>
		    <DEAD TT5>
		    <END SEGCHK>
#WORD *24626220634*
<GFCN SEGCH1 ("VALUE" ANY ANY ANY ANY) DC4 RT5 OB6>
		    <TEMP TEMP13>
		    <INTGO>
		    <FRAME 'TYPE-AND>
		    <PUSH RT5>
		    <DEAD RT5>
		    <FRAME 'FORM>
		    <PUSH <OR MULTI STRUCTURED>>
		    <PUSH 'REST>
		    <PUSH DC4>
		    <DEAD DC4>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = STACK>
		    <CALL 'FORM 2 = STACK>
		    <CALL 'TYPE-AND 2 = TEMP13>
		    <TYPE? TEMP13 <TYPE-CODE FALSE> + TAG14>
		    <DEAD TEMP13>
		    <RETURN %<>>
TAG14
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Argument wrong type to:  ">
		    <GEN-LVAL 'NAME = STACK>
		    <PUSH " ">
		    <PUSH OB6>
		    <DEAD OB6>
		    <CALL 'COMPILE-ERROR 4 = TEMP13>
		    <RETURN TEMP13>
		    <DEAD TEMP13>
		    <END SEGCH1>
"Handle \"VALUE\" chop decl and do the rest."

#WORD *5404575626*
<GFCN VAL-R ("VALUE" <OR FALSE ATOM> ANY ANY ANY) F4 S1-5 S2-6>
		    <TEMP TEMP8 TEMP11>
		    <INTGO>
		    <FRAME 'CHOPPER>
		    <PUSH F4>
		    <DEAD F4>
		    <PUSH S1-5>
		    <DEAD S1-5>
		    <PUSH S2-6>
		    <DEAD S2-6>
		    <CALL 'CHOPPER 3>
		    <GEN-LVAL 'PARENT = TEMP8>
		    <GEN-LVAL 'RDCL = TEMP11>
		    <NTHL TEMP11 1 = TEMP11>
		    <PUTUV TEMP8 3 TEMP11>
		    <DEAD TEMP8 TEMP11>
		    <GVAL 'INIT2-R = TEMP8>
		    <GEN-SET 'DOIT TEMP8>
		    <DEAD TEMP8>
		    <GEN-LVAL 'RDCL = TEMP8>
		    <NTHL TEMP8 1 = TEMP8>
		    <TYPE? TEMP8 <TYPE-CODE STRING> - TAG19>
		    <DEAD TEMP8>
		    <SET F4 'STRING (TYPE ATOM)>
		    <JUMP + TAG20>
TAG19
		    <SET F4 %<> (TYPE FALSE)>
TAG20
		    <GEN-LVAL 'RDCL = TEMP11>
		    <RESTL TEMP11 1 = TEMP8 (TYPE LIST)>
		    <DEAD TEMP11>
		    <CHTYPE TEMP8 <TYPE-CODE LIST> = TEMP8>
		    <GEN-SET 'RDCL TEMP8>
		    <DEAD TEMP8>
		    <RETURN F4>
		    <DEAD F4>
		    <END VAL-R>
#WORD *3241576356*
<GFCN ERR-R ("VALUE" ANY ANY ANY) DC4 OB5>
		    <TEMP TEMP7>
		    <INTGO>
		    <FRAME 'COMPILE-LOSSAGE>
		    <PUSH "Entered MSUBR application illegal state">
		    <PUSH DC4>
		    <DEAD DC4>
		    <PUSH OB5>
		    <DEAD OB5>
		    <CALL 'COMPILE-LOSSAGE 3 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END ERR-R>
<SETG RMODES ["VALUE" "CALL" "QUOTE" "OPTIONAL" "QUOTE" "ARGS" "TUPLE"]>

<COND (<GASSIGNED? TUPL-R> <SETG RDOIT [,TUPL-R ,ARGS-R ,QINIT-R ,INIT1-R ,QINIT-R ,CAL-R ,ERR-R]> <SETG SDOIT [,CHOPPER ,CHOPPER ,SQUOT ,CHOPPER ,SQUOT ,CHOPPER ,VAL-R]>)>

<GDECL (RMODES) <VECTOR [REST STRING]> (RDOIT SDOIT) VECTOR>

"Create a node for a call to a function."

#WORD *4615434740*
<GFCN PFUNC ("VALUE" <OR FALSE NODE> <PRIMTYPE LIST> ANY) OB4 AP5>
		    <TEMP TEMP10 TEMP13>
		    <INTGO>
		    <NTHL OB4 1 = TEMP10>
		    <TYPE? TEMP10 <TYPE-CODE ATOM> - PHRASE9>
		    <DEAD TEMP10>
		    <NTHL OB4 1 = TEMP10 (TYPE ATOM)>
		    <GEN-LVAL 'FNAME = TEMP13>
		    <EQUAL? TEMP10 TEMP13 - PHRASE12>
		    <DEAD TEMP10 TEMP13>
		    <FRAME 'RSUBR-CALL2>
		    <NTHL OB4 1 = TEMP13 (TYPE ATOM)>
		    <GVAL TEMP13 = STACK>
		    <DEAD TEMP13>
		    <NTHL OB4 1 = STACK (TYPE ATOM)>
		    <PUSH OB4>
		    <DEAD OB4>
		    <CALL 'RSUBR-CALL2 3 = TEMP13>
		    <RETURN TEMP13>
		    <DEAD TEMP13>
PHRASE12
		    <FRAME 'GETPROP>
		    <NTHL OB4 1 = STACK (TYPE ATOM)>
		    <PUSH 'RSUB-DEC>
		    <CALL 'GETPROP 2 = TEMP10>
		    <TYPE? TEMP10 <TYPE-CODE FALSE> + PHRASE17>
		    <FRAME 'RSUBR-CALL3>
		    <PUSH TEMP10>
		    <DEAD TEMP10>
		    <NTHL OB4 1 = STACK (TYPE ATOM)>
		    <PUSH OB4>
		    <DEAD OB4>
		    <CALL 'RSUBR-CALL3 3 = TEMP13>
		    <RETURN TEMP13>
		    <DEAD TEMP13>
PHRASE17
		    <GEN-LVAL 'REASONABLE = TEMP10>
		    <TYPE? TEMP10 <TYPE-CODE FALSE> + PHRASE20>
		    <DEAD TEMP10>
		    <FRAME 'PSUBR-C>
		    <PUSH OB4>
		    <DEAD OB4>
		    <PUSH 'DUMMY>
		    <CALL 'PSUBR-C 2 = TEMP13>
		    <RETURN TEMP13>
		    <DEAD TEMP13>
PHRASE20
		    <FRAME 'COMPILE-WARNING>
		    <PUSH "Uncompiled function called:  ">
		    <NTHL OB4 1 = STACK (TYPE ATOM)>
		    <CALL 'COMPILE-WARNING 2>
		    <FRAME 'PAPDEF>
		    <PUSH OB4>
		    <NTHL OB4 1 = TEMP10 (TYPE ATOM)>
		    <DEAD OB4>
		    <GVAL TEMP10 = STACK>
		    <DEAD TEMP10>
		    <CALL 'PAPDEF 2 = TEMP13>
		    <RETURN TEMP13>
		    <DEAD TEMP13>
PHRASE9
		    <NTHL OB4 1 = TEMP10>
		    <TYPE? TEMP10 <TYPE-CODE FUNCTION> + TAG28>
		    <DEAD TEMP10>
		    <RETURN %<>>
TAG28
		    <FRAME 'MAKE-TAG>
		    <PUSH "ANONF">
		    <GEN-LVAL 'FNAME = TEMP10>
		    <NTHR TEMP10 3 = STACK (RECORD-TYPE ATOM)>
		    <DEAD TEMP10>
		    <UBLOCK <TYPE-CODE STRING> 2 = STACK (TYPE STRING)>
		    <CALL 'MAKE-TAG 1 = TEMP10>
		    <FRAME 'ANONF>
		    <PUSH TEMP10>
		    <NTHL OB4 1 = STACK>
		    <CALL 'ANONF 2>
		    <FRAME 'RSUBR-CALL1>
		    <GVAL TEMP10 = STACK>
		    <PUSH TEMP10>
		    <DEAD TEMP10>
		    <PUSH OB4>
		    <DEAD OB4>
		    <CALL 'RSUBR-CALL1 3 = TEMP13>
		    <RETURN TEMP13>
		    <DEAD TEMP13>
		    <END PFUNC>
"Call compiler recursively to compile anonymous function."

#WORD *25552100712*
<GFCN ANONF ("VALUE" NODE ANY ANY) NAME4 BODY5>
		    <TEMP (INT?6 %<>) TEMP16>
		    <INTGO>
		    <FRAME 'COMPILE-NOTE>
		    <PUSH "Compiling anonymous function">
		    <CALL 'COMPILE-NOTE 1>
		    <NTHR NAME4 1 = INT?6 (RECORD-TYPE ATOM) (BRANCH-FALSE + TAG11)>
		    <TYPE? INT?6 <TYPE-CODE FALSE> + TAG11>
		    <PUTR INT?6 1 BODY5 (RECORD-TYPE GBIND)>
		    <DEAD INT?6 BODY5>
		    <JUMP + TAG12>
TAG11
		    <FRAME 'SETG>
		    <PUSH NAME4>
		    <PUSH BODY5>
		    <DEAD BODY5>
		    <CALL 'SETG 2>
TAG12
		    <GEN-LVAL 'EXTRA-CODE = INT?6>
		    <FRAME>
		    <GVAL 'COMPILE = TEMP16>
		    <PUSH NAME4>
		    <ACALL TEMP16 1 = TEMP16>
		    <PUTREST INT?6 TEMP16>
		    <DEAD INT?6 TEMP16>
		    <GEN-LVAL 'EXTRA-CODE = INT?6>
		    <GEN-LVAL 'EXTRA-CODE = TEMP16>
		    <LENL TEMP16 = TEMP16 (TYPE FIX)>
		    <SUB TEMP16 1 = TEMP16 (TYPE FIX)>
		    <GRTR? TEMP16 0 - RESTL23 (TYPE FIX)>
		    <LOOP (INT?6 VALUE) (TEMP16 VALUE)>
RESTL22
		    <INTGO>
		    <RESTL INT?6 1 = INT?6 (TYPE LIST)>
		    <SUB TEMP16 1 = TEMP16 (TYPE FIX)>
		    <GRTR? TEMP16 0 + RESTL22 (TYPE FIX)>
RESTL23
		    <GEN-SET 'EXTRA-CODE INT?6>
		    <DEAD INT?6>
		    <FRAME 'GUNASSIGN>
		    <PUSH NAME4>
		    <CALL 'GUNASSIGN 1>
		    <FRAME 'COMPILE-NOTE>
		    <PUSH "Finished anonymous function">
		    <CALL 'COMPILE-NOTE 1>
		    <FRAME 'PCOMP>
		    <FRAME 'FORM>
		    <PUSH 'GVAL>
		    <PUSH NAME4>
		    <DEAD NAME4>
		    <CALL 'FORM 2 = STACK>
		    <GEN-LVAL 'PARENT = STACK>
		    <CALL 'PCOMP 2 = TEMP16>
		    <RETURN TEMP16>
		    <DEAD TEMP16>
		    <END ANONF>
"#FUNCTION (....) compiler -- call ANONF."

#WORD *15072461456*
<GFCN FCN-FCN ("VALUE" NODE ANY) OB4>
		    <TEMP TEMP8>
		    <INTGO>
		    <FRAME 'MAKE-TAG>
		    <PUSH "ANONF">
		    <GEN-LVAL 'FNAME = TEMP8>
		    <NTHR TEMP8 3 = STACK (RECORD-TYPE ATOM)>
		    <DEAD TEMP8>
		    <UBLOCK <TYPE-CODE STRING> 2 = STACK (TYPE STRING)>
		    <CALL 'MAKE-TAG 1 = TEMP8>
		    <FRAME 'ANONF>
		    <PUSH TEMP8>
		    <DEAD TEMP8>
		    <PUSH OB4>
		    <DEAD OB4>
		    <CALL 'ANONF 2 = TEMP8>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
		    <END FCN-FCN>
<COND (<GASSIGNED? FCN-FCN> <PUTPROP FUNCTION PTHIS-TYPE ,FCN-FCN> <PUTPROP FUNCTION PAPPLY-TYPE ,PFUNC>)>

"<FUNCTION (..) ....> compiler -- call ANONF."

#WORD *11444351321*
<GFCN FCN-FCN1 ("VALUE" NODE <PRIMTYPE LIST> ANY) OB4 AP5>
		    <TEMP TEMP9>
		    <INTGO>
		    <FRAME 'MAKE-TAG>
		    <PUSH "ANONF">
		    <GEN-LVAL 'FNAME = TEMP9>
		    <NTHR TEMP9 3 = STACK (RECORD-TYPE ATOM)>
		    <DEAD TEMP9>
		    <UBLOCK <TYPE-CODE STRING> 2 = STACK (TYPE STRING)>
		    <CALL 'MAKE-TAG 1 = TEMP9>
		    <FRAME 'ANONF>
		    <PUSH TEMP9>
		    <DEAD TEMP9>
		    <RESTL OB4 1 = TEMP9 (TYPE LIST)>
		    <DEAD OB4>
		    <CHTYPE TEMP9 <TYPE-CODE LIST> = TEMP9>
		    <CHTYPE TEMP9 <TYPE-CODE FUNCTION> = STACK>
		    <DEAD TEMP9>
		    <CALL 'ANONF 2 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END FCN-FCN1>
<COND (<GASSIGNED? FCN-FCN1> <PUTPROP ,FUNCTION PAPPLY-OBJECT ,FCN-FCN1>)>

"Handle RSUBR that is really a function."

#WORD *30512375273*
<GFCN RSUBR-CALL2 ("VALUE" NODE ANY ANY ANY) BODY4 NAME5 OBJ6>
		    <TEMP TEMP3:LBIND TEMP11 TEMP14:NODE TEMP22>
		    <INTGO>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <FRAME 'NODEFM>
		    <PUSH 9>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH NAME5>
		    <PUSH ()>
		    <PUSH BODY4>
		    <DEAD BODY4>
		    <CALL 'NODEFM 6 = TEMP14>
		    <BBIND 'PARENT 'NODE 'FIX TEMP14>
		    <DEAD TEMP14>
		    <NTHR 'PARENT 2 = TEMP11 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP11 1 = TEMP14 (RECORD-TYPE LBIND)>
		    <DEAD TEMP11>
		    <FRAME 'PRSUBR-C>
		    <PUSH NAME5>
		    <PUSH OBJ6>
		    <DEAD OBJ6>
		    <FRAME 'GETPROP>
		    <PUSH NAME5>
		    <DEAD NAME5>
		    <GEN-LVAL 'IND = STACK>
		    <CALL 'GETPROP 2 = TEMP11>
		    <NTHUV TEMP11 9 = TEMP11>
		    <PUSH TEMP11>
		    <CALL 'PRSUBR-C 3 = TEMP22>
		    <PUTUV TEMP14 5 TEMP22>
		    <DEAD TEMP14 TEMP22>
		    <NTHR 'PARENT 2 = TEMP22 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP22 1 = TEMP14 (RECORD-TYPE LBIND)>
		    <DEAD TEMP22>
		    <FRAME 'SANITIZE-DECL>
		    <PUSH TEMP11>
		    <DEAD TEMP11>
		    <CALL 'SANITIZE-DECL 1 = TEMP22>
		    <PUTUV TEMP14 7 TEMP22 (TYPE LIST)>
		    <DEAD TEMP22>
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -9>
		    <RETURN TEMP14>
		    <DEAD TEMP14>
		    <END RSUBR-CALL2>
"Handle an RSUBR that is already an RSUBR."

#WORD *24766001440*
<GFCN RSUBR-CALL1 ("VALUE" NODE <PRIMTYPE LIST> ANY ANY) BODY4 NAME5 OBJ6>
		    <TEMP TEMP3:LBIND TEMP9 TEMP12:NODE>
		    <INTGO>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <FRAME 'NODEFM>
		    <PUSH 9>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH NAME5>
		    <PUSH ()>
		    <PUSH BODY4>
		    <CALL 'NODEFM 6 = TEMP12>
		    <BBIND 'PARENT 'NODE 'FIX TEMP12>
		    <DEAD TEMP12>
		    <NTHR 'PARENT 2 = TEMP9 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP9 1 = TEMP12 (RECORD-TYPE LBIND)>
		    <DEAD TEMP9>
		    <FRAME 'PRSUBR-C>
		    <PUSH NAME5>
		    <DEAD NAME5>
		    <PUSH OBJ6>
		    <DEAD OBJ6>
		    <RESTL BODY4 1 = TEMP9 (TYPE LIST)>
		    <RESTL TEMP9 1 = TEMP9 (TYPE LIST)>
		    <NTHL TEMP9 1 = STACK>
		    <DEAD TEMP9>
		    <CALL 'PRSUBR-C 3 = TEMP9>
		    <PUTUV TEMP12 5 TEMP9>
		    <DEAD TEMP12 TEMP9>
		    <NTHR 'PARENT 2 = TEMP9 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP9 1 = TEMP12 (RECORD-TYPE LBIND)>
		    <DEAD TEMP9>
		    <FRAME 'SANITIZE-DECL>
		    <RESTL BODY4 1 = TEMP9 (TYPE LIST)>
		    <DEAD BODY4>
		    <NTHL TEMP9 1 = STACK (TYPE LIST)>
		    <DEAD TEMP9>
		    <CALL 'SANITIZE-DECL 1 = TEMP9>
		    <PUTUV TEMP12 7 TEMP9 (TYPE LIST)>
		    <DEAD TEMP9>
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -9>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
		    <END RSUBR-CALL1>
#WORD *25445413011*
<GFCN RSUBR-CALL3 ("VALUE" NODE ANY ANY ANY) DC4 NAME5 OBJ6>
		    <TEMP TEMP3:LBIND TEMP9 TEMP12:NODE>
		    <INTGO>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <FRAME 'NODEFM>
		    <PUSH 9>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH NAME5>
		    <PUSH ()>
		    <PUSH 'FOO>
		    <CALL 'NODEFM 6 = TEMP12>
		    <BBIND 'PARENT 'NODE 'FIX TEMP12>
		    <DEAD TEMP12>
		    <NTHR 'PARENT 2 = TEMP9 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP9 1 = TEMP12 (RECORD-TYPE LBIND)>
		    <DEAD TEMP9>
		    <FRAME 'PRSUBR-C>
		    <PUSH NAME5>
		    <DEAD NAME5>
		    <PUSH OBJ6>
		    <DEAD OBJ6>
		    <PUSH DC4>
		    <CALL 'PRSUBR-C 3 = TEMP9>
		    <PUTUV TEMP12 5 TEMP9>
		    <DEAD TEMP12 TEMP9>
		    <NTHR 'PARENT 2 = TEMP9 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP9 1 = TEMP12 (RECORD-TYPE LBIND)>
		    <DEAD TEMP9>
		    <FRAME 'SANITIZE-DECL>
		    <PUSH DC4>
		    <DEAD DC4>
		    <CALL 'SANITIZE-DECL 1 = TEMP9>
		    <PUTUV TEMP12 7 TEMP9 (TYPE LIST)>
		    <DEAD TEMP9>
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -9>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
		    <END RSUBR-CALL3>
#WORD *34272441472*
<GFCN PLIST ("VALUE" NODE ANY ANY) O4 A5>
		    <TEMP TEMP7:NODE>
		    <INTGO>
		    <FRAME 'PSTRUC>
		    <PUSH O4>
		    <DEAD O4>
		    <PUSH A5>
		    <DEAD A5>
		    <PUSH 'ILIST>
		    <PUSH 'LIST>
		    <CALL 'PSTRUC 4 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END PLIST>
#WORD *4312676470*
<GFCN PIVECTOR ("VALUE" NODE ANY ANY) O4 A5>
		    <TEMP TEMP7:NODE>
		    <INTGO>
		    <FRAME 'PSTRUC>
		    <PUSH O4>
		    <DEAD O4>
		    <PUSH A5>
		    <DEAD A5>
		    <PUSH 'IVECTOR>
		    <PUSH 'VECTOR>
		    <CALL 'PSTRUC 4 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END PIVECTOR>
#WORD *1752667550*
<GFCN PISTRING ("VALUE" NODE ANY ANY) O4 A5>
		    <TEMP TEMP7:NODE>
		    <INTGO>
		    <FRAME 'PSTRUC>
		    <PUSH O4>
		    <DEAD O4>
		    <PUSH A5>
		    <DEAD A5>
		    <PUSH 'ISTRING>
		    <PUSH 'STRING>
		    <CALL 'PSTRUC 4 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END PISTRING>
#WORD *26033567650*
<GFCN PIUVECTOR ("VALUE" NODE ANY ANY) O4 A5>
		    <TEMP TEMP7:NODE>
		    <INTGO>
		    <FRAME 'PSTRUC>
		    <PUSH O4>
		    <DEAD O4>
		    <PUSH A5>
		    <DEAD A5>
		    <PUSH 'IUVECTOR>
		    <PUSH 'UVECTOR>
		    <CALL 'PSTRUC 4 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END PIUVECTOR>
#WORD *31736622002*
<GFCN PIFORM ("VALUE" NODE ANY ANY) O4 A5>
		    <TEMP TEMP7:NODE>
		    <INTGO>
		    <FRAME 'PSTRUC>
		    <PUSH O4>
		    <DEAD O4>
		    <PUSH A5>
		    <DEAD A5>
		    <PUSH 'IFORM>
		    <PUSH 'FORM>
		    <CALL 'PSTRUC 4 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END PIFORM>
#WORD *35602623432*
<GFCN PIBYTES ("VALUE" NODE ANY ANY) O4 A5>
		    <TEMP TEMP7:NODE>
		    <INTGO>
		    <FRAME 'PSTRUC>
		    <PUSH O4>
		    <DEAD O4>
		    <PUSH A5>
		    <DEAD A5>
		    <PUSH 'IBYTES>
		    <PUSH 'BYTES>
		    <CALL 'PSTRUC 4 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END PIBYTES>
<COND (<GASSIGNED? PLIST> <PUTPROP ,ILIST PAPPLY-OBJECT ,PLIST> <PUTPROP ,IUVECTOR PAPPLY-OBJECT ,PIUVECTOR> <COND (<NOT ,MIM> <PUTPROP ,IFORM PAPPLY-OBJECT ,PIFORM>)> <PUTPROP ,IBYTES PAPPLY-OBJECT ,PIBYTES> <PUTPROP ,IVECTOR PAPPLY-OBJECT ,PIVECTOR> <PUTPROP ,ISTRING PAPPLY-OBJECT ,PISTRING>)>

#WORD *4274011335*
<GFCN PSTRUC ("VALUE" NODE <PRIMTYPE LIST> ANY ANY ANY) OBJ4 AP5 NAME6 TYP7>
		    <TEMP TEMP14 TT8:NODE LN9:FIX TEMP20 N10:NODE>
		    <INTGO>
		    <FRAME 'NODEFM>
		    <PUSH 44>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH TYP7>
		    <PUSH NAME6>
		    <PUSH ()>
		    <GVAL NAME6 = STACK>
		    <DEAD NAME6>
		    <CALL 'NODEFM 6 = TT8>
		    <LENL OBJ4 = LN9 (TYPE FIX)>
		    <FRAME 'SEG?>
		    <PUSH OBJ4>
		    <CALL 'SEG? 1 = TEMP20>
		    <VEQUAL? TEMP20 0 + PHRASE18>
		    <DEAD TEMP20>
		    <FRAME 'RSUBR-FCN>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'RSUBR-FCN 2 = TEMP20>
		    <RETURN TEMP20>
		    <DEAD TEMP20>
PHRASE18
		    <VEQUAL? LN9 1 - PHRASE24 (TYPE FIX)>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Too few args: ">
		    <NTHL OBJ4 1 = STACK>
		    <CALL 'COMPILE-ERROR 2>
		    <JUMP + PHRASE28>
PHRASE24
		    <GRTR? LN9 3 - PHRASE28 (TYPE FIX)>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Too many args: ">
		    <NTHL OBJ4 1 = STACK>
		    <CALL 'COMPILE-ERROR 2>
PHRASE28
		    <FRAME 'PCOMP>
		    <RESTL OBJ4 1 = TEMP20 (TYPE LIST)>
		    <NTHL TEMP20 1 = STACK>
		    <DEAD TEMP20>
		    <PUSH TT8>
		    <CALL 'PCOMP 2 = N10>
		    <VEQUAL? LN9 3 - PHRASE33 (TYPE FIX)>
		    <DEAD LN9>
		    <FRAME 'PCOMP>
		    <RESTL OBJ4 1 = TEMP20 (TYPE LIST)>
		    <DEAD OBJ4>
		    <RESTL TEMP20 1 = TEMP20 (TYPE LIST)>
		    <NTHL TEMP20 1 = STACK>
		    <DEAD TEMP20>
		    <GEN-LVAL 'PARENT = STACK>
		    <CALL 'PCOMP 2 = TEMP14>
		    <NTHUV TEMP14 1 = TEMP20 (TYPE FIX)>
		    <VEQUAL? TEMP20 2 - PHRASE41 (TYPE FIX)>
		    <DEAD TEMP20>
		    <FRAME 'PCOMP>
		    <NTHUV TEMP14 4 = STACK>
		    <DEAD TEMP14>
		    <PUSH TT8>
		    <CALL 'PCOMP 2 = TEMP14>
		    <PUTUV TT8 1 45 (TYPE FIX)>
		    <JUMP + PHRASE41>
PHRASE33
		    <PUTUV TT8 1 45 (TYPE FIX)>
PHRASE41
		    <PUTUV TT8 3 TYP7>
		    <DEAD TYP7>
		    <TYPE? TEMP14 <TYPE-CODE UNBOUND> + PHRASE43>
		    <CONS TEMP14 () = TEMP20>
		    <DEAD TEMP14>
		    <CONS N10 TEMP20 = TEMP20>
		    <DEAD N10>
		    <PUTUV TT8 5 TEMP20 (TYPE LIST)>
		    <DEAD TEMP20>
		    <RETURN TT8>
		    <DEAD TT8>
PHRASE43
		    <CONS N10 () = TEMP20>
		    <DEAD N10>
		    <PUTUV TT8 5 TEMP20 (TYPE LIST)>
		    <DEAD TEMP20>
		    <RETURN TT8>
		    <DEAD TT8>
		    <END PSTRUC>
"READ, READCHR, READSTRING, NEXTCHR, READB, GET, GETL, GETPROP, GETPL"

<PUTPROP ,READ PAPPLY-OBJECT <FUNCTION (O A) <CHANFCNS .O .A READ 2 ANY>>>

<COND (<NOT <GASSIGNED? READ-INTERNAL>> <SETG READ-INTERNAL (1)>)>

<PUTPROP ,READ-INTERNAL PAPPLY-OBJECT <FUNCTION (O A) <CHANFCNS .O .A READ-INTERNAL 2 ANY>>>

<COND (<GASSIGNED? GC-READ> <PUTPROP ,GC-READ PAPPLY-OBJECT <FUNCTION (O A) <CHANFCNS .O .A GC-READ 2 ANY>>>)>

<PUTPROP ,READCHR PAPPLY-OBJECT <FUNCTION (O A) <CHANFCNS .O .A READCHR 2 ANY>>>

<PUTPROP ,NEXTCHR PAPPLY-OBJECT <FUNCTION (O A) <CHANFCNS .O .A NEXTCHR 2 ANY>>>

<PUTPROP ,READB PAPPLY-OBJECT <FUNCTION (O A) <CHANFCNS .O .A READB 4 ANY>>>

<PUTPROP ,READSTRING PAPPLY-OBJECT <FUNCTION (O A) <CHANFCNS .O .A READSTRING 4 ANY>>>

#WORD *33340650762*
<GFCN CHANFCNS ("VALUE" NODE <PRIMTYPE LIST> ANY ANY FIX ANY) OBJ4 AP5 NAME6 ARGN7 TYP8>
		    <TEMP LN10 (TEM12:FIX 0) TEMP17 TEMP31 TEMP35:LIST OB36 TEMP43>
		    <INTGO>
		    <LENL OBJ4 = LN10 (TYPE FIX)>
		    <FRAME 'SEG?>
		    <PUSH OBJ4>
		    <CALL 'SEG? 1 = TEMP17>
		    <VEQUAL? TEMP17 0 - BOOL15>
		    <DEAD TEMP17>
		    <SUB LN10 1 = TEMP17 (TYPE FIX)>
		    <DEAD LN10>
		    <GRTR? ARGN7 TEMP17 - PHRASE14 (TYPE FIX)>
		    <DEAD TEMP17>
BOOL15
		    <FRAME 'RSUBR-FCN>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'RSUBR-FCN 2 = TEMP17>
		    <RETURN TEMP17>
		    <DEAD TEMP17>
PHRASE14
		    <FRAME 'NODEFM>
		    <PUSH 53>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH TYP8>
		    <DEAD TYP8>
		    <PUSH NAME6>
		    <PUSH ()>
		    <GVAL NAME6 = STACK>
		    <DEAD NAME6>
		    <CALL 'NODEFM 6 = LN10>
		    <SET TEMP17 () (TYPE LIST)>
		    <SET TEMP31 () (TYPE LIST)>
		    <RESTL OBJ4 1 = TEMP35 (TYPE LIST)>
		    <DEAD OBJ4>
		    <CHTYPE TEMP35 <TYPE-CODE LIST> = TEMP35>
		    <LOOP>
MAP25
		    <INTGO>
		    <EMPL? TEMP35 + MAPAP28>
		    <NTHL TEMP35 1 = OB36>
		    <FRAME 'PCOMP>
		    <PUSH OB36>
		    <DEAD OB36>
		    <PUSH LN10>
		    <CALL 'PCOMP 2 = OB36>
		    <ADD TEM12 1 = TEM12 (TYPE FIX)>
		    <VEQUAL? TEM12 ARGN7 - PHRASE40 (TYPE FIX)>
		    <NTHUV OB36 1 = TEMP43 (TYPE FIX)>
		    <VEQUAL? TEMP43 2 - PHRASE42 (TYPE FIX)>
		    <DEAD TEMP43>
		    <FRAME 'PCOMP>
		    <NTHUV OB36 4 = STACK>
		    <DEAD OB36>
		    <PUSH LN10>
		    <CALL 'PCOMP 2 = OB36>
		    <PUTUV LN10 1 54 (TYPE FIX)>
PHRASE42
		    <FRAME 'NODE1>
		    <PUSH 55>
		    <PUSH LN10>
		    <NTHUV OB36 3 = STACK>
		    <PUSH %<>>
		    <CONS OB36 () = STACK>
		    <DEAD OB36>
		    <CALL 'NODE1 5 = OB36>
PHRASE40
		    <CONS OB36 () = TEMP43 (TYPE LIST)>
		    <DEAD OB36>
		    <EMPL? TEMP17 - TAG46>
		    <SET TEMP17 TEMP43 (TYPE LIST)>
		    <JUMP + TAG47>
TAG46
		    <PUTREST TEMP31 TEMP43>
		    <DEAD TEMP31>
TAG47
		    <SET TEMP31 TEMP43 (TYPE LIST)>
		    <DEAD TEMP43>
		    <RESTL TEMP35 1 = TEMP35 (TYPE LIST)>
		    <JUMP + MAP25>
MAPAP28
		    <PUTUV LN10 5 TEMP17 (TYPE LIST)>
		    <DEAD TEMP17>
		    <RETURN LN10>
		    <DEAD LN10>
		    <END CHANFCNS>
<PUTPROP ,GETPROP PAPPLY-OBJECT <FUNCTION (O A) <GETFCNS .O .A GETPROP>>>

'<PUTPROP ,GETPL PAPPLY-OBJECT <FUNCTION (O A) <GETFCNS .O .A GETPL>>>

#WORD *3573703776*
<GFCN GETFCNS ("VALUE" NODE FORM ANY ANY) OBJ4 AP5 NAME6>
		    <TEMP LN10 TEMP17 TT11:NODE TEM8:NODE T2-9:NODE>
		    <INTGO>
		    <LENL OBJ4 = LN10 (TYPE FIX)>
		    <VEQUAL? LN10 4 + BOOL15 (TYPE FIX)>
		    <VEQUAL? LN10 3 - BOOL14 (TYPE FIX)>
BOOL15
		    <FRAME 'SEG?>
		    <PUSH OBJ4>
		    <CALL 'SEG? 1 = TEMP17>
		    <VEQUAL? TEMP17 0 + PHRASE13>
		    <DEAD TEMP17>
BOOL14
		    <FRAME 'RSUBR-FCN>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'RSUBR-FCN 2 = TEMP17>
		    <RETURN TEMP17>
		    <DEAD TEMP17>
PHRASE13
		    <FRAME 'NODEFM>
		    <PUSH 56>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH 'ANY>
		    <PUSH NAME6>
		    <PUSH ()>
		    <GVAL NAME6 = STACK>
		    <DEAD NAME6>
		    <CALL 'NODEFM 6 = TT11>
		    <FRAME 'PCOMP>
		    <RESTL OBJ4 1 = TEMP17 (TYPE LIST)>
		    <NTHL TEMP17 1 = STACK>
		    <DEAD TEMP17>
		    <PUSH TT11>
		    <CALL 'PCOMP 2 = TEM8>
		    <FRAME 'PCOMP>
		    <RESTL OBJ4 1 = TEMP17 (TYPE LIST)>
		    <RESTL TEMP17 1 = TEMP17 (TYPE LIST)>
		    <NTHL TEMP17 1 = STACK>
		    <DEAD TEMP17>
		    <PUSH TT11>
		    <CALL 'PCOMP 2 = T2-9>
		    <VEQUAL? LN10 3 - PHRASE28 (TYPE FIX)>
		    <DEAD LN10>
		    <PUTUV TT11 1 57 (TYPE FIX)>
		    <CONS T2-9 () = TEMP17>
		    <DEAD T2-9>
		    <CONS TEM8 TEMP17 = TEMP17>
		    <DEAD TEM8>
		    <PUTUV TT11 5 TEMP17 (TYPE LIST)>
		    <DEAD TEMP17>
		    <JUMP + PHRASE29>
PHRASE28
		    <FRAME 'PCOMP>
		    <RESTL OBJ4 1 = TEMP17 (TYPE LIST)>
		    <DEAD OBJ4>
		    <RESTL TEMP17 1 = TEMP17 (TYPE LIST)>
		    <RESTL TEMP17 1 = TEMP17 (TYPE LIST)>
		    <NTHL TEMP17 1 = STACK>
		    <DEAD TEMP17>
		    <PUSH TT11>
		    <CALL 'PCOMP 2 = LN10>
		    <NTHUV LN10 1 = TEMP17 (TYPE FIX)>
		    <VEQUAL? TEMP17 2 - PHRASE32 (TYPE FIX)>
		    <DEAD TEMP17>
		    <FRAME 'PCOMP>
		    <NTHUV LN10 4 = STACK>
		    <DEAD LN10>
		    <PUSH TT11>
		    <CALL 'PCOMP 2 = LN10>
		    <PUTUV TT11 1 57 (TYPE FIX)>
PHRASE32
		    <CONS LN10 () = TEMP17>
		    <DEAD LN10>
		    <CONS T2-9 TEMP17 = TEMP17>
		    <DEAD T2-9>
		    <CONS TEM8 TEMP17 = TEMP17>
		    <DEAD TEM8>
		    <PUTUV TT11 5 TEMP17 (TYPE LIST)>
		    <DEAD TEMP17>
PHRASE29
		    <RETURN TT11>
		    <DEAD TT11>
		    <END GETFCNS>
#WORD *3416461150*
<GFCN ARGCHK ("VALUE" ATOM FIX <OR <LIST FIX FIX> FIX> ANY ANY) GIV4 REQ5 NAME6 OBJ7>
		    <TEMP HI8 LO9>
		    <INTGO>
		    <SET HI8 REQ5>
		    <SET LO9 REQ5>
		    <TYPE? REQ5 <TYPE-CODE LIST> - PHRASE11>
		    <RESTL REQ5 1 = HI8 (TYPE LIST)>
		    <NTHL HI8 1 = HI8 (TYPE FIX)>
		    <NTHL REQ5 1 = LO9 (TYPE FIX)>
		    <DEAD REQ5>
PHRASE11
		    <LESS? GIV4 LO9 - PHRASE14 (TYPE FIX)>
		    <DEAD LO9>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Too few arguments to: ">
		    <PUSH NAME6>
		    <DEAD NAME6>
		    <PUSH OBJ7>
		    <DEAD OBJ7>
		    <CALL 'COMPILE-ERROR 3>
		    <RETURN 'T>
PHRASE14
		    <GRTR? GIV4 HI8 - PHRASE16 (TYPE FIX)>
		    <DEAD GIV4 HI8>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Too many arguments to: ">
		    <PUSH NAME6>
		    <DEAD NAME6>
		    <PUSH OBJ7>
		    <DEAD OBJ7>
		    <CALL 'COMPILE-ERROR 3>
PHRASE16
		    <RETURN 'T>
		    <END ARGCHK>
""

#WORD *23605163763*
<GFCN PMAPF-R ("VALUE" NODE <PRIMTYPE LIST> ANY) OB4 AP5>
		    <TEMP NAME6 TEMP3:LBIND OBJ9:LIST (LN11 ()) (APL14 ()) (DCL15 #DECL ()) (HATOM17 %<>) (NN18 0) TT7:NODE FINALF12:NODE TAPL13 TEM19 TEMP40 L1-76:LIST SYM77:SYMTAB>
		    <INTGO>
		    <NTHL OB4 1 = NAME6>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <BBIND 'RQRG 'FIX 'FIX 0>
		    <RESTL OB4 1 = OBJ9 (TYPE LIST)>
		    <DEAD OB4>
		    <CHTYPE OBJ9 <TYPE-CODE LIST> = OBJ9>
		    <LENL OBJ9 = LN11 (TYPE FIX)>
		    <BBIND 'TRG 'FIX 'FIX 0>
		    <LESS? LN11 2 - PHRASE28 (TYPE FIX)>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Too few arguments:  ">
		    <PUSH NAME6>
		    <PUSH OBJ9>
		    <CALL 'COMPILE-ERROR 3>
PHRASE28
		    <FRAME 'NODEFM>
		    <PUSH 50>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH NAME6>
		    <DEAD NAME6>
		    <PUSH ()>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'NODEFM 6 = TT7>
		    <FRAME 'PCOMP>
		    <NTHL OBJ9 1 = STACK>
		    <PUSH TT7>
		    <CALL 'PCOMP 2 = FINALF12>
		    <RESTL OBJ9 1 = NAME6 (TYPE LIST)>
		    <NTHL NAME6 1 = TAPL13>
		    <DEAD NAME6>
		    <TYPE? TAPL13 <TYPE-CODE FUNCTION> + BOOL37>
		    <TYPE? TAPL13 <TYPE-CODE FORM> - PHRASE36>
		    <CHTYPE TAPL13 <TYPE-CODE LIST> = APL14>
		    <EMPL? APL14 + PHRASE36 (TYPE LIST)>
		    <NTHL APL14 1 = TEM19>
		    <TYPE? TEM19 <TYPE-CODE ATOM> - PHRASE36>
		    <NTHR TEM19 1 = NAME6 (RECORD-TYPE ATOM) (BRANCH-FALSE + PHRASE36)>
		    <TYPE? NAME6 <TYPE-CODE FALSE> + PHRASE36>
		    <NTHR NAME6 1 = NAME6 (RECORD-TYPE GBIND)>
		    <TYPE? NAME6 <TYPE-CODE UNBOUND> + PHRASE36>
		    <DEAD NAME6>
		    <GVAL TEM19 = NAME6>
		    <GVAL 'FUNCTION = TEMP40>
		    <EQUAL? NAME6 TEMP40 - PHRASE36>
		    <DEAD NAME6 TEMP40>
		    <RESTL APL14 1 = TAPL13 (TYPE LIST)>
		    <DEAD APL14>
BOOL37
		    <CHTYPE TAPL13 <TYPE-CODE LIST> = APL14>
		    <DEAD TAPL13>
		    <EMPL? APL14 - PHRASE42 (TYPE LIST)>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "MAPF/R function is empty:  ">
		    <PUSH OBJ9>
		    <CALL 'COMPILE-ERROR 2>
PHRASE42
		    <NTHL APL14 1 = TEMP40>
		    <TYPE? TEMP40 <TYPE-CODE ATOM> + TAG46>
		    <TYPE? TEMP40 <TYPE-CODE ADECL> - PHRASE45>
		    <DEAD TEMP40>
TAG46
		    <NTHL APL14 1 = HATOM17>
		    <RESTL APL14 1 = APL14 (TYPE LIST)>
PHRASE45
		    <EMPL? APL14 + BOOL49 (TYPE LIST)>
		    <NTHL APL14 1 = NAME6>
		    <TYPE? NAME6 <TYPE-CODE LIST> + PHRASE48>
		    <DEAD NAME6>
BOOL49
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "MAPF/R function lacks arg list:  ">
		    <PUSH OBJ9>
		    <CALL 'COMPILE-ERROR 2>
PHRASE48
		    <NTHL APL14 1 = LN11 (TYPE LIST)>
		    <RESTL APL14 1 = APL14 (TYPE LIST)>
		    <EMPL? APL14 + PHRASE52 (TYPE LIST)>
		    <NTHL APL14 1 = NAME6>
		    <TYPE? NAME6 <TYPE-CODE DECL> - PHRASE52>
		    <DEAD NAME6>
		    <NTHL APL14 1 = DCL15 (TYPE DECL)>
		    <RESTL APL14 1 = APL14 (TYPE LIST)>
PHRASE52
		    <EMPL? APL14 - PHRASE55 (TYPE LIST)>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "MAPF/R function has no body:  ">
		    <PUSH OBJ9>
		    <CALL 'COMPILE-ERROR 2>
PHRASE55
		    <GETS 'BIND = NAME6 (TYPE LBIND)>
		    <GEN-LVAL 'VARTBL = TAPL13>
		    <BBIND 'VARTBL 'SYMTAB 'FIX TAPL13>
		    <DEAD TAPL13>
		    <FRAME 'NODEPR>
		    <PUSH 51>
		    <PUSH TT7>
		    <FRAME 'FIND_DECL>
		    <PUSH 'VALUE>
		    <PUSH DCL15>
		    <CALL 'FIND_DECL 2 = TAPL13>
		    <TYPE? TAPL13 <TYPE-CODE FALSE> - BOOL64>
		    <SET TAPL13 'ANY (TYPE ATOM)>
BOOL64
		    <PUSH TAPL13>
		    <DEAD TAPL13>
		    <PUSH %<>>
		    <PUSH ()>
		    <PUSH %<>>
		    <PUSH ()>
		    <PUSH HATOM17>
		    <NTHR 'VARTBL 2 = TAPL13 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TAPL13 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TAPL13>
		    <CALL 'NODEPR 9 = TEM19>
		    <FRAME 'GEN-D>
		    <PUSH LN11>
		    <DEAD LN11>
		    <PUSH DCL15>
		    <DEAD DCL15>
		    <PUSH HATOM17>
		    <DEAD HATOM17>
		    <PUSH TEM19>
		    <CALL 'GEN-D 4>
		    <FRAME 'ACT-FIX>
		    <PUSH TEM19>
		    <NTHUV TEM19 10 = STACK (TYPE LIST)>
		    <CALL 'ACT-FIX 2 = TAPL13>
		    <TYPE? TAPL13 <TYPE-CODE FALSE> + PHRASE70>
		    <DEAD TAPL13>
		    <SET LN11 () (TYPE LIST)>
		    <SET HATOM17 LN11>
		    <NTHUV TEM19 10 = DCL15 (TYPE LIST)>
		    <SET NN18 DCL15>
		    <SET L1-76 DCL15>
		    <LOOP>
AGAIN78
		    <INTGO>
		    <EMPL? DCL15 - BOOL79 (TYPE LIST)>
		    <SET TAPL13 L1-76>
		    <DEAD L1-76>
		    <JUMP + EXIT72>
BOOL79
		    <NTHL DCL15 1 = SYM77 (TYPE SYMTAB)>
		    <NTHUV SYM77 4 = TEMP40 (TYPE FIX)>
		    <VEQUAL? TEMP40 1 - PHRASE93 (TYPE FIX)>
		    <DEAD TEMP40>
		    <NTHUV SYM77 2 = TEMP40 (TYPE ATOM)>
		    <CONS TEMP40 LN11 = TEMP40>
		    <DEAD LN11>
		    <CONS "ACT" TEMP40 = LN11>
		    <DEAD TEMP40>
		    <NTHUV SYM77 2 = TEMP40 (TYPE ATOM)>
		    <CONS TEMP40 () = TEMP40>
		    <CONS TEMP40 () = TEMP40>
		    <NTHUV SYM77 3 = TAPL13>
		    <TYPE? TAPL13 <TYPE-CODE FALSE> + PHRASE86>
		    <DEAD TAPL13>
		    <FRAME 'FORM>
		    <PUSH 'SPECIAL>
		    <NTHUV SYM77 7 = STACK>
		    <DEAD SYM77>
		    <CALL 'FORM 2 = TAPL13>
		    <JUMP + PHRASE89>
PHRASE86
		    <FRAME 'FORM>
		    <PUSH 'UNSPECIAL>
		    <NTHUV SYM77 7 = STACK>
		    <DEAD SYM77>
		    <CALL 'FORM 2 = TAPL13>
PHRASE89
		    <CONS TAPL13 () = TAPL13>
		    <PUTREST TEMP40 TAPL13>
		    <PUTREST TAPL13 HATOM17>
		    <DEAD TAPL13 HATOM17>
		    <SET HATOM17 TEMP40>
		    <DEAD TEMP40>
		    <VEQUAL? DCL15 L1-76 - PHRASE92>
		    <RESTL L1-76 1 = L1-76 (TYPE LIST)>
		    <JUMP + PHRASE93>
PHRASE92
		    <RESTL DCL15 1 = TEMP40 (TYPE LIST)>
		    <PUTREST NN18 TEMP40>
		    <DEAD NN18 TEMP40>
PHRASE93
		    <SET NN18 DCL15>
		    <DEAD DCL15>
		    <RESTL NN18 1 = DCL15 (TYPE LIST)>
		    <JUMP + AGAIN78>
EXIT72
		    <PUTUV TEM19 10 TAPL13 (TYPE LIST)>
		    <DEAD TAPL13>
		    <FRAME 'FORM>
		    <PUSH 'PROG>
		    <PUSH LN11>
		    <DEAD LN11>
		    <CHTYPE HATOM17 <TYPE-CODE DECL> = STACK>
		    <DEAD HATOM17>
		    <SET TEMP40 3 (TYPE FIX)>
		    <SET TAPL13 APL14>
		    <DEAD APL14>
		    <LOOP (TAPL13 VALUE) (TEMP40 VALUE)>
TAG95
		    <INTGO>
		    <EMPL? TAPL13 + TAG94>
		    <NTHL TAPL13 1 = STACK>
		    <RESTL TAPL13 1 = TAPL13 (TYPE LIST)>
		    <ADD TEMP40 1 = TEMP40 (TYPE FIX)>
		    <JUMP + TAG95>
TAG94
		    <CALL 'FORM TEMP40 = TEMP40>
		    <CONS TEMP40 () = APL14>
		    <DEAD TEMP40>
PHRASE70
		    <SET HATOM17 () (TYPE LIST)>
		    <SET TAPL13 () (TYPE LIST)>
		    <SET TEMP40 APL14 (TYPE LIST)>
		    <DEAD APL14>
		    <LOOP>
MAP98
		    <INTGO>
		    <EMPL? TEMP40 + MAPAP101>
		    <NTHL TEMP40 1 = LN11>
		    <FRAME 'PCOMP>
		    <PUSH LN11>
		    <DEAD LN11>
		    <PUSH TEM19>
		    <CALL 'PCOMP 2 = LN11>
		    <CONS LN11 () = LN11 (TYPE LIST)>
		    <EMPL? HATOM17 - TAG108>
		    <SET HATOM17 LN11 (TYPE LIST)>
		    <JUMP + TAG109>
TAG108
		    <PUTREST TAPL13 LN11>
		    <DEAD TAPL13>
TAG109
		    <SET TAPL13 LN11 (TYPE LIST)>
		    <DEAD LN11>
		    <RESTL TEMP40 1 = TEMP40 (TYPE LIST)>
		    <JUMP + MAP98>
MAPAP101
		    <PUTUV TEM19 5 HATOM17 (TYPE LIST)>
		    <DEAD HATOM17>
		    <UNBIND NAME6>
		    <DEAD NAME6>
		    <ADJ -9>
		    <JUMP + PHRASE175>
PHRASE36
		    <TYPE? TAPL13 <TYPE-CODE FIX> - BOOL112>
		    <VEQUAL? LN11 3 + BOOL121 (TYPE FIX)>
BOOL112
		    <TYPE? TAPL13 <TYPE-CODE FORM> - BOOL115>
		    <CHTYPE TAPL13 <TYPE-CODE LIST> = APL14>
		    <EMPL? APL14 + BOOL115>
		    <RESTL APL14 1 = NAME6 (TYPE LIST)>
		    <EMPL? NAME6 + BOOL115>
		    <RESTL NAME6 1 = NAME6 (TYPE LIST)>
		    <EMPL? NAME6 - BOOL115>
		    <DEAD NAME6>
		    <NTHL APL14 1 = TEM19>
		    <TYPE? TEM19 <TYPE-CODE ATOM> - BOOL115>
		    <NTHR TEM19 1 = NAME6 (RECORD-TYPE ATOM) (BRANCH-FALSE + BOOL115)>
		    <TYPE? NAME6 <TYPE-CODE FALSE> + BOOL115>
		    <NTHR NAME6 1 = NAME6 (RECORD-TYPE GBIND)>
		    <TYPE? NAME6 <TYPE-CODE UNBOUND> + BOOL115>
		    <DEAD NAME6>
		    <GVAL TEM19 = NAME6>
		    <DEAD TEM19>
		    <GVAL 'GVAL = TEMP40>
		    <EQUAL? NAME6 TEMP40 - BOOL115>
		    <DEAD NAME6 TEMP40>
		    <RESTL APL14 1 = TEMP40 (TYPE LIST)>
		    <DEAD APL14>
		    <NTHL TEMP40 1 = TEM19>
		    <DEAD TEMP40>
		    <TYPE? TEM19 <TYPE-CODE ATOM> + BOOL114>
BOOL115
		    <TYPE? TAPL13 <TYPE-CODE GVAL> - PHRASE110>
		    <CHTYPE TAPL13 <TYPE-CODE ATOM> = TEM19>
BOOL114
		    <GEN-LVAL 'REASONABLE = TEMP40>
		    <TYPE? TEMP40 <TYPE-CODE FALSE> - BOOL121>
		    <DEAD TEMP40>
		    <NTHR TEM19 1 = TEMP40 (RECORD-TYPE ATOM) (BRANCH-FALSE + PHRASE110)>
		    <TYPE? TEMP40 <TYPE-CODE FALSE> + PHRASE110>
		    <NTHR TEMP40 1 = TEMP40 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP40 <TYPE-CODE UNBOUND> + PHRASE110>
		    <DEAD TEMP40>
		    <GVAL TEM19 = TEMP40>
		    <TYPE? TEMP40 <TYPE-CODE FUNCTION> - BOOL121>
		    <DEAD TEMP40>
		    <GEN-LVAL 'FNAME = TEMP40>
		    <EQUAL? TEMP40 TEM19 - PHRASE110>
		    <DEAD TEMP40>
BOOL121
		    <FRAME 'PUTPROP>
		    <GEN-LVAL 'IND = STACK>
		    <PUSH 'PTHIS-OBJECT>
		    <GVAL 'PMARGS = STACK>
		    <CALL 'PUTPROP 3>
		    <TYPE? TAPL13 <TYPE-CODE FIX> - PHRASE128>
		    <FRAME 'PCOMP>
		    <FRAME 'FORM>
		    <PUSH 'NTH>
		    <GEN-LVAL 'IND = STACK>
		    <PUSH TAPL13>
		    <DEAD TAPL13>
		    <CALL 'FORM 3 = STACK>
		    <PUSH TT7>
		    <CALL 'PCOMP 2 = LN11>
		    <JUMP + PHRASE133>
PHRASE128
		    <FRAME 'PCOMP>
		    <FRAME 'FORM>
		    <PUSH TEM19>
		    <DEAD TEM19>
		    <SET APL14 1 (TYPE FIX)>
		    <SET NAME6 () (TYPE LIST)>
		    <SET HATOM17 () (TYPE LIST)>
		    <LOOP>
MAP139
		    <INTGO>
		    <VEQUAL? LN11 2 + MAPAP142 (TYPE FIX)>
		    <SUB LN11 1 = LN11 (TYPE FIX)>
		    <GEN-LVAL 'IND = TAPL13>
		    <CONS TAPL13 () = TAPL13 (TYPE LIST)>
		    <EMPL? NAME6 - TAG155>
		    <SET NAME6 TAPL13 (TYPE LIST)>
		    <JUMP + TAG156>
TAG155
		    <PUTREST HATOM17 TAPL13>
		    <DEAD HATOM17>
TAG156
		    <SET HATOM17 TAPL13 (TYPE LIST)>
		    <DEAD TAPL13>
		    <JUMP + MAP139>
MAPAP142
		    <LOOP (NAME6 VALUE) (APL14 VALUE)>
TAG157
		    <INTGO>
		    <EMPL? NAME6 + TAG135>
		    <NTHL NAME6 1 = STACK>
		    <RESTL NAME6 1 = NAME6 (TYPE LIST)>
		    <ADD APL14 1 = APL14 (TYPE FIX)>
		    <JUMP + TAG157>
TAG135
		    <CALL 'FORM APL14 = STACK>
		    <DEAD APL14>
		    <PUSH TT7>
		    <CALL 'PCOMP 2 = LN11>
PHRASE133
		    <SET TEM19 LN11>
		    <DEAD LN11>
		    <FRAME 'PUTPROP>
		    <GEN-LVAL 'IND = STACK>
		    <PUSH 'PTHIS-OBJECT>
		    <CALL 'PUTPROP 2>
		    <NTHUV TEM19 5 = APL14 (TYPE LIST)>
		    <LOOP>
MAP163
		    <INTGO>
		    <EMPL? APL14 + MAPAP166>
		    <NTHL APL14 1 = LN11>
		    <NTHUV LN11 1 = NAME6 (TYPE FIX)>
		    <VEQUAL? NAME6 61 - BOOL172 (TYPE FIX)>
		    <DEAD NAME6>
		    <ADD NN18 1 = NN18 (TYPE FIX)>
		    <PUTUV LN11 4 NN18>
		    <DEAD LN11>
BOOL172
		    <RESTL APL14 1 = APL14 (TYPE LIST)>
		    <JUMP + MAP163>
MAPAP166
		    <FRAME 'NODEFM>
		    <PUSH 62>
		    <PUSH TT7>
		    <PUSH %<>>
		    <PUSH %<>>
		    <CONS TEM19 () = STACK>
		    <DEAD TEM19>
		    <PUSH %<>>
		    <CALL 'NODEFM 6 = TEM19>
		    <JUMP + PHRASE175>
PHRASE110
		    <FRAME 'PCOMP>
		    <PUSH TAPL13>
		    <DEAD TAPL13>
		    <PUSH TT7>
		    <CALL 'PCOMP 2 = TEM19>
PHRASE175
		    <SET NAME6 () (TYPE LIST)>
		    <SET HATOM17 () (TYPE LIST)>
		    <RESTL OBJ9 1 = TAPL13 (TYPE LIST)>
		    <DEAD OBJ9>
		    <RESTL TAPL13 1 = OBJ9 (TYPE LIST)>
		    <DEAD TAPL13>
		    <LOOP>
MAP178
		    <INTGO>
		    <EMPL? OBJ9 + MAPAP181>
		    <NTHL OBJ9 1 = TAPL13>
		    <FRAME 'PCOMP>
		    <PUSH TAPL13>
		    <DEAD TAPL13>
		    <PUSH TT7>
		    <CALL 'PCOMP 2 = TAPL13>
		    <CONS TAPL13 () = TAPL13 (TYPE LIST)>
		    <EMPL? NAME6 - TAG188>
		    <SET NAME6 TAPL13 (TYPE LIST)>
		    <JUMP + TAG189>
TAG188
		    <PUTREST HATOM17 TAPL13>
		    <DEAD HATOM17>
TAG189
		    <SET HATOM17 TAPL13 (TYPE LIST)>
		    <DEAD TAPL13>
		    <RESTL OBJ9 1 = OBJ9 (TYPE LIST)>
		    <JUMP + MAP178>
MAPAP181
		    <CONS TEM19 NAME6 = OBJ9>
		    <DEAD TEM19 NAME6>
		    <CONS FINALF12 OBJ9 = OBJ9>
		    <DEAD FINALF12>
		    <PUTUV TT7 5 OBJ9 (TYPE LIST)>
		    <DEAD OBJ9>
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -18>
		    <RETURN TT7>
		    <DEAD TT7>
		    <END PMAPF-R>
\

#WORD *25700047234*
<GFCN PMARGS ("VALUE" NODE ANY) O4>
		    <TEMP TEMP6>
		    <INTGO>
		    <FRAME 'NODEFM>
		    <PUSH 61>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH %<>>
		    <PUSH ()>
		    <PUSH %<>>
		    <CALL 'NODEFM 6 = TEMP6>
		    <RETURN TEMP6>
		    <DEAD TEMP6>
		    <END PMARGS>
<COND (<GASSIGNED? PMAPF-R> <PUTPROP ,MAPF PAPPLY-OBJECT ,PMAPF-R> <PUTPROP ,MAPR PAPPLY-OBJECT ,PMAPF-R>)>

#WORD *26515773652*
<GFCN ADECL-FCN ("VALUE" NODE ADECL) OBJ4>
		    <TEMP TEMP8 TT5:NODE>
		    <INTGO>
		    <FRAME 'NODEFM>
		    <PUSH 89>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH 'ADECL>
		    <PUSH ()>
		    <PUSH %<>>
		    <CALL 'NODEFM 6 = TT5>
		    <LENUV OBJ4 = TEMP8 (TYPE FIX)>
		    <VEQUAL? TEMP8 2 - PHRASE12 (TYPE FIX)>
		    <DEAD TEMP8>
		    <NTHUV OBJ4 1 = TEMP8>
		    <TYPE? TEMP8 <TYPE-CODE SEGMENT> - PHRASE15>
		    <PUTUV TT5 1 3 (TYPE FIX)>
		    <PUTUV TT5 4 %<>>
		    <FRAME 'ADECL-FCN>
		    <CHTYPE TEMP8 <TYPE-CODE FORM> = STACK>
		    <DEAD TEMP8>
		    <NTHUV OBJ4 2 = STACK>
		    <DEAD OBJ4>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP8>
		    <CHTYPE TEMP8 <TYPE-CODE ADECL> = STACK>
		    <DEAD TEMP8>
		    <CALL 'ADECL-FCN 1 = TEMP8>
		    <CONS TEMP8 () = TEMP8>
		    <PUTUV TT5 5 TEMP8 (TYPE LIST)>
		    <DEAD TEMP8>
		    <RETURN TT5>
		    <DEAD TT5>
PHRASE15
		    <NTHUV OBJ4 2 = TEMP8>
		    <PUTUV TT5 4 TEMP8>
		    <DEAD TEMP8>
		    <FRAME 'PCOMP>
		    <NTHUV OBJ4 1 = STACK>
		    <DEAD OBJ4>
		    <PUSH TT5>
		    <CALL 'PCOMP 2 = TEMP8>
		    <CONS TEMP8 () = TEMP8>
		    <PUTUV TT5 5 TEMP8 (TYPE LIST)>
		    <DEAD TEMP8>
		    <RETURN TT5>
		    <DEAD TT5>
PHRASE12
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "ADECL has an incorrect number of elements: ">
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'COMPILE-ERROR 2 = TEMP8>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
		    <END ADECL-FCN>
<COND (<GASSIGNED? ADECL-FCN> <PUTPROP ADECL PTHIS-TYPE ,ADECL-FCN>)>

#WORD *5131071525*
<GFCN CASE-FCN ("VALUE" NODE <FORM ANY> ANY) OBJ4 AP5>
		    <TEMP OP6 TEMP3:LBIND TEMP17 (FLG8 'T) (WIN9 'T) TYP10 (DF11 %<>) TEMP23 P12 TEM13 TEMP86 TEMP40 TEMP121:LIST TT124:NODE>
		    <INTGO>
		    <GEN-LVAL 'PARENT = OP6>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <GEN-LVAL 'PARENT = TEMP17>
		    <BBIND 'PARENT 'NODE 'FIX TEMP17>
		    <DEAD TEMP17>
		    <SET TEMP17 OBJ4>
		    <SET TEMP23 4 (TYPE FIX)>
		    <LOOP (TEMP17 VALUE) (TEMP23 VALUE)>
TAG24
		    <EMPL? TEMP17 + PHRASE21>
		    <RESTL TEMP17 1 = TEMP17 (TYPE LIST)>
		    <SUB TEMP23 1 = TEMP23 (TYPE FIX)>
		    <GRTR? TEMP23 0 + TAG24 (TYPE FIX)>
		    <FRAME 'TYPE>
		    <RESTL OBJ4 1 = TEMP17 (TYPE LIST)>
		    <NTHL TEMP17 1 = TEMP23>
		    <DEAD TEMP17>
		    <PUSH TEMP23>
		    <CALL 'TYPE 1 = TEMP17>
		    <VEQUAL? TEMP17 'GVAL - BOOL29>
		    <DEAD TEMP17>
		    <CHTYPE TEMP23 <TYPE-CODE ATOM> = P12>
		    <DEAD TEMP23>
		    <VEQUAL? P12 '==? + PHRASE33>
BOOL29
		    <RESTL OBJ4 1 = TEMP17 (TYPE LIST)>
		    <NTHL TEMP17 1 = TEMP23>
		    <DEAD TEMP17>
		    <TYPE? TEMP23 <TYPE-CODE FORM> - BOOL32>
		    <EMPL? TEMP23 + BOOL32>
		    <RESTL TEMP23 1 = TEMP17 (TYPE LIST)>
		    <EMPL? TEMP17 + BOOL32>
		    <RESTL TEMP17 1 = TEMP17 (TYPE LIST)>
		    <EMPL? TEMP17 - BOOL32>
		    <DEAD TEMP17>
		    <NTHL TEMP23 1 = TEMP17>
		    <EQUAL? TEMP17 'GVAL - BOOL32>
		    <DEAD TEMP17>
		    <RESTL TEMP23 1 = TEMP17 (TYPE LIST)>
		    <DEAD TEMP23>
		    <NTHL TEMP17 1 = P12>
		    <DEAD TEMP17>
		    <EQUAL? P12 '==? + PHRASE33>
BOOL32
		    <SET WIN9 %<> (TYPE FALSE)>
PHRASE33
		    <RESTL OBJ4 1 = TEMP17 (TYPE LIST)>
		    <RESTL TEMP17 1 = TEMP17 (TYPE LIST)>
		    <RESTL TEMP17 1 = TEMP23 (TYPE LIST)>
		    <DEAD TEMP17>
		    <CHTYPE TEMP23 <TYPE-CODE LIST> = TEMP23>
		    <EMPL? TEMP23 + PHRASE21>
		    <LOOP>
MAP35
		    <INTGO>
		    <EMPL? TEMP23 + MAPAP38>
		    <NTHL TEMP23 1 = TEMP17>
		    <VEQUAL? FLG8 0 + PHRASE48>
		    <EQUAL? TEMP17 'DEFAULT - PHRASE48>
		    <SET DF11 'T (TYPE ATOM)>
		    <JUMP + PHRASE90>
PHRASE48
		    <VEQUAL? DF11 0 + PHRASE50>
		    <TYPE? TEMP17 <TYPE-CODE LIST> - PHRASE50>
		    <SET DF11 %<> (TYPE FALSE)>
		    <SET FLG8 %<> (TYPE FALSE)>
		    <JUMP + PHRASE90>
PHRASE50
		    <VEQUAL? DF11 0 - PHRASE21>
		    <TYPE? TEMP17 <TYPE-CODE LIST> - PHRASE21>
		    <EMPL? TEMP17 + PHRASE21 (TYPE LIST)>
		    <FRAME 'VAL-CHK>
		    <NTHL TEMP17 1 = STACK>
		    <CALL 'VAL-CHK 1 = TEM13>
		    <TYPE? TEM13 <TYPE-CODE FALSE> + PHRASE55>
		    <TYPE? TYP10 <TYPE-CODE UNBOUND> + PHRASE58>
		    <FRAME 'TYPE>
		    <PUSH TEM13>
		    <DEAD TEM13>
		    <CALL 'TYPE 1 = TEMP17>
		    <VEQUAL? TYP10 TEMP17 + PHRASE90>
		    <DEAD TEMP17>
		    <SET WIN9 %<> (TYPE FALSE)>
		    <JUMP + PHRASE90>
PHRASE58
		    <FRAME 'TYPE>
		    <PUSH TEM13>
		    <DEAD TEM13>
		    <CALL 'TYPE 1 = TYP10>
		    <JUMP + PHRASE90>
PHRASE55
		    <NTHL TEMP17 1 = TEM13>
		    <DEAD TEMP17>
		    <TYPE? TEM13 <TYPE-CODE SEGMENT> - PHRASE63>
		    <EMPL? TEM13 + PHRASE63>
		    <RESTL TEM13 1 = TEMP17 (TYPE LIST)>
		    <EMPL? TEMP17 + PHRASE63>
		    <RESTL TEMP17 1 = TEMP17 (TYPE LIST)>
		    <EMPL? TEMP17 - PHRASE63>
		    <DEAD TEMP17>
		    <NTHL TEM13 1 = TEMP17>
		    <EQUAL? TEMP17 'QUOTE - PHRASE63>
		    <DEAD TEMP17>
		    <RESTL TEM13 1 = TEMP17 (TYPE LIST)>
		    <DEAD TEM13>
		    <NTHL TEMP17 1 = TEM13>
		    <DEAD TEMP17>
		    <MONAD? TEM13 - TAG65>
		    <SET TEMP17 'T (TYPE ATOM)>
		    <JUMP + TAG67>
TAG65
		    <SET TEMP17 %<> (TYPE FALSE)>
TAG67
		    <VEQUAL? TEMP17 0 - PHRASE63>
		    <DEAD TEMP17>
		    <SET TEMP17 TEM13>
		    <DEAD TEM13>
		    <LOOP>
MAP69
		    <INTGO>
		    <EMPTY? TEMP17 + PHRASE90>
		    <NTH1 TEMP17 = TEM13>
		    <FRAME 'VAL-CHK>
		    <PUSH TEM13>
		    <DEAD TEM13>
		    <CALL 'VAL-CHK 1 = TEM13>
		    <TYPE? TEM13 <TYPE-CODE FALSE> - PHRASE79>
		    <SET WIN9 %<> (TYPE FALSE)>
		    <JUMP + PHRASE87>
PHRASE79
		    <TYPE? TYP10 <TYPE-CODE UNBOUND> + PHRASE83>
		    <FRAME 'TYPE>
		    <PUSH TEM13>
		    <DEAD TEM13>
		    <CALL 'TYPE 1 = TEMP86>
		    <VEQUAL? TYP10 TEMP86 + PHRASE87>
		    <DEAD TEMP86>
		    <SET WIN9 %<> (TYPE FALSE)>
		    <JUMP + PHRASE87>
PHRASE83
		    <FRAME 'TYPE>
		    <PUSH TEM13>
		    <DEAD TEM13>
		    <CALL 'TYPE 1 = TYP10>
PHRASE87
		    <REST1 TEMP17 = TEMP17>
		    <JUMP + MAP69>
PHRASE63
		    <SET WIN9 %<> (TYPE FALSE)>
PHRASE90
		    <RESTL TEMP23 1 = TEMP23 (TYPE LIST)>
		    <JUMP + MAP35>
MAPAP38
		    <VEQUAL? DF11 0 - PHRASE21>
		    <VEQUAL? WIN9 0 + PHRASE92>
		    <FRAME 'TYPEPRIM>
		    <PUSH TYP10>
		    <CALL 'TYPEPRIM 1 = TEMP23>
		    <SET FLG8 [WORD FIX] (TYPE VECTOR)>
		    <TYPE? TEMP23 <TYPE-CODE ATOM> - BOOL95>
		    <LOOP (TEMP23 VALUE) (FLG8 LENGTH VALUE)>
TAG97
		    <NTHUV FLG8 1 = TEMP40>
		    <VEQUAL? TEMP40 TEMP23 + TAG96>
		    <DEAD TEMP40>
		    <RESTUV FLG8 1 = FLG8 (TYPE VECTOR)>
		    <EMPUV? FLG8 - TAG97>
		    <JUMP + BOOL95>
TAG96
		    <EQUAL? P12 '==? + PHRASE92>
BOOL95
		    <EQUAL? P12 '==? + BOOL100>
		    <DEAD P12>
		    <VEQUAL? TYP10 'ATOM + PHRASE92>
		    <DEAD TYP10>
BOOL100
		    <SET WIN9 %<> (TYPE FALSE)>
PHRASE92
		    <VEQUAL? WIN9 0 + PHRASE102>
		    <DEAD WIN9>
		    <FRAME 'NODECOND>
		    <PUSH 80>
		    <PUSH OP6>
		    <DEAD OP6>
		    <PUSH %<>>
		    <PUSH 'CASE>
		    <PUSH ()>
		    <CALL 'NODECOND 5 = P12>
		    <NTHR 'PARENT 2 = FLG8 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR FLG8 1 P12 (RECORD-TYPE LBIND)>
		    <DEAD FLG8 P12>
		    <NTHR 'PARENT 2 = FLG8 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR FLG8 1 = P12 (RECORD-TYPE LBIND)>
		    <DEAD FLG8>
		    <FRAME 'PCOMP>
		    <RESTL OBJ4 1 = TEMP17 (TYPE LIST)>
		    <NTHL TEMP17 1 = STACK>
		    <DEAD TEMP17>
		    <NTHR 'PARENT 2 = TEMP17 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP17 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP17>
		    <CALL 'PCOMP 2 = TEMP17>
		    <CONS TEMP17 () = TEMP17>
		    <FRAME 'PCOMP>
		    <RESTL OBJ4 1 = FLG8 (TYPE LIST)>
		    <RESTL FLG8 1 = FLG8 (TYPE LIST)>
		    <NTHL FLG8 1 = STACK>
		    <DEAD FLG8>
		    <NTHR 'PARENT 2 = FLG8 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR FLG8 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD FLG8>
		    <CALL 'PCOMP 2 = FLG8>
		    <CONS FLG8 () = FLG8>
		    <PUTREST TEMP17 FLG8>
		    <SET TEMP86 () (TYPE LIST)>
		    <SET TEMP40 () (TYPE LIST)>
		    <RESTL OBJ4 1 = OP6 (TYPE LIST)>
		    <DEAD OBJ4>
		    <RESTL OP6 1 = OP6 (TYPE LIST)>
		    <RESTL OP6 1 = TEMP121 (TYPE LIST)>
		    <DEAD OP6>
		    <CHTYPE TEMP121 <TYPE-CODE LIST> = TEMP121>
		    <LOOP>
MAP115
		    <INTGO>
		    <EMPL? TEMP121 + MAPAP118>
		    <NTHL TEMP121 1 = WIN9>
		    <VEQUAL? DF11 0 + TAG130>
		    <DEAD DF11>
		    <PUSH 'ELSE>
		    <SET TEMP23 1 (TYPE FIX)>
		    <SET OP6 WIN9>
		    <DEAD WIN9>
		    <TYPE OP6 = TYP10>
		    <AND TYP10 7 = TYP10>
		    <VEQUAL? TYP10 1 + TAG129>
		    <DEAD TYP10>
		    <LOOP (OP6 TYPE VALUE LENGTH) (TEMP23 VALUE)>
TAG135
		    <INTGO>
		    <EMPTY? OP6 + TAG134>
		    <NTH1 OP6 = STACK>
		    <REST1 OP6 = OP6>
		    <ADD TEMP23 1 = TEMP23 (TYPE FIX)>
		    <JUMP + TAG135>
TAG134
		    <LIST TEMP23 = WIN9 (TYPE LIST)>
		    <DEAD TEMP23>
		    <JUMP + TAG130>
TAG129
		    <LOOP>
TAG132
		    <VEQUAL? TEMP23 0 + TAG131>
		    <POP = TYP10>
		    <CONS TYP10 OP6 = OP6 (TYPE LIST)>
		    <DEAD TYP10>
		    <SUB TEMP23 1 = TEMP23 (TYPE FIX)>
		    <JUMP + TAG132>
TAG131
		    <SET WIN9 OP6>
		    <DEAD OP6>
TAG130
		    <TYPE? WIN9 <TYPE-CODE ATOM> + PHRASE137>
		    <FRAME 'NODEB>
		    <PUSH 8>
		    <NTHR 'PARENT 2 = OP6 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR OP6 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD OP6>
		    <PUSH %<>>
		    <PUSH %<>>
		    <PUSH ()>
		    <CALL 'NODEB 5 = TT124>
		    <FRAME 'PCOMP>
		    <NTHL WIN9 1 = TEM13>
		    <TYPE? TEM13 <TYPE-CODE SEGMENT> - PHRASE143>
		    <FRAME 'FORM>
		    <PUSH 'QUOTE>
		    <SET TYP10 () (TYPE LIST)>
		    <SET OP6 () (TYPE LIST)>
		    <RESTL TEM13 1 = DF11 (TYPE LIST)>
		    <DEAD TEM13>
		    <NTHL DF11 1 = DF11>
		    <LOOP>
MAP146
		    <INTGO>
		    <EMPTY? DF11 + MAP145>
		    <FRAME 'VAL-CHK>
		    <NTH1 DF11 = STACK>
		    <CALL 'VAL-CHK 1 = TEMP23>
		    <CONS TEMP23 () = TEMP23 (TYPE LIST)>
		    <EMPL? TYP10 - TAG152>
		    <SET TYP10 TEMP23 (TYPE LIST)>
		    <JUMP + TAG153>
TAG152
		    <PUTREST OP6 TEMP23>
		    <DEAD OP6>
TAG153
		    <SET OP6 TEMP23 (TYPE LIST)>
		    <DEAD TEMP23>
		    <REST1 DF11 = DF11>
		    <JUMP + MAP146>
MAP145
		    <PUSH TYP10>
		    <DEAD TYP10>
		    <CALL 'FORM 2 = DF11>
		    <JUMP + PHRASE165>
PHRASE143
		    <TYPE? TEM13 <TYPE-CODE ORQ> - PHRASE154>
		    <FRAME 'FORM>
		    <PUSH 'QUOTE>
		    <SET OP6 () (TYPE LIST)>
		    <SET TYP10 () (TYPE LIST)>
		    <CHTYPE TEM13 <TYPE-CODE LIST> = TEMP23>
		    <DEAD TEM13>
		    <LOOP>
MAP157
		    <INTGO>
		    <EMPL? TEMP23 + MAP156>
		    <FRAME 'VAL-CHK>
		    <NTHL TEMP23 1 = STACK>
		    <CALL 'VAL-CHK 1 = DF11>
		    <CONS DF11 () = DF11 (TYPE LIST)>
		    <EMPL? OP6 - TAG163>
		    <SET OP6 DF11 (TYPE LIST)>
		    <JUMP + TAG164>
TAG163
		    <PUTREST TYP10 DF11>
		    <DEAD TYP10>
TAG164
		    <SET TYP10 DF11 (TYPE LIST)>
		    <DEAD DF11>
		    <RESTL TEMP23 1 = TEMP23 (TYPE LIST)>
		    <JUMP + MAP157>
MAP156
		    <PUSH OP6>
		    <DEAD OP6>
		    <CALL 'FORM 2 = DF11>
		    <JUMP + PHRASE165>
PHRASE154
		    <FRAME 'VAL-CHK>
		    <PUSH TEM13>
		    <DEAD TEM13>
		    <CALL 'VAL-CHK 1 = DF11>
PHRASE165
		    <PUSH DF11>
		    <DEAD DF11>
		    <PUSH TT124>
		    <CALL 'PCOMP 2 = DF11>
		    <PUTUV TT124 4 DF11>
		    <DEAD DF11>
		    <SET OP6 () (TYPE LIST)>
		    <SET TEMP23 () (TYPE LIST)>
		    <RESTL WIN9 1 = WIN9 (TYPE LIST)>
		    <LOOP>
MAP168
		    <INTGO>
		    <EMPL? WIN9 + MAPAP171>
		    <NTHL WIN9 1 = TYP10>
		    <FRAME 'PCOMP>
		    <PUSH TYP10>
		    <DEAD TYP10>
		    <PUSH TT124>
		    <CALL 'PCOMP 2 = TYP10>
		    <CONS TYP10 () = TYP10 (TYPE LIST)>
		    <EMPL? OP6 - TAG179>
		    <SET OP6 TYP10 (TYPE LIST)>
		    <JUMP + TAG180>
TAG179
		    <PUTREST TEMP23 TYP10>
		    <DEAD TEMP23>
TAG180
		    <SET TEMP23 TYP10 (TYPE LIST)>
		    <DEAD TYP10>
		    <RESTL WIN9 1 = WIN9 (TYPE LIST)>
		    <JUMP + MAP168>
MAPAP171
		    <PUTUV TT124 5 OP6 (TYPE LIST)>
		    <DEAD OP6>
		    <SET DF11 %<> (TYPE FALSE)>
		    <SET WIN9 TT124>
		    <DEAD TT124>
		    <JUMP + PHRASE181>
PHRASE137
		    <SET DF11 'T (TYPE ATOM)>
		    <FRAME 'PCOMP>
		    <PUSH WIN9>
		    <DEAD WIN9>
		    <NTHR 'PARENT 2 = TYP10 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TYP10 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TYP10>
		    <CALL 'PCOMP 2 = WIN9>
PHRASE181
		    <CONS WIN9 () = WIN9 (TYPE LIST)>
		    <EMPL? TEMP86 - TAG185>
		    <SET TEMP86 WIN9 (TYPE LIST)>
		    <JUMP + TAG186>
TAG185
		    <PUTREST TEMP40 WIN9>
		    <DEAD TEMP40>
TAG186
		    <SET TEMP40 WIN9 (TYPE LIST)>
		    <DEAD WIN9>
		    <RESTL TEMP121 1 = TEMP121 (TYPE LIST)>
		    <JUMP + MAP115>
MAPAP118
		    <PUTREST FLG8 TEMP86>
		    <DEAD FLG8 TEMP86>
		    <PUTUV P12 5 TEMP17 (TYPE LIST)>
		    <DEAD TEMP17>
		    <JUMP + PHRASE189>
PHRASE102
		    <FRAME 'PMACRO>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <PUSH OP6>
		    <DEAD OP6>
		    <CALL 'PMACRO 2 = P12>
		    <JUMP + PHRASE189>
PHRASE21
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "CASE in incorrect format ">
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <CALL 'COMPILE-ERROR 2 = P12>
PHRASE189
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -9>
		    <RETURN P12>
		    <DEAD P12>
		    <END CASE-FCN>
#WORD *6504162601*
<GFCN VAL-CHK ("VALUE" ANY ANY) TEM4>
		    <TEMP TEMP11 TEMP26>
		    <INTGO>
		    <TYPE? TEM4 <TYPE-CODE ATOM> + BOOL9>
		    <FRAME 'PRIMTYPE>
		    <PUSH TEM4>
		    <CALL 'PRIMTYPE 1 = TEMP11>
		    <VEQUAL? TEMP11 'WORD + BOOL9>
		    <DEAD TEMP11>
		    <FRAME 'PRIMTYPE>
		    <PUSH TEM4>
		    <CALL 'PRIMTYPE 1 = TEMP11>
		    <VEQUAL? TEMP11 'FIX - BOOL8>
		    <DEAD TEMP11>
BOOL9
		    <SET TEMP11 TEM4>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - BOOL29>
BOOL8
		    <FRAME 'TYPE>
		    <PUSH TEM4>
		    <CALL 'TYPE 1 = TEMP11>
		    <VEQUAL? TEMP11 'GVAL - BOOL13>
		    <DEAD TEMP11>
		    <FRAME 'MANIFESTQ>
		    <CHTYPE TEM4 <TYPE-CODE ATOM> = TEM4>
		    <PUSH TEM4>
		    <CALL 'MANIFESTQ 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> + BOOL13>
		    <DEAD TEMP11>
		    <GVAL TEM4 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - BOOL29>
BOOL13
		    <TYPE? TEM4 <TYPE-CODE FORM> - BOOL21>
		    <EMPL? TEM4 + BOOL21>
		    <RESTL TEM4 1 = TEMP11 (TYPE LIST)>
		    <EMPL? TEMP11 + BOOL21>
		    <RESTL TEMP11 1 = TEMP11 (TYPE LIST)>
		    <EMPL? TEMP11 - BOOL21>
		    <DEAD TEMP11>
		    <NTHL TEM4 1 = TEMP11>
		    <EQUAL? TEMP11 'QUOTE - BOOL18>
		    <DEAD TEMP11>
		    <RESTL TEM4 1 = TEMP11 (TYPE LIST)>
		    <NTHL TEMP11 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - BOOL29>
BOOL18
		    <NTHL TEM4 1 = TEMP11>
		    <EQUAL? TEMP11 'GVAL - BOOL19>
		    <DEAD TEMP11>
		    <FRAME 'MANIFESTQ>
		    <RESTL TEM4 1 = TEMP11 (TYPE LIST)>
		    <NTHL TEMP11 1 = STACK (TYPE ATOM)>
		    <DEAD TEMP11>
		    <CALL 'MANIFESTQ 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> + BOOL19>
		    <DEAD TEMP11>
		    <RESTL TEM4 1 = TEMP11 (TYPE LIST)>
		    <NTHL TEMP11 1 = TEMP11 (TYPE ATOM)>
		    <GVAL TEMP11 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - BOOL29>
BOOL19
		    <NTHL TEM4 1 = TEMP11>
		    <EQUAL? TEMP11 'ASCII - BOOL21>
		    <DEAD TEMP11>
		    <RESTL TEM4 1 = TEMP11 (TYPE LIST)>
		    <NTHL TEMP11 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE CHARACTER> + TAG22>
		    <TYPE? TEMP11 <TYPE-CODE FIX> - BOOL21>
		    <DEAD TEMP11>
TAG22
		    <FRAME 'EVAL>
		    <PUSH TEM4>
		    <CALL 'EVAL 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - BOOL29>
BOOL21
		    <TYPE? TEM4 <TYPE-CODE FORM> - BOOL24>
		    <SET TEMP11 TEM4>
		    <SET TEMP26 3 (TYPE FIX)>
		    <LOOP (TEMP11 VALUE) (TEMP26 VALUE)>
TAG27
		    <EMPL? TEMP11 + BOOL24>
		    <RESTL TEMP11 1 = TEMP11 (TYPE LIST)>
		    <SUB TEMP26 1 = TEMP26 (TYPE FIX)>
		    <GRTR? TEMP26 0 + TAG27 (TYPE FIX)>
		    <EMPL? TEMP11 - BOOL24>
		    <DEAD TEMP11>
		    <NTHL TEM4 1 = TEMP11>
		    <EQUAL? TEMP11 'CHTYPE - BOOL24>
		    <DEAD TEMP11>
		    <RESTL TEM4 1 = TEMP11 (TYPE LIST)>
		    <RESTL TEMP11 1 = TEMP11 (TYPE LIST)>
		    <NTHL TEMP11 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE ATOM> - BOOL24>
		    <DEAD TEMP11>
		    <RESTL TEM4 1 = TEMP11 (TYPE LIST)>
		    <NTHL TEMP11 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FORM> + BOOL24>
		    <TYPE? TEMP11 <TYPE-CODE LIST> + BOOL24>
		    <TYPE? TEMP11 <TYPE-CODE VECTOR> + BOOL24>
		    <TYPE? TEMP11 <TYPE-CODE UVECTOR> + BOOL24>
		    <TYPE? TEMP11 <TYPE-CODE SEGMENT> + BOOL24>
		    <DEAD TEMP11>
		    <FRAME 'EVAL>
		    <PUSH TEM4>
		    <CALL 'EVAL 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> - BOOL29>
BOOL24
		    <TYPE? TEM4 <TYPE-CODE FORM> + TAG30>
		    <RETURN %<>>
TAG30
		    <EMPL? TEM4 - TAG32 (TYPE FORM)>
		    <RETURN %<>>
TAG32
		    <NTHL TEM4 1 = TEMP26>
		    <TYPE? TEMP26 <TYPE-CODE ATOM> + TAG33>
		    <RETURN %<>>
TAG33
		    <NTHR TEMP26 1 = TEMP11 (RECORD-TYPE ATOM) (BRANCH-FALSE + TAG36)>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> + TAG36>
		    <NTHR TEMP11 1 = TEMP11 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP11 <TYPE-CODE UNBOUND> - TAG35>
		    <DEAD TEMP11>
TAG36
		    <RETURN %<>>
TAG35
		    <GVAL TEMP26 = TEMP11>
		    <DEAD TEMP26>
		    <TYPE? TEMP11 <TYPE-CODE MACRO> + TAG37>
		    <DEAD TEMP11>
		    <RETURN %<>>
TAG37
		    <FRAME 'VAL-CHK>
		    <FRAME 'EMACRO>
		    <PUSH TEM4>
		    <DEAD TEM4>
		    <CALL 'EMACRO 1 = STACK>
		    <CALL 'VAL-CHK 1 = TEMP11>
BOOL29
		    <RETURN TEMP11>
		    <DEAD TEMP11>
		    <END VAL-CHK>
#WORD *25776244411*
<GFCN MANIFESTQ ("VALUE" <OR ATOM FALSE> ATOM) ATM4>
		    <TEMP TEMP6>
		    <INTGO>
		    <FRAME 'MANIFEST?>
		    <PUSH ATM4>
		    <CALL 'MANIFEST? 1 = TEMP6>
		    <TYPE? TEMP6 <TYPE-CODE FALSE> + TAG12>
		    <NTHR ATM4 1 = TEMP6 (RECORD-TYPE ATOM) (BRANCH-FALSE + TAG9)>
		    <TYPE? TEMP6 <TYPE-CODE FALSE> + TAG9>
		    <NTHR TEMP6 1 = TEMP6 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP6 <TYPE-CODE UNBOUND> - TAG8>
		    <DEAD TEMP6>
TAG9
		    <RETURN %<>>
TAG8
		    <GVAL ATM4 = TEMP6>
		    <DEAD ATM4>
		    <TYPE? TEMP6 <TYPE-CODE MSUBR> - TAG11>
		    <DEAD TEMP6>
		    <RETURN %<>>
TAG11
		    <SET TEMP6 'T (TYPE ATOM)>
TAG12
		    <RETURN TEMP6>
		    <DEAD TEMP6>
		    <END MANIFESTQ>
#WORD *22437646733*
<GFCN EMACRO ("VALUE" ANY ANY) OBJ4>
		    <TEMP ERR5 TEM6>
		    <INTGO>
		    <FRAME 'HANDLER>
		    <GVAL 'MACROERR = STACK>
		    <PUSH 100>
		    <CALL 'HANDLER 2 = ERR5>
		    <FRAME 'ON>
		    <PUSH ERR5>
		    <CALL 'ON 1>
		    <ICALL EXIT11 = TEM6>
		    <TEMP TEMP12 TEMP15>
		    <INTGO>
		    <CFRAME = TEMP12>
		    <NTHR TEMP12 5 = TEMP12 (RECORD-TYPE FRAME)>
		    <CFRAME = TEMP15 (TYPE FRAME)>
		    <BBIND 'MACACT 'ANY 'FIX TEMP15>
		    <DEAD TEMP15>
		    <ACTIVATION>
		    <SETLR TEMP15 TEMP12 ERR5>
		    <SETG 'ERR TEMP15>
		    <DEAD TEMP15>
		    <NTHR 'MACACT 2 = TEMP15 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP15 1 = TEMP15 (RECORD-TYPE LBIND)>
		    <SETG 'MACACT TEMP15>
		    <DEAD TEMP15>
		    <FRAME 'EXPAND>
		    <SETLR TEMP15 TEMP12 OBJ4>
		    <PUSH TEMP15>
		    <DEAD TEMP15>
		    <CALL 'EXPAND 1 = TEMP15>
		    <RETURN TEMP15>
		    <DEAD TEMP15>
EXIT11
		    <TYPE? TEM6 <TYPE-CODE FUNNY> - PHRASE10>
		    <FRAME 'OFF>
		    <PUSH ERR5>
		    <DEAD ERR5>
		    <CALL 'OFF 1>
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Macro expansion lossage ">
		    <GVAL 'CR = STACK>
		    <SET ERR5 2 (TYPE FIX)>
		    <LOOP (TEM6 VALUE LENGTH) (ERR5 VALUE)>
TAG24
		    <INTGO>
		    <EMPUV? TEM6 + TAG21>
		    <NTHUV TEM6 1 = STACK>
		    <RESTUV TEM6 1 = TEM6 (TYPE VECTOR)>
		    <ADD ERR5 1 = ERR5 (TYPE FIX)>
		    <JUMP + TAG24>
TAG21
		    <CALL 'COMPILE-ERROR ERR5 = ERR5>
		    <RETURN ERR5>
		    <DEAD ERR5>
PHRASE10
		    <FRAME 'OFF>
		    <PUSH ERR5>
		    <DEAD ERR5>
		    <CALL 'OFF 1>
		    <RETURN TEM6>
		    <DEAD TEM6>
		    <END EMACRO>
<COND (<AND <GASSIGNED? CASE> <GASSIGNED? CASE-FCN>> <PUTPROP ,CASE PAPPLY-OBJECT ,CASE-FCN>)>

#WORD *36345703562*
<GFCN P-CALL ("VALUE" NODE FORM ANY) OBJ4 AP5>
		    <TEMP TEMP8 TT6:NODE TEMP34 TEMP38:LIST O39>
		    <INTGO>
		    <FRAME 'NODEFM>
		    <PUSH 90>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH 'CALL>
		    <PUSH ()>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'NODEFM 6 = TT6>
		    <RESTL OBJ4 1 = TEMP8 (TYPE LIST)>
		    <CHTYPE TEMP8 <TYPE-CODE LIST> = TEMP8>
		    <EMPL? TEMP8 + PHRASE23 (TYPE LIST)>
		    <DEAD TEMP8>
		    <RESTL OBJ4 1 = TEMP8 (TYPE LIST)>
		    <NTHL TEMP8 1 = TEMP8>
		    <GEN-SET 'CALLED TEMP8>
		    <TYPE? TEMP8 <TYPE-CODE ATOM> - PHRASE23>
		    <DEAD TEMP8>
		    <GEN-LVAL 'CALLED = TEMP8>
		    <EQUAL? TEMP8 'IFSYS - PHRASE18>
		    <DEAD TEMP8>
		    <RESTL OBJ4 1 = TEMP8 (TYPE LIST)>
		    <RESTL TEMP8 1 = TEMP8 (TYPE LIST)>
		    <NTHL TEMP8 1 = TEMP8>
		    <GEN-SET 'IN-IFSYS TEMP8>
		    <DEAD TEMP8>
		    <JUMP + PHRASE23>
PHRASE18
		    <GEN-LVAL 'CALLED = TEMP8>
		    <EQUAL? TEMP8 'ENDIF - PHRASE23>
		    <DEAD TEMP8>
		    <GEN-SET 'IN-IFSYS %<>>
PHRASE23
		    <SET TEMP8 () (TYPE LIST)>
		    <SET TEMP34 () (TYPE LIST)>
		    <RESTL OBJ4 1 = TEMP38 (TYPE LIST)>
		    <DEAD OBJ4>
		    <CHTYPE TEMP38 <TYPE-CODE LIST> = TEMP38>
		    <LOOP>
MAP29
		    <INTGO>
		    <EMPL? TEMP38 + MAPAP32>
		    <NTHL TEMP38 1 = O39>
		    <FRAME 'PCOMP>
		    <PUSH O39>
		    <DEAD O39>
		    <PUSH TT6>
		    <CALL 'PCOMP 2 = O39>
		    <CONS O39 () = O39 (TYPE LIST)>
		    <EMPL? TEMP8 - TAG42>
		    <SET TEMP8 O39 (TYPE LIST)>
		    <JUMP + TAG43>
TAG42
		    <PUTREST TEMP34 O39>
		    <DEAD TEMP34>
TAG43
		    <SET TEMP34 O39 (TYPE LIST)>
		    <DEAD O39>
		    <RESTL TEMP38 1 = TEMP38 (TYPE LIST)>
		    <JUMP + MAP29>
MAPAP32
		    <PUTUV TT6 5 TEMP8 (TYPE LIST)>
		    <DEAD TEMP8>
		    <RETURN TT6>
		    <DEAD TT6>
		    <END P-CALL>
#WORD *4132151002*
<GFCN P-APPLY ("VALUE" NODE FORM ANY) OBJ4 AP5>
		    <TEMP PAP10 ITM7 TEMP22 TEMP21 TT6:NODE>
		    <INTGO>
		    <RESTL OBJ4 1 = PAP10 (TYPE LIST)>
		    <CHTYPE PAP10 <TYPE-CODE LIST> = PAP10>
		    <EMPL? PAP10 + PHRASE12 (TYPE LIST)>
		    <DEAD PAP10>
		    <RESTL OBJ4 1 = PAP10 (TYPE LIST)>
		    <NTHL PAP10 1 = ITM7>
		    <DEAD PAP10>
		    <TYPE? ITM7 <TYPE-CODE SEGMENT> - PHRASE12>
		    <EMPL? ITM7 + PHRASE16>
		    <RESTL ITM7 1 = PAP10 (TYPE LIST)>
		    <EMPL? PAP10 + PHRASE16>
		    <RESTL PAP10 1 = PAP10 (TYPE LIST)>
		    <EMPL? PAP10 - PHRASE16>
		    <DEAD PAP10>
		    <NTHL ITM7 1 = PAP10>
		    <EQUAL? PAP10 'GVAL + BOOL18>
		    <EQUAL? PAP10 'LVAL - PHRASE16>
		    <DEAD PAP10>
BOOL18
		    <FRAME 'FORM>
		    <PUSH 1>
		    <PUSH ITM7>
		    <CALL 'FORM 2 = PAP10>
		    <CONS PAP10 () = PAP10>
		    <CONS ITM7 () = ITM7>
		    <CONS 'REST ITM7 = ITM7>
		    <CHTYPE ITM7 <TYPE-CODE SEGMENT> = ITM7>
		    <CONS ITM7 () = ITM7>
		    <PUTREST PAP10 ITM7>
		    <RESTL OBJ4 1 = TEMP22 (TYPE LIST)>
		    <DEAD OBJ4>
		    <RESTL TEMP22 1 = TEMP21 (TYPE LIST)>
		    <DEAD TEMP22>
		    <CHTYPE TEMP21 <TYPE-CODE LIST> = TEMP21>
		    <PUTREST ITM7 TEMP21>
		    <DEAD ITM7 TEMP21>
		    <CHTYPE PAP10 <TYPE-CODE FORM> = OBJ4>
		    <DEAD PAP10>
		    <JUMP + PHRASE33>
PHRASE16
		    <FRAME 'PCOMP>
		    <FRAME 'FORM>
		    <PUSH 'BIND>
		    <FRAME 'MAKE-TAG>
		    <PUSH "A">
		    <CALL 'MAKE-TAG 1 = PAP10>
		    <CONS PAP10 () = TEMP21>
		    <CONS ITM7 () = TEMP22>
		    <DEAD ITM7>
		    <PUTREST TEMP21 TEMP22>
		    <DEAD TEMP22>
		    <CONS TEMP21 () = STACK>
		    <DEAD TEMP21>
		    <CONS 'APPLY () = TEMP21>
		    <FRAME 'FORM>
		    <PUSH 1>
		    <FRAME 'FORM>
		    <PUSH 'LVAL>
		    <PUSH PAP10>
		    <CALL 'FORM 2 = STACK>
		    <CALL 'FORM 2 = TEMP22>
		    <CONS TEMP22 () = TEMP22>
		    <PUTREST TEMP21 TEMP22>
		    <CONS 'REST () = ITM7>
		    <FRAME 'FORM>
		    <PUSH 'LVAL>
		    <PUSH PAP10>
		    <DEAD PAP10>
		    <CALL 'FORM 2 = PAP10>
		    <CONS PAP10 () = PAP10>
		    <PUTREST ITM7 PAP10>
		    <DEAD PAP10>
		    <CHTYPE ITM7 <TYPE-CODE SEGMENT> = ITM7>
		    <CONS ITM7 () = ITM7>
		    <PUTREST TEMP22 ITM7>
		    <DEAD TEMP22>
		    <RESTL OBJ4 1 = PAP10 (TYPE LIST)>
		    <DEAD OBJ4>
		    <RESTL PAP10 1 = TEMP22 (TYPE LIST)>
		    <DEAD PAP10>
		    <CHTYPE TEMP22 <TYPE-CODE LIST> = TEMP22>
		    <PUTREST ITM7 TEMP22>
		    <DEAD ITM7 TEMP22>
		    <CHTYPE TEMP21 <TYPE-CODE FORM> = STACK>
		    <DEAD TEMP21>
		    <CALL 'FORM 3 = STACK>
		    <GEN-LVAL 'PARENT = STACK>
		    <CALL 'PCOMP 2 = PAP10>
		    <RETURN PAP10>
		    <DEAD PAP10>
PHRASE12
		    <RESTL OBJ4 1 = ITM7 (TYPE LIST)>
		    <DEAD OBJ4>
		    <CHTYPE ITM7 <TYPE-CODE LIST> = ITM7>
		    <CHTYPE ITM7 <TYPE-CODE FORM> = OBJ4>
		    <DEAD ITM7>
PHRASE33
		    <FRAME 'NODEFM>
		    <PUSH 93>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH 'APPLY>
		    <PUSH ()>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'NODEFM 6 = TT6>
		    <SET ITM7 () (TYPE LIST)>
		    <SET PAP10 () (TYPE LIST)>
		    <CHTYPE OBJ4 <TYPE-CODE LIST> = TEMP22>
		    <DEAD OBJ4>
		    <LOOP>
MAP38
		    <INTGO>
		    <EMPL? TEMP22 + MAPAP41>
		    <NTHL TEMP22 1 = TEMP21>
		    <FRAME 'PCOMP>
		    <PUSH TEMP21>
		    <DEAD TEMP21>
		    <PUSH TT6>
		    <CALL 'PCOMP 2 = TEMP21>
		    <CONS TEMP21 () = TEMP21 (TYPE LIST)>
		    <EMPL? ITM7 - TAG49>
		    <SET ITM7 TEMP21 (TYPE LIST)>
		    <JUMP + TAG50>
TAG49
		    <PUTREST PAP10 TEMP21>
		    <DEAD PAP10>
TAG50
		    <SET PAP10 TEMP21 (TYPE LIST)>
		    <DEAD TEMP21>
		    <RESTL TEMP22 1 = TEMP22 (TYPE LIST)>
		    <JUMP + MAP38>
MAPAP41
		    <PUTUV TT6 5 ITM7 (TYPE LIST)>
		    <DEAD ITM7>
		    <RETURN TT6>
		    <DEAD TT6>
		    <END P-APPLY>
<COND (<GASSIGNED? P-CALL> <PUTPROP `CALL PAPPLY-OBJECT ,P-CALL>)>

#WORD *23350240212*
<GFCN PRINT-HACKERS ("VALUE" NODE FORM ANY) OBJ4 AP5>
		    <TEMP TEMP9 LEN6>
		    <INTGO>
		    <NTHL OBJ4 1 = TEMP9>
		    <EQUAL? TEMP9 'CRLF - PHRASE8>
		    <DEAD TEMP9>
		    <SET TEMP9 1 (TYPE FIX)>
		    <JUMP + PHRASE10>
PHRASE8
		    <SET TEMP9 2 (TYPE FIX)>
PHRASE10
		    <SET LEN6 TEMP9>
		    <DEAD TEMP9>
		    <LENL OBJ4 = TEMP9 (TYPE FIX)>
		    <VEQUAL? LEN6 TEMP9 - PHRASE18 (TYPE FIX)>
		    <DEAD TEMP9>
		    <VEQUAL? LEN6 1 - PHRASE14 (TYPE FIX)>
		    <DEAD LEN6>
		    <CONS .OUTCHAN () = TEMP9>
		    <NTHL OBJ4 1 = LEN6>
		    <DEAD OBJ4>
		    <CONS LEN6 TEMP9 = TEMP9>
		    <DEAD LEN6>
		    <CHTYPE TEMP9 <TYPE-CODE FORM> = OBJ4>
		    <DEAD TEMP9>
		    <JUMP + PHRASE18>
PHRASE14
		    <CONS .OUTCHAN () = TEMP9>
		    <RESTL OBJ4 1 = LEN6 (TYPE LIST)>
		    <NTHL LEN6 1 = LEN6>
		    <CONS LEN6 TEMP9 = TEMP9>
		    <DEAD LEN6>
		    <NTHL OBJ4 1 = LEN6>
		    <DEAD OBJ4>
		    <CONS LEN6 TEMP9 = TEMP9>
		    <DEAD LEN6>
		    <CHTYPE TEMP9 <TYPE-CODE FORM> = OBJ4>
		    <DEAD TEMP9>
PHRASE18
		    <FRAME 'RSUBR-FCN>
		    <PUSH OBJ4>
		    <DEAD OBJ4>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'RSUBR-FCN 2 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END PRINT-HACKERS>
<COND (<GASSIGNED? PRINT-HACKERS> <PUTPROP ,PRINT PAPPLY-OBJECT ,PRINT-HACKERS> <PUTPROP ,PRIN1 PAPPLY-OBJECT ,PRINT-HACKERS> <PUTPROP ,PRINC PAPPLY-OBJECT ,PRINT-HACKERS> <PUTPROP ,CRLF PAPPLY-OBJECT ,PRINT-HACKERS>)>

#WORD *31041641403*
<GFCN P-MULTI-SET ("VALUE" NODE FORM ANY) OBJ4 AP5>
		    <TEMP TEMP9 TT6:NODE TEMP15:LIST X30 TEMP48 TEMP47:LIST>
		    <INTGO>
		    <FRAME 'NODEFM>
		    <PUSH 103>
		    <GEN-LVAL 'PARENT = STACK>
		    <PUSH %<>>
		    <PUSH 'MULTI-SET>
		    <PUSH ()>
		    <GVAL 'MULTI-SET = STACK>
		    <CALL 'NODEFM 6 = TT6>
		    <EMPL? OBJ4 + TAG14>
		    <RESTL OBJ4 1 = TEMP15 (TYPE LIST)>
		    <EMPL? TEMP15 - PHRASE13>
		    <DEAD TEMP15>
TAG14
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Too few args to MULTI-SET:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE13
		    <RESTL OBJ4 1 = TEMP15 (TYPE LIST)>
		    <NTHL TEMP15 1 = TEMP9>
		    <DEAD TEMP15>
		    <TYPE? TEMP9 <TYPE-CODE LIST> - MAPAP24>
		    <EMPL? TEMP9 + MAPAP24 (TYPE LIST)>
		    <SET TEMP15 TEMP9 (TYPE LIST)>
		    <LOOP>
MAP21
		    <INTGO>
		    <EMPL? TEMP15 + PHRASE18>
		    <NTHL TEMP15 1 = X30>
		    <TYPE? X30 <TYPE-CODE ATOM> + PHRASE32>
		    <TYPE? X30 <TYPE-CODE ADECL> - MAPAP24>
		    <NTHUV X30 1 = X30>
		    <TYPE? X30 <TYPE-CODE ATOM> - MAPAP24>
		    <DEAD X30>
PHRASE32
		    <RESTL TEMP15 1 = TEMP15 (TYPE LIST)>
		    <JUMP + MAP21>
MAPAP24
		    <FRAME 'COMPILE-ERROR>
		    <PUSH "Arg wrong type to MULTI-SET:  ">
		    <PUSH OBJ4>
		    <CALL 'COMPILE-ERROR 2>
PHRASE18
		    <FRAME 'PCOMP>
		    <FRAME 'FORM>
		    <PUSH 'QUOTE>
		    <PUSH TEMP9>
		    <DEAD TEMP9>
		    <CALL 'FORM 2 = STACK>
		    <PUSH TT6>
		    <CALL 'PCOMP 2 = TEMP9>
		    <CONS TEMP9 () = TEMP15>
		    <DEAD TEMP9>
		    <SET TEMP9 () (TYPE LIST)>
		    <SET X30 () (TYPE LIST)>
		    <RESTL OBJ4 1 = TEMP48 (TYPE LIST)>
		    <DEAD OBJ4>
		    <RESTL TEMP48 1 = TEMP47 (TYPE LIST)>
		    <DEAD TEMP48>
		    <CHTYPE TEMP47 <TYPE-CODE LIST> = TEMP47>
		    <LOOP>
MAP40
		    <INTGO>
		    <EMPL? TEMP47 + MAPAP43>
		    <NTHL TEMP47 1 = TEMP48>
		    <FRAME 'PCOMP>
		    <PUSH TEMP48>
		    <DEAD TEMP48>
		    <PUSH TT6>
		    <CALL 'PCOMP 2 = TEMP48>
		    <CONS TEMP48 () = TEMP48 (TYPE LIST)>
		    <EMPL? TEMP9 - TAG51>
		    <SET TEMP9 TEMP48 (TYPE LIST)>
		    <JUMP + TAG52>
TAG51
		    <PUTREST X30 TEMP48>
		    <DEAD X30>
TAG52
		    <SET X30 TEMP48 (TYPE LIST)>
		    <DEAD TEMP48>
		    <RESTL TEMP47 1 = TEMP47 (TYPE LIST)>
		    <JUMP + MAP40>
MAPAP43
		    <PUTREST TEMP15 TEMP9>
		    <DEAD TEMP9>
		    <PUTUV TT6 5 TEMP15 (TYPE LIST)>
		    <DEAD TEMP15>
		    <RETURN TT6>
		    <DEAD TT6>
		    <END P-MULTI-SET>
<COND (<AND <GASSIGNED? MULTI-SET> <GASSIGNED? P-MULTI-SET>> <PUTPROP ,MULTI-SET PAPPLY-OBJECT ,P-MULTI-SET>)>

#WORD *35000523245*
<GFCN PIFSYS ("VALUE" ANY <OR FORM LIST> ANY) OBJ4 AP5>
		    <TEMP TEMP11 STUFF17:LIST L6 SYS7 TEMP39 TEMP40 TEMP41 TEMP42>
		    <INTGO>
		    <GEN-ASSIGNED? 'IN-IFSYS - PHRASE9>
		    <GEN-LVAL 'IN-IFSYS = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> + PHRASE9>
		    <DEAD TEMP11>
		    <SET STUFF17 () (TYPE LIST)>
		    <LOOP>
AGAIN18
		    <INTGO>
		    <RESTL OBJ4 1 = OBJ4 (TYPE LIST)>
		    <CHTYPE OBJ4 <TYPE-CODE LIST> = OBJ4>
		    <EMPL? OBJ4 - PHRASE20 (TYPE LIST)>
		    <EMPL? STUFF17 - PHRASE22 (TYPE LIST)>
		    <FRAME 'PDEFAULT>
		    <PUSH %<>>
		    <CALL 'PDEFAULT 1 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE22
		    <FRAME 'PPROG-REPEAT>
		    <CONS () STUFF17 = TEMP11>
		    <DEAD STUFF17>
		    <CONS 'BIND TEMP11 = TEMP11>
		    <CHTYPE TEMP11 <TYPE-CODE FORM> = STACK>
		    <DEAD TEMP11>
		    <PUSH 'BIND>
		    <CALL 'PPROG-REPEAT 2 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE20
		    <NTHL OBJ4 1 = L6>
		    <TYPE? L6 <TYPE-CODE LIST> - BOOL28>
		    <EMPL? L6 + BOOL28 (TYPE LIST)>
		    <NTHL L6 1 = SYS7>
		    <TYPE? SYS7 <TYPE-CODE STRING> + PHRASE27>
		    <TYPE? SYS7 <TYPE-CODE ATOM> + PHRASE27>
BOOL28
		    <FRAME 'ERROR>
		    <PUSH 'ARG-WRONG-TYPE>
		    <NTHL OBJ4 1 = STACK>
		    <PUSH 'IFSYS>
		    <CALL 'ERROR 3>
		    <JUMP + AGAIN18>
PHRASE27
		    <TYPE? SYS7 <TYPE-CODE ATOM> - PHRASE32>
		    <NTHR SYS7 3 = SYS7 (RECORD-TYPE ATOM)>
PHRASE32
		    <GEN-LVAL 'IN-IFSYS = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE STRING> - TAG36>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? SYS7 TEMP11 + BOOL35>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP39 SYS7>
		    <LENUS TEMP39 = TEMP40 (TYPE FIX)>
		    <LENUS TEMP11 = TEMP41 (TYPE FIX)>
		    <VEQUAL? TEMP40 TEMP41 - TAG36>
		    <DEAD TEMP41>
		    <LOOP (TEMP39 VALUE LENGTH) (TEMP11 VALUE LENGTH) (TEMP40 VALUE)>
TAG43
		    <NTHUS TEMP39 1 = TEMP41>
		    <NTHUS TEMP11 1 = TEMP42>
		    <VEQUAL? TEMP41 TEMP42 - TAG36>
		    <DEAD TEMP41 TEMP42>
		    <RESTUS TEMP39 1 = TEMP39 (TYPE STRING)>
		    <RESTUS TEMP11 1 = TEMP11 (TYPE STRING)>
		    <SUB TEMP40 1 = TEMP40 (TYPE FIX)>
		    <GRTR? TEMP40 0 + TAG43 (TYPE FIX)>
		    <JUMP + BOOL35>
		    <ENDIF "STRING-EQUAL?">
TAG36
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? SYS7 "UNIX" - TAG53>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP11 SYS7>
		    <SET TEMP39 "UNIX" (TYPE STRING)>
		    <LENUS TEMP11 = TEMP42 (TYPE FIX)>
		    <VEQUAL? TEMP42 4 - TAG53>
		    <LOOP (TEMP11 VALUE LENGTH) (TEMP39 VALUE LENGTH) (TEMP42 VALUE)>
TAG46
		    <NTHUS TEMP11 1 = TEMP41>
		    <NTHUS TEMP39 1 = TEMP40>
		    <VEQUAL? TEMP41 TEMP40 - TAG53>
		    <DEAD TEMP41 TEMP40>
		    <RESTUS TEMP11 1 = TEMP11 (TYPE STRING)>
		    <RESTUS TEMP39 1 = TEMP39 (TYPE STRING)>
		    <SUB TEMP42 1 = TEMP42 (TYPE FIX)>
		    <GRTR? TEMP42 0 + TAG46 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <GEN-LVAL 'IN-IFSYS = TEMP39>
		    <TYPE? TEMP39 <TYPE-CODE STRING> - TAG48>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP39 "VAX" + BOOL35>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP11 "VAX" (TYPE STRING)>
		    <LENUS TEMP39 = TEMP40 (TYPE FIX)>
		    <VEQUAL? TEMP40 3 - TAG48>
		    <LOOP (TEMP39 VALUE LENGTH) (TEMP11 VALUE LENGTH) (TEMP40 VALUE)>
TAG52
		    <NTHUS TEMP39 1 = TEMP41>
		    <NTHUS TEMP11 1 = TEMP42>
		    <VEQUAL? TEMP41 TEMP42 - TAG48>
		    <DEAD TEMP41 TEMP42>
		    <RESTUS TEMP39 1 = TEMP39 (TYPE STRING)>
		    <RESTUS TEMP11 1 = TEMP11 (TYPE STRING)>
		    <SUB TEMP40 1 = TEMP40 (TYPE FIX)>
		    <GRTR? TEMP40 0 + TAG52 (TYPE FIX)>
		    <JUMP + BOOL35>
		    <ENDIF "STRING-EQUAL?">
TAG48
		    <GEN-LVAL 'IN-IFSYS = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE STRING> - TAG53>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP11 "MAC" + BOOL35>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP39 "MAC" (TYPE STRING)>
		    <LENUS TEMP11 = TEMP42 (TYPE FIX)>
		    <VEQUAL? TEMP42 3 - TAG53>
		    <LOOP (TEMP11 VALUE LENGTH) (TEMP39 VALUE LENGTH) (TEMP42 VALUE)>
TAG57
		    <NTHUS TEMP11 1 = TEMP41>
		    <NTHUS TEMP39 1 = TEMP40>
		    <VEQUAL? TEMP41 TEMP40 - TAG53>
		    <DEAD TEMP41 TEMP40>
		    <RESTUS TEMP11 1 = TEMP11 (TYPE STRING)>
		    <RESTUS TEMP39 1 = TEMP39 (TYPE STRING)>
		    <SUB TEMP42 1 = TEMP42 (TYPE FIX)>
		    <GRTR? TEMP42 0 + TAG57 (TYPE FIX)>
		    <JUMP + BOOL35>
		    <ENDIF "STRING-EQUAL?">
TAG53
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? SYS7 "VAX" + BOOL59>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP39 SYS7>
		    <SET TEMP11 "VAX" (TYPE STRING)>
		    <LENUS TEMP39 = TEMP40 (TYPE FIX)>
		    <VEQUAL? TEMP40 3 - TAG60>
		    <LOOP (TEMP39 VALUE LENGTH) (TEMP11 VALUE LENGTH) (TEMP40 VALUE)>
TAG62
		    <NTHUS TEMP39 1 = TEMP41>
		    <NTHUS TEMP11 1 = TEMP42>
		    <VEQUAL? TEMP41 TEMP42 - TAG60>
		    <DEAD TEMP41 TEMP42>
		    <RESTUS TEMP39 1 = TEMP39 (TYPE STRING)>
		    <RESTUS TEMP11 1 = TEMP11 (TYPE STRING)>
		    <SUB TEMP40 1 = TEMP40 (TYPE FIX)>
		    <GRTR? TEMP40 0 + TAG62 (TYPE FIX)>
		    <JUMP + BOOL59>
		    <ENDIF "STRING-EQUAL?">
TAG60
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? SYS7 "MAC" - AGAIN18>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP11 SYS7>
		    <DEAD SYS7>
		    <SET TEMP39 "MAC" (TYPE STRING)>
		    <LENUS TEMP11 = TEMP42 (TYPE FIX)>
		    <VEQUAL? TEMP42 3 - AGAIN18>
		    <LOOP (TEMP11 VALUE LENGTH) (TEMP39 VALUE LENGTH) (TEMP42 VALUE)>
TAG64
		    <NTHUS TEMP11 1 = TEMP41>
		    <NTHUS TEMP39 1 = SYS7>
		    <VEQUAL? TEMP41 SYS7 - AGAIN18>
		    <DEAD TEMP41 SYS7>
		    <RESTUS TEMP11 1 = TEMP11 (TYPE STRING)>
		    <RESTUS TEMP39 1 = TEMP39 (TYPE STRING)>
		    <SUB TEMP42 1 = TEMP42 (TYPE FIX)>
		    <GRTR? TEMP42 0 + TAG64 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
BOOL59
		    <GEN-LVAL 'IN-IFSYS = TEMP39>
		    <TYPE? TEMP39 <TYPE-CODE STRING> - AGAIN18>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP39 "UNIX" - AGAIN18>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP11 "UNIX" (TYPE STRING)>
		    <LENUS TEMP39 = SYS7 (TYPE FIX)>
		    <VEQUAL? SYS7 4 - AGAIN18>
		    <LOOP (TEMP39 VALUE LENGTH) (TEMP11 VALUE LENGTH) (SYS7 VALUE)>
TAG68
		    <NTHUS TEMP39 1 = TEMP41>
		    <NTHUS TEMP11 1 = TEMP40>
		    <VEQUAL? TEMP41 TEMP40 - AGAIN18>
		    <DEAD TEMP41 TEMP40>
		    <RESTUS TEMP39 1 = TEMP39 (TYPE STRING)>
		    <RESTUS TEMP11 1 = TEMP11 (TYPE STRING)>
		    <SUB SYS7 1 = SYS7 (TYPE FIX)>
		    <GRTR? SYS7 0 + TAG68 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
BOOL35
		    <RESTL L6 1 = TEMP11 (TYPE LIST)>
		    <DEAD L6>
		    <SET TEMP39 STUFF17>
		    <EMPL? TEMP11 + TAG70>
		    <NTHL TEMP11 1 = TEMP40>
		    <CONS TEMP40 STUFF17 = TEMP40>
		    <SET TEMP39 TEMP40>
		    <RESTL TEMP11 1 = TEMP11 (TYPE LIST)>
		    <EMPL? TEMP11 + TAG70>
		    <LOOP (TEMP11 VALUE) (TEMP40 VALUE) (STUFF17 VALUE)>
TAG69
		    <NTHL TEMP11 1 = TEMP41>
		    <CONS TEMP41 STUFF17 = TEMP41>
		    <PUTREST TEMP40 TEMP41>
		    <DEAD TEMP40>
		    <SET TEMP40 TEMP41>
		    <DEAD TEMP41>
		    <RESTL TEMP11 1 = TEMP11 (TYPE LIST)>
		    <EMPL? TEMP11 - TAG69>
TAG70
		    <SET STUFF17 TEMP39>
		    <DEAD TEMP39>
		    <JUMP + AGAIN18>
PHRASE9
		    <FRAME 'PMACRO>
		    <RESTL OBJ4 1 = TEMP39 (TYPE LIST)>
		    <DEAD OBJ4>
		    <CHTYPE TEMP39 <TYPE-CODE LIST> = TEMP39>
		    <CONS 'IFSYS-MIMC TEMP39 = TEMP39>
		    <CHTYPE TEMP39 <TYPE-CODE FORM> = STACK>
		    <DEAD TEMP39>
		    <PUSH AP5>
		    <DEAD AP5>
		    <CALL 'PMACRO 2 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
		    <END PIFSYS>
<COND (<AND <GASSIGNED? IFSYS> <GASSIGNED? PIFSYS>> <PUTPROP ,IFSYS PAPPLY-OBJECT ,PIFSYS>)>

#WORD *1337570064*
<GFCN IFSYS-MIMC ("VALUE" FORM "ARGS" LIST) ARGS6>
		    <OPT-DISPATCH 0 %<> OPT4 OPT5>
OPT4
		    <PUSH ()>
OPT5
		    <TEMP (STUFF7:LIST ()) L10 TEMP17 TEMP26 TEMP27 TEMP28>
		    <INTGO>
		    <LOOP>
AGAIN11
		    <INTGO>
		    <EMPL? ARGS6 + EXIT8 (TYPE LIST)>
		    <NTHL ARGS6 1 = L10>
		    <TYPE? L10 <TYPE-CODE LIST> - BOOL16>
		    <EMPL? L10 + BOOL16 (TYPE LIST)>
		    <NTHL L10 1 = TEMP17>
		    <TYPE? TEMP17 <TYPE-CODE STRING> + PHRASE15>
		    <TYPE? TEMP17 <TYPE-CODE ATOM> + PHRASE15>
		    <DEAD TEMP17>
BOOL16
		    <FRAME 'ERROR>
		    <PUSH 'ARG-WRONG-TYPE>
		    <NTHL ARGS6 1 = STACK>
		    <PUSH 'IFSYS>
		    <CALL 'ERROR 3>
		    <JUMP + PHRASE19>
PHRASE15
		    <NTHL L10 1 = TEMP17>
		    <TYPE? TEMP17 <TYPE-CODE ATOM> - PHRASE21>
		    <DEAD TEMP17>
		    <NTHL L10 1 = TEMP17 (TYPE ATOM)>
		    <NTHR TEMP17 3 = TEMP17 (RECORD-TYPE ATOM)>
		    <PUTL L10 1 TEMP17>
		    <DEAD TEMP17>
PHRASE21
		    <FRAME 'FORM>
		    <PUSH 'CALL>
		    <PUSH 'IFSYS>
		    <NTHL L10 1 = STACK (TYPE STRING)>
		    <CALL 'FORM 3 = TEMP17>
		    <CONS TEMP17 () = TEMP17>
		    <RESTL L10 1 = TEMP26 (TYPE LIST)>
		    <SET TEMP27 TEMP17>
		    <EMPL? TEMP26 + TAG25>
		    <LOOP (TEMP26 VALUE) (TEMP27 VALUE)>
TAG24
		    <NTHL TEMP26 1 = TEMP28>
		    <CONS TEMP28 () = TEMP28>
		    <PUTREST TEMP27 TEMP28>
		    <DEAD TEMP27>
		    <SET TEMP27 TEMP28>
		    <DEAD TEMP28>
		    <RESTL TEMP26 1 = TEMP26 (TYPE LIST)>
		    <EMPL? TEMP26 - TAG24>
TAG25
		    <FRAME 'FORM>
		    <PUSH 'CALL>
		    <PUSH 'ENDIF>
		    <NTHL L10 1 = STACK>
		    <DEAD L10>
		    <CALL 'FORM 3 = TEMP26>
		    <CONS TEMP26 () = TEMP26>
		    <PUTREST TEMP27 TEMP26>
		    <DEAD TEMP27>
		    <PUTREST TEMP26 STUFF7>
		    <DEAD TEMP26 STUFF7>
		    <SET STUFF7 TEMP17>
		    <DEAD TEMP17>
PHRASE19
		    <RESTL ARGS6 1 = ARGS6 (TYPE LIST)>
		    <JUMP + AGAIN11>
EXIT8
		    <CONS () STUFF7 = TEMP26>
		    <DEAD STUFF7>
		    <CONS 'BIND TEMP26 = TEMP26>
		    <CHTYPE TEMP26 <TYPE-CODE FORM> = TEMP26>
		    <RETURN TEMP26>
		    <DEAD TEMP26>
		    <END IFSYS-MIMC><COND (<AND <GASSIGNED? IFSYS-MIMC> <NOT <TYPE? ,IFSYS-MIMC MACRO>>> <SETG IFSYS-MIMC <CHTYPE (,IFSYS-MIMC) MACRO>>)>

<ENDPACKA