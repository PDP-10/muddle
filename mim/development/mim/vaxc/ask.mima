
<USE "JCL">

#WORD *10546651040*
		    <GFCN SAV ("VALUE" ANY)>
		    <TEMP TEMP6 TEMP14 TEMP15 TEMP16 TEMP17>
		    <INTGO>
		    <FRAME 'GC-MON>
		    <PUSH %<>>
		    <CALL 'GC-MON 1>
		    <FRAME 'RESET>
		    <GEN-LVAL 'INCHAN = STACK>
		    <CALL 'RESET 1>
		    <FRAME 'SNAME>
		    <PUSH "">
		    <CALL 'SNAME 1>
		    <FRAME 'SAVE>
		    <PUSH "MV">
		    <CALL 'SAVE 1 = TEMP6>
		    <TYPE? TEMP6 <TYPE-CODE STRING> - PHRASE11>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP6 "SAVED" - PHRASE11>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP14 "SAVED" (TYPE STRING)>
		    <LENUS TEMP6 = TEMP15 (TYPE FIX)>
		    <VEQUAL? TEMP15 5 - PHRASE11>
		    <LOOP (TEMP6 VALUE LENGTH) (TEMP14 VALUE LENGTH) (TEMP15 VALUE)>
TAG18
		    <NTHUS TEMP6 1 = TEMP16>
		    <NTHUS TEMP14 1 = TEMP17>
		    <VEQUAL? TEMP16 TEMP17 - PHRASE11>
		    <DEAD TEMP16 TEMP17>
		    <RESTUS TEMP6 1 = TEMP6 (TYPE STRING)>
		    <RESTUS TEMP14 1 = TEMP14 (TYPE STRING)>
		    <SUB TEMP15 1 = TEMP15 (TYPE FIX)>
		    <GRTR? TEMP15 0 + TAG18 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <RETURN 'T>
PHRASE11
		    <FRAME 'RUN-QUESTIONS>
		    <CALL 'RUN-QUESTIONS 0 = TEMP14>
		    <RETURN TEMP14>
		    <DEAD TEMP14>
		    <END SAV>

<SETG BUFSTRING <ISTRING 200>>

#WORD *6755525252*
		    <GFCN RQ ("VALUE" ANY "OPTIONAL" ANY) NOJCL?6>
		    <OPT-DISPATCH 0 %<> OPT4 OPT5>
OPT4
		    <PUSH %<>>
OPT5
		    <TEMP TEMP7>
		    <INTGO>
		    <FRAME 'RESET>
		    <GVAL 'INCHAN = STACK>
		    <CALL 'RESET 1>
		    <FRAME 'RUN-QUESTIONS>
		    <PUSH NOJCL?6>
		    <DEAD NOJCL?6>
		    <CALL 'RUN-QUESTIONS 1 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END RQ>

#WORD *34107653501*
		    <GFCN RUN-QUESTIONS ("VALUE" ANY "OPTIONAL" ANY) NOJCL?6>
		    <OPT-DISPATCH 0 %<> OPT4 OPT5>
OPT4
		    <PUSH %<>>
OPT5
		    <TEMP BUF10 (JCL-STR12 %<>) (JCL-VEC14 %<>) (QUICK?16 %<>) UN17:STRING (ANY-JCL?18 %<>) REM-VEC15 TEMP57 VV62 ST63 TEMP60 TEMP58 TEMP141>
		    <INTGO>
		    <GVAL 'BUFSTRING = BUF10>
		    <FRAME 'UNAME>
		    <CALL 'UNAME 0 = UN17>
		    <LOOP>
AGAIN23
		    <INTGO>
		    <IFSYS "VAX">
		    <TYPE? NOJCL?6 <TYPE-CODE FALSE> + PHRASE28>
		    <SET JCL-VEC14 %<> (TYPE FALSE)>
		    <JUMP + PHRASE29>
PHRASE28
		    <FRAME 'READARGS>
		    <CALL 'READARGS 0 = JCL-VEC14>
PHRASE29
		    <ENDIF "VAX">
		    <IFSYS "TOPS20">
		    <TYPE? NOJCL?6 <TYPE-CODE FALSE> + PHRASE32>
		    <SET JCL-STR12 %<> (TYPE FALSE)>
		    <JUMP + PHRASE33>
PHRASE32
		    <FRAME 'READJCL>
		    <CALL 'READJCL 0 = JCL-STR12>
PHRASE33
		    <ENDIF "TOPS20">
		    <VEQUAL? QUICK?16 0 - PHRASE36>
		    <GEN-SET 'PRECOMPILED #T$UNBOUND 0>
		    <GEN-SET 'AUTO-PRECOMP #T$UNBOUND 0>
		    <GEN-SET 'REDO #T$UNBOUND 0>
PHRASE36
		    <TYPE? JCL-VEC14 <TYPE-CODE FALSE> - BOOL45>
		    <TYPE? JCL-STR12 <TYPE-CODE FALSE> + PHRASE44>
BOOL45
		    <SET NOJCL?6 'T (TYPE ATOM)>
		    <SET QUICK?16 'T (TYPE ATOM)>
		    <SETG 'VERBOSE? %<>>
		    <GEN-SET 'DOC %<>>
		    <SETG 'GLUE %<>>
		    <SETG 'BOOT-MODE %<>>
		    <SETG 'INT-MODE %<>>
		    <SETG 'GC-MODE %<>>
		    <IFSYS "VAX">
		    <SET REM-VEC15 %<> (TYPE FALSE)>
		    <SET TEMP57 JCL-VEC14>
		    <LOOP>
MAP52
		    <INTGO>
		    <EMPTY? TEMP57 + MAPAP55>
		    <SET VV62 TEMP57>
		    <NTHUV VV62 1 = ST63 (TYPE STRING)>
		    <EMPUS? ST63 + PHRASE65 (TYPE STRING)>
		    <NTHUS ST63 1 = ST63 (TYPE CHARACTER)>
		    <VEQUAL? ST63 !\- - PHRASE65>
		    <DEAD ST63>
		    <SET REM-VEC15 VV62>
		    <DEAD VV62>
		    <JUMP + MAPAP55>
PHRASE65
		    <REST1 TEMP57 = TEMP57>
		    <JUMP + MAP52>
MAPAP55
		    <TYPE? REM-VEC15 <TYPE-CODE FALSE> + PHRASE69>
		    <FRAME 'LENGTH>
		    <PUSH JCL-VEC14>
		    <CALL 'LENGTH 1 = TEMP60>
		    <LENUV REM-VEC15 = TEMP58 (TYPE FIX)>
		    <SUB TEMP60 TEMP58 = TEMP60 (TYPE FIX)>
		    <DEAD TEMP58>
		    <SET VV62 ()>
		    <SET TEMP58 ()>
		    <LOOP (TEMP58 VALUE LENGTH) (TEMP60 VALUE)>
ISTR71
		    <VEQUAL? TEMP60 0 + ISTRE72>
		    <CONS 0 () = TEMP57>
		    <EMPL? TEMP58 + TAG73>
		    <PUTREST TEMP58 TEMP57>
		    <DEAD TEMP58>
		    <SET TEMP58 TEMP57>
		    <DEAD TEMP57>
		    <JUMP + TAG74>
TAG73
		    <SET TEMP58 TEMP57>
		    <SET VV62 TEMP57>
		    <DEAD TEMP57>
TAG74
		    <SUB TEMP60 1 = TEMP60>
		    <JUMP + ISTR71>
ISTRE72
		    <SET TEMP58 VV62 (TYPE LIST)>
		    <SET ST63 JCL-VEC14>
		    <LOOP>
MAP76
		    <INTGO>
		    <EMPL? TEMP58 + MAPAP79>
		    <EMPTY? ST63 + MAPAP79>
		    <SET TEMP60 TEMP58>
		    <SET TEMP57 ST63>
		    <NTH1 TEMP57 = TEMP57>
		    <PUTL TEMP60 1 TEMP57>
		    <DEAD TEMP60 TEMP57>
		    <RESTL TEMP58 1 = TEMP58 (TYPE LIST)>
		    <REST1 ST63 = ST63>
		    <JUMP + MAP76>
MAPAP79
		    <SET ST63 REM-VEC15 (TYPE VECTOR)>
		    <DEAD REM-VEC15>
		    <LOOP>
MAP89
		    <INTGO>
		    <EMPUV? ST63 + TAG161>
		    <NTHUV ST63 1 = REM-VEC15>
		    <FRAME 'MEMBER>
		    <PUSH REM-VEC15>
		    <PUSH ["L" "-L" "D" "-D"]>
		    <CALL 'MEMBER 2 = TEMP57>
		    <TYPE? TEMP57 <TYPE-CODE FALSE> + PHRASE97>
		    <DEAD TEMP57>
		    <SET ANY-JCL?18 'T (TYPE ATOM)>
		    <GEN-SET 'DOC 'T>
		    <JUMP + MAPAP124>
PHRASE97
		    <FRAME 'MEMBER>
		    <PUSH REM-VEC15>
		    <PUSH ["V" "-V"]>
		    <CALL 'MEMBER 2 = TEMP57>
		    <TYPE? TEMP57 <TYPE-CODE FALSE> + PHRASE101>
		    <DEAD TEMP57>
		    <SETG 'VERBOSE? 'T>
		    <JUMP + MAPAP124>
PHRASE101
		    <FRAME 'MEMBER>
		    <PUSH REM-VEC15>
		    <PUSH ["G" "-G"]>
		    <CALL 'MEMBER 2 = TEMP57>
		    <TYPE? TEMP57 <TYPE-CODE FALSE> + PHRASE103>
		    <DEAD TEMP57>
		    <SET ANY-JCL?18 'T (TYPE ATOM)>
		    <SETG 'GLUE 'T>
		    <JUMP + MAPAP124>
PHRASE103
		    <FRAME 'MEMBER>
		    <PUSH REM-VEC15>
		    <PUSH ["GC" "-GC"]>
		    <CALL 'MEMBER 2 = TEMP57>
		    <TYPE? TEMP57 <TYPE-CODE FALSE> + PHRASE105>
		    <DEAD TEMP57>
		    <SET ANY-JCL?18 'T (TYPE ATOM)>
		    <SETG 'GC-MODE 'T>
		    <JUMP + MAPAP124>
PHRASE105
		    <FRAME 'MEMBER>
		    <PUSH REM-VEC15>
		    <PUSH ["I" "-I"]>
		    <CALL 'MEMBER 2 = TEMP57>
		    <TYPE? TEMP57 <TYPE-CODE FALSE> + PHRASE107>
		    <DEAD TEMP57>
		    <SET ANY-JCL?18 'T (TYPE ATOM)>
		    <SETG 'INT-MODE 'T>
		    <JUMP + MAPAP124>
PHRASE107
		    <FRAME 'MEMBER>
		    <PUSH REM-VEC15>
		    <PUSH ["P" "-P"]>
		    <CALL 'MEMBER 2 = TEMP57>
		    <TYPE? TEMP57 <TYPE-CODE FALSE> + PHRASE109>
		    <DEAD TEMP57>
		    <GEN-SET 'PRECOMPILED 'T>
		    <JUMP + MAPAP124>
PHRASE109
		    <FRAME 'MEMBER>
		    <PUSH REM-VEC15>
		    <PUSH ["PA" "-PA"]>
		    <CALL 'MEMBER 2 = TEMP57>
		    <TYPE? TEMP57 <TYPE-CODE FALSE> + PHRASE113>
		    <DEAD TEMP57>
		    <GEN-SET 'PRECOMPILED 'T>
		    <GEN-SET 'AUTO-PRECOMP 'T>
		    <JUMP + MAPAP124>
PHRASE113
		    <FRAME 'LPARSE>
		    <PUSH REM-VEC15>
		    <DEAD REM-VEC15>
		    <CALL 'LPARSE 1 = REM-VEC15>
		    <LOOP>
MAP121
		    <INTGO>
		    <EMPTY? REM-VEC15 + MAPAP124>
		    <NTH1 REM-VEC15 = TEMP57>
		    <TYPE? TEMP57 <TYPE-CODE ADECL> - PHRASE134>
		    <NTHUV TEMP57 1 = TEMP60>
		    <SET TEMP58 [P -P PA -PA] (TYPE VECTOR)>
		    <TYPE? TEMP60 <TYPE-CODE ATOM> - PHRASE134>
		    <LOOP (TEMP60 VALUE) (TEMP58 LENGTH VALUE)>
TAG137
		    <NTHUV TEMP58 1 = TEMP141>
		    <VEQUAL? TEMP141 TEMP60 + TAG136>
		    <DEAD TEMP141>
		    <RESTUV TEMP58 1 = TEMP58 (TYPE VECTOR)>
		    <EMPUV? TEMP58 - TAG137>
		    <JUMP + PHRASE134>
TAG136
		    <NTHUV TEMP57 2 = TEMP58>
		    <GEN-SET 'PRECOMPILED TEMP58>
		    <TYPE? TEMP58 <TYPE-CODE ATOM> - PHRASE157>
		    <DEAD TEMP58>
		    <NTHUV TEMP57 1 = TEMP58>
		    <DEAD TEMP57>
		    <SET TEMP60 [PA -PA] (TYPE VECTOR)>
		    <TYPE? TEMP58 <TYPE-CODE ATOM> - PHRASE147>
		    <LOOP (TEMP58 VALUE) (TEMP60 LENGTH VALUE)>
TAG149
		    <NTHUV TEMP60 1 = TEMP141>
		    <VEQUAL? TEMP141 TEMP58 + TAG148>
		    <DEAD TEMP141>
		    <RESTUV TEMP60 1 = TEMP60 (TYPE VECTOR)>
		    <EMPUV? TEMP60 - TAG149>
		    <JUMP + PHRASE147>
TAG148
		    <GEN-SET 'AUTO-PRECOMP 'T>
PHRASE147
		    <GEN-LVAL 'PRECOMPILED = TEMP60>
		    <NTHR TEMP60 3 = TEMP60 (RECORD-TYPE ATOM)>
		    <GEN-SET 'PRECOMPILED TEMP60>
		    <DEAD TEMP60>
		    <JUMP + PHRASE157>
PHRASE134
		    <FRAME 'EVAL>
		    <PUSH TEMP57>
		    <DEAD TEMP57>
		    <CALL 'EVAL 1>
PHRASE157
		    <REST1 REM-VEC15 = REM-VEC15>
		    <JUMP + MAP121>
MAPAP124
		    <RESTUV ST63 1 = ST63 (TYPE VECTOR)>
		    <JUMP + MAP89>
PHRASE69
		    <SET TEMP60 0 (TYPE FIX)>
		    <SET ST63 JCL-VEC14>
		    <TYPE ST63 = TEMP58>
		    <AND TEMP58 7 = TEMP58>
		    <VEQUAL? TEMP58 1 + TAG160>
		    <DEAD TEMP58>
		    <LOOP (ST63 TYPE VALUE LENGTH) (TEMP60 VALUE)>
TAG165
		    <INTGO>
		    <EMPTY? ST63 + TAG164>
		    <NTH1 ST63 = STACK>
		    <REST1 ST63 = ST63>
		    <ADD TEMP60 1 = TEMP60 (TYPE FIX)>
		    <JUMP + TAG165>
TAG164
		    <LIST TEMP60 = VV62 (TYPE LIST)>
		    <DEAD TEMP60>
		    <JUMP + TAG161>
TAG160
		    <LOOP>
TAG163
		    <VEQUAL? TEMP60 0 + TAG162>
		    <POP = TEMP58>
		    <CONS TEMP58 ST63 = ST63 (TYPE LIST)>
		    <DEAD TEMP58>
		    <SUB TEMP60 1 = TEMP60 (TYPE FIX)>
		    <JUMP + TAG163>
TAG162
		    <SET VV62 ST63>
		    <DEAD ST63>
TAG161
		    <ENDIF "VAX">
		    <IFSYS "TOPS20">
		    <SET REM-VEC15 JCL-STR12>
		    <EMPTY? REM-VEC15 + TAG168>
		    <LOOP (REM-VEC15 LENGTH VALUE TYPE)>
TAG170
		    <NTH1 REM-VEC15 = ST63>
		    <TYPE? ST63 <TYPE-CODE CHARACTER> - TAG171>
		    <VEQUAL? ST63 !\/ + TAG169>
		    <DEAD ST63>
TAG171
		    <REST1 REM-VEC15 = REM-VEC15>
		    <EMPTY? REM-VEC15 - TAG170>
TAG168
		    <SET REM-VEC15 %<> (TYPE FALSE)>
TAG169
		    <TYPE? REM-VEC15 <TYPE-CODE FALSE> + PHRASE167>
		    <FRAME 'LEX>
		    <FRAME 'SUBSTRUC>
		    <PUSH JCL-STR12>
		    <PUSH 0>
		    <FRAME 'LENGTH>
		    <PUSH JCL-STR12>
		    <CALL 'LENGTH 1 = TEMP57>
		    <LENUS REM-VEC15 = ST63 (TYPE FIX)>
		    <SUB TEMP57 ST63 = STACK (TYPE FIX)>
		    <DEAD TEMP57 ST63>
		    <CALL 'SUBSTRUC 3 = STACK>
		    <CALL 'LEX 1 = VV62>
		    <FRAME 'LPARSE>
		    <RESTUS REM-VEC15 1 = STACK (TYPE STRING)>
		    <DEAD REM-VEC15>
		    <CALL 'LPARSE 1 = REM-VEC15>
		    <SET ST63 REM-VEC15>
		    <DEAD REM-VEC15>
		    <LOOP>
MAP177
		    <INTGO>
		    <EMPTY? ST63 + COND166>
		    <NTH1 ST63 = TEMP57>
		    <TYPE? TEMP57 <TYPE-CODE ATOM> - PHRASE185>
		    <SET REM-VEC15 [L /L D /D] (TYPE VECTOR)>
		    <LOOP (TEMP57 VALUE) (REM-VEC15 LENGTH VALUE)>
TAG189
		    <NTHUV REM-VEC15 1 = TEMP60>
		    <VEQUAL? TEMP60 TEMP57 + TAG188>
		    <DEAD TEMP60>
		    <RESTUV REM-VEC15 1 = REM-VEC15 (TYPE VECTOR)>
		    <EMPUV? REM-VEC15 - TAG189>
		    <JUMP + PHRASE187>
TAG188
		    <SET ANY-JCL?18 'T (TYPE ATOM)>
		    <GEN-SET 'DOC 'T>
		    <JUMP + PHRASE238>
PHRASE187
		    <SET REM-VEC15 [V /V] (TYPE VECTOR)>
		    <LOOP (TEMP57 VALUE) (REM-VEC15 LENGTH VALUE)>
TAG195
		    <NTHUV REM-VEC15 1 = TEMP60>
		    <VEQUAL? TEMP60 TEMP57 + TAG194>
		    <DEAD TEMP60>
		    <RESTUV REM-VEC15 1 = REM-VEC15 (TYPE VECTOR)>
		    <EMPUV? REM-VEC15 - TAG195>
		    <JUMP + PHRASE193>
TAG194
		    <SETG 'VERBOSE? 'T>
		    <JUMP + PHRASE238>
PHRASE193
		    <SET REM-VEC15 [G /G] (TYPE VECTOR)>
		    <LOOP (TEMP57 VALUE) (REM-VEC15 LENGTH VALUE)>
TAG199
		    <NTHUV REM-VEC15 1 = TEMP60>
		    <VEQUAL? TEMP60 TEMP57 + TAG198>
		    <DEAD TEMP60>
		    <RESTUV REM-VEC15 1 = REM-VEC15 (TYPE VECTOR)>
		    <EMPUV? REM-VEC15 - TAG199>
		    <JUMP + PHRASE197>
TAG198
		    <SET ANY-JCL?18 'T (TYPE ATOM)>
		    <SETG 'GLUE 'T>
		    <JUMP + PHRASE238>
PHRASE197
		    <SET REM-VEC15 [GC /GC] (TYPE VECTOR)>
		    <LOOP (TEMP57 VALUE) (REM-VEC15 LENGTH VALUE)>
TAG203
		    <NTHUV REM-VEC15 1 = TEMP60>
		    <VEQUAL? TEMP60 TEMP57 + TAG202>
		    <DEAD TEMP60>
		    <RESTUV REM-VEC15 1 = REM-VEC15 (TYPE VECTOR)>
		    <EMPUV? REM-VEC15 - TAG203>
		    <JUMP + PHRASE201>
TAG202
		    <SET ANY-JCL?18 'T (TYPE ATOM)>
		    <SETG 'GC-MODE 'T>
		    <JUMP + PHRASE238>
PHRASE201
		    <SET REM-VEC15 [I /I] (TYPE VECTOR)>
		    <LOOP (TEMP57 VALUE) (REM-VEC15 LENGTH VALUE)>
TAG207
		    <NTHUV REM-VEC15 1 = TEMP60>
		    <VEQUAL? TEMP60 TEMP57 + TAG206>
		    <DEAD TEMP60>
		    <RESTUV REM-VEC15 1 = REM-VEC15 (TYPE VECTOR)>
		    <EMPUV? REM-VEC15 - TAG207>
		    <JUMP + PHRASE205>
TAG206
		    <SET ANY-JCL?18 'T (TYPE ATOM)>
		    <SETG 'INT-MODE 'T>
		    <JUMP + PHRASE238>
PHRASE205
		    <SET REM-VEC15 [P /P] (TYPE VECTOR)>
		    <LOOP (TEMP57 VALUE) (REM-VEC15 LENGTH VALUE)>
TAG211
		    <NTHUV REM-VEC15 1 = TEMP60>
		    <VEQUAL? TEMP60 TEMP57 + TAG210>
		    <DEAD TEMP60>
		    <RESTUV REM-VEC15 1 = REM-VEC15 (TYPE VECTOR)>
		    <EMPUV? REM-VEC15 - TAG211>
		    <JUMP + PHRASE209>
TAG210
		    <GEN-SET 'PRECOMPILED 'T>
		    <JUMP + PHRASE238>
PHRASE209
		    <SET REM-VEC15 [PA /PA] (TYPE VECTOR)>
		    <LOOP (TEMP57 VALUE) (REM-VEC15 LENGTH VALUE)>
TAG217
		    <NTHUV REM-VEC15 1 = TEMP60>
		    <VEQUAL? TEMP60 TEMP57 + TAG216>
		    <DEAD TEMP60>
		    <RESTUV REM-VEC15 1 = REM-VEC15 (TYPE VECTOR)>
		    <EMPUV? REM-VEC15 - TAG217>
		    <JUMP + PHRASE238>
TAG216
		    <GEN-SET 'PRECOMPILED 'T>
		    <GEN-SET 'AUTO-PRECOMP 'T>
		    <JUMP + PHRASE238>
PHRASE185
		    <TYPE? TEMP57 <TYPE-CODE ADECL> - PHRASE223>
		    <NTHUV TEMP57 1 = REM-VEC15>
		    <SET TEMP60 [P /P PA /PA] (TYPE VECTOR)>
		    <TYPE? REM-VEC15 <TYPE-CODE ATOM> - PHRASE238>
		    <LOOP (REM-VEC15 VALUE) (TEMP60 LENGTH VALUE)>
TAG227
		    <NTHUV TEMP60 1 = TEMP58>
		    <VEQUAL? TEMP58 REM-VEC15 + TAG226>
		    <DEAD TEMP58>
		    <RESTUV TEMP60 1 = TEMP60 (TYPE VECTOR)>
		    <EMPUV? TEMP60 - TAG227>
		    <JUMP + PHRASE238>
TAG226
		    <NTHUV TEMP57 2 = TEMP60>
		    <GEN-SET 'PRECOMPILED TEMP60>
		    <DEAD TEMP60>
		    <NTHUV TEMP57 1 = TEMP60>
		    <DEAD TEMP57>
		    <SET REM-VEC15 [PA /PA] (TYPE VECTOR)>
		    <TYPE? TEMP60 <TYPE-CODE ATOM> - PHRASE238>
		    <LOOP (TEMP60 VALUE) (REM-VEC15 LENGTH VALUE)>
TAG234
		    <NTHUV REM-VEC15 1 = TEMP58>
		    <VEQUAL? TEMP58 TEMP60 + TAG233>
		    <DEAD TEMP58>
		    <RESTUV REM-VEC15 1 = REM-VEC15 (TYPE VECTOR)>
		    <EMPUV? REM-VEC15 - TAG234>
		    <JUMP + PHRASE238>
TAG233
		    <GEN-SET 'AUTO-PRECOMP 'T>
		    <JUMP + PHRASE238>
PHRASE223
		    <FRAME 'EVAL>
		    <PUSH TEMP57>
		    <DEAD TEMP57>
		    <CALL 'EVAL 1>
PHRASE238
		    <REST1 ST63 = ST63>
		    <JUMP + MAP177>
PHRASE167
		    <FRAME 'LEX>
		    <PUSH JCL-STR12>
		    <LENUS JCL-STR12 = STACK (TYPE FIX)>
		    <CALL 'LEX 2 = VV62>
COND166
		    <ENDIF "TOPS20">
		    <VEQUAL? ANY-JCL?18 0 - PHRASE242>
		    <SET QUICK?16 %<> (TYPE FALSE)>
PHRASE242
		    <EMPL? VV62 + AGAIN23 (TYPE LIST)>
		    <NTHL VV62 1 = ST63>
		    <TYPE? ST63 <TYPE-CODE STRING> - PHRASE245>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? ST63 "BOOT" - PHRASE245>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP58 "BOOT" (TYPE STRING)>
		    <LENUS ST63 = TEMP57 (TYPE FIX)>
		    <VEQUAL? TEMP57 4 - PHRASE245>
		    <LOOP (ST63 VALUE LENGTH) (TEMP58 VALUE LENGTH) (TEMP57 VALUE)>
TAG246
		    <NTHUS ST63 1 = REM-VEC15>
		    <NTHUS TEMP58 1 = TEMP60>
		    <VEQUAL? REM-VEC15 TEMP60 - PHRASE245>
		    <DEAD REM-VEC15 TEMP60>
		    <RESTUS ST63 1 = ST63 (TYPE STRING)>
		    <RESTUS TEMP58 1 = TEMP58 (TYPE STRING)>
		    <SUB TEMP57 1 = TEMP57 (TYPE FIX)>
		    <GRTR? TEMP57 0 + TAG246 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <SETG 'BOOT-MODE 'T>
		    <SETG 'INT-MODE 'T>
		    <SETG 'GC-MODE %<>>
PHRASE245
		    <GVAL 'INT-MODE = TEMP58>
		    <TYPE? TEMP58 <TYPE-CODE FALSE> + EXIT391>
		    <DEAD TEMP58>
		    <GEN-SET 'EXPFLOAD 'T>
		    <JUMP + EXIT391>
PHRASE44
		    <SETG 'VERBOSE? %<>>
		    <FRAME 'PRINC>
		    <PUSH "File(s): ">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <FRAME 'READSTRING>
		    <PUSH BUF10>
		    <GEN-LVAL 'INCHAN = STACK>
		    <PUSH "">
		    <CALL 'READSTRING 3 = REM-VEC15>
		    <FRAME 'LEX>
		    <PUSH BUF10>
		    <PUSH REM-VEC15>
		    <DEAD REM-VEC15>
		    <CALL 'LEX 2 = VV62>
		    <FRAME 'CRLF>
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'CRLF 1>
		    <EMPL? VV62 - PHRASE263 (TYPE LIST)>
		    <FRAME 'LEAVE-MIMOC>
		    <PUSH UN17>
		    <CALL 'LEAVE-MIMOC 1>
		    <JUMP + AGAIN23>
PHRASE263
		    <VEQUAL? QUICK?16 0 - PHRASE286>
		    <FRAME 'PRINC>
		    <PUSH "Doc: ">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <FRAME 'TYI>
		    <CALL 'TYI 0 = TEMP58>
		    <SET TEMP141 "YyTt " (TYPE STRING)>
		    <TYPE? TEMP58 <TYPE-CODE CHARACTER> - TAG272>
		    <EMPUS? TEMP141 + TAG272>
		    <LOOP (TEMP58 VALUE) (TEMP141 LENGTH VALUE)>
TAG274
		    <NTHUS TEMP141 1 = REM-VEC15>
		    <VEQUAL? REM-VEC15 TEMP58 + TAG273>
		    <DEAD REM-VEC15>
		    <RESTUS TEMP141 1 = TEMP141 (TYPE STRING)>
		    <EMPUS? TEMP141 - TAG274>
TAG272
		    <SET TEMP141 %<> (TYPE FALSE)>
TAG273
		    <GEN-SET 'DOC TEMP141>
		    <VEQUAL? TEMP141 0 + PHRASE271>
		    <DEAD TEMP141>
		    <FRAME 'PRINC>
		    <PUSH " [Listing]">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <FRAME 'CRLF>
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'CRLF 1>
		    <JUMP + PHRASE286>
PHRASE271
		    <FRAME 'PRINC>
		    <PUSH " [No Listing]">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <FRAME 'CRLF>
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'CRLF 1>
PHRASE286
		    <NTHL VV62 1 = REM-VEC15>
		    <TYPE? REM-VEC15 <TYPE-CODE STRING> - TAG296>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? REM-VEC15 "BOOT" + PHRASE295>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP57 "BOOT" (TYPE STRING)>
		    <LENUS REM-VEC15 = ST63 (TYPE FIX)>
		    <VEQUAL? ST63 4 - TAG296>
		    <LOOP (REM-VEC15 VALUE LENGTH) (TEMP57 VALUE LENGTH) (ST63 VALUE)>
TAG302
		    <NTHUS REM-VEC15 1 = TEMP58>
		    <NTHUS TEMP57 1 = TEMP60>
		    <VEQUAL? TEMP58 TEMP60 - TAG296>
		    <DEAD TEMP58 TEMP60>
		    <RESTUS REM-VEC15 1 = REM-VEC15 (TYPE STRING)>
		    <RESTUS TEMP57 1 = TEMP57 (TYPE STRING)>
		    <SUB ST63 1 = ST63 (TYPE FIX)>
		    <GRTR? ST63 0 + TAG302 (TYPE FIX)>
		    <JUMP + PHRASE295>
		    <ENDIF "STRING-EQUAL?">
TAG296
		    <SETG 'BOOT-MODE %<>>
		    <VEQUAL? QUICK?16 0 - PHRASE349>
		    <FRAME 'PRINC>
		    <PUSH "Interpreter: ">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <FRAME 'TYI>
		    <CALL 'TYI 0 = REM-VEC15>
		    <SET TEMP60 " YyTt" (TYPE STRING)>
		    <TYPE? REM-VEC15 <TYPE-CODE CHARACTER> - PHRASE309>
		    <EMPUS? TEMP60 + PHRASE309>
		    <LOOP (REM-VEC15 VALUE) (TEMP60 LENGTH VALUE)>
TAG311
		    <NTHUS TEMP60 1 = TEMP58>
		    <VEQUAL? TEMP58 REM-VEC15 + TAG310>
		    <DEAD TEMP58>
		    <RESTUS TEMP60 1 = TEMP60 (TYPE STRING)>
		    <EMPUS? TEMP60 - TAG311>
		    <JUMP + PHRASE309>
TAG310
		    <FRAME 'PRINC>
		    <PUSH " [Interpreter Code]">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <GEN-SET 'EXPFLOAD 'T>
		    <SETG 'INT-MODE 'T>
		    <JUMP + PHRASE319>
PHRASE309
		    <SETG 'INT-MODE %<>>
		    <FRAME 'PRINC>
		    <PUSH " [User Code]">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
PHRASE319
		    <FRAME 'CRLF>
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'CRLF 1>
		    <FRAME 'PRINC>
		    <PUSH "GC: ">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <FRAME 'TYI>
		    <CALL 'TYI 0 = REM-VEC15>
		    <SET TEMP57 " YyTt" (TYPE STRING)>
		    <TYPE? REM-VEC15 <TYPE-CODE CHARACTER> - PHRASE331>
		    <EMPUS? TEMP57 + PHRASE331>
		    <LOOP (REM-VEC15 VALUE) (TEMP57 LENGTH VALUE)>
TAG333
		    <NTHUS TEMP57 1 = ST63>
		    <VEQUAL? ST63 REM-VEC15 + TAG332>
		    <DEAD ST63>
		    <RESTUS TEMP57 1 = TEMP57 (TYPE STRING)>
		    <EMPUS? TEMP57 - TAG333>
		    <JUMP + PHRASE331>
TAG332
		    <FRAME 'PRINC>
		    <PUSH " [GC Code]">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <SETG 'GC-MODE 'T>
		    <JUMP + PHRASE342>
PHRASE331
		    <SETG 'GC-MODE %<>>
		    <FRAME 'PRINC>
		    <PUSH " [Non-GC Code]">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
PHRASE342
		    <FRAME 'CRLF>
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'CRLF 1>
		    <JUMP + PHRASE349>
PHRASE295
		    <FRAME 'PRINC>
		    <PUSH " [Boot mode]">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <FRAME 'CRLF>
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'CRLF 1>
		    <SETG 'INT-MODE 'T>
		    <SETG 'BOOT-MODE 'T>
		    <SETG 'GC-MODE %<>>
PHRASE349
		    <VEQUAL? QUICK?16 0 - PHRASE359>
		    <GVAL 'BOOT-MODE = REM-VEC15>
		    <TYPE? REM-VEC15 <TYPE-CODE FALSE> - PHRASE359>
		    <DEAD REM-VEC15>
		    <FRAME 'PRINC>
		    <PUSH "Glue: ">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <FRAME 'TYI>
		    <CALL 'TYI 0 = REM-VEC15>
		    <SET TEMP57 " YyTt" (TYPE STRING)>
		    <TYPE? REM-VEC15 <TYPE-CODE CHARACTER> - PHRASE366>
		    <EMPUS? TEMP57 + PHRASE366>
		    <LOOP (REM-VEC15 VALUE) (TEMP57 LENGTH VALUE)>
TAG368
		    <NTHUS TEMP57 1 = ST63>
		    <VEQUAL? ST63 REM-VEC15 + TAG367>
		    <DEAD ST63>
		    <RESTUS TEMP57 1 = TEMP57 (TYPE STRING)>
		    <EMPUS? TEMP57 - TAG368>
		    <JUMP + PHRASE366>
TAG367
		    <SETG 'GLUE 'T>
		    <FRAME 'PRINC>
		    <PUSH " [Glue]">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <JUMP + PHRASE377>
PHRASE366
		    <FRAME 'PRINC>
		    <PUSH " [No Glue]">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <SETG 'GLUE %<>>
PHRASE377
		    <FRAME 'CRLF>
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'CRLF 1>
PHRASE359
		    <VEQUAL? QUICK?16 0 - EXIT391>
		    <GVAL 'INT-MODE = REM-VEC15>
		    <TYPE? REM-VEC15 <TYPE-CODE FALSE> - EXIT391>
		    <DEAD REM-VEC15>
		    <FRAME 'PRINC>
		    <PUSH "Things to do: ">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <LOOP>
AGAIN393
		    <INTGO>
		    <FRAME 'NEXTCHR>
		    <CALL 'NEXTCHR 0 = REM-VEC15>
		    <EQUAL? REM-VEC15 !\ - PHRASE395>
		    <DEAD REM-VEC15>
		    <FRAME 'CRLF>
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'CRLF 1>
		    <JUMP + EXIT391>
PHRASE395
		    <FRAME 'EVAL>
		    <FRAME 'READ>
		    <CALL 'READ 0 = STACK>
		    <CALL 'EVAL 1>
		    <JUMP + AGAIN393>
EXIT391
		    <FRAME 'CHANNEL-OPEN>
		    <PUSH 'PARSE>
		    <NTHL VV62 1 = STACK>
		    <CALL 'CHANNEL-OPEN 2 = REM-VEC15>
		    <TYPE? REM-VEC15 <TYPE-CODE FALSE> + PHRASE404>
		    <FRAME 'FILE-MIMOC>
		    <FRAME 'CHANNEL-OP>
		    <PUSH REM-VEC15>
		    <PUSH 'NM1>
		    <CALL 'CHANNEL-OP 2 = STACK>
		    <PUSH %<>>
		    <PUSH %<>>
		    <GEN-LVAL 'DOC = STACK>
		    <SET TEMP57 4 (TYPE FIX)>
		    <SET ST63 VV62>
		    <LOOP (ST63 VALUE) (TEMP57 VALUE)>
TAG413
		    <INTGO>
		    <EMPL? ST63 + TAG406>
		    <NTHL ST63 1 = STACK>
		    <RESTL ST63 1 = ST63 (TYPE LIST)>
		    <ADD TEMP57 1 = TEMP57 (TYPE FIX)>
		    <JUMP + TAG413>
TAG406
		    <CALL 'FILE-MIMOC TEMP57>
		    <DEAD TEMP57>
		    <FRAME 'CHANNEL-CLOSE>
		    <PUSH REM-VEC15>
		    <DEAD REM-VEC15>
		    <CALL 'CHANNEL-CLOSE 1>
		    <FRAME 'CRLF>
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'CRLF 1>
		    <FRAME 'PRINC>
		    <PUSH "Done">
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'PRINC 2>
		    <FRAME 'LEAVE-MIMOC>
		    <PUSH UN17>
		    <CALL 'LEAVE-MIMOC 1>
		    <JUMP + PHRASE423>
PHRASE404
		    <FRAME 'SYS-ERR>
		    <NTHL VV62 1 = STACK (TYPE STRING)>
		    <PUSH REM-VEC15>
		    <DEAD REM-VEC15>
		    <PUSH 'T>
		    <CALL 'SYS-ERR 3 = REM-VEC15>
		    <FRAME 'PRINT-MANY>
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <PUSH 'PRINC>
		    <PUSH "Can't find name of output file:  ">
		    <NTHL REM-VEC15 1 = STACK>
		    <PUSH "--">
		    <RESTL REM-VEC15 1 = QUICK?16 (TYPE LIST)>
		    <DEAD REM-VEC15>
		    <NTHL QUICK?16 1 = STACK>
		    <DEAD QUICK?16>
		    <CALL 'PRINT-MANY 6>
		    <FRAME 'CRLF>
		    <GEN-LVAL 'OUTCHAN = STACK>
		    <CALL 'CRLF 1>
		    <SET QUICK?16 'T (TYPE ATOM)>
		    <SET NOJCL?6 'T (TYPE ATOM)>
		    <JUMP + AGAIN23>
PHRASE423
		    <SET NOJCL?6 'T (TYPE ATOM)>
		    <JUMP + AGAIN23>
		    <END RUN-QUESTIONS>

#WORD *14331341244*
		    <GFCN LEAVE-MIMOC ("VALUE" ATOM STRING) UN4>
		    <TEMP TEMP7:STRING TEMP8 TEMP9 TEMP10 TEMP11>
		    <INTGO>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? UN4 "TAA" - PHRASE6>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP7 UN4>
		    <DEAD UN4>
		    <SET TEMP8 "TAA" (TYPE STRING)>
		    <LENUS TEMP7 = TEMP9 (TYPE FIX)>
		    <VEQUAL? TEMP9 3 - PHRASE6>
		    <LOOP (TEMP7 VALUE LENGTH) (TEMP8 VALUE LENGTH) (TEMP9 VALUE)>
TAG12
		    <NTHUS TEMP7 1 = TEMP10>
		    <NTHUS TEMP8 1 = TEMP11>
		    <VEQUAL? TEMP10 TEMP11 - PHRASE6>
		    <DEAD TEMP10 TEMP11>
		    <RESTUS TEMP7 1 = TEMP7 (TYPE STRING)>
		    <RESTUS TEMP8 1 = TEMP8 (TYPE STRING)>
		    <SUB TEMP9 1 = TEMP9 (TYPE FIX)>
		    <GRTR? TEMP9 0 + TAG12 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <FRAME 'QUIT>
		    <CALL 'QUIT 0 = TEMP8>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
PHRASE6
		    <FRAME 'EXIT>
		    <CALL 'EXIT 0 = TEMP8>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
		    <END LEAVE-MIMOC>

#WORD *21002056165*
		    <GFCN LEX ("VALUE" LIST STRING "OPTIONAL" FIX) BUF6 LEN7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP TEMP10 L13:LIST TEMP21 TEMP23 CHR14:CHARACTER>
		    <INTGO>
		    <TYPE? LEN7 <TYPE-CODE UNBOUND> - TAG8>
		    <LENUS BUF6 = LEN7 (TYPE FIX)>
TAG8
		    <LENUS BUF6 = TEMP10 (TYPE FIX)>
		    <SUB TEMP10 LEN7 = TEMP10 (TYPE FIX)>
		    <RESTUS BUF6 TEMP10 = TEMP10 (TYPE STRING)>
		    <MOVE-STRING BUF6 TEMP10 LEN7 (NO-OVERLAP %<>)>
		    <DEAD BUF6 LEN7>
		    <SET BUF6 TEMP10>
		    <DEAD TEMP10>
		    <CONS "" () = L13>
		    <SET TEMP10 %<> (TYPE FALSE)>
		    <LOOP>
AGAIN16
		    <INTGO>
		    <EMPUS? BUF6 - PHRASE18 (TYPE STRING)>
		    <TYPE? TEMP10 <TYPE-CODE FALSE> + PHRASE20>
		    <SET TEMP21 L13>
		    <LOOP (TEMP21 VALUE)>
TAG22
		    <RESTL TEMP21 1 = TEMP23 (TYPE LIST)>
		    <EMPL? TEMP23 + TAG24>
		    <SET TEMP21 TEMP23>
		    <DEAD TEMP23>
		    <JUMP + TAG22>
TAG24
		    <PUSH TEMP10>
		    <DEAD TEMP10>
		    <UBLOCK <TYPE-CODE STRING> 1 = TEMP23 (TYPE STRING)>
		    <CONS TEMP23 () = TEMP23>
		    <PUTREST TEMP21 TEMP23>
		    <DEAD TEMP21 TEMP23>
PHRASE20
		    <RESTL L13 1 = TEMP10 (TYPE LIST)>
		    <DEAD L13>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
PHRASE18
		    <NTHUS BUF6 1 = CHR14 (TYPE CHARACTER)>
		    <SET TEMP23 " 	,
" (TYPE STRING)>
		    <EMPUS? TEMP23 + PHRASE27>
		    <LOOP (CHR14 VALUE) (TEMP23 LENGTH VALUE)>
TAG29
		    <NTHUS TEMP23 1 = TEMP21>
		    <VEQUAL? TEMP21 CHR14 + TAG28>
		    <DEAD TEMP21>
		    <RESTUS TEMP23 1 = TEMP23 (TYPE STRING)>
		    <EMPUS? TEMP23 - TAG29>
		    <JUMP + PHRASE27>
TAG28
		    <TYPE? TEMP10 <TYPE-CODE FALSE> + PHRASE36>
		    <LENUS TEMP10 = TEMP23 (TYPE FIX)>
		    <LENUS BUF6 = TEMP21 (TYPE FIX)>
		    <SUB TEMP23 TEMP21 = TEMP23 (TYPE FIX)>
		    <DEAD TEMP21>
		    <UUBLOCK <TYPE-CODE STRING> TEMP23 = TEMP21 (TYPE STRING)>
		    <MOVE-STRING TEMP10 TEMP21 TEMP23 (NO-OVERLAP T)>
		    <DEAD TEMP10 TEMP23>
		    <SET TEMP10 TEMP21>
		    <DEAD TEMP21>
		    <SET TEMP21 L13>
		    <LOOP (TEMP21 VALUE)>
TAG34
		    <RESTL TEMP21 1 = TEMP23 (TYPE LIST)>
		    <EMPL? TEMP23 + TAG35>
		    <SET TEMP21 TEMP23>
		    <DEAD TEMP23>
		    <JUMP + TAG34>
TAG35
		    <CONS TEMP10 () = TEMP23>
		    <DEAD TEMP10>
		    <PUTREST TEMP21 TEMP23>
		    <DEAD TEMP21 TEMP23>
		    <SET TEMP10 %<> (TYPE FALSE)>
		    <JUMP + PHRASE36>
PHRASE27
		    <TYPE? TEMP10 <TYPE-CODE FALSE> - PHRASE36>
		    <SET TEMP10 BUF6>
PHRASE36
		    <RESTUS BUF6 1 = BUF6 (TYPE STRING)>
		    <JUMP + AGAIN16>
		    <END LEX>
