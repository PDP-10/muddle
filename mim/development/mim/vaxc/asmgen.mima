
"CODE IS STORED IN A LIST OF UVECTORS.  EACH INSTRUCTION IS A FIX.  THE
 INSTRUCTION CONTAINS THE INSTRUCTION BYTE (8 BITS) + INFORMATION TO FIX UP THE
 INSTRUCTION.  WHEN AN INSTRUCTION DOES NOT FIT INTO A SINGLE FIX IT IS
 FOLLOWED BY ADDITIONAL FIXES.  EVERY INSTRUCTION TAKES UP AN INTEGER NUMBER OF
 FIXES EVEN THOUGH THE OUTPUT VERSION MAY BE DIFFERENT.  THERE IS A TEMPORARY 
 FIXUP TABLE WHICH IS USED TO DETERMINE THE LOCATION OF THE TEMPORARIES AND
 ALSO A LABEL FIXUP TABLE TO KEEP TRACK OF THE LABELS.  THE SYSTEM ATTEMPTS
 TO FIX UP LABELS IN PARTICULAR INTERVALS SO THAT IT DOESN'T HAVE TO KEEP
 TRACK OF TOO MANY LABELS.  ANY NON-LOOPING LABELS WILL BE FLUSHED AS SOON
 AS THEY ARE FIXED UP.  THERE IS ALSO A CONSTANT TABLE WHICH KEEPS TRACK OF
 THE LOCATION OF ALL FULL-WORD CONSTANTS.  THESE ARE FIXED UP LIKE LABELS.  IN
 GENERAL THE FIRST OCCURANCE OF A 32 BIT CONSTANT WILL BE OUTPUT AS AN
 IMMEDIATE INSTRUCTION.  ALL OTHER OCCURANCES WILL BE OUTPUT AS A REFERENCE
 TO THAT CONSTANT IN PC-RELATIVE MODE (THIS WILL BE AN OPTION.  WE MAY
 EVENTUALLY GENERATE ALL CONSTANTS IMMEDIATE IF THAT PROVES TO GENERATE
 FASTER RUNNING CODE"

#WORD *4161262110*
		    <GFCN INIT-CODE ("VALUE" FIX)>
		    <TEMP TEMP4 TEMP5>
		    <INTGO>
		    <UUBLOCK <TYPE-CODE UVECTOR> 1024 = TEMP4>
		    <SET TEMP5 TEMP4>
		    <LOOP (TEMP5 VALUE LENGTH)>
ISTR6
		    <EMPUU? TEMP5 + ISTRE7>
		    <PUTUU TEMP5 1 0>
		    <RESTUU TEMP5 1 = TEMP5>
		    <JUMP + ISTR6>
ISTRE7
		    <SETG 'CURRENT-CODE TEMP4>
		    <DEAD TEMP4>
		    <GVAL 'CURRENT-CODE = TEMP4>
		    <CONS TEMP4 () = TEMP4>
		    <SETG 'CODE-LIST TEMP4>
		    <DEAD TEMP4>
		    <SETG 'CODE-COUNT 1>
		    <RETURN 1>
		    <END INIT-CODE>

#WORD *15055105314*
		    <GFCN RESET-CODE ("VALUE" <LIST [REST FIX]>)>
		    <TEMP TEMP4>
		    <INTGO>
		    <GVAL 'CODE-LIST = TEMP4>
		    <NTHL TEMP4 1 = TEMP4 (TYPE UVECTOR)>
		    <SETG 'CURRENT-CODE TEMP4>
		    <DEAD TEMP4>
		    <SETG 'CODE-COUNT 1>
		    <SETG 'SAVED-CODE-COUNT %<>>
		    <SETG 'SAVED-CODE-STACK ()>
		    <RETURN ()>
		    <END RESET-CODE>

#WORD *7273431076*
		    <GFCN NTH-CODE ("VALUE" FIX FIX) NUM4>
		    <TEMP CL5 PTR9:FIX>
		    <INTGO>
		    <GVAL 'CODE-LIST = CL5>
		    <SET PTR9 NUM4>
		    <LOOP>
AGAIN10
		    <INTGO>
		    <GRTR? PTR9 1024 + PHRASE12 (TYPE FIX)>
		    <NTHL CL5 1 = CL5 (TYPE UVECTOR)>
		    <NTHUU CL5 PTR9 = PTR9 (TYPE FIX)>
		    <DEAD CL5>
		    <RETURN PTR9>
		    <DEAD PTR9>
PHRASE12
		    <RESTL CL5 1 = CL5 (TYPE LIST)>
		    <EMPL? CL5 - PHRASE15 (TYPE LIST)>
		    <FRAME 'ERROR>
		    <PUSH 'OUT-OF-BOUNDS>
		    <PUSH NUM4>
		    <PUSH 'NTH-CODE>
		    <CALL 'ERROR 3>
PHRASE15
		    <SUB PTR9 1024 = PTR9 (TYPE FIX)>
		    <JUMP + AGAIN10>
		    <END NTH-CODE>

#WORD *16276717004*
		    <GFCN PUT-CODE ("VALUE" ATOM FIX FIX) NUM4 VAL5>
		    <TEMP CL6 PTR10:FIX>
		    <INTGO>
		    <GVAL 'CODE-LIST = CL6>
		    <SET PTR10 NUM4>
		    <LOOP>
AGAIN11
		    <INTGO>
		    <GRTR? PTR10 1024 + PHRASE13 (TYPE FIX)>
		    <NTHL CL6 1 = CL6 (TYPE UVECTOR)>
		    <PUTUU CL6 PTR10 VAL5>
		    <DEAD CL6 PTR10 VAL5>
		    <RETURN 'T>
PHRASE13
		    <RESTL CL6 1 = CL6 (TYPE LIST)>
		    <EMPL? CL6 - PHRASE16 (TYPE LIST)>
		    <FRAME 'ERROR>
		    <PUSH 'OUT-OF-BOUNDS>
		    <PUSH NUM4>
		    <CALL 'ERROR 2>
PHRASE16
		    <SUB PTR10 1024 = PTR10 (TYPE FIX)>
		    <JUMP + AGAIN11>
		    <END PUT-CODE>

#WORD *33337566645*
		    <GFCN ADD-WORD-TO-CODE ("VALUE" FIX FIX) WD4>
		    <TEMP CCODE6 COUNT7:FIX TEMP10 RLST5:LIST>
		    <INTGO>
		    <GVAL 'CURRENT-CODE = CCODE6>
		    <GVAL 'CODE-COUNT = COUNT7>
		    <EMPUU? CCODE6 - PHRASE18 (TYPE UVECTOR)>
		    <GVAL 'CODE-LIST = TEMP10>
		    <SUB COUNT7 1 = CCODE6 (TYPE FIX)>
		    <DIV CCODE6 1024 = CCODE6 (TYPE FIX)>
		    <SUB CCODE6 1 = CCODE6 (TYPE FIX)>
		    <GRTR? CCODE6 0 - RESTL13 (TYPE FIX)>
		    <LOOP (TEMP10 VALUE) (CCODE6 VALUE)>
RESTL12
		    <INTGO>
		    <RESTL TEMP10 1 = TEMP10 (TYPE LIST)>
		    <SUB CCODE6 1 = CCODE6 (TYPE FIX)>
		    <GRTR? CCODE6 0 + RESTL12 (TYPE FIX)>
RESTL13
		    <SET RLST5 TEMP10>
		    <DEAD TEMP10>
		    <EMPL? RLST5 + PHRASE15>
		    <RESTL RLST5 1 = TEMP10 (TYPE LIST)>
		    <EMPL? TEMP10 - PHRASE15>
		    <DEAD TEMP10>
		    <UUBLOCK <TYPE-CODE UVECTOR> 1024 = CCODE6>
		    <SET TEMP10 CCODE6>
		    <LOOP (TEMP10 VALUE LENGTH)>
ISTR16
		    <EMPUU? TEMP10 + ISTRE17>
		    <PUTUU TEMP10 1 0>
		    <RESTUU TEMP10 1 = TEMP10>
		    <JUMP + ISTR16>
ISTRE17
		    <CONS CCODE6 () = TEMP10>
		    <PUTREST RLST5 TEMP10>
		    <DEAD RLST5 TEMP10>
		    <JUMP + PHRASE18>
PHRASE15
		    <RESTL RLST5 1 = TEMP10 (TYPE LIST)>
		    <DEAD RLST5>
		    <NTHL TEMP10 1 = CCODE6 (TYPE UVECTOR)>
		    <DEAD TEMP10>
PHRASE18
		    <PUTUU CCODE6 1 WD4>
		    <DEAD WD4>
		    <RESTUU CCODE6 1 = TEMP10 (TYPE UVECTOR)>
		    <DEAD CCODE6>
		    <SETG 'CURRENT-CODE TEMP10>
		    <DEAD TEMP10>
		    <ADD COUNT7 1 = CCODE6 (TYPE FIX)>
		    <DEAD COUNT7>
		    <SETG 'CODE-COUNT CCODE6>
		    <RETURN CCODE6>
		    <DEAD CCODE6>
		    <END ADD-WORD-TO-CODE>

#WORD *4545712702*
		    <GFCN PRINT-SPEC-LABEL ("VALUE" FIX SPEC-LABEL) X4>
		    <TEMP OUTCHAN5>
		    <INTGO>
		    <GEN-LVAL 'OUTCHAN = OUTCHAN5>
		    <FRAME 'PRINC>
		    <PUSH "ITAG">
		    <PUSH OUTCHAN5>
		    <CALL 'PRINC 2>
		    <FRAME 'PRIN1>
		    <CHTYPE X4 <TYPE-CODE FIX> = STACK>
		    <DEAD X4>
		    <PUSH OUTCHAN5>
		    <DEAD OUTCHAN5>
		    <CALL 'PRIN1 2 = OUTCHAN5>
		    <RETURN OUTCHAN5>
		    <DEAD OUTCHAN5>
		    <END PRINT-SPEC-LABEL>

<COND (<GASSIGNED? PRINT-SPEC-LABEL> <PRINTTYPE SPEC-LABEL ,PRINT-SPEC-LABEL>)>

#WORD *1534135646*
		    <GFCN PRINT-LABEL-REF ("VALUE" <OR ATOM SPEC-LABEL> LABEL-REF) LREF4>
		    <TEMP OUTCHAN5>
		    <INTGO>
		    <GEN-LVAL 'OUTCHAN = OUTCHAN5>
		    <FRAME 'PRINC>
		    <PUSH "#LABEL-REF ">
		    <PUSH OUTCHAN5>
		    <CALL 'PRINC 2>
		    <FRAME 'PRIN1>
		    <NTHUV LREF4 1 = STACK>
		    <DEAD LREF4>
		    <PUSH OUTCHAN5>
		    <DEAD OUTCHAN5>
		    <CALL 'PRIN1 2 = OUTCHAN5>
		    <RETURN OUTCHAN5>
		    <DEAD OUTCHAN5>
		    <END PRINT-LABEL-REF>

<COND (<GASSIGNED? PRINT-LABEL-REF> <PRINTTYPE LABEL-REF ,PRINT-LABEL-REF>)>

#WORD *31705261531*
		    <GFCN INIT-LABEL-TABLE ("VALUE" FIX ANY) RESTART4>
		    <TEMP LAB6:LABEL-REF TMP5:VECTOR TEMP8>
		    <INTGO>
		    <SETG 'LABEL-TABLE ()>
		    <FRAME 'CREATE-LABEL-REF>
		    <PUSH '\ >
		    <CALL 'CREATE-LABEL-REF 1 = LAB6>
		    <UUBLOCK <TYPE-CODE VECTOR> 128 = TMP5>
		    <SET TEMP8 TMP5>
		    <LOOP (TEMP8 VALUE LENGTH) (LAB6 TYPE VALUE LENGTH)>
ISTR9
		    <EMPUV? TEMP8 + ISTRE10>
		    <PUTUV TEMP8 1 LAB6>
		    <RESTUV TEMP8 1 = TEMP8>
		    <JUMP + ISTR9>
ISTRE10
		    <LENUV TMP5 = TEMP8 (TYPE FIX)>
		    <RESTUV TMP5 TEMP8 = TEMP8 (TYPE VECTOR)>
		    <DEAD TMP5>
		    <SETG 'OUTST-LABEL-TABLE TEMP8>
		    <DEAD TEMP8>
		    <TYPE? RESTART4 <TYPE-CODE FALSE> + BOOL11>
		    <DEAD RESTART4>
		    <SETG 'CURRENT-SLABEL 0>
BOOL11
		    <SETG 'PTNS-TABLE ()>
		    <SETG 'PTNS-COUNT 1>
		    <RETURN 1>
		    <END INIT-LABEL-TABLE>

#WORD *20545430565*
		    <GFCN MAKE-LABEL ("VALUE" ANY "OPTIONAL" ANY) ATM?6>
		    <OPT-DISPATCH 0 %<> OPT4 OPT5>
OPT4
		    <PUSH %<>>
OPT5
		    <TEMP TEMP12 STR7:STRING>
		    <INTGO>
		    <NTHR 'CURRENT-SLABEL 1 = TEMP12 (RECORD-TYPE ATOM) (BRANCH-FALSE + TAG11)>
		    <TYPE? TEMP12 <TYPE-CODE FALSE> + TAG11>
		    <NTHR TEMP12 1 = TEMP12 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP12 <TYPE-CODE UNBOUND> - PHRASE10>
		    <DEAD TEMP12>
TAG11
		    <SET TEMP12 0 (TYPE FIX)>
		    <JUMP + COND9>
PHRASE10
		    <GVAL 'CURRENT-SLABEL = TEMP12>
COND9
		    <ADD TEMP12 1 = TEMP12 (TYPE FIX)>
		    <SETG 'CURRENT-SLABEL TEMP12>
		    <TYPE? ATM?6 <TYPE-CODE FALSE> + PHRASE14>
		    <TYPE? ATM?6 <TYPE-CODE STRING> + PHRASE16>
		    <SET ATM?6 "ITAG" (TYPE STRING)>
PHRASE16
		    <PUSH ATM?6>
		    <DEAD ATM?6>
		    <FRAME 'UNPARSE>
		    <PUSH TEMP12>
		    <DEAD TEMP12>
		    <CALL 'UNPARSE 1 = STACK>
		    <UBLOCK <TYPE-CODE STRING> 2 = STR7 (TYPE STRING)>
		    <FRAME 'LOOKUP>
		    <PUSH STR7>
		    <GVAL 'VAR-OBLIST = STACK>
		    <CALL 'LOOKUP 2 = TEMP12>
		    <TYPE? TEMP12 <TYPE-CODE FALSE> - COND13>
		    <FRAME 'INSERT>
		    <PUSH STR7>
		    <DEAD STR7>
		    <GVAL 'VAR-OBLIST = STACK>
		    <CALL 'INSERT 2 = TEMP12>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
PHRASE14
		    <CHTYPE TEMP12 <TYPE-CODE SPEC-LABEL> = TEMP12>
COND13
		    <RETURN TEMP12>
		    <DEAD TEMP12>
		    <END MAKE-LABEL>

#WORD *31521250146*
		    <GFCN COPY-PSAVE ("VALUE" FIX PTN-SAVE CODEVEC) PSAVE4 NCODE5>
		    <TEMP TEMP9 RES6>
		    <INTGO>
		    <PUSH NCODE5>
		    <DEAD NCODE5>
		    <NTHUV PSAVE4 2 = STACK (TYPE VARTBL)>
		    <NTHUV PSAVE4 3 = STACK (TYPE ATOM)>
		    <NTHUV PSAVE4 4 = STACK>
		    <PUSH ()>
		    <UBLOCK <TYPE-CODE VECTOR> 5 = TEMP9 (TYPE VECTOR)>
		    <CHTYPE TEMP9 <TYPE-CODE PTN-SAVE> = RES6>
		    <DEAD TEMP9>
		    <NTHUV PSAVE4 5 = TEMP9 (TYPE LIST)>
		    <CONS RES6 TEMP9 = TEMP9>
		    <PUTUV PSAVE4 5 TEMP9 (TYPE LIST)>
		    <DEAD PSAVE4 TEMP9>
		    <GVAL 'PTNS-TABLE = TEMP9>
		    <CONS RES6 TEMP9 = TEMP9>
		    <DEAD RES6>
		    <SETG 'PTNS-TABLE TEMP9>
		    <DEAD TEMP9>
		    <GVAL 'PTNS-COUNT = TEMP9>
		    <PUTBITS 90 16 0 TEMP9 = RES6>
		    <DEAD TEMP9>
		    <GVAL 'PTNS-COUNT = TEMP9>
		    <ADD TEMP9 1 = TEMP9 (TYPE FIX)>
		    <SETG 'PTNS-COUNT TEMP9>
		    <DEAD TEMP9>
		    <RETURN RES6>
		    <DEAD RES6>
		    <END COPY-PSAVE>

#WORD *20767101443*
		    <GFCN KILL-PSAVE ("VALUE" <OR FALSE PTN-SAVE> PTN-SAVE) PSAVE4>
		    <TEMP TEMP14 TEMP16:LIST>
		    <INTGO>
		    <PUTUV PSAVE4 4 %<>>
		    <SET TEMP14 %<> (TYPE FALSE)>
		    <NTHUV PSAVE4 5 = TEMP16 (TYPE LIST)>
		    <DEAD PSAVE4>
		    <LOOP>
MAP6
		    <INTGO>
		    <EMPL? TEMP16 + MAPAP9>
		    <NTHL TEMP16 1 = TEMP14>
		    <PUTUV TEMP14 4 %<>>
		    <RESTL TEMP16 1 = TEMP16 (TYPE LIST)>
		    <JUMP + MAP6>
MAPAP9
		    <RETURN TEMP14>
		    <DEAD TEMP14>
		    <END KILL-PSAVE>

#WORD *23210600123*
		    <GFCN EMIT-POTENTIAL-STORE ("VALUE" <OR FALSE XREF-INFO> CODEVEC ATOM LINKVAR) CODE4 KIND5 LVAR6>
		    <TEMP TEMP9 PTN7:PTN-SAVE TEMP11 XREF22:XREF-INFO>
		    <INTGO>
		    <PUSH CODE4>
		    <DEAD CODE4>
		    <NTHUV LVAR6 1 = STACK (TYPE VARTBL)>
		    <PUSH KIND5>
		    <DEAD KIND5>
		    <PUSH 'T>
		    <PUSH ()>
		    <UBLOCK <TYPE-CODE VECTOR> 5 = TEMP9 (TYPE VECTOR)>
		    <CHTYPE TEMP9 <TYPE-CODE PTN-SAVE> = PTN7>
		    <DEAD TEMP9>
		    <GVAL 'PTNS-TABLE = TEMP9>
		    <CONS PTN7 TEMP9 = TEMP9>
		    <SETG 'PTNS-TABLE TEMP9>
		    <DEAD TEMP9>
		    <FRAME 'ADD-WORD-TO-CODE>
		    <LSH 90 24 = TEMP9 (TYPE FIX)>
		    <GVAL 'PTNS-COUNT = TEMP11>
		    <OR TEMP9 TEMP11 = STACK>
		    <DEAD TEMP9 TEMP11>
		    <CALL 'ADD-WORD-TO-CODE 1>
		    <GVAL 'PTNS-COUNT = TEMP11>
		    <ADD TEMP11 1 = TEMP11 (TYPE FIX)>
		    <SETG 'PTNS-COUNT TEMP11>
		    <DEAD TEMP11>
		    <SET TEMP9 %<> (TYPE FALSE)>
		    <NTHUV LVAR6 10 = TEMP11 (TYPE LIST)>
		    <DEAD LVAR6>
		    <LOOP>
MAP13
		    <INTGO>
		    <EMPL? TEMP11 + MAPAP16>
		    <NTHL TEMP11 1 = XREF22>
		    <NTHUV XREF22 11 = TEMP9 (TYPE LIST)>
		    <CONS PTN7 TEMP9 = TEMP9>
		    <PUTUV XREF22 11 TEMP9 (TYPE LIST)>
		    <DEAD TEMP9>
		    <SET TEMP9 XREF22>
		    <DEAD XREF22>
		    <RESTL TEMP11 1 = TEMP11 (TYPE LIST)>
		    <JUMP + MAP13>
MAPAP16
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END EMIT-POTENTIAL-STORE>

#WORD *21131445017*
		    <GFCN GET-PTNS ("VALUE" PTN-SAVE ANY) NUM4>
		    <TEMP TEMP5 TEMP6:FIX>
		    <INTGO>
		    <GVAL 'PTNS-TABLE = TEMP5>
		    <GVAL 'PTNS-COUNT = TEMP6>
		    <SUB TEMP6 NUM4 = TEMP6 (TYPE FIX)>
		    <DEAD NUM4>
		    <SUB TEMP6 1 = TEMP6 (TYPE FIX)>
		    <GRTR? TEMP6 0 - RESTL9 (TYPE FIX)>
		    <LOOP (TEMP5 VALUE) (TEMP6 VALUE)>
RESTL8
		    <INTGO>
		    <RESTL TEMP5 1 = TEMP5 (TYPE LIST)>
		    <SUB TEMP6 1 = TEMP6 (TYPE FIX)>
		    <GRTR? TEMP6 0 + RESTL8 (TYPE FIX)>
RESTL9
		    <NTHL TEMP5 1 = TEMP5 (TYPE PTN-SAVE)>
		    <RETURN TEMP5>
		    <DEAD TEMP5>
		    <END GET-PTNS>

#WORD *22070677772*
		    <GFCN SAVE-XREF-AC-INFO ("VALUE" XREF-INFO XREF-INFO AC-STATE SLOAD-STATE) XREF4 SSTATE5 SLSTATE6>
		    <TEMP>
		    <INTGO>
		    <PUTUV XREF4 3 SSTATE5>
		    <DEAD SSTATE5>
		    <PUTUV XREF4 10 SLSTATE6>
		    <DEAD SLSTATE6>
		    <RETURN XREF4>
		    <DEAD XREF4>
		    <END SAVE-XREF-AC-INFO>

#WORD *3007150023*
		    <GFCN PRINT-XREF-INFO ("VALUE" FIX XREF-INFO) XREF4>
		    <TEMP OUTCHAN5 TEMP10>
		    <INTGO>
		    <GEN-LVAL 'OUTCHAN = OUTCHAN5>
		    <FRAME 'PRINC>
		    <PUSH "#XREF-INFO ">
		    <PUSH OUTCHAN5>
		    <CALL 'PRINC 2>
		    <FRAME 'PRIN1>
		    <NTHUV XREF4 1 = TEMP10 (TYPE LABEL-REF)>
		    <NTHUV TEMP10 1 = STACK>
		    <DEAD TEMP10>
		    <PUSH OUTCHAN5>
		    <CALL 'PRIN1 2>
		    <FRAME 'PRINC>
		    <PUSH " ">
		    <PUSH OUTCHAN5>
		    <CALL 'PRINC 2>
		    <FRAME 'PRIN1>
		    <NTHUV XREF4 2 = STACK (TYPE FIX)>
		    <DEAD XREF4>
		    <PUSH OUTCHAN5>
		    <DEAD OUTCHAN5>
		    <CALL 'PRIN1 2 = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
		    <END PRINT-XREF-INFO>

<COND (<GASSIGNED? PRINT-XREF-INFO> <PRINTTYPE XREF-INFO ,PRINT-XREF-INFO>)>

"UPDATE THE LABEL TABLES FOR A BRANCH"

#WORD *35753643504*
		    <GFCN UPDLT-BRANCH ("VALUE" XREF-INFO <OR ATOM SPEC-LABEL> FIX ANY ANY BOOLEAN) LABEL4 CODEPTR5 STATUS?6 LILEN7 FORCEL?8>
		    <TEMP OUTST10>
		    <INTGO>
		    <GVAL 'OUTST-LABEL-TABLE = OUTST10>
		    <FRAME 'GET-LREF>
		    <PUSH LABEL4>
		    <DEAD LABEL4>
		    <CALL 'GET-LREF 1 = OUTST10>
		    <FRAME 'ADD-XREF>
		    <PUSH OUTST10>
		    <DEAD OUTST10>
		    <PUSH CODEPTR5>
		    <DEAD CODEPTR5>
		    <PUSH STATUS?6>
		    <DEAD STATUS?6>
		    <PUSH LILEN7>
		    <DEAD LILEN7>
		    <PUSH FORCEL?8>
		    <DEAD FORCEL?8>
		    <CALL 'ADD-XREF 5 = OUTST10>
		    <RETURN OUTST10>
		    <DEAD OUTST10>
		    <END UPDLT-BRANCH>

#WORD *1136336146*
		    <GFCN GET-LREF ("VALUE" LABEL-REF <OR ATOM SPEC-LABEL> "OPTIONAL" ANY) LABEL6 JUST-LOOKING?7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH %<>>
OPT5
		    <TEMP GL9 TEMP21:VECTOR LREF22:LABEL-REF>
		    <INTGO>
		    <GVAL 'OUTST-LABEL-TABLE = TEMP21>
		    <LOOP>
MAP11
		    <INTGO>
		    <EMPUV? TEMP21 + MAPAP14>
		    <NTHUV TEMP21 1 = LREF22>
		    <NTHUV LREF22 1 = GL9>
		    <EQUAL? GL9 LABEL6 - PHRASE24>
		    <DEAD GL9>
		    <TYPE? JUST-LOOKING?7 <TYPE-CODE FALSE> - PHRASE27>
		    <DEAD JUST-LOOKING?7>
		    <PUTUV LREF22 9 %<>>
PHRASE27
		    <RETURN LREF22>
		    <DEAD LREF22>
PHRASE24
		    <RESTUV TEMP21 1 = TEMP21 (TYPE VECTOR)>
		    <JUMP + MAP11>
MAPAP14
		    <FRAME 'CREATE-LABEL-REF>
		    <PUSH LABEL6>
		    <DEAD LABEL6>
		    <CALL 'CREATE-LABEL-REF 1 = LREF22>
		    <PUTUV LREF22 9 JUST-LOOKING?7>
		    <DEAD JUST-LOOKING?7>
		    <FRAME 'ADD-OUTSTANDING-LABEL>
		    <PUSH LREF22>
		    <CALL 'ADD-OUTSTANDING-LABEL 1>
		    <RETURN LREF22>
		    <DEAD LREF22>
		    <END GET-LREF>

#WORD *6317027030*
		    <GFCN CREATE-LABEL-REF ("VALUE" LABEL-REF <OR ATOM SPEC-LABEL>) NAME4>
		    <TEMP TEMP6>
		    <INTGO>
		    <PUSH NAME4>
		    <DEAD NAME4>
		    <PUSH ()>
		    <PUSH -1>
		    <PUSH 0>
		    <PUSH %<>>
		    <PUSH %<>>
		    <PUSH ()>
		    <PUSH ()>
		    <PUSH %<>>
		    <UBLOCK <TYPE-CODE VECTOR> 9 = TEMP6>
		    <CHTYPE TEMP6 <TYPE-CODE LABEL-REF> = TEMP6>
		    <RETURN TEMP6>
		    <DEAD TEMP6>
		    <END CREATE-LABEL-REF>

#WORD *20223320465*
		    <GFCN ADD-OUTSTANDING-LABEL ("VALUE" <VECTOR [REST LABEL-REF]> LABEL-REF) LREF4>
		    <TEMP OUTST5 TEMP9 NOUTST6:VECTOR TEMP11>
		    <INTGO>
		    <GVAL 'OUTST-LABEL-TABLE = OUTST5>
		    <TOPU OUTST5 = TEMP9>
		    <VEQUAL? TEMP9 OUTST5 - PHRASE8>
		    <DEAD TEMP9>
		    <FRAME 'VECGROW>
		    <PUSH OUTST5>
		    <PUSH 128>
		    <CALL 'VECGROW 2 = NOUTST6>
		    <RESTUV NOUTST6 127 = NOUTST6 (TYPE VECTOR)>
		    <PUTUV NOUTST6 1 LREF4>
		    <DEAD LREF4>
		    <LENUV OUTST5 = TEMP9 (TYPE FIX)>
		    <RESTUV NOUTST6 1 = TEMP11 (TYPE VECTOR)>
		    <MOVE-WORDS OUTST5 TEMP11 TEMP9 (TYPE VECTOR) (DIRECTION %<>)>
		    <DEAD OUTST5 TEMP11 TEMP9>
		    <SETG 'OUTST-LABEL-TABLE NOUTST6>
		    <RETURN NOUTST6>
		    <DEAD NOUTST6>
PHRASE8
		    <BACKU OUTST5 1 = OUTST5>
		    <PUTUV OUTST5 1 LREF4>
		    <DEAD LREF4>
		    <SETG 'OUTST-LABEL-TABLE OUTST5>
		    <RETURN OUTST5>
		    <DEAD OUTST5>
		    <END ADD-OUTSTANDING-LABEL>

"FINDS AND REMOVES A LABEL FROM THE OUTSTANDING LABEL TABLE.  THE LABEL WILL
 NOT BE REMOVED IF IT IS A LOOP LABEL"

#WORD *17601262437*
		    <GFCN REMOVE-OUTSTANDING-LABEL ("VALUE" <OR FALSE LABEL-REF> <OR SPEC-LABEL ATOM>) LABEL4>
		    <TEMP OUTST5 PTR9 LEN11:FIX LREF10:LABEL-REF TEMP17>
		    <INTGO>
		    <GVAL 'OUTST-LABEL-TABLE = OUTST5>
		    <SET PTR9 1 (TYPE FIX)>
		    <LENUV OUTST5 = LEN11 (TYPE FIX)>
		    <LOOP>
AGAIN12
		    <INTGO>
		    <GRTR? PTR9 LEN11 - PHRASE14 (TYPE FIX)>
		    <RETURN %<>>
PHRASE14
		    <NTHUV OUTST5 PTR9 = LREF10 (TYPE LABEL-REF)>
		    <NTHUV LREF10 1 = TEMP17>
		    <EQUAL? TEMP17 LABEL4 - PHRASE24>
		    <DEAD TEMP17>
		    <NTHUV LREF10 5 = TEMP17>
		    <TYPE? TEMP17 <TYPE-CODE FALSE> - BOOL20>
		    <DEAD TEMP17>
		    <NTHUV LREF10 9 = TEMP17>
		    <TYPE? TEMP17 <TYPE-CODE FALSE> + PHRASE19>
		    <DEAD TEMP17>
BOOL20
		    <RETURN LREF10>
		    <DEAD LREF10>
PHRASE19
		    <VEQUAL? PTR9 1 - PHRASE21 (TYPE FIX)>
		    <RESTUV OUTST5 1 = TEMP17 (TYPE VECTOR)>
		    <DEAD OUTST5>
		    <SETG 'OUTST-LABEL-TABLE TEMP17>
		    <DEAD TEMP17>
		    <RETURN LREF10>
		    <DEAD LREF10>
PHRASE21
		    <SUB PTR9 1 = TEMP17 (TYPE FIX)>
		    <DEAD PTR9>
		    <RESTUV OUTST5 1 = PTR9 (TYPE VECTOR)>
		    <MOVE-WORDS OUTST5 PTR9 TEMP17 (TYPE VECTOR) (DIRECTION FORWARD)>
		    <DEAD PTR9 TEMP17>
		    <RESTUV OUTST5 1 = PTR9 (TYPE VECTOR)>
		    <DEAD OUTST5>
		    <SETG 'OUTST-LABEL-TABLE PTR9>
		    <DEAD PTR9>
		    <RETURN LREF10>
		    <DEAD LREF10>
PHRASE24
		    <ADD PTR9 1 = PTR9 (TYPE FIX)>
		    <JUMP + AGAIN12>
		    <END REMOVE-OUTSTANDING-LABEL>

"UPDATE LABEL TABLES WHEN ENCOUNTERING AN ACTUAL LABEL"

#WORD *26432674645*
		    <GFCN UPDLT-LABEL ("VALUE" LABEL-REF <OR ATOM SPEC-LABEL> FIX <OR FALSE AC-STATE ATOM>) LABEL4 CODEPTR5 LOOP?6>
		    <TEMP LTAB8 TEMP10 TABPTR9:FIX LREF7>
		    <INTGO>
		    <GVAL 'LABEL-TABLE = LTAB8>
		    <LENL LTAB8 = TEMP10 (TYPE FIX)>
		    <ADD TEMP10 1 = TABPTR9 (TYPE FIX)>
		    <DEAD TEMP10>
		    <FRAME 'REMOVE-OUTSTANDING-LABEL>
		    <PUSH LABEL4>
		    <CALL 'REMOVE-OUTSTANDING-LABEL 1 = LREF7>
		    <TYPE? LREF7 <TYPE-CODE FALSE> - PHRASE13>
		    <FRAME 'CREATE-LABEL-REF>
		    <PUSH LABEL4>
		    <DEAD LABEL4>
		    <CALL 'CREATE-LABEL-REF 1 = LREF7>
		    <FRAME 'ADD-OUTSTANDING-LABEL>
		    <PUSH LREF7>
		    <CALL 'ADD-OUTSTANDING-LABEL 1>
		    <JUMP + COND12>
PHRASE13
		    <PUTUV LREF7 9 %<>>
COND12
		    <PUTUV LREF7 4 CODEPTR5 (TYPE FIX)>
		    <DEAD CODEPTR5>
		    <PUTUV LREF7 5 LOOP?6>
		    <DEAD LOOP?6>
		    <EMPL? LTAB8 - PHRASE17 (TYPE LIST)>
		    <CONS LREF7 () = TEMP10>
		    <SETG 'LABEL-TABLE TEMP10>
		    <DEAD TEMP10>
		    <JUMP + COND16>
PHRASE17
		    <SET TEMP10 LTAB8>
		    <DEAD LTAB8>
		    <LOOP (TEMP10 VALUE)>
TAG18
		    <RESTL TEMP10 1 = LTAB8 (TYPE LIST)>
		    <EMPL? LTAB8 + TAG20>
		    <SET TEMP10 LTAB8>
		    <DEAD LTAB8>
		    <JUMP + TAG18>
TAG20
		    <CONS LREF7 () = LTAB8>
		    <PUTREST TEMP10 LTAB8>
		    <DEAD TEMP10 LTAB8>
COND16
		    <FRAME 'FIXUP-BRANCH-REFERENCES>
		    <NTHUV LREF7 2 = STACK (TYPE LIST)>
		    <PUSH TABPTR9>
		    <DEAD TABPTR9>
		    <CALL 'FIXUP-BRANCH-REFERENCES 2>
		    <PUTUV LREF7 7 () (TYPE LIST)>
		    <PUTUV LREF7 8 () (TYPE LIST)>
		    <RETURN LREF7>
		    <DEAD LREF7>
		    <END UPDLT-LABEL>

#WORD *15765006677*
		    <GFCN FIXUP-BRANCH-REFERENCES ("VALUE" <OR ATOM FALSE> <LIST [REST XREF-INFO]> FIX) XREFS4 TABPTR5>
		    <TEMP TEMP15 TEMP12:LIST TEMP21:FIX>
		    <INTGO>
		    <SET TEMP15 %<> (TYPE FALSE)>
		    <SET TEMP12 XREFS4 (TYPE LIST)>
		    <DEAD XREFS4>
		    <LOOP>
MAP7
		    <INTGO>
		    <EMPL? TEMP12 + MAPAP10>
		    <NTHL TEMP12 1 = TEMP15>
		    <NTHUV TEMP15 2 = TEMP15 (TYPE FIX)>
		    <FRAME 'NTH-CODE>
		    <PUSH TEMP15>
		    <CALL 'NTH-CODE 1 = TEMP21>
		    <OR TEMP21 TABPTR5 = TEMP21>
		    <FRAME 'PUT-CODE>
		    <PUSH TEMP15>
		    <DEAD TEMP15>
		    <PUSH TEMP21>
		    <DEAD TEMP21>
		    <CALL 'PUT-CODE 2 = TEMP15>
		    <RESTL TEMP12 1 = TEMP12 (TYPE LIST)>
		    <JUMP + MAP7>
MAPAP10
		    <RETURN TEMP15>
		    <DEAD TEMP15>
		    <END FIXUP-BRANCH-REFERENCES>

#WORD *27255067700*
		    <GFCN ADD-XREF ("VALUE" XREF-INFO LABEL-REF FIX ANY FIX BOOLEAN) LREF4 CODPTR5 STATUS?6 LILEN7 FORCEL?8>
		    <TEMP TEMP11 XREF9:XREF-INFO>
		    <INTGO>
		    <PUSH LREF4>
		    <PUSH CODPTR5>
		    <DEAD CODPTR5>
		    <PUSH %<>>
		    <PUSH %<>>
		    <PUSH %<>>
		    <PUSH 0>
		    <PUSH STATUS?6>
		    <DEAD STATUS?6>
		    <PUSH LILEN7>
		    <DEAD LILEN7>
		    <GVAL 'CODE-COUNT = STACK>
		    <PUSH %<>>
		    <PUSH ()>
		    <PUSH FORCEL?8>
		    <DEAD FORCEL?8>
		    <UBLOCK <TYPE-CODE VECTOR> 12 = TEMP11 (TYPE VECTOR)>
		    <CHTYPE TEMP11 <TYPE-CODE XREF-INFO> = XREF9>
		    <DEAD TEMP11>
		    <NTHUV LREF4 2 = TEMP11 (TYPE LIST)>
		    <CONS XREF9 TEMP11 = TEMP11>
		    <PUTUV LREF4 2 TEMP11 (TYPE LIST)>
		    <DEAD LREF4 TEMP11>
		    <RETURN XREF9>
		    <DEAD XREF9>
		    <END ADD-XREF>

#WORD *37064422603*
		    <GFCN EMIT-BRANCH ("VALUE" XREF-INFO FIX <OR ATOM SPEC-LABEL> ANY ANY "OPTIONAL" ANY BOOLEAN ANY) INST8 LABEL9 STATUS?10 LILEN11 ACNUM12 FORCEL?13 XT14>
		    <OPT-DISPATCH 4 %<> OPT4 OPT5 OPT6 OPT7>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <PUSH %<>>
OPT7
		    <TEMP (CNT16:FIX 1) XREF15:XREF-INFO LREF17:LABEL-REF TEMP21 TREF35:LABEL-REF>
		    <INTGO>
		    <LSH INST8 24 = INST8 (TYPE FIX)>
		    <FRAME 'UPDLT-BRANCH>
		    <PUSH LABEL9>
		    <DEAD LABEL9>
		    <GVAL 'CODE-COUNT = STACK>
		    <PUSH STATUS?10>
		    <DEAD STATUS?10>
		    <PUSH LILEN11>
		    <DEAD LILEN11>
		    <PUSH FORCEL?13>
		    <DEAD FORCEL?13>
		    <CALL 'UPDLT-BRANCH 5 = XREF15>
		    <NTHUV XREF15 1 = LREF17 (TYPE LABEL-REF)>
		    <NTHUV LREF17 4 = TEMP21 (TYPE FIX)>
		    <VEQUAL? TEMP21 0 + PHRASE20 (TYPE FIX)>
		    <DEAD TEMP21>
		    <GVAL 'LABEL-TABLE = TEMP21>
		    <LOOP>
MAP25
		    <INTGO>
		    <EMPL? TEMP21 + MAPAP28>
		    <NTHL TEMP21 1 = TREF35>
		    <VEQUAL? TREF35 LREF17 + MAPAP28>
		    <DEAD TREF35>
		    <ADD CNT16 1 = CNT16 (TYPE FIX)>
		    <RESTL TEMP21 1 = TEMP21 (TYPE LIST)>
		    <JUMP + MAP25>
MAPAP28
		    <OR INST8 CNT16 = INST8>
		    <DEAD CNT16>
PHRASE20
		    <TYPE? ACNUM12 <TYPE-CODE FALSE> + PHRASE40>
		    <LSH ACNUM12 -8 = CNT16 (TYPE FIX)>
		    <DEAD ACNUM12>
		    <OR INST8 CNT16 = INST8>
		    <DEAD CNT16>
PHRASE40
		    <FRAME 'ADD-WORD-TO-CODE>
		    <PUSH INST8>
		    <DEAD INST8>
		    <CALL 'ADD-WORD-TO-CODE 1>
		    <SETG 'LAST-INST-LENGTH 1>
		    <RETURN XREF15>
		    <DEAD XREF15>
		    <END EMIT-BRANCH>

#WORD *24023410742*
		    <GFCN EMIT-LABEL ("VALUE" LABEL-REF <OR ATOM SPEC-LABEL> <OR FALSE AC-STATE ATOM>) LABEL4 LOOP?5>
		    <TEMP TEMP7:LABEL-REF>
		    <INTGO>
		    <FRAME 'UPDLT-LABEL>
		    <PUSH LABEL4>
		    <DEAD LABEL4>
		    <GVAL 'CODE-COUNT = STACK>
		    <PUSH LOOP?5>
		    <DEAD LOOP?5>
		    <CALL 'UPDLT-LABEL 3 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END EMIT-LABEL>

"THE CONSTANT TABLE CONSISTS OF CONSTANT ADDRESS PAIRS.  THE ADDRESS MAY HAVE
 3 STATES.  IF IT IS NON-ZERO. THEN IT IS THE ADDRESS OF THE MOST RECENT 
 EMITTED VERSION OF A CONSTANT.  IF IT IS ZERO THEN IT INDICATES THAT A VERSION
 OF THE CONSTANT WILL BE EMITTED BY SOME INSTRUCTION IN THE CURRENT SUBROUTINE
 -1 IS USED BY THE SCAN PASS TO INDICATE THAT THE CONSTANT WILL HAVE BEEN
 BEEN EMITTED BY A PREVIOUS INSTRUCTION"

#WORD *21312317016*
		    <GFCN INIT-CONSTANTS ("VALUE" <UVECTOR [REST FIX]>)>
		    <TEMP TEMP4 TEMP5>
		    <INTGO>
		    <SETG 'CONSTANT-POINTER 1>
		    <UUBLOCK <TYPE-CODE UVECTOR> 1024 = TEMP4>
		    <SET TEMP5 TEMP4>
		    <LOOP (TEMP5 VALUE LENGTH)>
ISTR6
		    <EMPUU? TEMP5 + ISTRE7>
		    <PUTUU TEMP5 1 0>
		    <RESTUU TEMP5 1 = TEMP5>
		    <JUMP + ISTR6>
ISTRE7
		    <SETG 'CONSTANT-TABLE TEMP4>
		    <RETURN TEMP4>
		    <DEAD TEMP4>
		    <END INIT-CONSTANTS>

#WORD *36566107600*
		    <GFCN RESET-CONSTANTS ("VALUE" FIX)>
		    <TEMP>
		    <INTGO>
		    <SETG 'CONSTANT-POINTER 1>
		    <RETURN 1>
		    <END RESET-CONSTANTS>

"WARNING: THIS ADDS AN ENTRY  TO THE CONSTANT TABLE  IF IT IS NOT
  ALREADY THERE.  THE INITIAL VERSION OF THIS ALGORITHM USES LINEAR
  SEARCH.  THIS MAY SLOW DOWN THE WORLD"

#WORD *37733576264*
		    <GFCN AGEN-CONST ("VALUE" FIX FIX) NUM4>
		    <TEMP TAB5:UVECTOR PTR10:FIX TEMP14 NTAB6:UVECTOR TAB130:UVECTOR TAB231>
		    <INTGO>
		    <GVAL 'CONSTANT-TABLE = TAB5>
		    <SET PTR10 1 (TYPE FIX)>
		    <LOOP>
AGAIN11
		    <INTGO>
		    <GVAL 'CONSTANT-POINTER = TEMP14>
		    <VEQUAL? PTR10 TEMP14 - PHRASE13 (TYPE FIX)>
		    <DEAD TEMP14>
		    <LENUU TAB5 = TEMP14 (TYPE FIX)>
		    <GRTR? PTR10 TEMP14 - PHRASE16 (TYPE FIX)>
		    <DEAD TEMP14>
		    <LENUU TAB5 = TEMP14 (TYPE FIX)>
		    <ADD TEMP14 128 = TEMP14 (TYPE FIX)>
		    <UUBLOCK <TYPE-CODE UVECTOR> TEMP14 = NTAB6>
		    <DEAD TEMP14>
		    <SET TEMP14 NTAB6>
		    <LOOP (TEMP14 VALUE LENGTH)>
ISTR17
		    <EMPUU? TEMP14 + ISTRE18>
		    <PUTUU TEMP14 1 0>
		    <RESTUU TEMP14 1 = TEMP14>
		    <JUMP + ISTR17>
ISTRE18
		    <SET TEMP14 TAB5 (TYPE UVECTOR)>
		    <DEAD TAB5>
		    <SET TAB5 NTAB6 (TYPE UVECTOR)>
		    <LOOP>
MAP20
		    <INTGO>
		    <EMPUU? TEMP14 + MAPAP23>
		    <EMPUU? TAB5 + MAPAP23>
		    <SET TAB130 TEMP14>
		    <SET TAB231 TAB5>
		    <NTHUU TAB231 1 = TAB231 (TYPE FIX)>
		    <PUTUU TAB130 1 TAB231>
		    <DEAD TAB130 TAB231>
		    <RESTUU TEMP14 1 = TEMP14 (TYPE UVECTOR)>
		    <RESTUU TAB5 1 = TAB5 (TYPE UVECTOR)>
		    <JUMP + MAP20>
MAPAP23
		    <SET TAB5 NTAB6>
		    <DEAD NTAB6>
		    <SETG 'CONSTANT-TABLE TAB5>
		    <DEAD TAB5>
PHRASE16
		    <GVAL 'CONSTANT-TABLE = TAB5>
		    <PUTUU TAB5 PTR10 NUM4>
		    <DEAD TAB5 NUM4>
		    <ADD PTR10 1 = TAB231 (TYPE FIX)>
		    <GVAL 'CONSTANT-TABLE = TAB5>
		    <PUTUU TAB5 TAB231 0>
		    <DEAD TAB5 TAB231>
		    <GVAL 'CONSTANT-POINTER = TAB231>
		    <ADD TAB231 2 = TAB231 (TYPE FIX)>
		    <SETG 'CONSTANT-POINTER TAB231>
		    <DEAD TAB231>
		    <RETURN PTR10>
		    <DEAD PTR10>
PHRASE13
		    <NTHUU TAB5 PTR10 = TAB231 (TYPE FIX)>
		    <VEQUAL? NUM4 TAB231 - PHRASE33 (TYPE FIX)>
		    <DEAD TAB231>
		    <RETURN PTR10>
		    <DEAD PTR10>
PHRASE33
		    <ADD PTR10 2 = PTR10 (TYPE FIX)>
		    <JUMP + AGAIN11>
		    <END AGEN-CONST>

#WORD *23213651406*
		    <GFCN INIT-PATCH-TABLE ("VALUE" FIX)>
		    <TEMP>
		    <INTGO>
		    <SETG 'PATCH-TABLE ()>
		    <SETG 'NUM-PATCH 1>
		    <RETURN 1>
		    <END INIT-PATCH-TABLE>

#WORD *37311264752*
		    <GFCN ADD-PATCH ("VALUE" FIX ATOM) PATCHTYPE4>
		    <TEMP NUM7:FIX TEMP10 NPATCH5:PATCH>
		    <INTGO>
		    <GVAL 'NUM-PATCH = NUM7>
		    <UBLOCK <TYPE-CODE UVECTOR> 0 = STACK>
		    <PUSH PATCHTYPE4>
		    <DEAD PATCHTYPE4>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP10 (TYPE VECTOR)>
		    <CHTYPE TEMP10 <TYPE-CODE PATCH> = NPATCH5>
		    <DEAD TEMP10>
		    <GVAL 'PATCH-TABLE = TEMP10>
		    <CONS NPATCH5 TEMP10 = TEMP10>
		    <DEAD NPATCH5>
		    <SETG 'PATCH-TABLE TEMP10>
		    <DEAD TEMP10>
		    <LSH 87 24 = TEMP10 (TYPE FIX)>
		    <OR TEMP10 NUM7 = TEMP10>
		    <FRAME 'ADD-WORD-TO-CODE>
		    <PUSH TEMP10>
		    <DEAD TEMP10>
		    <CALL 'ADD-WORD-TO-CODE 1>
		    <ADD NUM7 1 = TEMP10 (TYPE FIX)>
		    <SETG 'NUM-PATCH TEMP10>
		    <DEAD TEMP10>
		    <RETURN NUM7>
		    <DEAD NUM7>
		    <END ADD-PATCH>

#WORD *16227066403*
		    <GFCN GET-PATCH ("VALUE" PATCH FIX) NUM4>
		    <TEMP TAB5:LIST TEMP6:FIX TEMP7>
		    <INTGO>
		    <GVAL 'PATCH-TABLE = TAB5>
		    <LENL TAB5 = TEMP6 (TYPE FIX)>
		    <SUB NUM4 1 = TEMP7 (TYPE FIX)>
		    <DEAD NUM4>
		    <SUB TEMP6 TEMP7 = TEMP6 (TYPE FIX)>
		    <DEAD TEMP7>
		    <SUB TEMP6 1 = TEMP6 (TYPE FIX)>
		    <GRTR? TEMP6 0 - RESTL10 (TYPE FIX)>
		    <LOOP (TAB5 VALUE) (TEMP6 VALUE)>
RESTL8
		    <INTGO>
		    <RESTL TAB5 1 = TAB5 (TYPE LIST)>
		    <SUB TEMP6 1 = TEMP6 (TYPE FIX)>
		    <GRTR? TEMP6 0 + RESTL8 (TYPE FIX)>
RESTL10
		    <NTHL TAB5 1 = TEMP7 (TYPE PATCH)>
		    <DEAD TAB5>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END GET-PATCH>

#WORD *24646603517*
		    <GFCN INSERT-PATCH ("VALUE" PATCH FIX CODEVEC) NUM4 CDV5>
		    <TEMP PATCH6:PATCH>
		    <INTGO>
		    <FRAME 'GET-PATCH>
		    <PUSH NUM4>
		    <DEAD NUM4>
		    <CALL 'GET-PATCH 1 = PATCH6>
		    <PUTUV PATCH6 1 CDV5>
		    <DEAD CDV5>
		    <RETURN PATCH6>
		    <DEAD PATCH6>
		    <END INSERT-PATCH>

#WORD *10233410137*
		    <GFCN EMIT ("VALUE" <OR FALSE FIX> ANY "TUPLE" ANY) INST4>
		    <MAKTUP FIELDS5:TUPLE TEMP11 TEMP12 = FIELDS5>
		    <INTGO>
		    <GVAL 'SPECIAL-OPS = TEMP11>
		    <TYPE? INST4 <TYPE-CODE FIX> - PHRASE7>
		    <EMPUU? TEMP11 + PHRASE7>
		    <LOOP (INST4 VALUE) (TEMP11 LENGTH VALUE)>
TAG9
		    <NTHUU TEMP11 1 = TEMP12>
		    <VEQUAL? TEMP12 INST4 + TAG8>
		    <DEAD TEMP12>
		    <RESTUU TEMP11 1 = TEMP11 (TYPE UVECTOR)>
		    <EMPUU? TEMP11 - TAG9>
		    <JUMP + PHRASE7>
TAG8
		    <FRAME 'ADD-WORD-TO-CODE>
		    <LSH INST4 24 = TEMP11 (TYPE FIX)>
		    <AND INST4 #WORD *7777* = TEMP12>
		    <DEAD INST4>
		    <OR TEMP11 TEMP12 = STACK>
		    <DEAD TEMP11 TEMP12>
		    <CALL 'ADD-WORD-TO-CODE 1 = TEMP12>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
PHRASE7
		    <FRAME 'REAL-EMIT>
		    <PUSH INST4>
		    <DEAD INST4>
		    <PUSH FIELDS5>
		    <DEAD FIELDS5>
		    <PUSH %<>>
		    <CALL 'REAL-EMIT 3 = TEMP12>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
		    <END EMIT>

<GDECL (LAST-INST-LENGTH) FIX>

#WORD *7743236241*
		    <GFCN REAL-EMIT ("VALUE" <OR FALSE FIX> FIX TUPLE <OR FALSE FIX>) INST4 FIELDS5 WHERE6>
		    <TEMP INST-INFO7:UVECTOR TEMP12 NUM-OPS8:FIX (SHFT9:FIX 16) (FNUM10:FIX 1) FLD25 NBYTES31 TEMP39 TEMP38 IMWRD32:FIX EAC27:FIX REG-OR-LIT26:FIX SIZC28:FIX>
		    <INTGO>
		    <FRAME 'GET-INST-INFO>
		    <PUSH INST4>
		    <CALL 'GET-INST-INFO 1 = INST-INFO7>
		    <NTHUU INST-INFO7 2 = TEMP12 (TYPE FIX)>
		    <LSH TEMP12 -24 = NUM-OPS8 (TYPE FIX)>
		    <DEAD TEMP12>
		    <LSH INST4 24 = INST4 (TYPE FIX)>
		    <TYPE? WHERE6 <TYPE-CODE FALSE> - PHRASE14>
		    <SETG 'LAST-INST-LENGTH 0>
PHRASE14
		    <CHTYPE FIELDS5 <TYPE-CODE VECTOR> = TEMP12>
		    <LOOP>
MAP16
		    <INTGO>
		    <EMPUV? TEMP12 + MAPAP19>
		    <NTHUV TEMP12 1 = FLD25>
		    <SET NBYTES31 0 (TYPE FIX)>
		    <VEQUAL? NUM-OPS8 0 - PHRASE34 (TYPE FIX)>
		    <FRAME 'ERROR>
		    <PUSH 'TOO-MANY-OPERANDS!-ERRORS>
		    <PUSH INST4>
		    <SET TEMP39 2 (TYPE FIX)>
		    <SET TEMP38 FIELDS5>
		    <LOOP (TEMP38 VALUE LENGTH) (TEMP39 VALUE)>
TAG40
		    <INTGO>
		    <EMPUV? TEMP38 + TAG37>
		    <NTHUV TEMP38 1 = STACK>
		    <RESTUV TEMP38 1 = TEMP38 (TYPE VECTOR)>
		    <ADD TEMP39 1 = TEMP39 (TYPE FIX)>
		    <JUMP + TAG40>
TAG37
		    <CALL 'ERROR TEMP39>
		    <DEAD TEMP39>
PHRASE34
		    <TYPE? FLD25 <TYPE-CODE EFF-ADDR> + PHRASE43>
		    <TYPE? FLD25 <TYPE-CODE LADDR> + PHRASE43>
		    <FRAME 'ERROR>
		    <PUSH 'BAD-CALL-TO-EMIT!-ERRORS>
		    <PUSH INST4>
		    <SET TEMP38 2 (TYPE FIX)>
		    <SET TEMP39 FIELDS5>
		    <LOOP (TEMP39 VALUE LENGTH) (TEMP38 VALUE)>
TAG45
		    <INTGO>
		    <EMPUV? TEMP39 + TAG44>
		    <NTHUV TEMP39 1 = STACK>
		    <RESTUV TEMP39 1 = TEMP39 (TYPE VECTOR)>
		    <ADD TEMP38 1 = TEMP38 (TYPE FIX)>
		    <JUMP + TAG45>
TAG44
		    <CALL 'ERROR TEMP38>
		    <DEAD TEMP38>
PHRASE43
		    <TYPE? FLD25 <TYPE-CODE LADDR> - PHRASE48>
		    <RESTL FLD25 1 = TEMP38 (TYPE LIST)>
		    <NTHL TEMP38 1 = TEMP38 (TYPE EFF-ADDR)>
		    <CHTYPE TEMP38 <TYPE-CODE FIX> = IMWRD32>
		    <DEAD TEMP38>
		    <NTHL FLD25 1 = TEMP38 (TYPE EFF-ADDR)>
		    <DEAD FLD25>
		    <LSH TEMP38 -24 = FLD25 (TYPE FIX)>
		    <DEAD TEMP38>
		    <JUMP + PHRASE49>
PHRASE48
		    <LSH FLD25 8 = IMWRD32 (TYPE FIX)>
		    <LSH FLD25 -24 = FLD25 (TYPE FIX)>
PHRASE49
		    <AND FLD25 #WORD *360* = EAC27>
		    <AND FLD25 #WORD *17* = REG-OR-LIT26>
		    <VEQUAL? EAC27 64 + PHRASE51 (TYPE FIX)>
		    <SUB NUM-OPS8 1 = NUM-OPS8 (TYPE FIX)>
		    <FRAME 'GET-OP-INFO>
		    <PUSH FNUM10>
		    <PUSH INST-INFO7>
		    <CALL 'GET-OP-INFO 2 = TEMP39>
		    <AND TEMP39 #WORD *7* = SIZC28>
		    <LSH TEMP39 -3 = TEMP39 (TYPE FIX)>
		    <ADD FNUM10 1 = FNUM10 (TYPE FIX)>
PHRASE51
		    <LESS? EAC27 64 + PHRASE54 (TYPE FIX)>
		    <GRTR? EAC27 112 + PHRASE54 (TYPE FIX)>
		    <GVAL 'NAC-PC = TEMP38>
		    <EQUAL? TEMP38 REG-OR-LIT26 - PHRASE54>
		    <DEAD TEMP38>
		    <FRAME 'ERROR>
		    <PUSH 'CANT-INDEX-PC!-ERRORS>
		    <PUSH INST4>
		    <SET TEMP39 2 (TYPE FIX)>
		    <SET TEMP38 FIELDS5>
		    <LOOP (TEMP38 VALUE LENGTH) (TEMP39 VALUE)>
TAG57
		    <INTGO>
		    <EMPUV? TEMP38 + TAG56>
		    <NTHUV TEMP38 1 = STACK>
		    <RESTUV TEMP38 1 = TEMP38 (TYPE VECTOR)>
		    <ADD TEMP39 1 = TEMP39 (TYPE FIX)>
		    <JUMP + TAG57>
TAG56
		    <CALL 'ERROR TEMP39>
		    <DEAD TEMP39>
		    <JUMP + PHRASE86>
PHRASE54
		    <LESS? EAC27 128 + PHRASE59 (TYPE FIX)>
		    <VEQUAL? EAC27 144 + BOOL66 (TYPE FIX)>
		    <VEQUAL? EAC27 128 - BOOL63 (TYPE FIX)>
		    <VEQUAL? SIZC28 2 + BOOL66 (TYPE FIX)>
		    <VEQUAL? SIZC28 5 - BOOL63 (TYPE FIX)>
BOOL66
		    <GVAL 'NAC-PC = TEMP39>
		    <EQUAL? TEMP39 REG-OR-LIT26 + BOOL62>
		    <DEAD TEMP39>
BOOL63
		    <VEQUAL? EAC27 224 + BOOL62 (TYPE FIX)>
		    <VEQUAL? EAC27 240 - PHRASE61 (TYPE FIX)>
BOOL62
		    <SET NBYTES31 4 (TYPE FIX)>
		    <JUMP + PHRASE86>
PHRASE61
		    <VEQUAL? EAC27 192 + BOOL68 (TYPE FIX)>
		    <VEQUAL? EAC27 208 + BOOL68 (TYPE FIX)>
		    <VEQUAL? EAC27 128 - PHRASE67 (TYPE FIX)>
		    <VEQUAL? SIZC28 1 - PHRASE67 (TYPE FIX)>
		    <GVAL 'NAC-PC = TEMP39>
		    <EQUAL? TEMP39 REG-OR-LIT26 - PHRASE67>
		    <DEAD TEMP39>
BOOL68
		    <SET NBYTES31 2 (TYPE FIX)>
		    <JUMP + PHRASE86>
PHRASE67
		    <VEQUAL? EAC27 160 + BOOL73 (TYPE FIX)>
		    <VEQUAL? EAC27 176 + BOOL73 (TYPE FIX)>
		    <VEQUAL? EAC27 128 - PHRASE72 (TYPE FIX)>
		    <VEQUAL? SIZC28 0 - PHRASE72 (TYPE FIX)>
		    <GVAL 'NAC-PC = TEMP39>
		    <EQUAL? TEMP39 REG-OR-LIT26 - PHRASE72>
		    <DEAD TEMP39>
BOOL73
		    <SET NBYTES31 1 (TYPE FIX)>
		    <JUMP + PHRASE86>
PHRASE72
		    <VEQUAL? EAC27 128 - PHRASE77 (TYPE FIX)>
		    <DEAD EAC27>
		    <GVAL 'NAC-PC = TEMP39>
		    <EQUAL? TEMP39 REG-OR-LIT26 - PHRASE77>
		    <DEAD TEMP39>
		    <VEQUAL? SIZC28 4 + BOOL81 (TYPE FIX)>
		    <VEQUAL? SIZC28 6 - PHRASE80 (TYPE FIX)>
BOOL81
		    <SET NBYTES31 8 (TYPE FIX)>
		    <JUMP + PHRASE86>
PHRASE80
		    <VEQUAL? SIZC28 3 - PHRASE82 (TYPE FIX)>
		    <SET NBYTES31 16 (TYPE FIX)>
		    <JUMP + PHRASE86>
PHRASE82
		    <FRAME 'ERROR>
		    <PUSH 'FOO!-ERRORS>
		    <CALL 'ERROR 1>
		    <JUMP + PHRASE86>
PHRASE77
		    <SET NBYTES31 0 (TYPE FIX)>
		    <JUMP + PHRASE86>
PHRASE59
		    <SET NBYTES31 0 (TYPE FIX)>
PHRASE86
		    <LSH FLD25 SHFT9 = TEMP39 (TYPE FIX)>
		    <DEAD FLD25>
		    <OR INST4 TEMP39 = INST4>
		    <DEAD TEMP39>
		    <SUB SHFT9 8 = SHFT9 (TYPE FIX)>
		    <LESS? SHFT9 0 - PHRASE88 (TYPE FIX)>
		    <SET SHFT9 24 (TYPE FIX)>
		    <TYPE? WHERE6 <TYPE-CODE FALSE> + PHRASE92>
		    <FRAME 'PUT-CODE>
		    <PUSH WHERE6>
		    <PUSH INST4>
		    <DEAD INST4>
		    <CALL 'PUT-CODE 2>
		    <ADD WHERE6 1 = WHERE6 (TYPE FIX)>
		    <JUMP + PHRASE94>
PHRASE92
		    <FRAME 'ADD-WORD-TO-CODE>
		    <PUSH INST4>
		    <DEAD INST4>
		    <CALL 'ADD-WORD-TO-CODE 1>
		    <GVAL 'LAST-INST-LENGTH = TEMP39>
		    <ADD TEMP39 1 = TEMP39 (TYPE FIX)>
		    <SETG 'LAST-INST-LENGTH TEMP39>
		    <DEAD TEMP39>
PHRASE94
		    <SET INST4 0 (TYPE FIX)>
PHRASE88
		    <LOOP>
AGAIN97
		    <INTGO>
		    <SUB NBYTES31 1 = NBYTES31 (TYPE FIX)>
		    <LESS? NBYTES31 0 + EXIT96 (TYPE FIX)>
		    <AND IMWRD32 #WORD *37700000000* = TEMP38>
		    <SUB SHFT9 24 = EAC27 (TYPE FIX)>
		    <LSH TEMP38 EAC27 = EAC27 (TYPE FIX)>
		    <DEAD TEMP38>
		    <OR INST4 EAC27 = INST4>
		    <DEAD EAC27>
		    <LSH IMWRD32 8 = IMWRD32 (TYPE FIX)>
		    <SUB SHFT9 8 = SHFT9 (TYPE FIX)>
		    <LESS? SHFT9 0 - AGAIN97 (TYPE FIX)>
		    <TYPE? WHERE6 <TYPE-CODE FALSE> + PHRASE108>
		    <FRAME 'PUT-CODE>
		    <PUSH WHERE6>
		    <PUSH INST4>
		    <DEAD INST4>
		    <CALL 'PUT-CODE 2>
		    <ADD WHERE6 1 = WHERE6 (TYPE FIX)>
		    <JUMP + PHRASE110>
PHRASE108
		    <FRAME 'ADD-WORD-TO-CODE>
		    <PUSH INST4>
		    <DEAD INST4>
		    <CALL 'ADD-WORD-TO-CODE 1>
		    <GVAL 'LAST-INST-LENGTH = EAC27>
		    <ADD EAC27 1 = EAC27 (TYPE FIX)>
		    <SETG 'LAST-INST-LENGTH EAC27>
		    <DEAD EAC27>
PHRASE110
		    <SET SHFT9 24 (TYPE FIX)>
		    <SET INST4 0 (TYPE FIX)>
		    <JUMP + AGAIN97>
EXIT96
		    <RESTUV TEMP12 1 = TEMP12 (TYPE VECTOR)>
		    <JUMP + MAP16>
MAPAP19
		    <VEQUAL? NUM-OPS8 0 + PHRASE113 (TYPE FIX)>
		    <DEAD NUM-OPS8>
		    <FRAME 'ERROR>
		    <PUSH 'TOO-FEW-FIELDS!-ERRORS>
		    <PUSH INST4>
		    <SET FLD25 2 (TYPE FIX)>
		    <SET TEMP12 FIELDS5>
		    <DEAD FIELDS5>
		    <LOOP (TEMP12 VALUE LENGTH) (FLD25 VALUE)>
TAG117
		    <INTGO>
		    <EMPUV? TEMP12 + TAG116>
		    <NTHUV TEMP12 1 = STACK>
		    <RESTUV TEMP12 1 = TEMP12 (TYPE VECTOR)>
		    <ADD FLD25 1 = FLD25 (TYPE FIX)>
		    <JUMP + TAG117>
TAG116
		    <CALL 'ERROR FLD25>
		    <DEAD FLD25>
PHRASE113
		    <VEQUAL? SHFT9 24 - TAG121 (TYPE FIX)>
		    <DEAD SHFT9>
		    <RETURN %<>>
TAG121
		    <TYPE? WHERE6 <TYPE-CODE FALSE> + PHRASE123>
		    <FRAME 'PUT-CODE>
		    <PUSH WHERE6>
		    <PUSH INST4>
		    <DEAD INST4>
		    <CALL 'PUT-CODE 2>
		    <ADD WHERE6 1 = WHERE6 (TYPE FIX)>
		    <RETURN WHERE6>
		    <DEAD WHERE6>
PHRASE123
		    <FRAME 'ADD-WORD-TO-CODE>
		    <PUSH INST4>
		    <DEAD INST4>
		    <CALL 'ADD-WORD-TO-CODE 1>
		    <GVAL 'LAST-INST-LENGTH = NUM-OPS8>
		    <ADD NUM-OPS8 1 = NUM-OPS8 (TYPE FIX)>
		    <SETG 'LAST-INST-LENGTH NUM-OPS8>
		    <RETURN NUM-OPS8>
		    <DEAD NUM-OPS8>
		    <END REAL-EMIT>

#WORD *27062413266*
		    <GFCN EMIT-LABEL-WORD ("VALUE" XREF-INFO ATOM) LABEL4>
		    <TEMP (INST7:FIX 0) (CNT8:FIX 1) XREF5:XREF-INFO LREF6:LABEL-REF TEMP12 TREF26:LABEL-REF>
		    <INTGO>
		    <FRAME 'UPDLT-BRANCH>
		    <PUSH LABEL4>
		    <DEAD LABEL4>
		    <GVAL 'CODE-COUNT = STACK>
		    <PUSH 'NORMAL>
		    <PUSH 1>
		    <PUSH %<>>
		    <CALL 'UPDLT-BRANCH 5 = XREF5>
		    <NTHUV XREF5 1 = LREF6 (TYPE LABEL-REF)>
		    <NTHUV LREF6 4 = TEMP12 (TYPE FIX)>
		    <VEQUAL? TEMP12 0 + PHRASE11 (TYPE FIX)>
		    <DEAD TEMP12>
		    <GVAL 'LABEL-TABLE = TEMP12>
		    <LOOP>
MAP16
		    <INTGO>
		    <EMPL? TEMP12 + MAPAP19>
		    <NTHL TEMP12 1 = TREF26>
		    <VEQUAL? TREF26 LREF6 + MAPAP19>
		    <DEAD TREF26>
		    <ADD CNT8 1 = CNT8 (TYPE FIX)>
		    <RESTL TEMP12 1 = TEMP12 (TYPE LIST)>
		    <JUMP + MAP16>
MAPAP19
		    <OR INST7 CNT8 = INST7>
		    <DEAD CNT8>
PHRASE11
		    <FRAME 'ADD-WORD-TO-CODE>
		    <PUSH INST7>
		    <DEAD INST7>
		    <CALL 'ADD-WORD-TO-CODE 1>
		    <SETG 'LAST-INST-LENGTH 1>
		    <RETURN XREF5>
		    <DEAD XREF5>
		    <END EMIT-LABEL-WORD>

#WORD *5017277160*
		    <GFCN BAD-MOVE ("VALUE" <OR FALSE FIX> ANY ANY ATOM "OPTIONAL" ANY) EA16 EA27 MSIZE8 EXTRA9>
		    <OPT-DISPATCH 3 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP INST10 TEMP23>
		    <INTGO>
		    <VEQUAL? MSIZE8 'ZWL - PHRASE12>
		    <SET INST10 60 (TYPE FIX)>
		    <JUMP + PHRASE16>
PHRASE12
		    <VEQUAL? MSIZE8 'LONG - PHRASE13>
		    <SET INST10 208 (TYPE FIX)>
		    <JUMP + PHRASE16>
PHRASE13
		    <VEQUAL? MSIZE8 'WORD - PHRASE14>
		    <SET INST10 176 (TYPE FIX)>
		    <JUMP + PHRASE16>
PHRASE14
		    <VEQUAL? MSIZE8 'BYTE - PHRASE15>
		    <SET INST10 144 (TYPE FIX)>
		    <JUMP + PHRASE16>
PHRASE15
		    <VEQUAL? MSIZE8 'DOUBLE - PHRASE16>
		    <DEAD MSIZE8>
		    <SET INST10 125 (TYPE FIX)>
PHRASE16
		    <TYPE? EXTRA9 <TYPE-CODE UNBOUND> + PHRASE18>
		    <TYPE? EXTRA9 <TYPE-CODE FALSE> + PHRASE18>
		    <FRAME 'PRIMTYPE>
		    <PUSH EXTRA9>
		    <CALL 'PRIMTYPE 1 = TEMP23>
		    <VEQUAL? TEMP23 'FIX + PHRASE21>
		    <DEAD TEMP23>
		    <FRAME 'EMIT>
		    <PUSH INST10>
		    <DEAD INST10>
		    <PUSH EA16>
		    <DEAD EA16>
		    <SET INST10 3 (TYPE FIX)>
		    <SET TEMP23 EXTRA9>
		    <DEAD EXTRA9>
		    <LOOP (TEMP23 TYPE VALUE LENGTH) (INST10 VALUE)>
TAG26
		    <INTGO>
		    <EMPTY? TEMP23 + TAG24>
		    <NTH1 TEMP23 = STACK>
		    <REST1 TEMP23 = TEMP23>
		    <ADD INST10 1 = INST10 (TYPE FIX)>
		    <JUMP + TAG26>
TAG24
		    <PUSH EA27>
		    <DEAD EA27>
		    <CALL 'EMIT INST10 = INST10>
		    <RETURN INST10>
		    <DEAD INST10>
PHRASE21
		    <FRAME 'EMIT>
		    <PUSH INST10>
		    <DEAD INST10>
		    <PUSH EA16>
		    <DEAD EA16>
		    <PUSH EXTRA9>
		    <DEAD EXTRA9>
		    <PUSH EA27>
		    <DEAD EA27>
		    <CALL 'EMIT 4 = INST10>
		    <RETURN INST10>
		    <DEAD INST10>
PHRASE18
		    <FRAME 'EMIT>
		    <PUSH INST10>
		    <DEAD INST10>
		    <PUSH EA16>
		    <DEAD EA16>
		    <PUSH EA27>
		    <DEAD EA27>
		    <CALL 'EMIT 3 = INST10>
		    <RETURN INST10>
		    <DEAD INST10>
		    <END BAD-MOVE>

#WORD *5124206455*
		    <GFCN RE-EMIT-MOVE ("VALUE" <OR FALSE FIX> FIX EFF-ADDR EFF-ADDR ATOM) PTR4 EA15 EA26 MSIZE7>
		    <TEMP X9 INST8:FIX>
		    <INTGO>
		    <PUSH EA15>
		    <DEAD EA15>
		    <PUSH EA26>
		    <DEAD EA26>
		    <TUPLE 2 = X9 (TYPE TUPLE)>
		    <SUB PTR4 2 = PTR4 (TYPE FIX)>
		    <VEQUAL? MSIZE7 'LONG - PHRASE12>
		    <SET INST8 208 (TYPE FIX)>
		    <JUMP + PHRASE15>
PHRASE12
		    <VEQUAL? MSIZE7 'WORD - PHRASE13>
		    <SET INST8 176 (TYPE FIX)>
		    <JUMP + PHRASE15>
PHRASE13
		    <VEQUAL? MSIZE7 'BYTE - PHRASE14>
		    <SET INST8 144 (TYPE FIX)>
		    <JUMP + PHRASE15>
PHRASE14
		    <VEQUAL? MSIZE7 'DOUBLE - PHRASE15>
		    <DEAD MSIZE7>
		    <SET INST8 125 (TYPE FIX)>
PHRASE15
		    <FRAME 'REAL-EMIT>
		    <PUSH INST8>
		    <DEAD INST8>
		    <PUSH X9>
		    <DEAD X9>
		    <PUSH PTR4>
		    <DEAD PTR4>
		    <CALL 'REAL-EMIT 3 = X9>
		    <ADJ -6>
		    <RETURN X9>
		    <DEAD X9>
		    <END RE-EMIT-MOVE>

"MAKE SURE CONSTANT IS CORRECT IF IMMEDIATE.  IF LONG WORD OPERATION
 SHOULD USE CONSTANT TABLE"

#WORD *1264330352*
		    <GFCN IMM-CHECK ("VALUE" ANY EFF-ADDR ATOM) EA4 SIZE5>
		    <TEMP TEMP11 MSK10:FIX RB12 SHFT13:FIX>
		    <INTGO>
		    <GVAL 'M$$R-BHWD = TEMP11>
		    <SUB 0 TEMP11 = TEMP11 (TYPE FIX)>
		    <LSH -1 TEMP11 = MSK10 (TYPE FIX)>
		    <DEAD TEMP11>
		    <GVAL 'EA-FIELD = RB12>
		    <AND RB12 MSK10 = SHFT13>
		    <GVAL 'M$$R-BHWD = TEMP11>
		    <SUB 0 TEMP11 = TEMP11 (TYPE FIX)>
		    <LSH RB12 TEMP11 = TEMP11 (TYPE FIX)>
		    <DEAD RB12>
		    <AND TEMP11 MSK10 = MSK10>
		    <DEAD TEMP11>
		    <GETBITS EA4 MSK10 SHFT13 = MSK10>
		    <DEAD SHFT13>
		    <VEQUAL? SIZE5 'LONG - PHRASE17>
		    <GVAL 'ADDRESS-IMM-LONG = TEMP11>
		    <EQUAL? TEMP11 MSK10 - PHRASE19>
		    <DEAD TEMP11>
		    <GVAL 'M$$R-BHWD = TEMP11>
		    <SUB 0 TEMP11 = TEMP11 (TYPE FIX)>
		    <LSH -1 TEMP11 = MSK10 (TYPE FIX)>
		    <DEAD TEMP11>
		    <GVAL 'EA-FIELD = RB12>
		    <AND RB12 MSK10 = SHFT13>
		    <GVAL 'M$$R-BHWD = TEMP11>
		    <SUB 0 TEMP11 = TEMP11 (TYPE FIX)>
		    <LSH RB12 TEMP11 = TEMP11 (TYPE FIX)>
		    <DEAD RB12>
		    <AND TEMP11 MSK10 = MSK10>
		    <DEAD TEMP11>
		    <GVAL 'ADDRESS-IMM = TEMP11>
		    <PUTBITS EA4 MSK10 SHFT13 TEMP11 = TEMP11>
		    <DEAD EA4 MSK10 SHFT13>
		    <CHTYPE TEMP11 <TYPE-CODE EFF-ADDR> = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE19
		    <GVAL 'ADDRESS-IMM = TEMP11>
		    <EQUAL? TEMP11 MSK10 - PHRASE28>
		    <DEAD TEMP11>
		    <FRAME 'EXTEND>
		    <GETBITS EA4 16 16 = STACK>
		    <DEAD EA4>
		    <CALL 'EXTEND 1 = TEMP11>
		    <FRAME 'AGEN-CONST>
		    <PUSH TEMP11>
		    <DEAD TEMP11>
		    <CALL 'AGEN-CONST 1 = TEMP11>
		    <PUTBITS MSK10 16 16 TEMP11 = TEMP11>
		    <DEAD MSK10>
		    <CHTYPE TEMP11 <TYPE-CODE EFF-ADDR> = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE28
		    <RETURN EA4>
		    <DEAD EA4>
PHRASE17
		    <GVAL 'ADDRESS-IMM-LONG = TEMP11>
		    <EQUAL? TEMP11 MSK10 - PHRASE31>
		    <DEAD TEMP11>
		    <FRAME 'ERROR>
		    <PUSH "CANT USE LONG CONSTANT">
		    <PUSH EA4>
		    <DEAD EA4>
		    <PUSH SIZE5>
		    <DEAD SIZE5>
		    <PUSH 'IMM-CHECK>
		    <CALL 'ERROR 4 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE31
		    <RETURN EA4>
		    <DEAD EA4>
		    <END IMM-CHECK>

#WORD *23357175353*
		    <GFCN START-CODE-INSERT ("VALUE" <OR FALSE FIX>)>
		    <TEMP CNT4 TEMP7>
		    <INTGO>
		    <GVAL 'SAVED-CODE-COUNT = CNT4>
		    <TYPE? CNT4 <TYPE-CODE FALSE> + PHRASE6>
		    <GVAL 'SAVED-CODE-STACK = TEMP7>
		    <CONS CNT4 TEMP7 = TEMP7>
		    <DEAD CNT4>
		    <SETG 'SAVED-CODE-STACK TEMP7>
		    <DEAD TEMP7>
PHRASE6
		    <GVAL 'CODE-COUNT = TEMP7>
		    <SETG 'SAVED-CODE-COUNT TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END START-CODE-INSERT>

#WORD *25142624022*
		    <GFCN END-CODE-INSERT ("VALUE" <UVECTOR [REST FIX]>)>
		    <TEMP CCOUNT4 START6 TEMP15 EL17:FIX>
		    <INTGO>
		    <GVAL 'CODE-COUNT = CCOUNT4>
		    <GVAL 'SAVED-CODE-COUNT = START6>
		    <SET TEMP15 0 (TYPE FIX)>
		    <LOOP>
MAP8
		    <INTGO>
		    <EQUAL? CCOUNT4 START6 + MAPAP11>
		    <FRAME 'NTH-CODE>
		    <PUSH START6>
		    <CALL 'NTH-CODE 1 = EL17>
		    <ADD START6 1 = START6 (TYPE FIX)>
		    <PUSH EL17>
		    <DEAD EL17>
		    <ADD TEMP15 1 = TEMP15 (TYPE FIX)>
		    <JUMP + MAP8>
MAPAP11
		    <UBLOCK <TYPE-CODE UVECTOR> TEMP15 = START6 (TYPE UVECTOR)>
		    <DEAD TEMP15>
		    <GVAL 'SAVED-CODE-COUNT = TEMP15>
		    <SETG 'CODE-COUNT TEMP15>
		    <DEAD TEMP15>
		    <GVAL 'CODE-COUNT = CCOUNT4>
		    <GVAL 'CODE-LIST = TEMP15>
		    <LOOP>
AGAIN26
		    <INTGO>
		    <GRTR? CCOUNT4 1025 + PHRASE28 (TYPE FIX)>
		    <NTHL TEMP15 1 = TEMP15 (TYPE UVECTOR)>
		    <SUB CCOUNT4 1 = CCOUNT4 (TYPE FIX)>
		    <RESTUU TEMP15 CCOUNT4 = TEMP15 (TYPE UVECTOR)>
		    <DEAD CCOUNT4>
		    <SETG 'CURRENT-CODE TEMP15>
		    <DEAD TEMP15>
		    <JUMP + EXIT23>
PHRASE28
		    <RESTL TEMP15 1 = TEMP15 (TYPE LIST)>
		    <EMPL? TEMP15 - PHRASE31 (TYPE LIST)>
		    <FRAME 'ERROR>
		    <PUSH 'OUT-OF-BOUNDS>
		    <PUSH 'END-CODE-INSERT>
		    <CALL 'ERROR 2>
PHRASE31
		    <SUB CCOUNT4 1024 = CCOUNT4 (TYPE FIX)>
		    <JUMP + AGAIN26>
EXIT23
		    <GVAL 'SAVED-CODE-STACK = TEMP15>
		    <EMPL? TEMP15 - PHRASE34 (TYPE LIST)>
		    <DEAD TEMP15>
		    <SETG 'SAVED-CODE-COUNT %<>>
		    <RETURN START6>
		    <DEAD START6>
PHRASE34
		    <GVAL 'SAVED-CODE-STACK = TEMP15>
		    <NTHL TEMP15 1 = CCOUNT4 (TYPE FIX)>
		    <DEAD TEMP15>
		    <SETG 'SAVED-CODE-COUNT CCOUNT4>
		    <DEAD CCOUNT4>
		    <GVAL 'SAVED-CODE-STACK = TEMP15>
		    <RESTL TEMP15 1 = CCOUNT4 (TYPE LIST)>
		    <DEAD TEMP15>
		    <SETG 'SAVED-CODE-STACK CCOUNT4>
		    <DEAD CCOUNT4>
		    <RETURN START6>
		    <DEAD START6>
		    <END END-CODE-INSERT>

#WORD *34135235317*
		    <GFCN EMIT-MOVE ("VALUE" <OR ATOM FALSE FIX> ANY ANY ANY "OPTIONAL" ANY) EA16 EA27 SZ8 EXTRA9>
		    <OPT-DISPATCH 3 %<> OPT4 OPT5>
OPT4
		    <PUSH %<>>
OPT5
		    <TEMP ISZ11 TEMP20 TMP10:FIX ABS12:FIX TB13>
		    <INTGO>
		    <SET ISZ11 SZ8>
		    <TYPE? EXTRA9 <TYPE-CODE FALSE> - PHRASE17>
		    <TYPE? EA16 <TYPE-CODE LADDR> - PHRASE17>
		    <NTHL EA16 1 = ISZ11 (TYPE EFF-ADDR)>
		    <GVAL 'AC-PC = TEMP20>
		    <NTHUV TEMP20 2 = TEMP20 (TYPE FIX)>
		    <OR TEMP20 #WORD *200* = TEMP20>
		    <LSH TEMP20 24 = TEMP20 (TYPE FIX)>
		    <CHTYPE TEMP20 <TYPE-CODE EFF-ADDR> = TEMP20>
		    <VEQUAL? ISZ11 TEMP20 - PHRASE17>
		    <DEAD ISZ11 TEMP20>
		    <EMPL? EA16 + PHRASE17>
		    <RESTL EA16 1 = TEMP20 (TYPE LIST)>
		    <EMPL? TEMP20 + PHRASE17>
		    <RESTL TEMP20 1 = TEMP20 (TYPE LIST)>
		    <EMPL? TEMP20 - PHRASE17>
		    <DEAD TEMP20>
		    <EQUAL? SZ8 'ZWL + PHRASE17>
		    <FRAME 'LREV>
		    <RESTL EA16 1 = TEMP20 (TYPE LIST)>
		    <NTHL TEMP20 1 = STACK (TYPE EFF-ADDR)>
		    <DEAD TEMP20>
		    <CALL 'LREV 1 = TMP10>
		    <IFSYS "TOPS20">
		    <AND TMP10 #WORD *20000000000* = ISZ11>
		    <VEQUAL? ISZ11 0 + PHRASE25 (TYPE FIX)>
		    <DEAD ISZ11>
		    <PUTBITS TMP10 4 32 -1 = TMP10>
PHRASE25
		    <ENDIF "TOPS20">
		    <SET ABS12 TMP10>
		    <LESS? ABS12 0 - TAG28 (TYPE FIX)>
		    <SUB 0 ABS12 = ABS12 (TYPE FIX)>
TAG28
		    <LESS? TMP10 256 - PHRASE30 (TYPE FIX)>
		    <GRTR? TMP10 -128 - PHRASE30 (TYPE FIX)>
		    <SET ISZ11 'BYTE (TYPE ATOM)>
		    <JUMP + PHRASE40>
PHRASE30
		    <LESS? TMP10 65536 - PHRASE32 (TYPE FIX)>
		    <GRTR? TMP10 -32768 - PHRASE32 (TYPE FIX)>
		    <SET ISZ11 'WORD (TYPE ATOM)>
		    <JUMP + PHRASE40>
PHRASE32
		    <SET ISZ11 'LONG (TYPE ATOM)>
		    <JUMP + PHRASE40>
PHRASE17
		    <TYPE? EA16 <TYPE-CODE EFF-ADDR> - PHRASE35>
		    <FRAME 'LREV>
		    <PUSH EA16>
		    <CALL 'LREV 1 = TMP10>
		    <GRTR? TMP10 63 + PHRASE35 (TYPE FIX)>
		    <LESS? TMP10 0 + PHRASE35 (TYPE FIX)>
		    <SET ABS12 TMP10>
		    <SET ISZ11 'BYTE (TYPE ATOM)>
		    <JUMP + PHRASE40>
PHRASE35
		    <FRAME 'BAD-MOVE>
		    <PUSH EA16>
		    <DEAD EA16>
		    <PUSH EA27>
		    <DEAD EA27>
		    <PUSH SZ8>
		    <DEAD SZ8>
		    <PUSH EXTRA9>
		    <DEAD EXTRA9>
		    <CALL 'BAD-MOVE 4>
		    <RETURN 'T>
PHRASE40
		    <VEQUAL? TMP10 0 - PHRASE43 (TYPE FIX)>
		    <EQUAL? SZ8 'BYTE - PHRASE47>
		    <SET ISZ11 148 (TYPE FIX)>
		    <JUMP + PHRASE50>
PHRASE47
		    <EQUAL? SZ8 'WORD - PHRASE48>
		    <SET ISZ11 180 (TYPE FIX)>
		    <JUMP + PHRASE50>
PHRASE48
		    <EQUAL? SZ8 'LONG - PHRASE49>
		    <SET ISZ11 212 (TYPE FIX)>
		    <JUMP + PHRASE50>
PHRASE49
		    <EQUAL? SZ8 'DOUBLE + TAG51>
		    <DEAD SZ8>
		    <SET ISZ11 %<> (TYPE FALSE)>
		    <JUMP + PHRASE50>
TAG51
		    <SET ISZ11 124 (TYPE FIX)>
PHRASE50
		    <FRAME 'EMIT>
		    <PUSH ISZ11>
		    <DEAD ISZ11>
		    <PUSH EA27>
		    <DEAD EA27>
		    <CALL 'EMIT 2 = ISZ11>
		    <JUMP + PHRASE73>
PHRASE43
		    <GRTR? ABS12 63 + PHRASE54 (TYPE FIX)>
		    <LESS? ABS12 0 + PHRASE54 (TYPE FIX)>
		    <AND ABS12 #WORD *77* = TEMP20>
		    <DEAD ABS12>
		    <LSH TEMP20 24 = TEMP20 (TYPE FIX)>
		    <CHTYPE TEMP20 <TYPE-CODE EFF-ADDR> = EA16>
		    <DEAD TEMP20>
		    <GRTR? TMP10 0 - PHRASE60 (TYPE FIX)>
		    <DEAD TMP10>
		    <FRAME 'BAD-MOVE>
		    <PUSH EA16>
		    <DEAD EA16>
		    <PUSH EA27>
		    <DEAD EA27>
		    <PUSH SZ8>
		    <DEAD SZ8>
		    <PUSH EXTRA9>
		    <DEAD EXTRA9>
		    <CALL 'BAD-MOVE 4 = ISZ11>
		    <JUMP + PHRASE73>
PHRASE60
		    <EQUAL? SZ8 'BYTE - PHRASE66>
		    <SET ISZ11 142 (TYPE FIX)>
		    <JUMP + PHRASE68>
PHRASE66
		    <EQUAL? SZ8 'WORD - PHRASE67>
		    <SET ISZ11 174 (TYPE FIX)>
		    <JUMP + PHRASE68>
PHRASE67
		    <EQUAL? SZ8 'LONG + TAG69>
		    <DEAD SZ8>
		    <SET ISZ11 %<> (TYPE FALSE)>
		    <JUMP + PHRASE68>
TAG69
		    <SET ISZ11 206 (TYPE FIX)>
PHRASE68
		    <FRAME 'EMIT>
		    <PUSH ISZ11>
		    <DEAD ISZ11>
		    <PUSH EA16>
		    <DEAD EA16>
		    <PUSH EA27>
		    <DEAD EA27>
		    <CALL 'EMIT 3 = ISZ11>
		    <JUMP + PHRASE73>
PHRASE54
		    <EQUAL? SZ8 ISZ11 - PHRASE71>
		    <FRAME 'BAD-MOVE>
		    <PUSH EA16>
		    <DEAD EA16>
		    <PUSH EA27>
		    <DEAD EA27>
		    <PUSH SZ8>
		    <DEAD SZ8>
		    <PUSH EXTRA9>
		    <DEAD EXTRA9>
		    <CALL 'BAD-MOVE 4 = ISZ11>
		    <JUMP + PHRASE73>
PHRASE71
		    <VEQUAL? ISZ11 'BYTE - PHRASE75>
		    <GVAL 'BYTE-TAB = TB13>
		    <JUMP + PHRASE76>
PHRASE75
		    <VEQUAL? ISZ11 'WORD - PHRASE76>
		    <GVAL 'WORD-TAB = TB13>
PHRASE76
		    <LESS? TMP10 0 - PHRASE78 (TYPE FIX)>
		    <NTH1 TB13 = TB13>
		    <JUMP + PHRASE81>
PHRASE78
		    <FRAME 'NTH>
		    <PUSH TB13>
		    <DEAD TB13>
		    <PUSH 2>
		    <CALL 'NTH 2 = TB13>
PHRASE81
		    <FRAME 'EMIT>
		    <EQUAL? SZ8 'WORD - PHRASE85>
		    <DEAD SZ8>
		    <NTH1 TB13 = TEMP20>
		    <DEAD TB13>
		    <JUMP + PHRASE86>
PHRASE85
		    <FRAME 'NTH>
		    <PUSH TB13>
		    <DEAD TB13>
		    <PUSH 2>
		    <CALL 'NTH 2 = TEMP20>
PHRASE86
		    <PUSH TEMP20>
		    <DEAD TEMP20>
		    <VEQUAL? ISZ11 'BYTE - PHRASE89>
		    <GVAL 'AC-PC = TEMP20>
		    <NTHUV TEMP20 2 = TEMP20 (TYPE FIX)>
		    <OR TEMP20 #WORD *200* = TEMP20>
		    <LSH TEMP20 24 = TEMP20 (TYPE FIX)>
		    <AND TMP10 #WORD *377* = ISZ11>
		    <DEAD TMP10>
		    <LSH ISZ11 16 = ISZ11 (TYPE FIX)>
		    <OR TEMP20 ISZ11 = TEMP20>
		    <DEAD ISZ11>
		    <CHTYPE TEMP20 <TYPE-CODE EFF-ADDR> = TEMP20>
		    <JUMP + PHRASE99>
PHRASE89
		    <VEQUAL? ISZ11 'WORD - PHRASE91>
		    <GVAL 'AC-PC = ISZ11>
		    <NTHUV ISZ11 2 = ISZ11 (TYPE FIX)>
		    <OR ISZ11 #WORD *200* = ISZ11>
		    <LSH ISZ11 24 = ISZ11 (TYPE FIX)>
		    <AND TMP10 #WORD *377* = ABS12>
		    <LSH ABS12 16 = ABS12 (TYPE FIX)>
		    <AND TMP10 #WORD *177400* = TEMP20>
		    <DEAD TMP10>
		    <OR ABS12 TEMP20 = TB13>
		    <DEAD ABS12 TEMP20>
		    <AND TB13 #WORD *77777400* = TB13>
		    <OR ISZ11 TB13 = ISZ11>
		    <DEAD TB13>
		    <CHTYPE ISZ11 <TYPE-CODE EFF-ADDR> = TEMP20>
		    <DEAD ISZ11>
		    <JUMP + PHRASE99>
PHRASE91
		    <VEQUAL? ISZ11 'LONG + TAG100>
		    <DEAD ISZ11>
		    <SET TEMP20 %<> (TYPE FALSE)>
		    <JUMP + PHRASE99>
TAG100
		    <GVAL 'AC-PC = ISZ11>
		    <NTHUV ISZ11 2 = TB13 (TYPE FIX)>
		    <DEAD ISZ11>
		    <OR TB13 #WORD *200* = TB13>
		    <LSH TB13 24 = TB13 (TYPE FIX)>
		    <CHTYPE TB13 <TYPE-CODE EFF-ADDR> = TB13>
		    <CONS TB13 () = TB13>
		    <FRAME 'LREV>
		    <PUSH TMP10>
		    <DEAD TMP10>
		    <CALL 'LREV 1 = TEMP20>
		    <CHTYPE TEMP20 <TYPE-CODE EFF-ADDR> = TEMP20>
		    <CONS TEMP20 () = TEMP20>
		    <PUTREST TB13 TEMP20>
		    <DEAD TEMP20>
		    <CHTYPE TB13 <TYPE-CODE LADDR> = TEMP20>
		    <DEAD TB13>
PHRASE99
		    <PUSH TEMP20>
		    <DEAD TEMP20>
		    <PUSH EA27>
		    <DEAD EA27>
		    <CALL 'EMIT 3 = ISZ11>
PHRASE73
		    <RETURN ISZ11>
		    <DEAD ISZ11>
		    <END EMIT-MOVE>

#WORD *2225472261*
		    <GFCN EMIT-PUSH ("VALUE" <OR ATOM FALSE FIX> <OR EFF-ADDR LADDR> ATOM) EADDR4 SZ5>
		    <TEMP ISZ7>
		    <INTGO>
		    <SET ISZ7 SZ5>
		    <FRAME 'EMIT-MOVE>
		    <PUSH EADDR4>
		    <DEAD EADDR4>
		    <GVAL 'AC-TP = ISZ7>
		    <NTHUV ISZ7 2 = ISZ7 (TYPE FIX)>
		    <OR ISZ7 #WORD *200* = ISZ7>
		    <LSH ISZ7 24 = ISZ7 (TYPE FIX)>
		    <CHTYPE ISZ7 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD ISZ7>
		    <PUSH SZ5>
		    <DEAD SZ5>
		    <CALL 'EMIT-MOVE 3 = ISZ7>
		    <RETURN ISZ7>
		    <DEAD ISZ7>
		    <END EMIT-PUSH>

<SETG BYTE-TAB [[,INST-CVTBW ,INST-CVTWL] [,INST-MOVZBW ,INST-MOVZBL]]>

<SETG WORD-TAB [[0 ,INST-CVTWL] [0 ,INST-MOVZWL]]>

#WORD *35063655163*
		    <GFCN EMIT-POP ("VALUE" <OR ATOM FALSE FIX> <OR AC EFF-ADDR> ATOM) EADDR4 SZ5>
		    <TEMP TEMP9>
		    <INTGO>
		    <TYPE? EADDR4 <TYPE-CODE EFF-ADDR> - PHRASE7>
		    <FRAME 'EMIT-MOVE>
		    <GVAL 'AC-TP = TEMP9>
		    <NTHUV TEMP9 2 = TEMP9 (TYPE FIX)>
		    <OR TEMP9 #WORD *160* = TEMP9>
		    <LSH TEMP9 24 = TEMP9 (TYPE FIX)>
		    <CHTYPE TEMP9 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD TEMP9>
		    <PUSH EADDR4>
		    <DEAD EADDR4>
		    <PUSH SZ5>
		    <DEAD SZ5>
		    <CALL 'EMIT-MOVE 3 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
PHRASE7
		    <FRAME 'EMIT-MOVE>
		    <GVAL 'AC-TP = TEMP9>
		    <NTHUV TEMP9 2 = TEMP9 (TYPE FIX)>
		    <OR TEMP9 #WORD *160* = TEMP9>
		    <LSH TEMP9 24 = TEMP9 (TYPE FIX)>
		    <CHTYPE TEMP9 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD TEMP9>
		    <NTHUV EADDR4 2 = TEMP9 (TYPE FIX)>
		    <DEAD EADDR4>
		    <OR TEMP9 #WORD *120* = TEMP9>
		    <LSH TEMP9 24 = TEMP9 (TYPE FIX)>
		    <CHTYPE TEMP9 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD TEMP9>
		    <PUSH SZ5>
		    <DEAD SZ5>
		    <CALL 'EMIT-MOVE 3 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END EMIT-POP>

#WORD *20160750671*
		    <GFCN CLEAR-PUSH ("VALUE" <OR FALSE FIX> "OPTIONAL" ANY) LENGTH6>
		    <OPT-DISPATCH 0 %<> OPT4 OPT5>
OPT4
		    <PUSH 'LONG>
OPT5
		    <TEMP TEMP10>
		    <INTGO>
		    <FRAME 'EMIT>
		    <EQUAL? LENGTH6 'LONG - PHRASE9>
		    <SET TEMP10 212 (TYPE FIX)>
		    <JUMP + PHRASE14>
PHRASE9
		    <EQUAL? LENGTH6 'WIRD - PHRASE11>
		    <SET TEMP10 180 (TYPE FIX)>
		    <JUMP + PHRASE14>
PHRASE11
		    <EQUAL? LENGTH6 'BYTE - PHRASE12>
		    <SET TEMP10 148 (TYPE FIX)>
		    <JUMP + PHRASE14>
PHRASE12
		    <EQUAL? LENGTH6 'DOUBLE - PHRASE13>
		    <DEAD LENGTH6>
		    <SET TEMP10 124 (TYPE FIX)>
		    <JUMP + PHRASE14>
PHRASE13
		    <GVAL 'INST-CLRO = TEMP10>
PHRASE14
		    <PUSH TEMP10>
		    <DEAD TEMP10>
		    <GVAL 'AC-TP = TEMP10>
		    <NTHUV TEMP10 2 = TEMP10 (TYPE FIX)>
		    <OR TEMP10 #WORD *200* = TEMP10>
		    <LSH TEMP10 24 = TEMP10 (TYPE FIX)>
		    <CHTYPE TEMP10 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD TEMP10>
		    <CALL 'EMIT 2 = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
		    <END CLEAR-PUSH>

#WORD *22373733175*
		    <GFCN FIND-CALL-ENTRY ("VALUE" <OR CALL-ENTRY FALSE> ATOM) NAME4>
		    <TEMP TEMP14 TEMP16:LIST CE17:CALL-ENTRY>
		    <INTGO>
		    <SET TEMP14 %<> (TYPE FALSE)>
		    <GVAL 'CALL-ENTRY-TABLE = TEMP16>
		    <LOOP>
MAP6
		    <INTGO>
		    <EMPL? TEMP16 + MAPAP9>
		    <NTHL TEMP16 1 = CE17>
		    <FRAME 'SAME-NAME?>
		    <NTHUV CE17 1 = STACK (TYPE ATOM)>
		    <PUSH NAME4>
		    <CALL 'SAME-NAME? 2 = TEMP14>
		    <TYPE? TEMP14 <TYPE-CODE FALSE> + PHRASE19>
		    <RETURN CE17>
		    <DEAD CE17>
PHRASE19
		    <RESTL TEMP16 1 = TEMP16 (TYPE LIST)>
		    <JUMP + MAP6>
MAPAP9
		    <RETURN TEMP14>
		    <DEAD TEMP14>
		    <END FIND-CALL-ENTRY>

#WORD *33227427356*
		    <GFCN FIND-CALL-POINT ("VALUE" <OR FALSE FIX> ATOM FIX) NAME4 NARGS5>
		    <TEMP CE6 TEMP9>
		    <INTGO>
		    <FRAME 'FIND-CALL-ENTRY>
		    <PUSH NAME4>
		    <DEAD NAME4>
		    <CALL 'FIND-CALL-ENTRY 1 = CE6>
		    <SET TEMP9 CE6>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> + PHRASE8>
		    <FRAME 'FIND-ENTRY-LOC>
		    <PUSH CE6>
		    <DEAD CE6>
		    <PUSH NARGS5>
		    <DEAD NARGS5>
		    <CALL 'FIND-ENTRY-LOC 2 = TEMP9>
PHRASE8
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END FIND-CALL-POINT>

#WORD *25224345555*
		    <GFCN FIND-ENTRY-LOC ("VALUE" <OR FALSE FIX> CALL-ENTRY FIX) CE4 NARGS5>
		    <TEMP CUV6:UVECTOR FINAL10 TEMP13:FIX>
		    <INTGO>
		    <NTHUV CE4 2 = CUV6 (TYPE UVECTOR)>
		    <DEAD CE4>
		    <SET FINAL10 %<> (TYPE FALSE)>
		    <LOOP>
AGAIN11
		    <INTGO>
		    <NTHUU CUV6 1 = TEMP13 (TYPE FIX)>
		    <VEQUAL? NARGS5 TEMP13 - BOOL12 (TYPE FIX)>
		    <DEAD TEMP13>
		    <NTHUU CUV6 2 = FINAL10 (TYPE FIX)>
		    <DEAD CUV6>
		    <RETURN FINAL10>
		    <DEAD FINAL10>
BOOL12
		    <NTHUU CUV6 1 = TEMP13 (TYPE FIX)>
		    <VEQUAL? TEMP13 -1 - BOOL14 (TYPE FIX)>
		    <DEAD TEMP13>
		    <NTHUU CUV6 2 = FINAL10 (TYPE FIX)>
BOOL14
		    <VEQUAL? NARGS5 -1 - PHRASE18 (TYPE FIX)>
		    <TYPE? FINAL10 <TYPE-CODE FALSE> + PHRASE18>
		    <RETURN FINAL10>
		    <DEAD FINAL10>
PHRASE18
		    <LENUU CUV6 = TEMP13 (TYPE FIX)>
		    <VEQUAL? TEMP13 2 - PHRASE22 (TYPE FIX)>
		    <DEAD TEMP13>
		    <NTHUU CUV6 1 = TEMP13 (TYPE FIX)>
		    <GRTR? NARGS5 TEMP13 - PHRASE22 (TYPE FIX)>
		    <DEAD TEMP13>
		    <NTHUU CUV6 2 = FINAL10 (TYPE FIX)>
		    <DEAD CUV6>
		    <RETURN FINAL10>
		    <DEAD FINAL10>
PHRASE22
		    <EMPUU? CUV6 - PHRASE24 (TYPE UVECTOR)>
		    <RETURN FINAL10>
		    <DEAD FINAL10>
PHRASE24
		    <RESTUU CUV6 2 = CUV6 (TYPE UVECTOR)>
		    <JUMP + AGAIN11>
		    <END FIND-ENTRY-LOC>

#WORD *10527575716*
		    <GFCN INIT-INTERNAL-ENTRYS ("VALUE" <LIST [REST INT-ENTRY]>)>
		    <TEMP>
		    <INTGO>
		    <SETG 'INTERNAL-ENTRY-TABLE ()>
		    <RETURN ()>
		    <END INIT-INTERNAL-ENTRYS>

#WORD *21621777610*
		    <GFCN INIT-CALL-ENTRYS ("VALUE" <LIST [REST CALL-ENTRY]>)>
		    <TEMP>
		    <INTGO>
		    <SETG 'CALL-ENTRY-TABLE ()>
		    <RETURN ()>
		    <END INIT-CALL-ENTRYS>

#WORD *13563431243*
		    <GFCN ADD-INTERNAL-ENTRY ("VALUE" <OR FALSE <LIST [REST INT-ENTRY]>> FIX <OR ATOM SPEC-LABEL>) NUMARGS4 LABEL5>
		    <TEMP TEMP16 TEMP18:VECTOR LREF19>
		    <INTGO>
		    <SET TEMP16 %<> (TYPE FALSE)>
		    <GVAL 'OUTST-LABEL-TABLE = TEMP18>
		    <LOOP>
MAP8
		    <INTGO>
		    <EMPUV? TEMP18 + MAPAP11>
		    <NTHUV TEMP18 1 = LREF19>
		    <NTHUV LREF19 1 = TEMP16>
		    <EQUAL? TEMP16 LABEL5 + TAG22>
		    <DEAD TEMP16>
		    <SET TEMP16 %<> (TYPE FALSE)>
		    <JUMP + PHRASE21>
TAG22
		    <PUSH NUMARGS4>
		    <PUSH LREF19>
		    <DEAD LREF19>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP16 (TYPE VECTOR)>
		    <CHTYPE TEMP16 <TYPE-CODE INT-ENTRY> = LREF19>
		    <DEAD TEMP16>
		    <GVAL 'INTERNAL-ENTRY-TABLE = TEMP16>
		    <CONS LREF19 TEMP16 = TEMP16>
		    <DEAD LREF19>
		    <SETG 'INTERNAL-ENTRY-TABLE TEMP16>
PHRASE21
		    <RESTUV TEMP18 1 = TEMP18 (TYPE VECTOR)>
		    <JUMP + MAP8>
MAPAP11
		    <RETURN TEMP16>
		    <DEAD TEMP16>
		    <END ADD-INTERNAL-ENTRY>

#WORD *1102137400*
		    <GFCN UPDATE-CALL-ENTRY-TABLE ("VALUE" CALL-ENTRY ATOM) FNAME4>
		    <TEMP TEMP18 TEMP16 IE19 NARGS20>
		    <INTGO>
		    <GVAL 'INTERNAL-ENTRY-TABLE = TEMP18>
		    <SET TEMP16 0 (TYPE FIX)>
		    <LOOP>
MAP8
		    <INTGO>
		    <EMPL? TEMP18 + MAPAP11>
		    <NTHL TEMP18 1 = IE19>
		    <NTHUV IE19 1 = NARGS20 (TYPE FIX)>
		    <NTHUV IE19 2 = IE19 (TYPE LABEL-REF)>
		    <PUSH NARGS20>
		    <DEAD NARGS20>
		    <ADD TEMP16 1 = TEMP16 (TYPE FIX)>
		    <NTHUV IE19 3 = STACK (TYPE FIX)>
		    <DEAD IE19>
		    <ADD TEMP16 1 = TEMP16 (TYPE FIX)>
		    <RESTL TEMP18 1 = TEMP18 (TYPE LIST)>
		    <JUMP + MAP8>
MAPAP11
		    <UBLOCK <TYPE-CODE UVECTOR> TEMP16 = NARGS20 (TYPE UVECTOR)>
		    <DEAD TEMP16>
		    <PUSH FNAME4>
		    <DEAD FNAME4>
		    <PUSH NARGS20>
		    <DEAD NARGS20>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP18 (TYPE VECTOR)>
		    <CHTYPE TEMP18 <TYPE-CODE CALL-ENTRY> = TEMP16>
		    <DEAD TEMP18>
		    <GVAL 'CALL-ENTRY-TABLE = TEMP18>
		    <CONS TEMP16 TEMP18 = TEMP18>
		    <SETG 'CALL-ENTRY-TABLE TEMP18>
		    <DEAD TEMP18>
		    <RETURN TEMP16>
		    <DEAD TEMP16>
		    <END UPDATE-CALL-ENTRY-TABLE>

<SETG CALL-TABLE <IVECTOR ,CT-NUMBER-CALLS <>>>

#WORD *33406771763*
		    <GFCN RESET-CALL-TABLE ("VALUE" <OR FALSE <VECTOR !<FALSE> [REST <OR FALSE UNRESOLVED-CALL>]>>)>
		    <TEMP TEMP13 TEMP15:VECTOR>
		    <INTGO>
		    <SETG 'CALL-POINTER 1>
		    <SET TEMP13 %<> (TYPE FALSE)>
		    <GVAL 'CALL-TABLE = TEMP15>
		    <LOOP>
MAP5
		    <INTGO>
		    <EMPUV? TEMP15 + MAPAP8>
		    <SET TEMP13 TEMP15>
		    <PUTUV TEMP13 1 %<>>
		    <RESTUV TEMP15 1 = TEMP15 (TYPE VECTOR)>
		    <JUMP + MAP5>
MAPAP8
		    <RETURN TEMP13>
		    <DEAD TEMP13>
		    <END RESET-CALL-TABLE>

#WORD *22354442762*
		    <GFCN EMIT-CALL ("VALUE" ATOM ATOM FIX) FCN4 NUMARGS5>
		    <TEMP CNT7:FIX TAB8:VECTOR TEMP11 UC6:UNRESOLVED-CALL>
		    <INTGO>
		    <GVAL 'CALL-POINTER = CNT7>
		    <GVAL 'CALL-TABLE = TAB8>
		    <PUSH FCN4>
		    <DEAD FCN4>
		    <PUSH NUMARGS5>
		    <DEAD NUMARGS5>
		    <PUSH 0>
		    <PUSH 0>
		    <UBLOCK <TYPE-CODE VECTOR> 4 = TEMP11 (TYPE VECTOR)>
		    <CHTYPE TEMP11 <TYPE-CODE UNRESOLVED-CALL> = UC6>
		    <DEAD TEMP11>
		    <LENUV TAB8 = TEMP11 (TYPE FIX)>
		    <DEAD TAB8>
		    <GRTR? CNT7 TEMP11 - PHRASE13 (TYPE FIX)>
		    <DEAD TEMP11>
		    <FRAME 'VECGROW>
		    <GVAL 'CALL-TABLE = STACK>
		    <PUSH 100>
		    <CALL 'VECGROW 2 = TEMP11>
		    <SETG 'CALL-TABLE TEMP11>
		    <DEAD TEMP11>
PHRASE13
		    <GVAL 'CALL-TABLE = TEMP11>
		    <PUTUV TEMP11 CNT7 UC6>
		    <DEAD TEMP11 UC6>
		    <ADD CNT7 1 = TEMP11 (TYPE FIX)>
		    <SETG 'CALL-POINTER TEMP11>
		    <DEAD TEMP11>
		    <FRAME 'ADD-WORD-TO-CODE>
		    <LSH 89 24 = TEMP11 (TYPE FIX)>
		    <OR TEMP11 CNT7 = STACK>
		    <DEAD TEMP11 CNT7>
		    <CALL 'ADD-WORD-TO-CODE 1>
		    <RETURN 'T>
		    <END EMIT-CALL>

#WORD *21766200705*
		    <GFCN VECGROW ("VALUE" VECTOR VECTOR FIX) TAB4 INCR5>
		    <TEMP TEMP7 NEWVEC6:VECTOR TEMP14:VECTOR OVEC19 NVEC20:VECTOR>
		    <INTGO>
		    <LENUV TAB4 = TEMP7 (TYPE FIX)>
		    <ADD TEMP7 INCR5 = TEMP7 (TYPE FIX)>
		    <DEAD INCR5>
		    <UUBLOCK <TYPE-CODE VECTOR> TEMP7 = NEWVEC6 (TYPE VECTOR)>
		    <DEAD TEMP7>
		    <SET TEMP7 TAB4 (TYPE VECTOR)>
		    <DEAD TAB4>
		    <SET TEMP14 NEWVEC6 (TYPE VECTOR)>
		    <LOOP>
MAP9
		    <INTGO>
		    <EMPUV? TEMP7 + MAPAP12>
		    <EMPUV? TEMP14 + MAPAP12>
		    <SET OVEC19 TEMP7>
		    <SET NVEC20 TEMP14>
		    <NTHUV OVEC19 1 = OVEC19>
		    <PUTUV NVEC20 1 OVEC19>
		    <DEAD NVEC20 OVEC19>
		    <RESTUV TEMP7 1 = TEMP7 (TYPE VECTOR)>
		    <RESTUV TEMP14 1 = TEMP14 (TYPE VECTOR)>
		    <JUMP + MAP9>
MAPAP12
		    <RETURN NEWVEC6>
		    <DEAD NEWVEC6>
		    <END VECGROW>

<SETG PUSH-LABEL-TABLE <IVECTOR 100 <>>>

#WORD *10050242242*
		    <GFCN RESET-PUSH-LABEL-TABLE ("VALUE" FIX)>
		    <TEMP>
		    <INTGO>
		    <SETG 'PUSH-LABEL-COUNT 1>
		    <RETURN 1>
		    <END RESET-PUSH-LABEL-TABLE>

#WORD *16120257040*
		    <GFCN EMIT-PUSH-LABEL ("VALUE" ATOM <OR ATOM SPEC-LABEL>) LABEL4>
		    <TEMP CNT5:FIX TAB6:VECTOR NLREF8:LABEL-REF TEMP13>
		    <INTGO>
		    <GVAL 'PUSH-LABEL-COUNT = CNT5>
		    <GVAL 'PUSH-LABEL-TABLE = TAB6>
		    <FRAME 'CREATE-LABEL-REF>
		    <PUSH LABEL4>
		    <DEAD LABEL4>
		    <CALL 'CREATE-LABEL-REF 1 = NLREF8>
		    <FRAME 'ADD-OUTSTANDING-LABEL>
		    <PUSH NLREF8>
		    <CALL 'ADD-OUTSTANDING-LABEL 1>
		    <LENUV TAB6 = TEMP13 (TYPE FIX)>
		    <GRTR? CNT5 TEMP13 - PHRASE12 (TYPE FIX)>
		    <DEAD TEMP13>
		    <FRAME 'VECGROW>
		    <PUSH TAB6>
		    <DEAD TAB6>
		    <PUSH 100>
		    <CALL 'VECGROW 2 = TEMP13>
		    <SETG 'PUSH-LABEL-TABLE TEMP13>
		    <DEAD TEMP13>
PHRASE12
		    <GVAL 'PUSH-LABEL-TABLE = TEMP13>
		    <PUTUV TEMP13 CNT5 NLREF8>
		    <DEAD TEMP13 NLREF8>
		    <ADD CNT5 1 = TEMP13 (TYPE FIX)>
		    <SETG 'PUSH-LABEL-COUNT TEMP13>
		    <DEAD TEMP13>
		    <FRAME 'ADD-WORD-TO-CODE>
		    <LSH 91 24 = TEMP13 (TYPE FIX)>
		    <OR TEMP13 CNT5 = STACK>
		    <DEAD TEMP13 CNT5>
		    <CALL 'ADD-WORD-TO-CODE 1>
		    <RETURN 'T>
		    <END EMIT-PUSH-LABEL>

<SETG MOVE-LABEL-TABLE <IVECTOR 100 <>>>

#WORD *10131242150*
		    <GFCN RESET-MOVE-LABEL-TABLE ("VALUE" FIX)>
		    <TEMP>
		    <INTGO>
		    <SETG 'MOVE-LABEL-COUNT 1>
		    <RETURN 1>
		    <END RESET-MOVE-LABEL-TABLE>

#WORD *24203253174*
		    <GFCN EMIT-MOVE-LABEL ("VALUE" ATOM <OR ATOM SPEC-LABEL> ANY) LABEL4 EA5>
		    <TEMP CNT6:FIX TAB7 NLREF9:LABEL-REF TEMP14>
		    <INTGO>
		    <GVAL 'MOVE-LABEL-COUNT = CNT6>
		    <GVAL 'MOVE-LABEL-TABLE = TAB7>
		    <FRAME 'CREATE-LABEL-REF>
		    <PUSH LABEL4>
		    <DEAD LABEL4>
		    <CALL 'CREATE-LABEL-REF 1 = NLREF9>
		    <FRAME 'ADD-OUTSTANDING-LABEL>
		    <PUSH NLREF9>
		    <CALL 'ADD-OUTSTANDING-LABEL 1>
		    <LENUV TAB7 = TEMP14 (TYPE FIX)>
		    <GRTR? CNT6 TEMP14 - PHRASE13 (TYPE FIX)>
		    <DEAD TEMP14>
		    <FRAME 'VECGROW>
		    <PUSH TAB7>
		    <DEAD TAB7>
		    <PUSH 100>
		    <CALL 'VECGROW 2 = TEMP14>
		    <SETG 'MOVE-LABEL-TABLE TEMP14>
		    <DEAD TEMP14>
PHRASE13
		    <GVAL 'MOVE-LABEL-TABLE = TEMP14>
		    <PUTUV TEMP14 CNT6 NLREF9>
		    <DEAD TEMP14 NLREF9>
		    <ADD CNT6 1 = TEMP14 (TYPE FIX)>
		    <SETG 'MOVE-LABEL-COUNT TEMP14>
		    <DEAD TEMP14>
		    <FRAME 'ADD-WORD-TO-CODE>
		    <LSH 119 24 = TEMP14 (TYPE FIX)>
		    <AND EA5 #WORD *37700000000* = TAB7>
		    <DEAD EA5>
		    <LSH TAB7 -8 = TAB7 (TYPE FIX)>
		    <OR TEMP14 TAB7 = TEMP14>
		    <DEAD TAB7>
		    <OR TEMP14 CNT6 = STACK>
		    <DEAD TEMP14 CNT6>
		    <CALL 'ADD-WORD-TO-CODE 1>
		    <RETURN 'T>
		    <END EMIT-MOVE-LABEL>
