
#WORD *36752207516*
		    <GFCN PROCESS-BRANCH-1 ("VALUE" FIX FIX FIX FIX) INST4 BYTEOFF5 CODEPTR6>
		    <TEMP (XREF9 %<>) PTR7:FIX TEMP12:LIST LREF8:LABEL-REF TREF26:XREF-INFO>
		    <INTGO>
		    <AND INST4 #WORD *177777* = PTR7>
		    <DEAD INST4>
		    <GVAL 'LABEL-TABLE = TEMP12>
		    <SUB PTR7 1 = PTR7 (TYPE FIX)>
		    <GRTR? PTR7 0 - RESTL15 (TYPE FIX)>
		    <LOOP (TEMP12 VALUE) (PTR7 VALUE)>
RESTL14
		    <INTGO>
		    <RESTL TEMP12 1 = TEMP12 (TYPE LIST)>
		    <SUB PTR7 1 = PTR7 (TYPE FIX)>
		    <GRTR? PTR7 0 + RESTL14 (TYPE FIX)>
RESTL15
		    <NTHL TEMP12 1 = LREF8 (TYPE LABEL-REF)>
		    <DEAD TEMP12>
		    <NTHUV LREF8 2 = TEMP12 (TYPE LIST)>
		    <LOOP>
MAP17
		    <INTGO>
		    <EMPL? TEMP12 + MAPAP20>
		    <NTHL TEMP12 1 = TREF26>
		    <NTHUV TREF26 2 = PTR7 (TYPE FIX)>
		    <VEQUAL? CODEPTR6 PTR7 - PHRASE28 (TYPE FIX)>
		    <DEAD PTR7>
		    <SET XREF9 TREF26>
		    <DEAD TREF26>
		    <JUMP + MAPAP20>
PHRASE28
		    <RESTL TEMP12 1 = TEMP12 (TYPE LIST)>
		    <JUMP + MAP17>
MAPAP20
		    <TYPE? XREF9 <TYPE-CODE FALSE> - BOOL30>
		    <FRAME 'ERROR>
		    <PUSH "JUMP NOT FOUND">
		    <PUSH LREF8>
		    <DEAD LREF8>
		    <PUSH CODEPTR6>
		    <DEAD CODEPTR6>
		    <PUSH BYTEOFF5>
		    <PUSH 'PROCESS-BRANCH>
		    <CALL 'ERROR 5>
BOOL30
		    <NTHUV XREF9 4 = XREF9>
		    <TYPE? XREF9 <TYPE-CODE FALSE> + BOOL32>
		    <EMPUU? XREF9 + BOOL32 (TYPE UVECTOR)>
		    <FRAME 'SCAN-PASS>
		    <PUSH BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <PUSH ()>
		    <PUSH XREF9>
		    <PUSH %<>>
		    <LENUU XREF9 = PTR7 (TYPE FIX)>
		    <DEAD XREF9>
		    <ADD PTR7 1 = STACK (TYPE FIX)>
		    <DEAD PTR7>
		    <CALL 'SCAN-PASS 5 = BYTEOFF5>
BOOL32
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <END PROCESS-BRANCH-1>

#WORD *25675476534*
		    <GFCN PROCESS-BRANCH-2 ("VALUE" FIX FIX FIX FIX FIX FIX) INST4 BYTEOFF5 CODEPTR6 INSC7 EAT8>
		    <TEMP (XREF11 %<>) PTR9 TEMP14 LREF10:LABEL-REF TREF28:XREF-INFO>
		    <INTGO>
		    <AND INST4 #WORD *177777* = PTR9>
		    <DEAD INST4>
		    <GVAL 'LABEL-TABLE = TEMP14>
		    <SUB PTR9 1 = PTR9 (TYPE FIX)>
		    <GRTR? PTR9 0 - RESTL17 (TYPE FIX)>
		    <LOOP (TEMP14 VALUE) (PTR9 VALUE)>
RESTL16
		    <INTGO>
		    <RESTL TEMP14 1 = TEMP14 (TYPE LIST)>
		    <SUB PTR9 1 = PTR9 (TYPE FIX)>
		    <GRTR? PTR9 0 + RESTL16 (TYPE FIX)>
RESTL17
		    <NTHL TEMP14 1 = LREF10 (TYPE LABEL-REF)>
		    <DEAD TEMP14>
		    <NTHUV LREF10 2 = TEMP14 (TYPE LIST)>
		    <LOOP>
MAP19
		    <INTGO>
		    <EMPL? TEMP14 + MAPAP22>
		    <NTHL TEMP14 1 = TREF28>
		    <NTHUV TREF28 2 = PTR9 (TYPE FIX)>
		    <VEQUAL? CODEPTR6 PTR9 - PHRASE30 (TYPE FIX)>
		    <DEAD PTR9>
		    <SET XREF11 TREF28>
		    <DEAD TREF28>
		    <JUMP + MAPAP22>
PHRASE30
		    <RESTL TEMP14 1 = TEMP14 (TYPE LIST)>
		    <JUMP + MAP19>
MAPAP22
		    <TYPE? XREF11 <TYPE-CODE FALSE> - BOOL32>
		    <FRAME 'ERROR>
		    <PUSH "JUMP NOT FOUND">
		    <PUSH LREF10>
		    <PUSH CODEPTR6>
		    <DEAD CODEPTR6>
		    <PUSH BYTEOFF5>
		    <PUSH 'PROCESS-BRANCH>
		    <CALL 'ERROR 5>
BOOL32
		    <NTHUV LREF10 3 = PTR9 (TYPE FIX)>
		    <DEAD LREF10>
		    <VEQUAL? EAT8 33 - PHRASE35 (TYPE FIX)>
		    <DEAD EAT8>
		    <ADD BYTEOFF5 2 = BYTEOFF5 (TYPE FIX)>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE35
		    <SUB PTR9 BYTEOFF5 = TEMP14 (TYPE FIX)>
		    <SUB TEMP14 1 = TEMP14 (TYPE FIX)>
		    <LESS? PTR9 0 + BOOL39 (TYPE FIX)>
		    <DEAD PTR9>
		    <GRTR? TEMP14 127 + BOOL39 (TYPE FIX)>
		    <LESS? TEMP14 -127 + BOOL39 (TYPE FIX)>
		    <DEAD TEMP14>
		    <NTHUV XREF11 12 = PTR9>
		    <TYPE? PTR9 <TYPE-CODE FALSE> + PHRASE38>
		    <DEAD PTR9>
BOOL39
		    <PUTUV XREF11 5 %<>>
		    <DEAD XREF11>
		    <VEQUAL? INSC7 17 - PHRASE43 (TYPE FIX)>
		    <ADD BYTEOFF5 2 = BYTEOFF5 (TYPE FIX)>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE43
		    <VEQUAL? INSC7 244 + BOOL45 (TYPE FIX)>
		    <VEQUAL? INSC7 245 - PHRASE44 (TYPE FIX)>
BOOL45
		    <ADD BYTEOFF5 5 = BYTEOFF5 (TYPE FIX)>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE44
		    <VEQUAL? INSC7 242 + BOOL47 (TYPE FIX)>
		    <VEQUAL? INSC7 243 - PHRASE46 (TYPE FIX)>
		    <DEAD INSC7>
BOOL47
		    <ADD BYTEOFF5 6 = BYTEOFF5 (TYPE FIX)>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE46
		    <ADD BYTEOFF5 4 = BYTEOFF5 (TYPE FIX)>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE38
		    <PUTUV XREF11 5 'T>
		    <DEAD XREF11>
		    <ADD BYTEOFF5 1 = BYTEOFF5 (TYPE FIX)>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <END PROCESS-BRANCH-2>

#WORD *31767303722*
		    <GFCN AGEN-BRANCH-1 ("VALUE" FIX FIX FIX FIX FIX) INST4 BYTEOFF5 CODEPTR6 INSCODE7>
		    <TEMP (SAVED-POINT11 0) TEMP14 TREF28:XREF-INFO XREF10:XREF-INFO>
		    <INTGO>
		    <AND INST4 #WORD *177777* = SAVED-POINT11>
		    <DEAD INST4>
		    <GVAL 'LABEL-TABLE = TEMP14>
		    <SUB SAVED-POINT11 1 = SAVED-POINT11 (TYPE FIX)>
		    <GRTR? SAVED-POINT11 0 - RESTL17 (TYPE FIX)>
		    <LOOP (TEMP14 VALUE) (SAVED-POINT11 VALUE)>
RESTL16
		    <INTGO>
		    <RESTL TEMP14 1 = TEMP14 (TYPE LIST)>
		    <SUB SAVED-POINT11 1 = SAVED-POINT11 (TYPE FIX)>
		    <GRTR? SAVED-POINT11 0 + RESTL16 (TYPE FIX)>
RESTL17
		    <NTHL TEMP14 1 = TEMP14 (TYPE LABEL-REF)>
		    <NTHUV TEMP14 3 = SAVED-POINT11 (TYPE FIX)>
		    <NTHUV TEMP14 2 = TEMP14 (TYPE LIST)>
		    <LOOP>
MAP19
		    <INTGO>
		    <EMPL? TEMP14 + MAPAP22>
		    <NTHL TEMP14 1 = TREF28>
		    <NTHUV TREF28 2 = SAVED-POINT11 (TYPE FIX)>
		    <VEQUAL? CODEPTR6 SAVED-POINT11 - PHRASE30 (TYPE FIX)>
		    <DEAD SAVED-POINT11>
		    <SET XREF10 TREF28>
		    <DEAD TREF28>
		    <JUMP + MAPAP22>
PHRASE30
		    <RESTL TEMP14 1 = TEMP14 (TYPE LIST)>
		    <JUMP + MAP19>
MAPAP22
		    <NTHUV XREF10 4 = SAVED-POINT11>
		    <DEAD XREF10>
		    <TYPE? SAVED-POINT11 <TYPE-CODE FALSE> + BOOL32>
		    <EMPUU? SAVED-POINT11 + BOOL32 (TYPE UVECTOR)>
		    <FRAME 'OUTPUT-PASS>
		    <PUSH BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <PUSH ()>
		    <PUSH SAVED-POINT11>
		    <LENUU SAVED-POINT11 = SAVED-POINT11 (TYPE FIX)>
		    <ADD SAVED-POINT11 1 = STACK (TYPE FIX)>
		    <DEAD SAVED-POINT11>
		    <PUSH %<>>
		    <CALL 'OUTPUT-PASS 5 = BYTEOFF5>
BOOL32
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <END AGEN-BRANCH-1>

#WORD *22476505124*
		    <GFCN AGEN-BRANCH-2 ("VALUE" FIX ANY FIX ANY FIX FIX FIX) INST4 BYTEOFF5 CODEPTR6 INSCODE7 WHERE8 EAT9>
		    <TEMP PTR10:FIX TEMP15 TEMP16 TEMP32:FIX XREF12:XREF-INFO>
		    <INTGO>
		    <AND INST4 #WORD *177777* = PTR10>
		    <DEAD INST4>
		    <GVAL 'LABEL-TABLE = TEMP15>
		    <SET TEMP16 PTR10>
		    <DEAD PTR10>
		    <SUB TEMP16 1 = TEMP16 (TYPE FIX)>
		    <GRTR? TEMP16 0 - RESTL18 (TYPE FIX)>
		    <LOOP (TEMP15 VALUE) (TEMP16 VALUE)>
RESTL17
		    <INTGO>
		    <RESTL TEMP15 1 = TEMP15 (TYPE LIST)>
		    <SUB TEMP16 1 = TEMP16 (TYPE FIX)>
		    <GRTR? TEMP16 0 + RESTL17 (TYPE FIX)>
RESTL18
		    <NTHL TEMP15 1 = TEMP15 (TYPE LABEL-REF)>
		    <NTHUV TEMP15 3 = PTR10 (TYPE FIX)>
		    <NTHUV TEMP15 2 = TEMP15 (TYPE LIST)>
		    <LOOP>
MAP20
		    <INTGO>
		    <EMPL? TEMP15 + MAPAP23>
		    <NTHL TEMP15 1 = TEMP16>
		    <NTHUV TEMP16 2 = TEMP32 (TYPE FIX)>
		    <EQUAL? TEMP32 CODEPTR6 - PHRASE31>
		    <DEAD TEMP32>
		    <SET XREF12 TEMP16>
		    <DEAD TEMP16>
		    <JUMP + MAPAP23>
PHRASE31
		    <RESTL TEMP15 1 = TEMP15 (TYPE LIST)>
		    <JUMP + MAP20>
MAPAP23
		    <ADD BYTEOFF5 1 = BYTEOFF5 (TYPE FIX)>
		    <SUB PTR10 BYTEOFF5 = PTR10 (TYPE FIX)>
		    <GVAL 'FBYTE-OFFSET = TEMP15>
		    <NTHUV XREF12 5 = TEMP16>
		    <TYPE? TEMP16 <TYPE-CODE FALSE> + PHRASE34>
		    <DEAD TEMP16>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <AND PTR10 #WORD *377* = STACK>
		    <DEAD PTR10>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <PUTUV XREF12 5 'T>
		    <JUMP + PHRASE65>
PHRASE34
		    <VEQUAL? EAT9 33 - PHRASE36 (TYPE FIX)>
		    <DEAD EAT9>
		    <SUB PTR10 1 = PTR10 (TYPE FIX)>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <AND PTR10 #WORD *377* = STACK>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <LSH PTR10 -8 = TEMP16 (TYPE FIX)>
		    <DEAD PTR10>
		    <AND TEMP16 #WORD *377* = STACK>
		    <DEAD TEMP16>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF5 1 = BYTEOFF5 (TYPE FIX)>
		    <PUTUV XREF12 5 %<>>
		    <JUMP + PHRASE65>
PHRASE36
		    <VEQUAL? INSCODE7 244 + BOOL40 (TYPE FIX)>
		    <VEQUAL? INSCODE7 245 - PHRASE39 (TYPE FIX)>
BOOL40
		    <FRAME 'PUT-FCODE>
		    <PUSH WHERE8>
		    <DEAD WHERE8>
		    <PUSH 215>
		    <CALL 'PUT-FCODE 2>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <GVAL 'IST-SOBGEQ = TEMP16>
		    <EQUAL? TEMP16 INSCODE7 - PHRASE44>
		    <DEAD TEMP16>
		    <SET TEMP16 24 (TYPE FIX)>
		    <JUMP + PHRASE45>
PHRASE44
		    <SET TEMP16 20 (TYPE FIX)>
PHRASE45
		    <PUSH TEMP16>
		    <DEAD TEMP16>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 3>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 49>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <GVAL 'FBYTE-OFFSET = TEMP15>
		    <ADD BYTEOFF5 4 = BYTEOFF5 (TYPE FIX)>
		    <SUB PTR10 4 = PTR10 (TYPE FIX)>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <AND PTR10 #WORD *377* = STACK>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <LSH PTR10 -8 = TEMP32 (TYPE FIX)>
		    <DEAD PTR10>
		    <AND TEMP32 #WORD *377* = STACK>
		    <DEAD TEMP32>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <PUTUV XREF12 5 %<>>
		    <JUMP + PHRASE65>
PHRASE39
		    <VEQUAL? INSCODE7 244 + BOOL51 (TYPE FIX)>
		    <VEQUAL? INSCODE7 242 - PHRASE50 (TYPE FIX)>
BOOL51
		    <SUB PTR10 5 = PTR10 (TYPE FIX)>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 2>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 17>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 3>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 49>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <GVAL 'FBYTE-OFFSET = TEMP15>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <AND PTR10 #WORD *377* = STACK>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <LSH PTR10 -8 = TEMP32 (TYPE FIX)>
		    <DEAD PTR10>
		    <AND TEMP32 #WORD *377* = STACK>
		    <DEAD TEMP32>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF5 5 = BYTEOFF5 (TYPE FIX)>
		    <PUTUV XREF12 5 %<>>
		    <JUMP + PHRASE65>
PHRASE50
		    <VEQUAL? INSCODE7 17 + PHRASE58 (TYPE FIX)>
		    <FRAME 'PUT-FCODE>
		    <PUSH WHERE8>
		    <DEAD WHERE8>
		    <FRAME 'INS-INVERT>
		    <PUSH INSCODE7>
		    <DEAD INSCODE7>
		    <CALL 'INS-INVERT 1 = STACK>
		    <CALL 'PUT-FCODE 2>
		    <SUB PTR10 3 = PTR10 (TYPE FIX)>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 3>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 49>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <GVAL 'FBYTE-OFFSET = TEMP15>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <AND PTR10 #WORD *377* = STACK>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <LSH PTR10 -8 = TEMP32 (TYPE FIX)>
		    <DEAD PTR10>
		    <AND TEMP32 #WORD *377* = STACK>
		    <DEAD TEMP32>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF5 3 = BYTEOFF5 (TYPE FIX)>
		    <PUTUV XREF12 5 %<>>
		    <JUMP + PHRASE65>
PHRASE58
		    <FRAME 'PUT-FCODE>
		    <PUSH WHERE8>
		    <DEAD WHERE8>
		    <PUSH 49>
		    <CALL 'PUT-FCODE 2>
		    <ADD BYTEOFF5 1 = BYTEOFF5 (TYPE FIX)>
		    <SUB PTR10 1 = PTR10 (TYPE FIX)>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <AND PTR10 #WORD *377* = STACK>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <LSH PTR10 -8 = TEMP32 (TYPE FIX)>
		    <DEAD PTR10>
		    <AND TEMP32 #WORD *377* = STACK>
		    <DEAD TEMP32>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <PUTUV XREF12 5 %<>>
PHRASE65
		    <PUTUV XREF12 6 BYTEOFF5 (TYPE FIX)>
		    <PUTUV XREF12 2 TEMP15>
		    <DEAD XREF12 TEMP15>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <END AGEN-BRANCH-2>

#WORD *7631774431*
		    <GFCN INS-INVERT ("VALUE" FIX FIX) INS4>
		    <TEMP TEMP5:FIX>
		    <INTGO>
		    <XOR INS4 #WORD *1* = TEMP5>
		    <DEAD INS4>
		    <RETURN TEMP5>
		    <DEAD TEMP5>
		    <END INS-INVERT>

"PASS TO FIXUP THE LABELS IN THE FINAL CODE"

#WORD *1205430260*
		    <GFCN FIXUP-PASS ("VALUE" ANY)>
		    <TEMP LABELS4:LIST TEMP16 ADDR6:FIX TEMP30:LIST XREF31:XREF-INFO POINT5 TEMP33 DADDR32:FIX>
		    <INTGO>
		    <GVAL 'LABEL-TABLE = LABELS4>
		    <SET TEMP16 %<> (TYPE FALSE)>
		    <LOOP>
MAP8
		    <INTGO>
		    <EMPL? LABELS4 + MAPAP11>
		    <NTHL LABELS4 1 = TEMP16>
		    <NTHUV TEMP16 3 = ADDR6 (TYPE FIX)>
		    <NTHUV TEMP16 2 = TEMP30 (TYPE LIST)>
		    <LOOP>
MAP20
		    <INTGO>
		    <EMPL? TEMP30 + MAPAP23>
		    <NTHL TEMP30 1 = XREF31>
		    <NTHUV XREF31 2 = POINT5 (TYPE FIX)>
		    <NTHUV XREF31 6 = TEMP33 (TYPE FIX)>
		    <SUB ADDR6 TEMP33 = DADDR32 (TYPE FIX)>
		    <DEAD TEMP33>
		    <NTHUV XREF31 5 = TEMP33>
		    <TYPE? TEMP33 <TYPE-CODE FALSE> + BOOL34>
		    <DEAD TEMP33>
		    <SET TEMP33 DADDR32>
		    <LESS? TEMP33 0 - TAG35 (TYPE FIX)>
		    <SUB 0 TEMP33 = TEMP33 (TYPE FIX)>
TAG35
		    <GRTR? TEMP33 127 - BOOL34 (TYPE FIX)>
		    <DEAD TEMP33>
		    <FRAME 'ERROR>
		    <PUSH "CANT FIT OFFSET">
		    <PUSH 'FIXUP-PASS>
		    <CALL 'ERROR 2>
BOOL34
		    <NTHUV XREF31 5 = TEMP33>
		    <DEAD XREF31>
		    <TYPE? TEMP33 <TYPE-CODE FALSE> + PHRASE38>
		    <DEAD TEMP33>
		    <FRAME 'PUT-FCODE>
		    <PUSH POINT5>
		    <DEAD POINT5>
		    <AND DADDR32 #WORD *377* = STACK>
		    <DEAD DADDR32>
		    <CALL 'PUT-FCODE 2>
		    <JUMP + PHRASE40>
PHRASE38
		    <FRAME 'PUT-FCODE>
		    <PUSH POINT5>
		    <AND DADDR32 #WORD *377* = STACK>
		    <CALL 'PUT-FCODE 2>
		    <FRAME 'PUT-FCODE>
		    <ADD POINT5 1 = STACK (TYPE FIX)>
		    <DEAD POINT5>
		    <LSH DADDR32 -8 = TEMP33 (TYPE FIX)>
		    <DEAD DADDR32>
		    <AND TEMP33 #WORD *377* = STACK>
		    <DEAD TEMP33>
		    <CALL 'PUT-FCODE 2>
PHRASE40
		    <RESTL TEMP30 1 = TEMP30 (TYPE LIST)>
		    <JUMP + MAP20>
MAPAP23
		    <NTHUV TEMP16 6 = POINT5>
		    <DEAD TEMP16>
		    <SET TEMP16 POINT5>
		    <TYPE? TEMP16 <TYPE-CODE FALSE> + PHRASE44>
		    <FRAME 'PUT-FCODE>
		    <PUSH POINT5>
		    <AND ADDR6 #WORD *377* = STACK>
		    <CALL 'PUT-FCODE 2>
		    <FRAME 'PUT-FCODE>
		    <ADD POINT5 1 = STACK (TYPE FIX)>
		    <LSH ADDR6 -8 = DADDR32 (TYPE FIX)>
		    <AND DADDR32 #WORD *377* = STACK>
		    <DEAD DADDR32>
		    <CALL 'PUT-FCODE 2>
		    <FRAME 'PUT-FCODE>
		    <ADD POINT5 2 = STACK (TYPE FIX)>
		    <LSH ADDR6 -16 = DADDR32 (TYPE FIX)>
		    <AND DADDR32 #WORD *377* = STACK>
		    <DEAD DADDR32>
		    <CALL 'PUT-FCODE 2>
		    <FRAME 'PUT-FCODE>
		    <ADD POINT5 3 = STACK (TYPE FIX)>
		    <DEAD POINT5>
		    <LSH ADDR6 -24 = DADDR32 (TYPE FIX)>
		    <DEAD ADDR6>
		    <AND DADDR32 #WORD *377* = STACK>
		    <DEAD DADDR32>
		    <CALL 'PUT-FCODE 2 = TEMP16>
PHRASE44
		    <RESTL LABELS4 1 = LABELS4 (TYPE LIST)>
		    <JUMP + MAP8>
MAPAP11
		    <RETURN TEMP16>
		    <DEAD TEMP16>
		    <END FIXUP-PASS>

#WORD *33533202363*
		    <GFCN CLEAR-CONSTANT-TABLE-FOR-SCAN ("VALUE" ATOM)>
		    <TEMP PTR7 MCNT8:FIX TEMP12:FIX>
		    <INTGO>
		    <GVAL 'CONSTANT-TABLE = PTR7>
		    <GVAL 'CONSTANT-POINTER = MCNT8>
		    <LOOP>
AGAIN9
		    <INTGO>
		    <NTHUU PTR7 2 = TEMP12 (TYPE FIX)>
		    <VEQUAL? TEMP12 -1 - PHRASE11 (TYPE FIX)>
		    <DEAD TEMP12>
		    <PUTUU PTR7 2 0>
PHRASE11
		    <SUB MCNT8 2 = MCNT8 (TYPE FIX)>
		    <GRTR? MCNT8 0 + PHRASE16 (TYPE FIX)>
		    <RETURN 'T>
PHRASE16
		    <RESTUU PTR7 2 = PTR7 (TYPE UVECTOR)>
		    <JUMP + AGAIN9>
		    <END CLEAR-CONSTANT-TABLE-FOR-SCAN>

#WORD *17115254301*
		    <GFCN CHECK-CONSTANT-TABLE ("VALUE" <OR ATOM !<FALSE>> FIX FIX) PTR4 BYTEOFF5>
		    <TEMP TAB6:UVECTOR TEMP9>
		    <INTGO>
		    <GVAL 'CONSTANT-TABLE = TAB6>
		    <ADD PTR4 1 = PTR4 (TYPE FIX)>
		    <NTHUU TAB6 PTR4 = TEMP9 (TYPE FIX)>
		    <VEQUAL? TEMP9 0 - PHRASE8 (TYPE FIX)>
		    <DEAD TEMP9>
		    <PUTUU TAB6 PTR4 -1>
		    <DEAD TAB6 PTR4>
		    <RETURN 'T>
PHRASE8
		    <NTHUU TAB6 PTR4 = TEMP9 (TYPE FIX)>
		    <VEQUAL? TEMP9 -1 - PHRASE12 (TYPE FIX)>
		    <DEAD TEMP9>
		    <RETURN %<>>
PHRASE12
		    <NTHUU TAB6 PTR4 = TEMP9 (TYPE FIX)>
		    <SUB BYTEOFF5 TEMP9 = BYTEOFF5 (TYPE FIX)>
		    <DEAD TEMP9>
		    <GRTR? BYTEOFF5 32767 - PHRASE18 (TYPE FIX)>
		    <DEAD BYTEOFF5>
		    <PUTUU TAB6 PTR4 -1>
		    <DEAD TAB6 PTR4>
		    <RETURN 'T>
PHRASE18
		    <RETURN %<>>
		    <END CHECK-CONSTANT-TABLE>

#WORD *14315212026*
		    <GFCN ASSEMBLE-CODE ("VALUE" <LIST FIX FIX> FIX ATOM) SBYTEOFF4 FNAME5>
		    <TEMP LBYTEOFF10 EBYTEOFF6:FIX NPASSES24:FIX NEBYTEOFF23:FIX>
		    <INTGO>
		    <SET LBYTEOFF10 %<> (TYPE FALSE)>
		    <LOOP>
AGAIN11
		    <INTGO>
		    <FRAME 'INIT-LABEL-CHECK>
		    <CALL 'INIT-LABEL-CHECK 0>
		    <FRAME 'CLEAR-CONSTANT-TABLE-FOR-SCAN>
		    <CALL 'CLEAR-CONSTANT-TABLE-FOR-SCAN 0>
		    <FRAME 'SCAN-PASS>
		    <PUSH SBYTEOFF4>
		    <CALL 'SCAN-PASS 1 = EBYTEOFF6>
		    <TYPE? LBYTEOFF10 <TYPE-CODE FALSE> - PHRASE21>
		    <DEAD LBYTEOFF10>
		    <GVAL 'GLUE = LBYTEOFF10>
		    <TYPE? LBYTEOFF10 <TYPE-CODE FALSE> + PHRASE21>
		    <DEAD LBYTEOFF10>
		    <FRAME 'CHECK-UNRESOLVED-CALLS>
		    <PUSH EBYTEOFF6>
		    <PUSH SBYTEOFF4>
		    <CALL 'CHECK-UNRESOLVED-CALLS 2 = LBYTEOFF10>
		    <VEQUAL? LBYTEOFF10 SBYTEOFF4 + PHRASE21 (TYPE FIX)>
		    <SET SBYTEOFF4 LBYTEOFF10>
		    <JUMP + AGAIN11>
PHRASE21
		    <GVAL 'MAX-NUMBER-PASSES = NPASSES24>
		    <LOOP>
AGAIN25
		    <INTGO>
		    <VEQUAL? NPASSES24 0 + EXIT22 (TYPE FIX)>
		    <FRAME 'CLEAR-CONSTANT-TABLE-FOR-SCAN>
		    <CALL 'CLEAR-CONSTANT-TABLE-FOR-SCAN 0>
		    <FRAME 'INIT-LABEL-CHECK>
		    <CALL 'INIT-LABEL-CHECK 0>
		    <FRAME 'SCAN-PASS>
		    <PUSH SBYTEOFF4>
		    <CALL 'SCAN-PASS 1 = NEBYTEOFF23>
		    <SUB NEBYTEOFF23 EBYTEOFF6 = LBYTEOFF10 (TYPE FIX)>
		    <DEAD EBYTEOFF6>
		    <VEQUAL? LBYTEOFF10 0 + EXIT22 (TYPE FIX)>
		    <DEAD LBYTEOFF10>
		    <SET EBYTEOFF6 NEBYTEOFF23>
		    <DEAD NEBYTEOFF23>
		    <SUB NPASSES24 1 = NPASSES24 (TYPE FIX)>
		    <JUMP + AGAIN25>
EXIT22
		    <FRAME 'CLEAR-CONSTANT-TABLE-FOR-SCAN>
		    <CALL 'CLEAR-CONSTANT-TABLE-FOR-SCAN 0>
		    <FRAME 'INIT-LABEL-CHECK>
		    <CALL 'INIT-LABEL-CHECK 0>
		    <FRAME 'OUTPUT-PASS>
		    <PUSH SBYTEOFF4>
		    <CALL 'OUTPUT-PASS 1 = EBYTEOFF6>
		    <FRAME 'FIXUP-PASS>
		    <CALL 'FIXUP-PASS 0>
		    <GVAL 'GLUE = LBYTEOFF10>
		    <TYPE? LBYTEOFF10 <TYPE-CODE FALSE> + PHRASE43>
		    <DEAD LBYTEOFF10>
		    <FRAME 'UPDATE-CALL-ENTRY-TABLE>
		    <PUSH FNAME5>
		    <DEAD FNAME5>
		    <CALL 'UPDATE-CALL-ENTRY-TABLE 1 = LBYTEOFF10>
		    <FRAME 'ADD-UNRESOLVED-CALLS>
		    <CALL 'ADD-UNRESOLVED-CALLS 0>
		    <FRAME 'FIXUP-UNRESOLVED-CALLS>
		    <PUSH LBYTEOFF10>
		    <DEAD LBYTEOFF10>
		    <CALL 'FIXUP-UNRESOLVED-CALLS 1>
PHRASE43
		    <CONS EBYTEOFF6 () = LBYTEOFF10>
		    <DEAD EBYTEOFF6>
		    <CONS SBYTEOFF4 LBYTEOFF10 = LBYTEOFF10>
		    <DEAD SBYTEOFF4>
		    <RETURN LBYTEOFF10>
		    <DEAD LBYTEOFF10>
		    <END ASSEMBLE-CODE>

#WORD *37136760716*
		    <GFCN SCAN-PASS ("VALUE" FIX FIX "OPTIONAL" LIST CODEVEC ANY FIX) BYTEOFF9 CL10 CV11 CLABELS12 MAXPTR13>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5 OPT6 OPT7 OPT8>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <PUSH #T$UNBOUND 0>
OPT6
		    <PUSH 'T>
OPT7
		    <PUSH #T$UNBOUND 0>
OPT8
		    <TEMP PTR24:FIX IN-CASE?31 AFLG28 INS25:FIX INSCODE26:FIX OP-INF29:UVECTOR NUM-OPS30:FIX TEMP49 TEMP55 SHFT74:FIX FNUM75:FIX SIZ79:FIX CNT87:FIX ADR78:FIX EAC76>
		    <INTGO>
		    <TYPE? CL10 <TYPE-CODE UNBOUND> - TAG14>
		    <GVAL 'CODE-LIST = CL10>
TAG14
		    <TYPE? CV11 <TYPE-CODE UNBOUND> - TAG16>
		    <NTHL CL10 1 = CV11 (TYPE UVECTOR)>
TAG16
		    <TYPE? MAXPTR13 <TYPE-CODE UNBOUND> - TAG18>
		    <GVAL 'CODE-COUNT = MAXPTR13>
TAG18
		    <EMPL? CL10 + BOOL20 (TYPE LIST)>
		    <RESTL CL10 1 = CL10 (TYPE LIST)>
BOOL20
		    <SET PTR24 1 (TYPE FIX)>
		    <SET IN-CASE?31 %<> (TYPE FALSE)>
		    <LOOP>
AGAIN33
		    <INTGO>
		    <SET AFLG28 'T (TYPE ATOM)>
		    <TYPE? CLABELS12 <TYPE-CODE FALSE> + PHRASE35>
		    <FRAME 'CHECK-LABEL>
		    <PUSH BYTEOFF9>
		    <PUSH PTR24>
		    <CALL 'CHECK-LABEL 2>
PHRASE35
		    <NTHUU CV11 1 = INS25 (TYPE FIX)>
		    <LSH INS25 -24 = INSCODE26 (TYPE FIX)>
		    <RESTUU CV11 1 = CV11 (TYPE UVECTOR)>
		    <EMPUU? CV11 - PHRASE41 (TYPE UVECTOR)>
		    <EMPL? CL10 - PHRASE40 (TYPE LIST)>
		    <SET AFLG28 %<> (TYPE FALSE)>
		    <JUMP + PHRASE41>
PHRASE40
		    <NTHL CL10 1 = CV11 (TYPE UVECTOR)>
		    <RESTL CL10 1 = CL10 (TYPE LIST)>
PHRASE41
		    <ADD PTR24 1 = PTR24 (TYPE FIX)>
		    <TYPE? IN-CASE?31 <TYPE-CODE FALSE> + PHRASE43>
		    <SUB IN-CASE?31 1 = IN-CASE?31 (TYPE FIX)>
		    <LESS? IN-CASE?31 0 - PHRASE45 (TYPE FIX)>
		    <SET IN-CASE?31 %<> (TYPE FALSE)>
PHRASE45
		    <ADD BYTEOFF9 2 = BYTEOFF9 (TYPE FIX)>
		    <JUMP + AGAIN33>
PHRASE43
		    <FRAME 'GET-INST-INFO>
		    <PUSH INSCODE26>
		    <CALL 'GET-INST-INFO 1 = OP-INF29>
		    <NTHUU OP-INF29 2 = TEMP49 (TYPE FIX)>
		    <LSH TEMP49 -24 = NUM-OPS30 (TYPE FIX)>
		    <DEAD TEMP49>
		    <GVAL 'SPECIAL-OPS = TEMP49>
		    <EMPUU? TEMP49 + PHRASE51>
		    <LOOP (INSCODE26 VALUE) (TEMP49 LENGTH VALUE)>
TAG53
		    <NTHUU TEMP49 1 = TEMP55>
		    <VEQUAL? TEMP55 INSCODE26 + TAG52>
		    <DEAD TEMP55>
		    <RESTUU TEMP49 1 = TEMP49 (TYPE UVECTOR)>
		    <EMPUU? TEMP49 - TAG53>
		    <JUMP + PHRASE51>
TAG52
		    <FRAME 'SCAN-SPECIAL-CODE>
		    <PUSH INS25>
		    <DEAD INS25>
		    <PUSH BYTEOFF9>
		    <DEAD BYTEOFF9>
		    <CALL 'SCAN-SPECIAL-CODE 2 = BYTEOFF9>
		    <JUMP + EXIT73>
PHRASE51
		    <GVAL 'BRANCH-INS = TEMP49>
		    <EMPUU? TEMP49 + PHRASE59>
		    <LOOP (INSCODE26 VALUE) (TEMP49 LENGTH VALUE)>
TAG61
		    <NTHUU TEMP49 1 = TEMP55>
		    <VEQUAL? TEMP55 INSCODE26 + TAG60>
		    <DEAD TEMP55>
		    <RESTUU TEMP49 1 = TEMP49 (TYPE UVECTOR)>
		    <EMPUU? TEMP49 - TAG61>
		    <JUMP + PHRASE59>
TAG60
		    <FRAME 'PROCESS-BRANCH-1>
		    <PUSH INS25>
		    <PUSH BYTEOFF9>
		    <DEAD BYTEOFF9>
		    <SUB PTR24 1 = STACK (TYPE FIX)>
		    <CALL 'PROCESS-BRANCH-1 3 = BYTEOFF9>
PHRASE59
		    <GVAL 'CASE-INS = TEMP49>
		    <EMPUU? TEMP49 + PHRASE65>
		    <LOOP (INSCODE26 VALUE) (TEMP49 LENGTH VALUE)>
TAG67
		    <NTHUU TEMP49 1 = TEMP55>
		    <VEQUAL? TEMP55 INSCODE26 + TAG66>
		    <DEAD TEMP55>
		    <RESTUU TEMP49 1 = TEMP49 (TYPE UVECTOR)>
		    <EMPUU? TEMP49 - TAG67>
		    <JUMP + PHRASE65>
TAG66
		    <SET IN-CASE?31 0 (TYPE FIX)>
PHRASE65
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <VEQUAL? NUM-OPS30 0 + EXIT73 (TYPE FIX)>
		    <SET SHFT74 -24 (TYPE FIX)>
		    <SET FNUM75 1 (TYPE FIX)>
		    <SET SIZ79 1 (TYPE FIX)>
		    <SET TEMP49 %<> (TYPE FALSE)>
		    <LOOP>
AGAIN81
		    <INTGO>
		    <SUB NUM-OPS30 1 = NUM-OPS30 (TYPE FIX)>
		    <LESS? NUM-OPS30 0 - PHRASE83 (TYPE FIX)>
		    <SUB SIZ79 1 = SIZ79 (TYPE FIX)>
PHRASE83
		    <SET CNT87 -8 (TYPE FIX)>
		    <LOOP>
AGAIN88
		    <INTGO>
		    <SUB SIZ79 1 = SIZ79 (TYPE FIX)>
		    <LESS? SIZ79 0 - PHRASE90 (TYPE FIX)>
		    <TYPE? IN-CASE?31 <TYPE-CODE FALSE> + PHRASE100>
		    <TYPE? TEMP49 <TYPE-CODE FALSE> + PHRASE100>
		    <GRTR? NUM-OPS30 0 + PHRASE97 (TYPE FIX)>
		    <SET IN-CASE?31 TEMP49>
		    <DEAD TEMP49>
		    <JUMP + PHRASE100>
PHRASE97
		    <VEQUAL? NUM-OPS30 1 - PHRASE100 (TYPE FIX)>
		    <SET TEMP55 TEMP49>
		    <DEAD TEMP49>
PHRASE100
		    <SET TEMP49 %<> (TYPE FALSE)>
		    <JUMP + EXIT86>
PHRASE90
		    <ADD SHFT74 8 = SHFT74 (TYPE FIX)>
		    <GRTR? SHFT74 0 - PHRASE113 (TYPE FIX)>
		    <SET SHFT74 -24 (TYPE FIX)>
		    <ADD PTR24 1 = PTR24 (TYPE FIX)>
		    <VEQUAL? AFLG28 0 - BOOL107>
		    <FRAME 'ERROR>
		    <PUSH 'ACCESS-BEYOND-END-OF-CODE!-ERRORS>
		    <CALL 'ERROR 1>
BOOL107
		    <NTHUU CV11 1 = INS25 (TYPE FIX)>
		    <RESTUU CV11 1 = CV11 (TYPE UVECTOR)>
		    <EMPUU? CV11 - PHRASE113 (TYPE UVECTOR)>
		    <EMPL? CL10 - PHRASE112 (TYPE LIST)>
		    <SET AFLG28 %<> (TYPE FALSE)>
		    <JUMP + PHRASE113>
PHRASE112
		    <NTHL CL10 1 = CV11 (TYPE UVECTOR)>
		    <RESTL CL10 1 = CL10 (TYPE LIST)>
PHRASE113
		    <ADD CNT87 8 = CNT87 (TYPE FIX)>
		    <LSH INS25 SHFT74 = TEMP55 (TYPE FIX)>
		    <AND TEMP55 #WORD *377* = ADR78>
		    <DEAD TEMP55>
		    <TYPE? TEMP49 <TYPE-CODE FALSE> + AGAIN88>
		    <LSH ADR78 CNT87 = TEMP55 (TYPE FIX)>
		    <OR TEMP49 TEMP55 = TEMP49>
		    <DEAD TEMP55>
		    <JUMP + AGAIN88>
EXIT86
		    <LESS? NUM-OPS30 0 + EXIT73 (TYPE FIX)>
		    <AND ADR78 #WORD *360* = EAC76>
		    <AND ADR78 #WORD *17* = CNT87>
		    <FRAME 'GET-OP-INFO>
		    <PUSH FNUM75>
		    <PUSH OP-INF29>
		    <CALL 'GET-OP-INFO 2 = TEMP55>
		    <AND TEMP55 #WORD *7* = SIZ79>
		    <ADD FNUM75 1 = FNUM75 (TYPE FIX)>
		    <VEQUAL? TEMP55 32 + BOOL124 (TYPE FIX)>
		    <VEQUAL? TEMP55 33 - PHRASE123 (TYPE FIX)>
BOOL124
		    <FRAME 'PROCESS-BRANCH-2>
		    <PUSH INS25>
		    <PUSH BYTEOFF9>
		    <DEAD BYTEOFF9>
		    <SUB PTR24 1 = STACK (TYPE FIX)>
		    <PUSH INSCODE26>
		    <PUSH TEMP55>
		    <DEAD TEMP55>
		    <CALL 'PROCESS-BRANCH-2 5 = BYTEOFF9>
		    <SET SIZ79 1 (TYPE FIX)>
		    <JUMP + AGAIN81>
PHRASE123
		    <LESS? EAC76 64 - PHRASE126 (TYPE FIX)>
		    <SET SIZ79 1 (TYPE FIX)>
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <TYPE? IN-CASE?31 <TYPE-CODE FALSE> + AGAIN81>
		    <VEQUAL? NUM-OPS30 0 - PHRASE130 (TYPE FIX)>
		    <SET IN-CASE?31 CNT87>
		    <DEAD CNT87>
		    <JUMP + AGAIN81>
PHRASE130
		    <VEQUAL? NUM-OPS30 1 - AGAIN81 (TYPE FIX)>
		    <SET TEMP55 CNT87>
		    <DEAD CNT87>
		    <JUMP + AGAIN81>
PHRASE126
		    <VEQUAL? EAC76 64 - PHRASE136 (TYPE FIX)>
		    <SUB FNUM75 1 = FNUM75 (TYPE FIX)>
		    <ADD NUM-OPS30 1 = NUM-OPS30 (TYPE FIX)>
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <SET SIZ79 1 (TYPE FIX)>
		    <JUMP + AGAIN81>
PHRASE136
		    <VEQUAL? EAC76 80 + BOOL138 (TYPE FIX)>
		    <VEQUAL? EAC76 96 + BOOL138 (TYPE FIX)>
		    <VEQUAL? EAC76 112 - PHRASE137 (TYPE FIX)>
BOOL138
		    <SET SIZ79 1 (TYPE FIX)>
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <JUMP + AGAIN81>
PHRASE137
		    <VEQUAL? EAC76 128 + BOOL140 (TYPE FIX)>
		    <VEQUAL? EAC76 144 - PHRASE139 (TYPE FIX)>
BOOL140
		    <GVAL 'NAC-PC = TEMP55>
		    <EQUAL? TEMP55 CNT87 - PHRASE142>
		    <DEAD TEMP55>
		    <VEQUAL? EAC76 144 - PHRASE144 (TYPE FIX)>
		    <DEAD EAC76>
		    <SET SIZ79 5 (TYPE FIX)>
		    <JUMP + PHRASE150>
PHRASE144
		    <VEQUAL? SIZ79 2 + BOOL146 (TYPE FIX)>
		    <VEQUAL? SIZ79 5 - PHRASE145 (TYPE FIX)>
BOOL146
		    <SET SIZ79 5 (TYPE FIX)>
		    <JUMP + PHRASE150>
PHRASE145
		    <VEQUAL? SIZ79 1 - PHRASE147 (TYPE FIX)>
		    <DEAD SIZ79>
		    <SET SIZ79 3 (TYPE FIX)>
		    <JUMP + PHRASE150>
PHRASE147
		    <SET SIZ79 2 (TYPE FIX)>
PHRASE150
		    <TYPE? IN-CASE?31 <TYPE-CODE FALSE> + PHRASE152>
		    <GRTR? NUM-OPS30 1 + PHRASE152 (TYPE FIX)>
		    <SET TEMP49 0 (TYPE FIX)>
PHRASE152
		    <ADD BYTEOFF9 SIZ79 = BYTEOFF9 (TYPE FIX)>
		    <JUMP + AGAIN81>
PHRASE142
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <SET SIZ79 1 (TYPE FIX)>
		    <JUMP + AGAIN81>
PHRASE139
		    <VEQUAL? EAC76 176 + BOOL160 (TYPE FIX)>
		    <VEQUAL? EAC76 160 - PHRASE159 (TYPE FIX)>
BOOL160
		    <SET SIZ79 2 (TYPE FIX)>
		    <JUMP + PHRASE163>
PHRASE159
		    <VEQUAL? EAC76 208 + BOOL162 (TYPE FIX)>
		    <VEQUAL? EAC76 192 - PHRASE161 (TYPE FIX)>
BOOL162
		    <SET SIZ79 3 (TYPE FIX)>
		    <JUMP + PHRASE163>
PHRASE161
		    <VEQUAL? EAC76 240 + BOOL164 (TYPE FIX)>
		    <VEQUAL? EAC76 224 - PHRASE163 (TYPE FIX)>
		    <DEAD EAC76>
BOOL164
		    <SET SIZ79 5 (TYPE FIX)>
PHRASE163
		    <ADD BYTEOFF9 SIZ79 = BYTEOFF9 (TYPE FIX)>
		    <JUMP + AGAIN81>
EXIT73
		    <VEQUAL? AFLG28 0 - BOOL165>
		    <DEAD AFLG28>
		    <RETURN BYTEOFF9>
		    <DEAD BYTEOFF9>
BOOL165
		    <EMPUU? CV11 - PHRASE167 (TYPE UVECTOR)>
		    <EMPL? CL10 - PHRASE169 (TYPE LIST)>
		    <RETURN BYTEOFF9>
		    <DEAD BYTEOFF9>
PHRASE169
		    <NTHL CL10 1 = CV11 (TYPE UVECTOR)>
		    <RESTL CL10 1 = CL10 (TYPE LIST)>
PHRASE167
		    <LESS? PTR24 MAXPTR13 + AGAIN33 (TYPE FIX)>
		    <RETURN BYTEOFF9>
		    <DEAD BYTEOFF9>
		    <END SCAN-PASS>

#WORD *13134264047*
		    <GFCN SCAN-SPECIAL-CODE ("VALUE" FIX FIX FIX) INST4 BYTEOFF5>
		    <TEMP OFFS6 CODE7>
		    <INTGO>
		    <AND INST4 #WORD *177777* = OFFS6>
		    <LSH INST4 -24 = CODE7 (TYPE FIX)>
		    <DEAD INST4>
		    <VEQUAL? CODE7 87 - PHRASE11 (TYPE FIX)>
		    <VEQUAL? OFFS6 0 + PHRASE29 (TYPE FIX)>
		    <FRAME 'GET-PATCH>
		    <PUSH OFFS6>
		    <DEAD OFFS6>
		    <CALL 'GET-PATCH 1 = CODE7>
		    <NTHUV CODE7 1 = OFFS6 (TYPE UVECTOR)>
		    <DEAD CODE7>
		    <EMPUU? OFFS6 + PHRASE29 (TYPE UVECTOR)>
		    <FRAME 'SCAN-PASS>
		    <PUSH BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <PUSH ()>
		    <PUSH OFFS6>
		    <PUSH %<>>
		    <LENUU OFFS6 = CODE7 (TYPE FIX)>
		    <DEAD OFFS6>
		    <ADD CODE7 1 = STACK (TYPE FIX)>
		    <DEAD CODE7>
		    <CALL 'SCAN-PASS 5 = BYTEOFF5>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE11
		    <VEQUAL? CODE7 90 - PHRASE20 (TYPE FIX)>
		    <FRAME 'GET-PTNS>
		    <PUSH OFFS6>
		    <DEAD OFFS6>
		    <CALL 'GET-PTNS 1 = OFFS6>
		    <NTHUV OFFS6 4 = CODE7>
		    <TYPE? CODE7 <TYPE-CODE FALSE> + PHRASE29>
		    <DEAD CODE7>
		    <NTHUV OFFS6 1 = OFFS6 (TYPE UVECTOR)>
		    <EMPUU? OFFS6 + PHRASE29 (TYPE UVECTOR)>
		    <FRAME 'SCAN-PASS>
		    <PUSH BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <PUSH ()>
		    <PUSH OFFS6>
		    <PUSH %<>>
		    <LENUU OFFS6 = CODE7 (TYPE FIX)>
		    <DEAD OFFS6>
		    <ADD CODE7 1 = STACK (TYPE FIX)>
		    <DEAD CODE7>
		    <CALL 'SCAN-PASS 5 = BYTEOFF5>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE20
		    <VEQUAL? CODE7 89 - PHRASE26 (TYPE FIX)>
		    <FRAME 'SCAN-CALL>
		    <PUSH OFFS6>
		    <DEAD OFFS6>
		    <PUSH BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <CALL 'SCAN-CALL 2 = BYTEOFF5>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE26
		    <VEQUAL? CODE7 91 - PHRASE28 (TYPE FIX)>
		    <ADD BYTEOFF5 7 = BYTEOFF5 (TYPE FIX)>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE28
		    <VEQUAL? CODE7 119 - PHRASE29 (TYPE FIX)>
		    <DEAD CODE7>
		    <ADD BYTEOFF5 7 = BYTEOFF5 (TYPE FIX)>
PHRASE29
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <END SCAN-SPECIAL-CODE>

#WORD *3540320730*
		    <GFCN SCAN-CALL ("VALUE" FIX FIX FIX) OFF4 BYTEOFF5>
		    <TEMP TEMP8 CBOFF7>
		    <INTGO>
		    <GVAL 'CALL-TABLE = TEMP8>
		    <NTHUV TEMP8 OFF4 = TEMP8>
		    <DEAD OFF4>
		    <FRAME 'FIND-CALL-POINT>
		    <NTHUV TEMP8 1 = STACK (TYPE ATOM)>
		    <NTHUV TEMP8 2 = STACK (TYPE FIX)>
		    <DEAD TEMP8>
		    <CALL 'FIND-CALL-POINT 2 = CBOFF7>
		    <TYPE? CBOFF7 <TYPE-CODE FALSE> + PHRASE10>
		    <ADD BYTEOFF5 2 = TEMP8 (TYPE FIX)>
		    <SUB TEMP8 CBOFF7 = TEMP8 (TYPE FIX)>
		    <DEAD CBOFF7>
		    <LESS? TEMP8 0 - TAG14 (TYPE FIX)>
		    <SUB 0 TEMP8 = TEMP8 (TYPE FIX)>
TAG14
		    <GRTR? TEMP8 32767 - PHRASE13 (TYPE FIX)>
		    <DEAD TEMP8>
		    <ADD BYTEOFF5 6 = BYTEOFF5 (TYPE FIX)>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE13
		    <ADD BYTEOFF5 3 = BYTEOFF5 (TYPE FIX)>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE10
		    <ADD BYTEOFF5 3 = BYTEOFF5 (TYPE FIX)>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <END SCAN-CALL>

#WORD *4571101510*
		    <GFCN OUTPUT-CALL ("VALUE" FIX FIX FIX) BYTEOFF4 OFF5>
		    <TEMP TEMP10 REF6 CBOFF7>
		    <INTGO>
		    <GVAL 'CALL-TABLE = TEMP10>
		    <NTHUV TEMP10 OFF5 = REF6>
		    <DEAD TEMP10 OFF5>
		    <FRAME 'FIND-CALL-POINT>
		    <NTHUV REF6 1 = STACK (TYPE ATOM)>
		    <NTHUV REF6 2 = STACK (TYPE FIX)>
		    <CALL 'FIND-CALL-POINT 2 = CBOFF7>
		    <TYPE? CBOFF7 <TYPE-CODE FALSE> + PHRASE12>
		    <PUTUV REF6 3 -1 (TYPE FIX)>
		    <DEAD REF6>
		    <ADD BYTEOFF4 3 = TEMP10 (TYPE FIX)>
		    <SUB TEMP10 CBOFF7 = OFF5 (TYPE FIX)>
		    <DEAD TEMP10 CBOFF7>
		    <SET TEMP10 OFF5>
		    <LESS? TEMP10 0 - TAG16 (TYPE FIX)>
		    <SUB 0 TEMP10 = TEMP10 (TYPE FIX)>
TAG16
		    <GRTR? TEMP10 32767 - PHRASE15 (TYPE FIX)>
		    <DEAD TEMP10>
		    <ADD OFF5 3 = OFF5 (TYPE FIX)>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 23>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <GVAL 'AC-PC = TEMP10>
		    <NTHUV TEMP10 2 = TEMP10 (TYPE FIX)>
		    <OR TEMP10 #WORD *340* = STACK>
		    <DEAD TEMP10>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <SUB 0 OFF5 = OFF5 (TYPE FIX)>
		    <AND OFF5 #WORD *377* = STACK>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <LSH OFF5 -8 = TEMP10 (TYPE FIX)>
		    <AND TEMP10 #WORD *377* = STACK>
		    <DEAD TEMP10>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <LSH OFF5 -16 = TEMP10 (TYPE FIX)>
		    <AND TEMP10 #WORD *377* = STACK>
		    <DEAD TEMP10>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <LSH OFF5 -24 = TEMP10 (TYPE FIX)>
		    <DEAD OFF5>
		    <AND TEMP10 #WORD *377* = STACK>
		    <DEAD TEMP10>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF4 6 = BYTEOFF4 (TYPE FIX)>
		    <RETURN BYTEOFF4>
		    <DEAD BYTEOFF4>
PHRASE15
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 49>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <SUB 0 OFF5 = OFF5 (TYPE FIX)>
		    <AND OFF5 #WORD *377* = STACK>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <LSH OFF5 -8 = TEMP10 (TYPE FIX)>
		    <DEAD OFF5>
		    <AND TEMP10 #WORD *377* = STACK>
		    <DEAD TEMP10>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF4 3 = BYTEOFF4 (TYPE FIX)>
		    <RETURN BYTEOFF4>
		    <DEAD BYTEOFF4>
PHRASE12
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 49>
		    <CALL 'ADD-BYTE-TO-FCODE 1 = CBOFF7>
		    <ADD BYTEOFF4 3 = TEMP10 (TYPE FIX)>
		    <PUTUV REF6 4 TEMP10 (TYPE FIX)>
		    <DEAD TEMP10>
		    <FRAME '+>
		    <PUSH CBOFF7>
		    <DEAD CBOFF7>
		    <PUSH 1>
		    <CALL '+ 2 = TEMP10>
		    <PUTUV REF6 3 TEMP10>
		    <DEAD REF6 TEMP10>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF4 3 = BYTEOFF4 (TYPE FIX)>
		    <RETURN BYTEOFF4>
		    <DEAD BYTEOFF4>
		    <END OUTPUT-CALL>

#WORD *31660351162*
		    <GFCN GEN-SPECIAL-CODE ("VALUE" FIX FIX FIX) INST4 BYTEOFF5>
		    <TEMP OFFS6 CODE7>
		    <INTGO>
		    <AND INST4 #WORD *177777* = OFFS6>
		    <LSH INST4 -24 = CODE7 (TYPE FIX)>
		    <VEQUAL? CODE7 87 - PHRASE11 (TYPE FIX)>
		    <VEQUAL? OFFS6 0 + PHRASE30 (TYPE FIX)>
		    <FRAME 'GET-PATCH>
		    <PUSH OFFS6>
		    <DEAD OFFS6>
		    <CALL 'GET-PATCH 1 = CODE7>
		    <NTHUV CODE7 1 = OFFS6 (TYPE UVECTOR)>
		    <DEAD CODE7>
		    <EMPUU? OFFS6 + PHRASE30 (TYPE UVECTOR)>
		    <FRAME 'OUTPUT-PASS>
		    <PUSH BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <PUSH ()>
		    <PUSH OFFS6>
		    <LENUU OFFS6 = CODE7 (TYPE FIX)>
		    <DEAD OFFS6>
		    <ADD CODE7 1 = STACK (TYPE FIX)>
		    <DEAD CODE7>
		    <PUSH %<>>
		    <CALL 'OUTPUT-PASS 5 = BYTEOFF5>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE11
		    <VEQUAL? CODE7 90 - PHRASE20 (TYPE FIX)>
		    <FRAME 'GET-PTNS>
		    <PUSH OFFS6>
		    <DEAD OFFS6>
		    <CALL 'GET-PTNS 1 = OFFS6>
		    <NTHUV OFFS6 4 = CODE7>
		    <TYPE? CODE7 <TYPE-CODE FALSE> + PHRASE30>
		    <DEAD CODE7>
		    <NTHUV OFFS6 1 = OFFS6 (TYPE UVECTOR)>
		    <EMPUU? OFFS6 + PHRASE30 (TYPE UVECTOR)>
		    <FRAME 'OUTPUT-PASS>
		    <PUSH BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <PUSH ()>
		    <PUSH OFFS6>
		    <LENUU OFFS6 = CODE7 (TYPE FIX)>
		    <DEAD OFFS6>
		    <ADD CODE7 1 = STACK (TYPE FIX)>
		    <DEAD CODE7>
		    <PUSH %<>>
		    <CALL 'OUTPUT-PASS 5 = BYTEOFF5>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE20
		    <VEQUAL? CODE7 89 - PHRASE26 (TYPE FIX)>
		    <FRAME 'OUTPUT-CALL>
		    <PUSH BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <PUSH OFFS6>
		    <DEAD OFFS6>
		    <CALL 'OUTPUT-CALL 2 = BYTEOFF5>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE26
		    <VEQUAL? CODE7 91 - PHRASE28 (TYPE FIX)>
		    <FRAME 'OUTPUT-PUSHLAB>
		    <PUSH OFFS6>
		    <DEAD OFFS6>
		    <PUSH BYTEOFF5>
		    <CALL 'OUTPUT-PUSHLAB 2>
		    <ADD BYTEOFF5 7 = BYTEOFF5 (TYPE FIX)>
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
PHRASE28
		    <VEQUAL? CODE7 119 - PHRASE30 (TYPE FIX)>
		    <DEAD CODE7>
		    <FRAME 'OUTPUT-MOVELAB>
		    <PUSH INST4>
		    <DEAD INST4>
		    <PUSH OFFS6>
		    <DEAD OFFS6>
		    <PUSH BYTEOFF5>
		    <CALL 'OUTPUT-MOVELAB 3>
		    <ADD BYTEOFF5 7 = BYTEOFF5 (TYPE FIX)>
PHRASE30
		    <RETURN BYTEOFF5>
		    <DEAD BYTEOFF5>
		    <END GEN-SPECIAL-CODE>

#WORD *3300364713*
		    <GFCN OUTPUT-PUSHLAB ("VALUE" LABEL-REF FIX ANY) OFF4 BYTEOFF5>
		    <TEMP TEMP8 LREF7 AINST6>
		    <INTGO>
		    <GVAL 'PUSH-LABEL-TABLE = TEMP8>
		    <NTHUV TEMP8 OFF4 = LREF7>
		    <DEAD TEMP8 OFF4>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 208>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <GVAL 'AC-PC = TEMP8>
		    <NTHUV TEMP8 2 = TEMP8 (TYPE FIX)>
		    <OR TEMP8 #WORD *200* = TEMP8>
		    <LSH TEMP8 24 = TEMP8 (TYPE FIX)>
		    <LSH TEMP8 -24 = STACK (TYPE FIX)>
		    <DEAD TEMP8>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1 = AINST6>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <GVAL 'AC-TP = TEMP8>
		    <NTHUV TEMP8 2 = TEMP8 (TYPE FIX)>
		    <OR TEMP8 #WORD *200* = TEMP8>
		    <LSH TEMP8 24 = TEMP8 (TYPE FIX)>
		    <LSH TEMP8 -24 = STACK (TYPE FIX)>
		    <DEAD TEMP8>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <PUTUV LREF7 6 AINST6>
		    <DEAD AINST6>
		    <RETURN LREF7>
		    <DEAD LREF7>
		    <END OUTPUT-PUSHLAB>

#WORD *7421513446*
		    <GFCN OUTPUT-MOVELAB ("VALUE" LABEL-REF ANY FIX ANY) INST4 OFF5 BYTEOFF6>
		    <TEMP TEMP9 LREF7 AINST8>
		    <INTGO>
		    <GVAL 'MOVE-LABEL-TABLE = TEMP9>
		    <NTHUV TEMP9 OFF5 = LREF7>
		    <DEAD TEMP9 OFF5>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 208>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <GVAL 'AC-PC = TEMP9>
		    <NTHUV TEMP9 2 = TEMP9 (TYPE FIX)>
		    <OR TEMP9 #WORD *200* = TEMP9>
		    <LSH TEMP9 24 = TEMP9 (TYPE FIX)>
		    <LSH TEMP9 -24 = STACK (TYPE FIX)>
		    <DEAD TEMP9>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1 = AINST8>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <LSH INST4 -16 = TEMP9 (TYPE FIX)>
		    <DEAD INST4>
		    <AND TEMP9 #WORD *377* = STACK>
		    <DEAD TEMP9>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <PUTUV LREF7 6 AINST8>
		    <DEAD AINST8>
		    <RETURN LREF7>
		    <DEAD LREF7>
		    <END OUTPUT-MOVELAB>

#WORD *12107474402*
		    <GFCN INIT-LABEL-CHECK ("VALUE" FIX)>
		    <TEMP TEMP5 LREF4:LABEL-REF>
		    <INTGO>
		    <GVAL 'LABEL-TABLE = TEMP5>
		    <NTHL TEMP5 1 = LREF4 (TYPE LABEL-REF)>
		    <DEAD TEMP5>
		    <GVAL 'LABEL-TABLE = TEMP5>
		    <SETG 'LABEL-POINTER TEMP5>
		    <DEAD TEMP5>
		    <NTHUV LREF4 4 = TEMP5 (TYPE FIX)>
		    <DEAD LREF4>
		    <SETG 'LABEL-OFFSET TEMP5>
		    <RETURN TEMP5>
		    <DEAD TEMP5>
		    <END INIT-LABEL-CHECK>

#WORD *25075100130*
		    <GFCN CHECK-LABEL ("VALUE" <OR FALSE FIX> FIX FIX) BYTEOFF4 PTR5>
		    <TEMP TEMP14 RPTR7:LIST>
		    <INTGO>
		    <LOOP>
AGAIN11
		    <INTGO>
		    <GVAL 'LABEL-OFFSET = TEMP14>
		    <VEQUAL? PTR5 TEMP14 + TAG15 (TYPE FIX)>
		    <DEAD TEMP14>
		    <RETURN %<>>
TAG15
		    <GVAL 'LABEL-POINTER = RPTR7>
		    <NTHL RPTR7 1 = TEMP14 (TYPE LABEL-REF)>
		    <PUTUV TEMP14 3 BYTEOFF4 (TYPE FIX)>
		    <DEAD TEMP14>
		    <RESTL RPTR7 1 = RPTR7 (TYPE LIST)>
		    <EMPL? RPTR7 - PHRASE17 (TYPE LIST)>
		    <SETG 'LABEL-POINTER RPTR7>
		    <DEAD RPTR7>
		    <SETG 'LABEL-OFFSET -1>
		    <RETURN -1>
PHRASE17
		    <NTHL RPTR7 1 = TEMP14 (TYPE LABEL-REF)>
		    <NTHUV TEMP14 4 = TEMP14 (TYPE FIX)>
		    <SETG 'LABEL-OFFSET TEMP14>
		    <DEAD TEMP14>
		    <SETG 'LABEL-POINTER RPTR7>
		    <DEAD RPTR7>
		    <JUMP + AGAIN11>
		    <END CHECK-LABEL>

#WORD *20547720377*
		    <GFCN OUTPUT-PASS ("VALUE" FIX FIX "OPTIONAL" LIST CODEVEC FIX ANY) BYTEOFF9 CL10 CV11 MAXPTR12 CLABELS13>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5 OPT6 OPT7 OPT8>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <PUSH #T$UNBOUND 0>
OPT6
		    <PUSH #T$UNBOUND 0>
OPT7
		    <PUSH 'T>
OPT8
		    <TEMP PTR23:FIX IN-CASE?34 AFLG27 INS26:FIX INSCODE24:FIX TEMP48 TEMP64:FIX TEMP65:FIX XREF31:XREF-INFO START-CASE35 TEMP58 OP-INF28:UVECTOR NUM-OPS29:FIX SHFT97:FIX FNUM98:FIX R-OR-L100:FIX SIZ102:FIX>
		    <INTGO>
		    <TYPE? CL10 <TYPE-CODE UNBOUND> - TAG14>
		    <GVAL 'CODE-LIST = CL10>
TAG14
		    <TYPE? CV11 <TYPE-CODE UNBOUND> - TAG16>
		    <NTHL CL10 1 = CV11 (TYPE UVECTOR)>
TAG16
		    <TYPE? MAXPTR12 <TYPE-CODE UNBOUND> - TAG18>
		    <GVAL 'CODE-COUNT = MAXPTR12>
TAG18
		    <EMPL? CL10 + BOOL20 (TYPE LIST)>
		    <RESTL CL10 1 = CL10 (TYPE LIST)>
BOOL20
		    <SET PTR23 1 (TYPE FIX)>
		    <SET IN-CASE?34 %<> (TYPE FALSE)>
		    <LOOP>
AGAIN36
		    <INTGO>
		    <SET AFLG27 'T (TYPE ATOM)>
		    <TYPE? CLABELS13 <TYPE-CODE FALSE> + PHRASE38>
		    <FRAME 'CHECK-LABEL>
		    <PUSH BYTEOFF9>
		    <PUSH PTR23>
		    <CALL 'CHECK-LABEL 2>
PHRASE38
		    <NTHUU CV11 1 = INS26 (TYPE FIX)>
		    <LSH INS26 -24 = INSCODE24 (TYPE FIX)>
		    <RESTUU CV11 1 = CV11 (TYPE UVECTOR)>
		    <EMPUU? CV11 - PHRASE44 (TYPE UVECTOR)>
		    <EMPL? CL10 - PHRASE43 (TYPE LIST)>
		    <SET AFLG27 %<> (TYPE FALSE)>
		    <JUMP + PHRASE44>
PHRASE43
		    <NTHL CL10 1 = CV11 (TYPE UVECTOR)>
		    <RESTL CL10 1 = CL10 (TYPE LIST)>
PHRASE44
		    <ADD PTR23 1 = PTR23 (TYPE FIX)>
		    <TYPE? IN-CASE?34 <TYPE-CODE FALSE> + PHRASE46>
		    <ADD BYTEOFF9 2 = BYTEOFF9 (TYPE FIX)>
		    <GVAL 'LABEL-TABLE = AFLG27>
		    <SET TEMP48 INS26>
		    <DEAD INS26>
		    <SUB TEMP48 1 = TEMP48 (TYPE FIX)>
		    <GRTR? TEMP48 0 - RESTL50 (TYPE FIX)>
		    <LOOP (AFLG27 VALUE) (TEMP48 VALUE)>
RESTL49
		    <INTGO>
		    <RESTL AFLG27 1 = AFLG27 (TYPE LIST)>
		    <SUB TEMP48 1 = TEMP48 (TYPE FIX)>
		    <GRTR? TEMP48 0 + RESTL49 (TYPE FIX)>
RESTL50
		    <NTHL AFLG27 1 = AFLG27 (TYPE LABEL-REF)>
		    <NTHUV AFLG27 3 = INSCODE24 (TYPE FIX)>
		    <NTHUV AFLG27 2 = TEMP48 (TYPE LIST)>
		    <DEAD AFLG27>
		    <LOOP>
MAP52
		    <INTGO>
		    <EMPL? TEMP48 + MAPAP55>
		    <NTHL TEMP48 1 = AFLG27>
		    <NTHUV AFLG27 2 = TEMP64 (TYPE FIX)>
		    <SUB PTR23 1 = TEMP65 (TYPE FIX)>
		    <VEQUAL? TEMP64 TEMP65 - PHRASE63 (TYPE FIX)>
		    <DEAD TEMP64 TEMP65>
		    <SET XREF31 AFLG27>
		    <DEAD AFLG27>
		    <JUMP + MAPAP55>
PHRASE63
		    <RESTL TEMP48 1 = TEMP48 (TYPE LIST)>
		    <JUMP + MAP52>
MAPAP55
		    <PUTUV XREF31 6 START-CASE35 (TYPE FIX)>
		    <GVAL 'FBYTE-OFFSET = TEMP48>
		    <PUTUV XREF31 2 TEMP48>
		    <DEAD TEMP48>
		    <SUB INSCODE24 START-CASE35 = INSCODE24 (TYPE FIX)>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <AND INSCODE24 #WORD *377* = STACK>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <LSH INSCODE24 -8 = TEMP58 (TYPE FIX)>
		    <DEAD INSCODE24>
		    <AND TEMP58 #WORD *377* = STACK>
		    <DEAD TEMP58>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <SUB IN-CASE?34 1 = IN-CASE?34 (TYPE FIX)>
		    <LESS? IN-CASE?34 0 - AGAIN36 (TYPE FIX)>
		    <SET IN-CASE?34 %<> (TYPE FALSE)>
		    <JUMP + AGAIN36>
PHRASE46
		    <FRAME 'GET-INST-INFO>
		    <PUSH INSCODE24>
		    <CALL 'GET-INST-INFO 1 = OP-INF28>
		    <NTHUU OP-INF28 2 = TEMP58 (TYPE FIX)>
		    <LSH TEMP58 -24 = NUM-OPS29 (TYPE FIX)>
		    <DEAD TEMP58>
		    <GVAL 'SPECIAL-OPS = TEMP58>
		    <EMPUU? TEMP58 + PHRASE74>
		    <LOOP (INSCODE24 VALUE) (TEMP58 LENGTH VALUE)>
TAG76
		    <NTHUU TEMP58 1 = TEMP48>
		    <VEQUAL? TEMP48 INSCODE24 + TAG75>
		    <DEAD TEMP48>
		    <RESTUU TEMP58 1 = TEMP58 (TYPE UVECTOR)>
		    <EMPUU? TEMP58 - TAG76>
		    <JUMP + PHRASE74>
TAG75
		    <FRAME 'GEN-SPECIAL-CODE>
		    <PUSH INS26>
		    <DEAD INS26>
		    <PUSH BYTEOFF9>
		    <DEAD BYTEOFF9>
		    <CALL 'GEN-SPECIAL-CODE 2 = BYTEOFF9>
		    <JUMP + EXIT96>
PHRASE74
		    <GVAL 'CASE-INS = TEMP58>
		    <EMPUU? TEMP58 + PHRASE81>
		    <LOOP (INSCODE24 VALUE) (TEMP58 LENGTH VALUE)>
TAG83
		    <NTHUU TEMP58 1 = TEMP48>
		    <VEQUAL? TEMP48 INSCODE24 + TAG82>
		    <DEAD TEMP48>
		    <RESTUU TEMP58 1 = TEMP58 (TYPE UVECTOR)>
		    <EMPUU? TEMP58 - TAG83>
		    <JUMP + PHRASE81>
TAG82
		    <SET IN-CASE?34 0 (TYPE FIX)>
PHRASE81
		    <GVAL 'BRANCH-INS = TEMP58>
		    <EMPUU? TEMP58 + PHRASE86>
		    <LOOP (INSCODE24 VALUE) (TEMP58 LENGTH VALUE)>
TAG88
		    <NTHUU TEMP58 1 = TEMP48>
		    <VEQUAL? TEMP48 INSCODE24 + TAG87>
		    <DEAD TEMP48>
		    <RESTUU TEMP58 1 = TEMP58 (TYPE UVECTOR)>
		    <EMPUU? TEMP58 - TAG88>
		    <JUMP + PHRASE86>
TAG87
		    <FRAME 'AGEN-BRANCH-1>
		    <PUSH INS26>
		    <PUSH BYTEOFF9>
		    <DEAD BYTEOFF9>
		    <SUB PTR23 1 = STACK (TYPE FIX)>
		    <PUSH INSCODE24>
		    <CALL 'AGEN-BRANCH-1 4 = BYTEOFF9>
PHRASE86
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH INSCODE24>
		    <CALL 'ADD-BYTE-TO-FCODE 1 = TEMP58>
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <VEQUAL? NUM-OPS29 0 + EXIT96 (TYPE FIX)>
		    <SET SHFT97 -24 (TYPE FIX)>
		    <SET FNUM98 1 (TYPE FIX)>
		    <LOOP>
AGAIN103
		    <INTGO>
		    <SUB NUM-OPS29 1 = NUM-OPS29 (TYPE FIX)>
		    <LESS? NUM-OPS29 0 + EXIT96 (TYPE FIX)>
		    <ADD SHFT97 8 = SHFT97 (TYPE FIX)>
		    <GRTR? SHFT97 0 - PHRASE118 (TYPE FIX)>
		    <SET SHFT97 -24 (TYPE FIX)>
		    <ADD PTR23 1 = PTR23 (TYPE FIX)>
		    <VEQUAL? AFLG27 0 - BOOL112>
		    <FRAME 'ERROR>
		    <PUSH 'ACCESS-BEYOND-END-OF-CODE!-ERRORS>
		    <CALL 'ERROR 1>
BOOL112
		    <NTHUU CV11 1 = INS26 (TYPE FIX)>
		    <RESTUU CV11 1 = CV11 (TYPE UVECTOR)>
		    <EMPUU? CV11 - PHRASE118 (TYPE UVECTOR)>
		    <EMPL? CL10 - PHRASE117 (TYPE LIST)>
		    <SET AFLG27 %<> (TYPE FALSE)>
		    <JUMP + PHRASE118>
PHRASE117
		    <NTHL CL10 1 = CV11 (TYPE UVECTOR)>
		    <RESTL CL10 1 = CL10 (TYPE LIST)>
PHRASE118
		    <LSH INS26 SHFT97 = TEMP48 (TYPE FIX)>
		    <AND TEMP48 #WORD *377* = TEMP65>
		    <DEAD TEMP48>
		    <AND TEMP65 #WORD *360* = TEMP64>
		    <AND TEMP65 #WORD *17* = R-OR-L100>
		    <FRAME 'GET-OP-INFO>
		    <PUSH FNUM98>
		    <PUSH OP-INF28>
		    <CALL 'GET-OP-INFO 2 = TEMP48>
		    <AND TEMP48 #WORD *7* = SIZ102>
		    <ADD FNUM98 1 = FNUM98 (TYPE FIX)>
		    <VEQUAL? TEMP48 32 + BOOL122 (TYPE FIX)>
		    <VEQUAL? TEMP48 33 - PHRASE121 (TYPE FIX)>
BOOL122
		    <FRAME 'AGEN-BRANCH-2>
		    <PUSH INS26>
		    <PUSH BYTEOFF9>
		    <DEAD BYTEOFF9>
		    <SUB PTR23 1 = STACK (TYPE FIX)>
		    <PUSH INSCODE24>
		    <PUSH TEMP58>
		    <PUSH TEMP48>
		    <DEAD TEMP48>
		    <CALL 'AGEN-BRANCH-2 6 = BYTEOFF9>
		    <JUMP + AGAIN103>
PHRASE121
		    <LESS? TEMP64 64 - PHRASE124 (TYPE FIX)>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH TEMP65>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <TYPE? IN-CASE?34 <TYPE-CODE FALSE> + AGAIN103>
		    <VEQUAL? NUM-OPS29 0 - PHRASE129 (TYPE FIX)>
		    <SET IN-CASE?34 TEMP65>
		    <DEAD TEMP65>
		    <JUMP + AGAIN103>
PHRASE129
		    <VEQUAL? NUM-OPS29 1 - AGAIN103 (TYPE FIX)>
		    <JUMP + AGAIN103>
PHRASE124
		    <VEQUAL? TEMP64 64 - PHRASE135 (TYPE FIX)>
		    <SUB FNUM98 1 = FNUM98 (TYPE FIX)>
		    <ADD NUM-OPS29 1 = NUM-OPS29 (TYPE FIX)>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH TEMP65>
		    <DEAD TEMP65>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <JUMP + AGAIN103>
PHRASE135
		    <VEQUAL? TEMP64 80 + BOOL138 (TYPE FIX)>
		    <VEQUAL? TEMP64 96 + BOOL138 (TYPE FIX)>
		    <VEQUAL? TEMP64 112 - PHRASE137 (TYPE FIX)>
BOOL138
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH TEMP65>
		    <DEAD TEMP65>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <JUMP + AGAIN103>
PHRASE137
		    <VEQUAL? TEMP64 128 + BOOL141 (TYPE FIX)>
		    <VEQUAL? TEMP64 144 - PHRASE140 (TYPE FIX)>
BOOL141
		    <GVAL 'NAC-PC = TEMP48>
		    <EQUAL? TEMP48 R-OR-L100 - PHRASE143>
		    <DEAD TEMP48>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH TEMP65>
		    <DEAD TEMP65>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <VEQUAL? TEMP64 144 - PHRASE146 (TYPE FIX)>
		    <DEAD TEMP64>
		    <SET SIZ102 4 (TYPE FIX)>
		    <JUMP + PHRASE152>
PHRASE146
		    <VEQUAL? SIZ102 2 + BOOL148 (TYPE FIX)>
		    <VEQUAL? SIZ102 5 - PHRASE147 (TYPE FIX)>
BOOL148
		    <SET SIZ102 4 (TYPE FIX)>
		    <JUMP + PHRASE152>
PHRASE147
		    <VEQUAL? SIZ102 1 - PHRASE149 (TYPE FIX)>
		    <DEAD SIZ102>
		    <SET SIZ102 2 (TYPE FIX)>
		    <JUMP + PHRASE152>
PHRASE149
		    <SET SIZ102 1 (TYPE FIX)>
PHRASE152
		    <SET R-OR-L100 -8 (TYPE FIX)>
		    <SET TEMP48 0 (TYPE FIX)>
		    <LOOP>
AGAIN156
		    <INTGO>
		    <SUB SIZ102 1 = SIZ102 (TYPE FIX)>
		    <LESS? SIZ102 0 - PHRASE158 (TYPE FIX)>
		    <TYPE? IN-CASE?34 <TYPE-CODE FALSE> + AGAIN103>
		    <GRTR? NUM-OPS29 0 + PHRASE164 (TYPE FIX)>
		    <SET IN-CASE?34 TEMP48>
		    <DEAD TEMP48>
		    <JUMP + AGAIN103>
PHRASE164
		    <VEQUAL? NUM-OPS29 1 - AGAIN103 (TYPE FIX)>
		    <SET TEMP65 TEMP48>
		    <DEAD TEMP48>
		    <JUMP + AGAIN103>
PHRASE158
		    <ADD SHFT97 8 = SHFT97 (TYPE FIX)>
		    <GRTR? SHFT97 0 - PHRASE180 (TYPE FIX)>
		    <SET SHFT97 -24 (TYPE FIX)>
		    <ADD PTR23 1 = PTR23 (TYPE FIX)>
		    <VEQUAL? AFLG27 0 - BOOL174>
		    <FRAME 'ERROR>
		    <PUSH 'ACCESS-BEYOND-END-OF-CODE!-ERRORS>
		    <CALL 'ERROR 1>
BOOL174
		    <NTHUU CV11 1 = INS26 (TYPE FIX)>
		    <RESTUU CV11 1 = CV11 (TYPE UVECTOR)>
		    <EMPUU? CV11 - PHRASE180 (TYPE UVECTOR)>
		    <EMPL? CL10 - PHRASE179 (TYPE LIST)>
		    <SET AFLG27 %<> (TYPE FALSE)>
		    <JUMP + PHRASE180>
PHRASE179
		    <NTHL CL10 1 = CV11 (TYPE UVECTOR)>
		    <RESTL CL10 1 = CL10 (TYPE LIST)>
PHRASE180
		    <ADD R-OR-L100 8 = R-OR-L100 (TYPE FIX)>
		    <LSH INS26 SHFT97 = TEMP64 (TYPE FIX)>
		    <AND TEMP64 #WORD *377* = TEMP65>
		    <DEAD TEMP64>
		    <LSH TEMP65 R-OR-L100 = TEMP64 (TYPE FIX)>
		    <OR TEMP48 TEMP64 = TEMP48>
		    <DEAD TEMP64>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH TEMP65>
		    <DEAD TEMP65>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <JUMP + AGAIN156>
PHRASE143
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH TEMP65>
		    <DEAD TEMP65>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <JUMP + AGAIN103>
PHRASE140
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH TEMP65>
		    <DEAD TEMP65>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <VEQUAL? TEMP64 176 + BOOL188 (TYPE FIX)>
		    <VEQUAL? TEMP64 160 - PHRASE187 (TYPE FIX)>
BOOL188
		    <SET SIZ102 1 (TYPE FIX)>
		    <JUMP + PHRASE191>
PHRASE187
		    <VEQUAL? TEMP64 208 + BOOL190 (TYPE FIX)>
		    <VEQUAL? TEMP64 192 - PHRASE189 (TYPE FIX)>
BOOL190
		    <SET SIZ102 2 (TYPE FIX)>
		    <JUMP + PHRASE191>
PHRASE189
		    <VEQUAL? TEMP64 240 + BOOL192 (TYPE FIX)>
		    <VEQUAL? TEMP64 224 - PHRASE191 (TYPE FIX)>
		    <DEAD TEMP64>
BOOL192
		    <SET SIZ102 4 (TYPE FIX)>
PHRASE191
		    <LOOP>
AGAIN194
		    <INTGO>
		    <SUB SIZ102 1 = SIZ102 (TYPE FIX)>
		    <LESS? SIZ102 0 + AGAIN103 (TYPE FIX)>
		    <ADD SHFT97 8 = SHFT97 (TYPE FIX)>
		    <GRTR? SHFT97 0 - PHRASE209 (TYPE FIX)>
		    <SET SHFT97 -24 (TYPE FIX)>
		    <ADD PTR23 1 = PTR23 (TYPE FIX)>
		    <VEQUAL? AFLG27 0 - BOOL203>
		    <FRAME 'ERROR>
		    <PUSH 'ACCESS-BEYOND-END-OF-CODE!-ERRORS>
		    <CALL 'ERROR 1>
BOOL203
		    <NTHUU CV11 1 = INS26 (TYPE FIX)>
		    <RESTUU CV11 1 = CV11 (TYPE UVECTOR)>
		    <EMPUU? CV11 - PHRASE209 (TYPE UVECTOR)>
		    <EMPL? CL10 - PHRASE208 (TYPE LIST)>
		    <SET AFLG27 %<> (TYPE FALSE)>
		    <JUMP + PHRASE209>
PHRASE208
		    <NTHL CL10 1 = CV11 (TYPE UVECTOR)>
		    <RESTL CL10 1 = CL10 (TYPE LIST)>
PHRASE209
		    <LSH INS26 SHFT97 = TEMP65 (TYPE FIX)>
		    <AND TEMP65 #WORD *377* = TEMP65>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH TEMP65>
		    <DEAD TEMP65>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD BYTEOFF9 1 = BYTEOFF9 (TYPE FIX)>
		    <JUMP + AGAIN194>
EXIT96
		    <TYPE? IN-CASE?34 <TYPE-CODE FALSE> + PHRASE212>
		    <SET START-CASE35 BYTEOFF9>
PHRASE212
		    <VEQUAL? AFLG27 0 + EXIT21>
		    <DEAD AFLG27>
		    <EMPUU? CV11 - PHRASE215 (TYPE UVECTOR)>
		    <EMPL? CL10 + EXIT21 (TYPE LIST)>
		    <NTHL CL10 1 = CV11 (TYPE UVECTOR)>
		    <RESTL CL10 1 = CL10 (TYPE LIST)>
PHRASE215
		    <LESS? PTR23 MAXPTR12 + AGAIN36 (TYPE FIX)>
EXIT21
		    <TYPE? CLABELS13 <TYPE-CODE FALSE> + PHRASE221>
		    <DEAD CLABELS13>
		    <FRAME 'FORCE-OUT-FCODE>
		    <CALL 'FORCE-OUT-FCODE 0 = TEMP48>
		    <ADD BYTEOFF9 TEMP48 = TEMP65 (TYPE FIX)>
		    <DEAD BYTEOFF9 TEMP48>
		    <RETURN TEMP65>
		    <DEAD TEMP65>
PHRASE221
		    <RETURN BYTEOFF9>
		    <DEAD BYTEOFF9>
		    <END OUTPUT-PASS>

#WORD *11424654004*
		    <GFCN SWAP-MODE ("VALUE" FIX FIX) MODEA4>
		    <TEMP LOW5:FIX HIGH6:FIX>
		    <INTGO>
		    <AND MODEA4 #WORD *7* = LOW5>
		    <GETBITS MODEA4 3 3 = HIGH6>
		    <DEAD MODEA4>
		    <PUTBITS HIGH6 3 3 LOW5 = LOW5>
		    <DEAD HIGH6>
		    <RETURN LOW5>
		    <DEAD LOW5>
		    <END SWAP-MODE>

#WORD *35425536307*
		    <GFCN GENEA ("VALUE" FIX FIX FIX FIX FIX) EA4 BYTEOFF5 DISP6 SZ7>
		    <TEMP RES10 TEMP15 TAB11:UVECTOR WD8:FIX>
		    <INTGO>
		    <SET RES10 EA4>
		    <GVAL 'ADDRESS-IMM = TEMP15>
		    <EQUAL? TEMP15 EA4 - PHRASE13>
		    <DEAD TEMP15>
		    <GVAL 'LENGTH-LONG = TEMP15>
		    <EQUAL? TEMP15 SZ7 - PHRASE13>
		    <DEAD TEMP15>
		    <GVAL 'CONSTANT-TABLE = TAB11>
		    <ADD DISP6 1 = TEMP15 (TYPE FIX)>
		    <NTHUU TAB11 TEMP15 = WD8 (TYPE FIX)>
		    <DEAD TEMP15>
		    <VEQUAL? WD8 0 - PHRASE17 (TYPE FIX)>
		    <NTHUU TAB11 DISP6 = WD8 (TYPE FIX)>
		    <ADD DISP6 1 = TEMP15 (TYPE FIX)>
		    <DEAD DISP6>
		    <PUTUU TAB11 TEMP15 BYTEOFF5>
		    <DEAD TAB11 TEMP15>
		    <FRAME 'ADD-WORD-TO-FCODE>
		    <GETBITS WD8 16 16 = STACK>
		    <CALL 'ADD-WORD-TO-FCODE 1>
		    <FRAME 'ADD-WORD-TO-FCODE>
		    <PUSH WD8>
		    <DEAD WD8>
		    <CALL 'ADD-WORD-TO-FCODE 1>
		    <ADD BYTEOFF5 4 = BYTEOFF5 (TYPE FIX)>
		    <JUMP + PHRASE26>
PHRASE17
		    <GVAL 'ADDRESS-PCDISP = RES10>
		    <FRAME 'ADD-WORD-TO-FCODE>
		    <SUB WD8 BYTEOFF5 = STACK (TYPE FIX)>
		    <DEAD WD8>
		    <CALL 'ADD-WORD-TO-FCODE 1>
		    <ADD BYTEOFF5 2 = BYTEOFF5 (TYPE FIX)>
		    <JUMP + PHRASE26>
PHRASE13
		    <GETBITS EA4 3 3 = WD8>
		    <DEAD EA4>
		    <GRTR? WD8 4 - PHRASE26 (TYPE FIX)>
		    <DEAD WD8>
		    <ADD BYTEOFF5 2 = BYTEOFF5 (TYPE FIX)>
		    <FRAME 'ADD-WORD-TO-FCODE>
		    <PUSH DISP6>
		    <DEAD DISP6>
		    <CALL 'ADD-WORD-TO-FCODE 1>
PHRASE26
		    <PUTBITS RES10 16 16 BYTEOFF5 = TEMP15>
		    <DEAD RES10 BYTEOFF5>
		    <RETURN TEMP15>
		    <DEAD TEMP15>
		    <END GENEA>

#WORD *24010264016*
		    <GFCN EXTEND ("VALUE" FIX FIX) X4>
		    <TEMP TEMP7>
		    <INTGO>
		    <GETBITS X4 1 15 = TEMP7>
		    <VEQUAL? TEMP7 1 - PHRASE6 (TYPE FIX)>
		    <DEAD TEMP7>
		    <LSH -1 16 = TEMP7 (TYPE FIX)>
		    <OR X4 TEMP7 = TEMP7>
		    <DEAD X4>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
PHRASE6
		    <RETURN X4>
		    <DEAD X4>
		    <END EXTEND>

#WORD *27410264016*
		    <GFCN EXTEND-BYTE ("VALUE" FIX FIX) X4>
		    <TEMP TEMP7>
		    <INTGO>
		    <GETBITS X4 1 7 = TEMP7>
		    <VEQUAL? TEMP7 1 - PHRASE6 (TYPE FIX)>
		    <DEAD TEMP7>
		    <LSH -1 8 = TEMP7 (TYPE FIX)>
		    <OR X4 TEMP7 = TEMP7>
		    <DEAD X4>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
PHRASE6
		    <RETURN X4>
		    <DEAD X4>
		    <END EXTEND-BYTE>

#WORD *33767525715*
		    <GFCN FORCE-OUT-FCODE ("VALUE" FIX)>
		    <TEMP SHFT4:FIX I8:FIX>
		    <INTGO>
		    <GVAL 'FSHIFT = SHFT4>
		    <SET I8 0 (TYPE FIX)>
		    <LOOP>
AGAIN9
		    <INTGO>
		    <SUB SHFT4 8 = SHFT4 (TYPE FIX)>
		    <GRTR? SHFT4 0 + PHRASE11 (TYPE FIX)>
		    <RETURN I8>
		    <DEAD I8>
PHRASE11
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <ADD I8 1 = I8 (TYPE FIX)>
		    <JUMP + AGAIN9>
		    <END FORCE-OUT-FCODE>

#WORD *35720630150*
		    <GFCN INIT-UNRESOLVED-CALLS ("VALUE" <LIST [REST UNRESOLVED-CALL]>)>
		    <TEMP>
		    <INTGO>
		    <SETG 'UNRESOLVED-CALLS-TABLE ()>
		    <RETURN ()>
		    <END INIT-UNRESOLVED-CALLS>

#WORD *21276321607*
		    <GFCN CHECK-UNRESOLVED-CALLS ("VALUE" FIX FIX FIX) EBYTEOFF4 SBYTEOFF5>
		    <TEMP TEMP17:LIST UCALL18:UNRESOLVED-CALL TEMP24 TEM20:FIX>
		    <INTGO>
		    <GVAL 'UNRESOLVED-CALLS-TABLE = TEMP17>
		    <LOOP>
MAP7
		    <INTGO>
		    <EMPL? TEMP17 + MAPAP10>
		    <NTHL TEMP17 1 = UCALL18>
		    <NTHUV UCALL18 4 = TEMP24 (TYPE FIX)>
		    <SUB EBYTEOFF4 TEMP24 = TEMP24 (TYPE FIX)>
		    <GRTR? TEMP24 32767 - PHRASE22 (TYPE FIX)>
		    <DEAD TEMP24>
		    <NTHUV UCALL18 4 = TEMP24 (TYPE FIX)>
		    <SUB SBYTEOFF5 TEMP24 = TEM20 (TYPE FIX)>
		    <DEAD TEMP24>
		    <GRTR? TEM20 32767 - PHRASE26 (TYPE FIX)>
		    <FRAME 'ERROR>
		    <PUSH 'CANT-JUMP-FAR-ENOUGH>
		    <PUSH UCALL18>
		    <PUSH SBYTEOFF5>
		    <PUSH EBYTEOFF4>
		    <PUSH 'CHECK-UNRESOLVED-CALLS>
		    <CALL 'ERROR 5>
PHRASE26
		    <FRAME 'PUT-FCODE>
		    <NTHUV UCALL18 3 = STACK (TYPE FIX)>
		    <AND TEM20 #WORD *377* = STACK>
		    <CALL 'PUT-FCODE 2>
		    <FRAME 'PUT-FCODE>
		    <NTHUV UCALL18 3 = TEMP24 (TYPE FIX)>
		    <ADD TEMP24 1 = STACK (TYPE FIX)>
		    <DEAD TEMP24>
		    <LSH TEM20 -8 = TEMP24 (TYPE FIX)>
		    <DEAD TEM20>
		    <AND TEMP24 #WORD *377* = STACK>
		    <DEAD TEMP24>
		    <CALL 'PUT-FCODE 2>
		    <ADD SBYTEOFF5 3 = TEMP24 (TYPE FIX)>
		    <PUTUV UCALL18 4 TEMP24 (TYPE FIX)>
		    <DEAD TEMP24>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 49>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1 = TEMP24>
		    <FRAME 'ADD-BYTE-TO-FCODE>
		    <PUSH 0>
		    <CALL 'ADD-BYTE-TO-FCODE 1>
		    <PUTUV UCALL18 3 TEMP24>
		    <DEAD UCALL18 TEMP24>
		    <ADD SBYTEOFF5 3 = SBYTEOFF5 (TYPE FIX)>
PHRASE22
		    <RESTL TEMP17 1 = TEMP17 (TYPE LIST)>
		    <JUMP + MAP7>
MAPAP10
		    <RETURN SBYTEOFF5>
		    <DEAD SBYTEOFF5>
		    <END CHECK-UNRESOLVED-CALLS>

#WORD *25215510226*
		    <GFCN ADD-UNRESOLVED-CALLS ("VALUE" <LIST [REST UNRESOLVED-CALL]>)>
		    <TEMP TAB4:LIST TEMP16:VECTOR UCALL17 TEMP19 TEMP28>
		    <INTGO>
		    <GVAL 'UNRESOLVED-CALLS-TABLE = TAB4>
		    <GVAL 'CALL-TABLE = TEMP16>
		    <LOOP>
MAP6
		    <INTGO>
		    <EMPUV? TEMP16 + MAPAP9>
		    <NTHUV TEMP16 1 = UCALL17>
		    <TYPE? UCALL17 <TYPE-CODE FALSE> + MAPAP9>
		    <NTHUV UCALL17 3 = TEMP19 (TYPE FIX)>
		    <GRTR? TEMP19 0 - PHRASE26 (TYPE FIX)>
		    <DEAD TEMP19>
		    <EMPL? TAB4 - PHRASE25 (TYPE LIST)>
		    <CONS UCALL17 () = TAB4>
		    <DEAD UCALL17>
		    <JUMP + PHRASE26>
PHRASE25
		    <SET TEMP19 TAB4>
		    <LOOP (TEMP19 VALUE)>
TAG27
		    <RESTL TEMP19 1 = TEMP28 (TYPE LIST)>
		    <EMPL? TEMP28 + TAG29>
		    <SET TEMP19 TEMP28>
		    <DEAD TEMP28>
		    <JUMP + TAG27>
TAG29
		    <CONS UCALL17 () = TEMP28>
		    <DEAD UCALL17>
		    <PUTREST TEMP19 TEMP28>
		    <DEAD TEMP19 TEMP28>
PHRASE26
		    <RESTUV TEMP16 1 = TEMP16 (TYPE VECTOR)>
		    <JUMP + MAP6>
MAPAP9
		    <SETG 'UNRESOLVED-CALLS-TABLE TAB4>
		    <RETURN TAB4>
		    <DEAD TAB4>
		    <END ADD-UNRESOLVED-CALLS>

#WORD *21103150104*
		    <GFCN FIXUP-UNRESOLVED-CALLS ("VALUE" ATOM CALL-ENTRY) CE4>
		    <TEMP NAME5:ATOM PTR9:LIST PPTR10:LIST UCALL11 TEMP19 OFF12>
		    <INTGO>
		    <NTHUV CE4 1 = NAME5 (TYPE ATOM)>
		    <GVAL 'UNRESOLVED-CALLS-TABLE = PTR9>
		    <SET PPTR10 PTR9>
		    <LOOP>
AGAIN13
		    <INTGO>
		    <EMPL? PTR9 - PHRASE15 (TYPE LIST)>
		    <RETURN 'T>
PHRASE15
		    <NTHL PTR9 1 = UCALL11>
		    <FRAME 'SAME-NAME?>
		    <NTHUV UCALL11 1 = STACK (TYPE ATOM)>
		    <PUSH NAME5>
		    <CALL 'SAME-NAME? 2 = TEMP19>
		    <TYPE? TEMP19 <TYPE-CODE FALSE> + PHRASE17>
		    <DEAD TEMP19>
		    <FRAME 'FIND-ENTRY-LOC>
		    <PUSH CE4>
		    <NTHUV UCALL11 2 = STACK (TYPE FIX)>
		    <CALL 'FIND-ENTRY-LOC 2 = OFF12>
		    <TYPE? OFF12 <TYPE-CODE FALSE> - BOOL20>
		    <FRAME 'ERROR>
		    <PUSH "CANT JUMP">
		    <PUSH 'FIXUP-UNRESOLVED-CALLS>
		    <CALL 'ERROR 2>
BOOL20
		    <NTHUV UCALL11 4 = TEMP19 (TYPE FIX)>
		    <SUB OFF12 TEMP19 = OFF12 (TYPE FIX)>
		    <DEAD TEMP19>
		    <SET TEMP19 OFF12>
		    <LESS? TEMP19 0 - TAG24 (TYPE FIX)>
		    <SUB 0 TEMP19 = TEMP19 (TYPE FIX)>
TAG24
		    <GRTR? TEMP19 32767 - BOOL23 (TYPE FIX)>
		    <DEAD TEMP19>
		    <FRAME 'ERROR>
		    <PUSH "CANT JUMP">
		    <PUSH 'FIXUP-UNRESOLVED-CALLS>
		    <CALL 'ERROR 2>
BOOL23
		    <FRAME 'PUT-FCODE>
		    <NTHUV UCALL11 3 = STACK (TYPE FIX)>
		    <AND OFF12 #WORD *377* = STACK>
		    <CALL 'PUT-FCODE 2>
		    <FRAME 'PUT-FCODE>
		    <NTHUV UCALL11 3 = TEMP19 (TYPE FIX)>
		    <DEAD UCALL11>
		    <ADD TEMP19 1 = STACK (TYPE FIX)>
		    <DEAD TEMP19>
		    <LSH OFF12 -8 = TEMP19 (TYPE FIX)>
		    <DEAD OFF12>
		    <AND TEMP19 #WORD *377* = STACK>
		    <DEAD TEMP19>
		    <CALL 'PUT-FCODE 2>
		    <VEQUAL? PTR9 PPTR10 - PHRASE29>
		    <RESTL PTR9 1 = TEMP19 (TYPE LIST)>
		    <SETG 'UNRESOLVED-CALLS-TABLE TEMP19>
		    <DEAD TEMP19>
		    <RESTL PTR9 1 = PPTR10 (TYPE LIST)>
		    <JUMP + COND16>
PHRASE29
		    <RESTL PTR9 1 = TEMP19 (TYPE LIST)>
		    <PUTREST PPTR10 TEMP19>
		    <DEAD TEMP19>
		    <JUMP + COND16>
PHRASE17
		    <SET PPTR10 PTR9>
COND16
		    <RESTL PTR9 1 = PTR9 (TYPE LIST)>
		    <JUMP + AGAIN13>
		    <END FIXUP-UNRESOLVED-CALLS>
