
<GDECL (LOOKAHEAD?) <OR ATOM FALSE>>

<SETG ARITH '[ADD!-MIMOP SUB!-MIMOP MUL!-MIMOP DIV!-MIMOP ADDF!-MIMOP SUBF!-MIMOP MULF!-MIMOP DIVF!-MIMOP AND!-MIMOP OR!-MIMOP XOR!-MIMOP EQV!-MIMOP]>

<SETG EMPU '[EMPUV?!-MIMOP EMPUU?!-MIMOP EMPUS?!-MIMOP EMPUB?!-MIMOP]>

<SETG LENU '[LENUV!-MIMOP LENUU!-MIMOP LENUS!-MIMOP LENUB!-MIMOP]>

<SETG NTHU '[NTHUV!-MIMOP NTHUU!-MIMOP NTHUS!-MIMOP NTHUB!-MIMOP]>

<SETG PUTU '[PUTUV!-MIMOP PUTUU!-MIMOP PUTUS!-MIMOP PUTUB!-MIMOP]>

<SETG RESTU '[RESTUV!-MIMOP RESTUU!-MIMOP RESTUS!-MIMOP RESTUB!-MIMOP]>

<PUTPROP RESTUV!-MIMOP PUT-PAIR PUTUV!-MIMOP>

<PUTPROP PUTUV!-MIMOP PUT-PAIR RESTUV!-MIMOP>

<PUTPROP RESTUU!-MIMOP PUT-PAIR PUTUU!-MIMOP>

<PUTPROP PUTUU!-MIMOP PUT-PAIR RESTUU!-MIMOP>

<PUTPROP RESTUS!-MIMOP PUT-PAIR PUTUS!-MIMOP>

<PUTPROP PUTUS!-MIMOP PUT-PAIR RESTUS!-MIMOP>

<PUTPROP RESTUB!-MIMOP PUT-PAIR PUTUB!-MIMOP>

<PUTPROP PUTUB!-MIMOP PUT-PAIR RESTUB!-MIMOP>

<PUTPROP RESTUV!-MIMOP PAIR NTHUV!-MIMOP>

<PUTPROP NTHUV!-MIMOP PAIR RESTUV!-MIMOP>

<PUTPROP RESTUU!-MIMOP PAIR NTHUU!-MIMOP>

<PUTPROP NTHUU!-MIMOP PAIR RESTUU!-MIMOP>

<PUTPROP RESTUS!-MIMOP PAIR NTHUS!-MIMOP>

<PUTPROP NTHUS!-MIMOP PAIR RESTUS!-MIMOP>

<PUTPROP RESTUB!-MIMOP PAIR NTHUB!-MIMOP>

<PUTPROP NTHUB!-MIMOP PAIR RESTUB!-MIMOP>

<GDECL (ARITH NTHU PUTU RESTU LENU EMPU) <VECTOR [REST ATOM]>>

<NEWSTRUC OP-INFO (VECTOR) OP-ARGS VECTOR OP-RES <OR ATOM VARTBL> OP-HINT <OR LIST ATOM FALSE> OP-BRANCH <OR ATOM FALSE> OP-DIR ATOM>

<SETG OP-INFO [<IVECTOR 5 <>> T <> <> T]>

#WORD *10422117637*
		    <GFCN NTH-LOOK-AHEAD ("VALUE" <OR ATOM FALSE> ATOM ANY ANY <OR VARTBL ATOM> "OPTIONAL" ANY ANY) CINS7 STRUC18 OFF19 RES10 HINT11 STYPE112>
		    <OPT-DISPATCH 4 %<> OPT4 OPT5 OPT6>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <TEMP TEMP3:LBIND TEMP40 OP-INFO16 (ADDVAL17 0) (ELTYPE120 %<>) (ELTYPE221 %<>) (EMPTY?22 %<>) ARGVEC23:VECTOR (ARITH?24 %<>) (ILDB?25 %<>) (IDPB?27 %<>) (RES1?31 %<>) (RES2?32 %<>) (STYPE234 %<>) (NOPUT?38 %<>) TEMP65 NXT15 INCINS14 TEMP92 STRUC218 OFF219>
		    <INTGO>
		    <GETS 'BIND = TEMP3 (TYPE LBIND)>
		    <GEN-LVAL 'CODPTR = TEMP40>
		    <BBIND 'L <LIST [REST <OR ATOM FORM>]> 'FIX TEMP40>
		    <DEAD TEMP40>
		    <GVAL 'OP-INFO = OP-INFO16>
		    <NTHUV OP-INFO16 1 = ARGVEC23 (TYPE VECTOR)>
		    <GVAL 'LOOKAHEAD? = TEMP40>
		    <TYPE? TEMP40 <TYPE-CODE FALSE> - PHRASE44>
		    <DEAD TEMP40>
		    <SET TEMP40 %<> (TYPE FALSE)>
		    <JUMP + RETURN2>
PHRASE44
		    <TYPE? STYPE112 <TYPE-CODE FALSE> + PHRASE46>
		    <FRAME 'PARSE-HINT>
		    <PUSH STYPE112>
		    <DEAD STYPE112>
		    <PUSH 'STRUCTURE-TYPE>
		    <CALL 'PARSE-HINT 2 = STYPE112>
		    <JUMP + PHRASE54>
PHRASE46
		    <VEQUAL? CINS7 'NTHUV!-MIMOP - PHRASE50>
		    <SET STYPE112 'VECTOR (TYPE ATOM)>
		    <JUMP + PHRASE54>
PHRASE50
		    <VEQUAL? CINS7 'NTHUU!-MIMOP - PHRASE51>
		    <SET STYPE112 'UVECTOR (TYPE ATOM)>
		    <JUMP + PHRASE54>
PHRASE51
		    <VEQUAL? CINS7 'NTHUS!-MIMOP - PHRASE52>
		    <SET STYPE112 'STRING (TYPE ATOM)>
		    <JUMP + PHRASE54>
PHRASE52
		    <VEQUAL? CINS7 'NTHUB!-MIMOP - PHRASE53>
		    <SET STYPE112 'BYTES (TYPE ATOM)>
		    <JUMP + PHRASE54>
PHRASE53
		    <VEQUAL? CINS7 'NTHL!-MIMOP - PHRASE54>
		    <SET STYPE112 'LIST (TYPE ATOM)>
PHRASE54
		    <VEQUAL? CINS7 'ILDB!-MIMOP - PHRASE56>
		    <SET ILDB?25 OFF19>
		    <DEAD OFF19>
		    <SET OFF19 1 (TYPE FIX)>
PHRASE56
		    <GVAL 'NTHU = TEMP40>
		    <EMPUV? TEMP40 + TAG61>
		    <LOOP (CINS7 VALUE) (TEMP40 LENGTH VALUE)>
TAG62
		    <NTHUV TEMP40 1 = TEMP65>
		    <VEQUAL? TEMP65 CINS7 + BOOL60>
		    <DEAD TEMP65>
		    <RESTUV TEMP40 1 = TEMP40 (TYPE VECTOR)>
		    <EMPUV? TEMP40 - TAG62>
TAG61
		    <VEQUAL? CINS7 'ILDB!-MIMOP + BOOL60>
		    <VEQUAL? CINS7 'NTHL!-MIMOP - PHRASE58>
BOOL60
		    <NTHR 'L 2 = TEMP40 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP40 1 = TEMP40 (RECORD-TYPE LBIND)>
		    <EMPL? TEMP40 + PHRASE58>
		    <RESTL TEMP40 1 = TEMP40 (TYPE LIST)>
		    <EMPL? TEMP40 + PHRASE58>
		    <RESTL TEMP40 1 = TEMP40 (TYPE LIST)>
		    <EMPL? TEMP40 + PHRASE58>
		    <DEAD TEMP40>
		    <TYPE? RES10 <TYPE-CODE VARTBL> - PHRASE58>
		    <TYPE? STRUC18 <TYPE-CODE VARTBL> - PHRASE58>
		    <VEQUAL? RES10 STRUC18 + PHRASE58>
		    <FRAME 'GET-NEXT-INST>
		    <NTHR 'L 2 = TEMP40 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP40 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP40>
		    <CALL 'GET-NEXT-INST 1 = NXT15>
		    <TYPE? NXT15 <TYPE-CODE FORM> - PHRASE58>
		    <NTHL NXT15 1 = INCINS14>
		    <GVAL 'ARITH = TEMP40>
		    <TYPE? INCINS14 <TYPE-CODE ATOM> - TAG74>
		    <EMPUV? TEMP40 + TAG74>
		    <LOOP (INCINS14 VALUE) (TEMP40 LENGTH VALUE)>
TAG76
		    <NTHUV TEMP40 1 = TEMP65>
		    <VEQUAL? TEMP65 INCINS14 + TAG75>
		    <DEAD TEMP65>
		    <RESTUV TEMP40 1 = TEMP40 (TYPE VECTOR)>
		    <EMPUV? TEMP40 - TAG76>
TAG74
		    <SET ARITH?24 %<> (TYPE FALSE)>
		    <JUMP + TAG78>
TAG75
		    <SET ARITH?24 TEMP40>
		    <DEAD TEMP40>
TAG78
		    <VEQUAL? ARITH?24 0 - TAG79>
		    <GVAL 'RESTU = TEMP40>
		    <TYPE? INCINS14 <TYPE-CODE ATOM> - PHRASE72>
		    <EMPUV? TEMP40 + PHRASE72>
		    <LOOP (INCINS14 VALUE) (TEMP40 LENGTH VALUE)>
TAG80
		    <NTHUV TEMP40 1 = TEMP65>
		    <VEQUAL? TEMP65 INCINS14 + TAG79>
		    <DEAD TEMP65>
		    <RESTUV TEMP40 1 = TEMP40 (TYPE VECTOR)>
		    <EMPUV? TEMP40 - TAG80>
		    <JUMP + PHRASE72>
TAG79
		    <FRAME 'PARSE-OP>
		    <PUSH NXT15>
		    <DEAD NXT15>
		    <PUSH OP-INFO16>
		    <CALL 'PARSE-OP 2>
		    <NTHUV OP-INFO16 1 = TEMP40 (TYPE VECTOR)>
		    <NTHUV TEMP40 1 = TEMP40>
		    <EQUAL? TEMP40 RES10 - PHRASE58>
		    <DEAD TEMP40>
		    <NTHUV OP-INFO16 2 = TEMP40>
		    <EQUAL? TEMP40 RES10 - PHRASE58>
		    <DEAD TEMP40>
		    <NTHUV OP-INFO16 1 = TEMP40 (TYPE VECTOR)>
		    <NTHUV TEMP40 2 = ADDVAL17>
		    <DEAD TEMP40>
		    <TYPE? ADDVAL17 <TYPE-CODE FALSE> + PHRASE58>
		    <FRAME 'GET-NEXT-INST>
		    <NTHR 'L 2 = TEMP40 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP40 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP40>
		    <CALL 'GET-NEXT-INST 1 = NXT15>
		    <TYPE? NXT15 <TYPE-CODE FORM> - PHRASE58>
		    <JUMP + PHRASE87>
PHRASE72
		    <SET INCINS14 %<> (TYPE FALSE)>
PHRASE87
		    <TYPE? ARITH?24 <TYPE-CODE FALSE> + TAG93>
		    <GVAL 'LOGIC = TEMP40>
		    <TYPE INCINS14 = TEMP65>
		    <EMPUV? TEMP40 + TAG93>
		    <LOOP (INCINS14 VALUE) (TEMP65 VALUE) (TEMP40 LENGTH VALUE)>
TAG90
		    <NTHUV TEMP40 1 = TEMP92>
		    <TYPE? TEMP92 TEMP65 - TAG91>
		    <VEQUAL? TEMP92 INCINS14 + TAG89>
		    <DEAD TEMP92>
TAG91
		    <RESTUV TEMP40 1 = TEMP40 (TYPE VECTOR)>
		    <EMPUV? TEMP40 - TAG90>
		    <JUMP + TAG93>
TAG89
		    <SET TEMP40 [STRING BYTES] (TYPE VECTOR)>
		    <TYPE? STYPE112 <TYPE-CODE ATOM> - TAG93>
		    <LOOP (STYPE112 VALUE) (TEMP40 LENGTH VALUE)>
TAG94
		    <NTHUV TEMP40 1 = TEMP65>
		    <VEQUAL? TEMP65 STYPE112 + PHRASE58>
		    <DEAD TEMP65>
		    <RESTUV TEMP40 1 = TEMP40 (TYPE VECTOR)>
		    <EMPUV? TEMP40 - TAG94>
TAG93
		    <NTH1 NXT15 = TEMP92>
		    <GVAL 'PUTU = TEMP40>
		    <TYPE? TEMP92 <TYPE-CODE ATOM> - TAG97>
		    <EMPUV? TEMP40 + TAG97>
		    <LOOP (TEMP92 VALUE) (TEMP40 LENGTH VALUE)>
TAG98
		    <NTHUV TEMP40 1 = TEMP65>
		    <VEQUAL? TEMP65 TEMP92 + PHRASE103>
		    <DEAD TEMP65>
		    <RESTUV TEMP40 1 = TEMP40 (TYPE VECTOR)>
		    <EMPUV? TEMP40 - TAG98>
TAG97
		    <EQUAL? TEMP92 'PUTL!-MIMOP + PHRASE103>
		    <EQUAL? TEMP92 'IDPB!-MIMOP - TAG100>
		    <SET IDPB?27 'T (TYPE ATOM)>
		    <JUMP + TAG101>
TAG100
		    <SET IDPB?27 %<> (TYPE FALSE)>
TAG101
		    <VEQUAL? IDPB?27 0 - PHRASE103>
		    <TYPE? ARITH?24 <TYPE-CODE FALSE> + PHRASE58>
		    <SET TEMP92 %<> (TYPE FALSE)>
		    <SET NOPUT?38 'T (TYPE ATOM)>
		    <SET STRUC218 RES10>
PHRASE103
		    <VEQUAL? NOPUT?38 0 - PHRASE105>
		    <FRAME 'PARSE-OP>
		    <PUSH NXT15>
		    <DEAD NXT15>
		    <PUSH OP-INFO16>
		    <CALL 'PARSE-OP 2>
		    <NTHUV OP-INFO16 1 = ARGVEC23 (TYPE VECTOR)>
		    <VEQUAL? IDPB?27 0 + PHRASE108>
		    <NTHUV ARGVEC23 2 = TEMP40>
		    <EQUAL? TEMP40 RES10 - PHRASE58>
		    <DEAD TEMP40>
		    <JUMP + PHRASE105>
PHRASE108
		    <NTHUV ARGVEC23 3 = TEMP40>
		    <EQUAL? TEMP40 RES10 - PHRASE58>
		    <DEAD TEMP40>
PHRASE105
		    <VEQUAL? NOPUT?38 0 - PHRASE110>
		    <FRAME 'WILL-DIE?>
		    <PUSH RES10>
		    <NTHR 'L 2 = TEMP40 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP40 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP40>
		    <CALL 'WILL-DIE? 2 = TEMP40>
		    <TYPE? TEMP40 <TYPE-CODE FALSE> - PHRASE110>
		    <DEAD TEMP40>
		    <TYPE? ARITH?24 <TYPE-CODE FALSE> + PHRASE58>
		    <DEAD ARITH?24>
		    <SET NOPUT?38 'T (TYPE ATOM)>
		    <SET TEMP92 %<> (TYPE FALSE)>
		    <SET STRUC218 RES10>
		    <DEAD RES10>
PHRASE110
		    <VEQUAL? NOPUT?38 0 - PHRASE117>
		    <NTHUV ARGVEC23 1 = STRUC218>
PHRASE117
		    <VEQUAL? NOPUT?38 0 + PHRASE119>
		    <FRAME 'PROTECT-VAL>
		    <PUSH STRUC218>
		    <CALL 'PROTECT-VAL 1>
		    <JUMP + PHRASE127>
PHRASE119
		    <VEQUAL? IDPB?27 0 + PHRASE121>
		    <FRAME 'PARSE-HINT>
		    <NTHUV OP-INFO16 3 = STACK>
		    <PUSH 'STRUCTURE-TYPE>
		    <CALL 'PARSE-HINT 2 = STYPE234>
		    <JUMP + PHRASE127>
PHRASE121
		    <EQUAL? TEMP92 'PUTUV!-MIMOP - PHRASE123>
		    <SET STYPE234 'VECTOR (TYPE ATOM)>
		    <JUMP + PHRASE127>
PHRASE123
		    <EQUAL? TEMP92 'PUTL!-MIMOP - PHRASE124>
		    <SET STYPE234 'LIST (TYPE ATOM)>
		    <JUMP + PHRASE127>
PHRASE124
		    <EQUAL? TEMP92 'PUTUU!-MIMOP - PHRASE125>
		    <SET STYPE234 'UVECTOR (TYPE ATOM)>
		    <SET ELTYPE221 'FIX (TYPE ATOM)>
		    <JUMP + PHRASE127>
PHRASE125
		    <EQUAL? TEMP92 'PUTUS!-MIMOP - PHRASE126>
		    <SET STYPE234 'STRING (TYPE ATOM)>
		    <SET ELTYPE221 'CHARACTER (TYPE ATOM)>
		    <JUMP + PHRASE127>
PHRASE126
		    <EQUAL? TEMP92 'PUTUB!-MIMOP - PHRASE127>
		    <SET ELTYPE221 'FIX (TYPE ATOM)>
		    <SET STYPE234 'BYTES (TYPE ATOM)>
PHRASE127
		    <VEQUAL? IDPB?27 0 + PHRASE129>
		    <SET OFF219 1 (TYPE FIX)>
		    <NTHUV ARGVEC23 3 = IDPB?27>
		    <DEAD ARGVEC23>
		    <JUMP + PHRASE132>
PHRASE129
		    <VEQUAL? NOPUT?38 0 - PHRASE132>
		    <NTHUV ARGVEC23 2 = OFF219>
		    <DEAD ARGVEC23>
		    <NTHUV OP-INFO16 3 = TEMP40>
		    <TYPE? TEMP40 <TYPE-CODE FALSE> + PHRASE132>
		    <DEAD TEMP40>
		    <FRAME 'PARSE-HINT>
		    <NTHUV OP-INFO16 3 = STACK>
		    <DEAD OP-INFO16>
		    <PUSH 'TYPE>
		    <CALL 'PARSE-HINT 2 = ELTYPE221>
PHRASE132
		    <TYPE? HINT11 <TYPE-CODE FALSE> + PHRASE135>
		    <TYPE? HINT11 <TYPE-CODE ATOM> - PHRASE137>
		    <SET ELTYPE120 HINT11>
		    <DEAD HINT11>
		    <JUMP + PHRASE141>
PHRASE137
		    <FRAME 'PARSE-HINT>
		    <PUSH HINT11>
		    <DEAD HINT11>
		    <PUSH 'TYPE>
		    <CALL 'PARSE-HINT 2 = ELTYPE120>
		    <JUMP + PHRASE141>
PHRASE135
		    <EQUAL? STYPE112 'BYTES - PHRASE139>
		    <SET ELTYPE120 'FIX (TYPE ATOM)>
		    <JUMP + PHRASE141>
PHRASE139
		    <EQUAL? STYPE112 'STRING - PHRASE140>
		    <SET ELTYPE120 'CHARACTER (TYPE ATOM)>
		    <JUMP + PHRASE141>
PHRASE140
		    <EQUAL? STYPE112 'UVECTOR - PHRASE141>
		    <SET ELTYPE120 'FIX (TYPE ATOM)>
PHRASE141
		    <GVAL 'RESTU = TEMP40>
		    <TYPE? INCINS14 <TYPE-CODE ATOM> - PHRASE143>
		    <EMPUV? TEMP40 + PHRASE143>
		    <LOOP (INCINS14 VALUE) (TEMP40 LENGTH VALUE)>
TAG146
		    <NTHUV TEMP40 1 = TEMP65>
		    <VEQUAL? TEMP65 INCINS14 + TAG145>
		    <DEAD TEMP65>
		    <RESTUV TEMP40 1 = TEMP40 (TYPE VECTOR)>
		    <EMPUV? TEMP40 - TAG146>
		    <JUMP + PHRASE143>
TAG145
		    <TYPE? ELTYPE120 <TYPE-CODE FALSE> + BOOL148>
		    <TYPE? ELTYPE221 <TYPE-CODE FALSE> + BOOL148>
		    <EQUAL? ELTYPE120 ELTYPE221 + PHRASE143>
BOOL148
		    <TYPE? ILDB?25 <TYPE-CODE FALSE> - BOOL149>
		    <TYPE? IDPB?27 <TYPE-CODE FALSE> - BOOL149>
		    <EQUAL? STRUC18 STRUC218 - BOOL149>
		    <EQUAL? OFF19 OFF219 + PHRASE143>
BOOL149
		    <SET TEMP40 %<> (TYPE FALSE)>
		    <JUMP + PHRASE345>
PHRASE143
		    <FRAME 'NTH-AOS-PUT-GEN>
		    <PUSH CINS7>
		    <DEAD CINS7>
		    <PUSH INCINS14>
		    <DEAD INCINS14>
		    <PUSH TEMP92>
		    <DEAD TEMP92>
		    <PUSH STRUC18>
		    <DEAD STRUC18>
		    <PUSH OFF19>
		    <DEAD OFF19>
		    <PUSH STRUC218>
		    <DEAD STRUC218>
		    <VEQUAL? NOPUT?38 0 + TAG154>
		    <SET TEMP65 %<> (TYPE FALSE)>
		    <JUMP + PHRASE153>
TAG154
		    <SET TEMP65 OFF219>
		    <DEAD OFF219>
PHRASE153
		    <PUSH TEMP65>
		    <DEAD TEMP65>
		    <PUSH ADDVAL17>
		    <DEAD ADDVAL17>
		    <NTHR 'L 2 = TEMP65 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP65 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP65>
		    <PUSH ILDB?25>
		    <DEAD ILDB?25>
		    <PUSH IDPB?27>
		    <DEAD IDPB?27>
		    <PUSH STYPE112>
		    <DEAD STYPE112>
		    <VEQUAL? NOPUT?38 0 + TAG159>
		    <SET TEMP65 %<> (TYPE FALSE)>
		    <JUMP + PHRASE158>
TAG159
		    <SET TEMP65 STYPE234>
		    <DEAD STYPE234>
PHRASE158
		    <PUSH TEMP65>
		    <DEAD TEMP65>
		    <PUSH ELTYPE120>
		    <DEAD ELTYPE120>
		    <VEQUAL? NOPUT?38 0 + TAG162>
		    <DEAD NOPUT?38>
		    <SET TEMP65 %<> (TYPE FALSE)>
		    <JUMP + PHRASE161>
TAG162
		    <SET TEMP65 ELTYPE221>
		    <DEAD ELTYPE221>
PHRASE161
		    <PUSH TEMP65>
		    <DEAD TEMP65>
		    <CALL 'NTH-AOS-PUT-GEN 15 = TEMP40>
		    <VEQUAL? TEMP40 0 + PHRASE345>
		    <SET TEMP40 'NORMAL (TYPE ATOM)>
		    <JUMP + PHRASE345>
PHRASE58
		    <GEN-LVAL 'CODPTR = TEMP65>
		    <NTHR 'L 2 = TEMP92 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <PUTR TEMP92 1 TEMP65 (RECORD-TYPE LBIND)>
		    <DEAD TEMP92 TEMP65>
		    <VEQUAL? CINS7 'ILDB!-MIMOP + TAG173>
		    <GVAL 'NTHU = TEMP65>
		    <EMPUV? TEMP65 + TAG170>
		    <LOOP (CINS7 VALUE) (TEMP65 LENGTH VALUE)>
TAG171
		    <NTHUV TEMP65 1 = TEMP92>
		    <VEQUAL? TEMP92 CINS7 + TAG173>
		    <DEAD TEMP92>
		    <RESTUV TEMP65 1 = TEMP65 (TYPE VECTOR)>
		    <EMPUV? TEMP65 - TAG171>
TAG170
		    <VEQUAL? CINS7 'NTHL!-MIMOP + TAG173>
		    <SET TEMP40 %<> (TYPE FALSE)>
		    <JUMP + PHRASE345>
TAG173
		    <NTHR 'L 2 = TEMP65 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP65 1 = TEMP65 (RECORD-TYPE LBIND)>
		    <EMPL? TEMP65 + TAG177>
		    <RESTL TEMP65 1 = TEMP65 (TYPE LIST)>
		    <EMPL? TEMP65 - TAG174>
		    <DEAD TEMP65>
TAG177
		    <SET TEMP40 %<> (TYPE FALSE)>
		    <JUMP + PHRASE345>
TAG174
		    <FRAME 'GET-NEXT-INST>
		    <NTHR 'L 2 = TEMP65 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP65 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP65>
		    <CALL 'GET-NEXT-INST 1 = NXT15>
		    <TYPE? NXT15 <TYPE-CODE FORM> + TAG181>
		    <SET TEMP40 %<> (TYPE FALSE)>
		    <JUMP + PHRASE345>
TAG181
		    <NTHL NXT15 1 = TEMP65>
		    <GVAL 'LENU = TEMP92>
		    <TYPE? TEMP65 <TYPE-CODE ATOM> - TAG187>
		    <EMPUV? TEMP92 + TAG187>
		    <LOOP (TEMP65 VALUE) (TEMP92 LENGTH VALUE)>
TAG188
		    <NTHUV TEMP92 1 = TEMP40>
		    <VEQUAL? TEMP40 TEMP65 + BOOL186>
		    <DEAD TEMP40>
		    <RESTUV TEMP92 1 = TEMP92 (TYPE VECTOR)>
		    <EMPUV? TEMP92 - TAG188>
TAG187
		    <NTHL NXT15 1 = TEMP65>
		    <EQUAL? TEMP65 'EMPL?!-MIMOP - TAG192>
		    <DEAD TEMP65>
		    <SET TEMP92 'T (TYPE ATOM)>
		    <JUMP + TAG194>
TAG192
		    <NTHL NXT15 1 = TEMP65>
		    <GVAL 'EMPU = TEMP92>
		    <TYPE? TEMP65 <TYPE-CODE ATOM> - TAG193>
		    <EMPUV? TEMP92 + TAG193>
		    <LOOP (TEMP65 VALUE) (TEMP92 LENGTH VALUE)>
TAG195
		    <NTHUV TEMP92 1 = TEMP40>
		    <VEQUAL? TEMP40 TEMP65 + TAG194>
		    <DEAD TEMP40>
		    <RESTUV TEMP92 1 = TEMP92 (TYPE VECTOR)>
		    <EMPUV? TEMP92 - TAG195>
TAG193
		    <SET TEMP92 %<> (TYPE FALSE)>
TAG194
		    <SET EMPTY?22 TEMP92>
		    <DEAD TEMP92>
		    <TYPE? EMPTY?22 <TYPE-CODE FALSE> + PHRASE184>
BOOL186
		    <FRAME 'PARSE-OP>
		    <PUSH NXT15>
		    <PUSH OP-INFO16>
		    <CALL 'PARSE-OP 2>
		    <NTHUV OP-INFO16 1 = ARGVEC23 (TYPE VECTOR)>
		    <NTHUV ARGVEC23 1 = TEMP92>
		    <EQUAL? TEMP92 RES10 - PHRASE184>
		    <DEAD TEMP92>
		    <NTHUV ARGVEC23 1 = TEMP92>
		    <NTHUV OP-INFO16 2 = TEMP65>
		    <EQUAL? TEMP92 TEMP65 + BOOL203>
		    <DEAD TEMP92>
		    <FRAME 'WILL-DIE?>
		    <PUSH RES10>
		    <NTHR 'L 2 = TEMP65 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP65 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP65>
		    <CALL 'WILL-DIE? 2 = TEMP65>
		    <TYPE? TEMP65 <TYPE-CODE FALSE> + PHRASE184>
		    <DEAD TEMP65>
		    <TYPE? EMPTY?22 <TYPE-CODE FALSE> + BOOL203>
		    <NTHUV OP-INFO16 4 = TEMP65>
		    <NTHR 'L 2 = ELTYPE120 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR ELTYPE120 1 = ELTYPE120 (RECORD-TYPE LBIND)>
		    <TYPE TEMP65 = TEMP92>
		    <EMPL? ELTYPE120 + TAG205>
		    <LOOP (TEMP65 VALUE) (TEMP92 VALUE) (ELTYPE120 VALUE)>
TAG207
		    <NTHL ELTYPE120 1 = TEMP40>
		    <TYPE? TEMP40 TEMP92 - TAG208>
		    <VEQUAL? TEMP40 TEMP65 + TAG206>
		    <DEAD TEMP40>
TAG208
		    <RESTL ELTYPE120 1 = ELTYPE120 (TYPE LIST)>
		    <EMPL? ELTYPE120 - TAG207>
TAG205
		    <SET ELTYPE120 %<> (TYPE FALSE)>
TAG206
		    <VEQUAL? ELTYPE120 0 + PHRASE184>
		    <FRAME 'WILL-DIE?>
		    <PUSH RES10>
		    <PUSH ELTYPE120>
		    <DEAD ELTYPE120>
		    <CALL 'WILL-DIE? 2 = TEMP92>
		    <TYPE? TEMP92 <TYPE-CODE FALSE> + PHRASE184>
		    <DEAD TEMP92>
BOOL203
		    <NTHR 'L 2 = TEMP92 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP92 1 = ARITH?24 (RECORD-TYPE LBIND)>
		    <DEAD TEMP92>
		    <TYPE? EMPTY?22 <TYPE-CODE FALSE> + PHRASE215>
		    <DEAD EMPTY?22>
		    <FRAME 'FLUSH-TO>
		    <NTHR 'L 2 = TEMP92 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP92 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP92>
		    <GEN-LVAL 'CODPTR = STACK>
		    <CALL 'FLUSH-TO 2>
		    <FRAME 'NTH-LENGTH-COMP-GEN>
		    <PUSH CINS7>
		    <DEAD CINS7>
		    <PUSH STRUC18>
		    <DEAD STRUC18>
		    <PUSH OFF19>
		    <DEAD OFF19>
		    <PUSH STYPE112>
		    <DEAD STYPE112>
		    <PUSH 0>
		    <NTHL NXT15 1 = STACK>
		    <DEAD NXT15>
		    <PUSH OP-INFO16>
		    <DEAD OP-INFO16>
		    <CALL 'NTH-LENGTH-COMP-GEN 7>
		    <SET TEMP40 'CONDITIONAL-BRANCH (TYPE ATOM)>
		    <JUMP + PHRASE345>
PHRASE215
		    <NTHUV OP-INFO16 2 = ADDVAL17>
		    <NTHR 'L 2 = TEMP65 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP65 1 = TEMP65 (RECORD-TYPE LBIND)>
		    <EMPL? TEMP65 + PHRASE224>
		    <RESTL TEMP65 1 = TEMP65 (TYPE LIST)>
		    <EMPL? TEMP65 + PHRASE224>
		    <RESTL TEMP65 1 = TEMP65 (TYPE LIST)>
		    <EMPL? TEMP65 + PHRASE224>
		    <DEAD TEMP65>
		    <FRAME 'GET-NEXT-INST>
		    <NTHR 'L 2 = TEMP65 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP65 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP65>
		    <CALL 'GET-NEXT-INST 1 = NXT15>
		    <TYPE? NXT15 <TYPE-CODE FORM> - PHRASE224>
		    <NTHL NXT15 1 = TEMP65>
		    <SET TEMP40 [LESS?!-MIMOP GRTR?!-MIMOP VEQUAL?!-MIMOP] (TYPE VECTOR)>
		    <TYPE? TEMP65 <TYPE-CODE ATOM> - PHRASE224>
		    <LOOP (TEMP65 VALUE) (TEMP40 LENGTH VALUE)>
TAG232
		    <NTHUV TEMP40 1 = ELTYPE120>
		    <VEQUAL? ELTYPE120 TEMP65 + TAG231>
		    <DEAD ELTYPE120>
		    <RESTUV TEMP40 1 = TEMP40 (TYPE VECTOR)>
		    <EMPUV? TEMP40 - TAG232>
		    <JUMP + PHRASE224>
TAG231
		    <FRAME 'PARSE-OP>
		    <PUSH NXT15>
		    <PUSH OP-INFO16>
		    <CALL 'PARSE-OP 2>
		    <NTHUV OP-INFO16 1 = ARGVEC23 (TYPE VECTOR)>
		    <NTHUV ARGVEC23 1 = TEMP40>
		    <EQUAL? ADDVAL17 TEMP40 - PHRASE237>
		    <DEAD TEMP40>
		    <NTHL NXT15 1 = ELTYPE120>
		    <DEAD NXT15>
		    <NTHUV ARGVEC23 2 = ELTYPE221>
		    <DEAD ARGVEC23>
		    <TYPE? ELTYPE221 <TYPE-CODE FALSE> + PHRASE224>
		    <JUMP + PHRASE241>
PHRASE237
		    <NTHUV ARGVEC23 2 = TEMP40>
		    <EQUAL? TEMP40 ADDVAL17 - PHRASE224>
		    <DEAD TEMP40>
		    <NTHUV ARGVEC23 1 = ELTYPE221>
		    <DEAD ARGVEC23>
		    <NTHL NXT15 1 = ELTYPE120>
		    <DEAD NXT15>
		    <EQUAL? ELTYPE120 'LESS?!-MIMOP - PHRASE240>
		    <SET ELTYPE120 'GRTR?!-MIMOP (TYPE ATOM)>
		    <JUMP + PHRASE241>
PHRASE240
		    <EQUAL? ELTYPE120 'GRTR?!-MIMOP - PHRASE241>
		    <SET ELTYPE120 'LESS?!-MIMOP (TYPE ATOM)>
PHRASE241
		    <FRAME 'WILL-DIE?>
		    <PUSH ADDVAL17>
		    <NTHR 'L 2 = TEMP40 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP40 1 = TEMP40 (RECORD-TYPE LBIND)>
		    <RESTL TEMP40 1 = STACK (TYPE LIST)>
		    <DEAD TEMP40>
		    <CALL 'WILL-DIE? 2 = TEMP40>
		    <TYPE? TEMP40 <TYPE-CODE FALSE> + PHRASE224>
		    <DEAD TEMP40>
		    <FRAME 'FLUSH-TO>
		    <NTHR 'L 2 = TEMP40 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR TEMP40 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD TEMP40>
		    <GEN-LVAL 'CODPTR = STACK>
		    <CALL 'FLUSH-TO 2>
		    <FRAME 'NTH-LENGTH-COMP-GEN>
		    <PUSH CINS7>
		    <DEAD CINS7>
		    <PUSH STRUC18>
		    <DEAD STRUC18>
		    <PUSH OFF19>
		    <DEAD OFF19>
		    <PUSH STYPE112>
		    <DEAD STYPE112>
		    <PUSH ELTYPE221>
		    <DEAD ELTYPE221>
		    <PUSH ELTYPE120>
		    <DEAD ELTYPE120>
		    <PUSH OP-INFO16>
		    <DEAD OP-INFO16>
		    <CALL 'NTH-LENGTH-COMP-GEN 7>
		    <SET TEMP40 'CONDITIONAL-BRANCH (TYPE ATOM)>
		    <JUMP + PHRASE345>
PHRASE224
		    <FRAME 'FLUSH-TO>
		    <PUSH ARITH?24>
		    <DEAD ARITH?24>
		    <GEN-LVAL 'CODPTR = STACK>
		    <CALL 'FLUSH-TO 2>
		    <FRAME 'NTH-LENGTH-GEN>
		    <PUSH CINS7>
		    <DEAD CINS7>
		    <PUSH STRUC18>
		    <DEAD STRUC18>
		    <PUSH OFF19>
		    <DEAD OFF19>
		    <PUSH STYPE112>
		    <DEAD STYPE112>
		    <PUSH ADDVAL17>
		    <DEAD ADDVAL17>
		    <CALL 'NTH-LENGTH-GEN 5>
		    <SET TEMP40 'NORMAL (TYPE ATOM)>
		    <JUMP + PHRASE345>
PHRASE184
		    <NTHL NXT15 1 = TEMP40>
		    <EQUAL? TEMP40 'ILDB!-MIMOP + BOOL258>
		    <GVAL 'NTHU = ELTYPE120>
		    <TYPE? TEMP40 <TYPE-CODE ATOM> - TAG259>
		    <EMPUV? ELTYPE120 + TAG259>
		    <LOOP (TEMP40 VALUE) (ELTYPE120 LENGTH VALUE)>
TAG260
		    <NTHUV ELTYPE120 1 = ADDVAL17>
		    <VEQUAL? ADDVAL17 TEMP40 + BOOL258>
		    <DEAD ADDVAL17>
		    <RESTUV ELTYPE120 1 = ELTYPE120 (TYPE VECTOR)>
		    <EMPUV? ELTYPE120 - TAG260>
TAG259
		    <EQUAL? TEMP40 'NTHL!-MIMOP - PHRASE256>
BOOL258
		    <NTHR 'L 2 = ADDVAL17 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR ADDVAL17 1 = ADDVAL17 (RECORD-TYPE LBIND)>
		    <RESTL ADDVAL17 1 = ELTYPE120 (TYPE LIST)>
		    <DEAD ADDVAL17>
		    <EMPL? ELTYPE120 + PHRASE256 (TYPE LIST)>
		    <DEAD ELTYPE120>
		    <FRAME 'PARSE-OP>
		    <PUSH NXT15>
		    <PUSH OP-INFO16>
		    <CALL 'PARSE-OP 2>
		    <EQUAL? TEMP40 'ILDB!-MIMOP - PHRASE267>
		    <FRAME 'PARSE-HINT>
		    <NTHUV OP-INFO16 3 = STACK>
		    <PUSH 'STRUCTURE-TYPE>
		    <CALL 'PARSE-HINT 2 = STYPE234>
		    <TYPE? STYPE234 <TYPE-CODE FALSE> + PHRASE256>
		    <JUMP + COND266>
PHRASE267
		    <EQUAL? TEMP40 'NTHL!-MIMOP - PHRASE269>
		    <SET STYPE234 'LIST (TYPE ATOM)>
		    <JUMP + COND266>
PHRASE269
		    <FRAME 'NTH>
		    <FRAME 'MEMBER>
		    <NTHR TEMP40 3 = ELTYPE120 (RECORD-TYPE ATOM)>
		    <DEAD TEMP40>
		    <RESTUS ELTYPE120 3 = STACK (TYPE STRING)>
		    <DEAD ELTYPE120>
		    <PUSH ["UV" VECTOR "UU" UVECTOR "US" STRING "UB" BYTES]>
		    <CALL 'MEMBER 2 = STACK>
		    <PUSH 2>
		    <CALL 'NTH 2 = STYPE234>
		    <TYPE? STYPE234 <TYPE-CODE FALSE> + PHRASE256>
COND266
		    <NTHUV OP-INFO16 1 = ARGVEC23 (TYPE VECTOR)>
		    <NTHUV ARGVEC23 1 = STRUC218>
		    <TYPE? STRUC218 <TYPE-CODE FALSE> + PHRASE256>
		    <EQUAL? STYPE112 STYPE234 + TAG284>
		    <SET ELTYPE120 [VECTOR UVECTOR LIST] (TYPE VECTOR)>
		    <TYPE? STYPE112 <TYPE-CODE ATOM> - TAG277>
		    <LOOP (STYPE112 VALUE) (ELTYPE120 LENGTH VALUE)>
TAG275
		    <NTHUV ELTYPE120 1 = ADDVAL17>
		    <VEQUAL? ADDVAL17 STYPE112 + TAG274>
		    <DEAD ADDVAL17>
		    <RESTUV ELTYPE120 1 = ELTYPE120 (TYPE VECTOR)>
		    <EMPUV? ELTYPE120 - TAG275>
		    <JUMP + TAG277>
TAG274
		    <SET ELTYPE120 [VECTOR UVECTOR LIST] (TYPE VECTOR)>
		    <TYPE? STYPE234 <TYPE-CODE ATOM> - TAG277>
		    <LOOP (STYPE234 VALUE) (ELTYPE120 LENGTH VALUE)>
TAG278
		    <NTHUV ELTYPE120 1 = ADDVAL17>
		    <VEQUAL? ADDVAL17 STYPE234 + TAG284>
		    <DEAD ADDVAL17>
		    <RESTUV ELTYPE120 1 = ELTYPE120 (TYPE VECTOR)>
		    <EMPUV? ELTYPE120 - TAG278>
TAG277
		    <SET ELTYPE120 [STRING BYTES] (TYPE VECTOR)>
		    <TYPE? STYPE112 <TYPE-CODE ATOM> - PHRASE256>
		    <LOOP (STYPE112 VALUE) (ELTYPE120 LENGTH VALUE)>
TAG282
		    <NTHUV ELTYPE120 1 = ADDVAL17>
		    <VEQUAL? ADDVAL17 STYPE112 + TAG281>
		    <DEAD ADDVAL17>
		    <RESTUV ELTYPE120 1 = ELTYPE120 (TYPE VECTOR)>
		    <EMPUV? ELTYPE120 - TAG282>
		    <JUMP + PHRASE256>
TAG281
		    <SET ELTYPE120 [STRING BYTES] (TYPE VECTOR)>
		    <TYPE? STYPE234 <TYPE-CODE ATOM> - PHRASE256>
		    <LOOP (STYPE234 VALUE) (ELTYPE120 LENGTH VALUE)>
TAG285
		    <NTHUV ELTYPE120 1 = ADDVAL17>
		    <VEQUAL? ADDVAL17 STYPE234 + TAG284>
		    <DEAD ADDVAL17>
		    <RESTUV ELTYPE120 1 = ELTYPE120 (TYPE VECTOR)>
		    <EMPUV? ELTYPE120 - TAG285>
		    <JUMP + PHRASE256>
TAG284
		    <NTHUV ARGVEC23 2 = OFF219>
		    <TYPE? OFF219 <TYPE-CODE FALSE> + PHRASE256>
		    <NTHUV OP-INFO16 2 = TEMP40>
		    <FRAME 'WILL-DIE?>
		    <PUSH TEMP40>
		    <NTHR 'L 2 = ELTYPE120 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR ELTYPE120 1 = ELTYPE120 (RECORD-TYPE LBIND)>
		    <RESTL ELTYPE120 1 = STACK (TYPE LIST)>
		    <DEAD ELTYPE120>
		    <CALL 'WILL-DIE? 2 = ELTYPE120>
		    <TYPE? ELTYPE120 <TYPE-CODE FALSE> + PHRASE256>
		    <DEAD ELTYPE120>
		    <FRAME 'GET-NEXT-INST>
		    <NTHR 'L 2 = ELTYPE120 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR ELTYPE120 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD ELTYPE120>
		    <CALL 'GET-NEXT-INST 1 = NXT15>
		    <TYPE? NXT15 <TYPE-CODE FORM> - PHRASE256>
		    <NTHL NXT15 1 = ELTYPE120>
		    <SET ADDVAL17 [LESS?!-MIMOP GRTR?!-MIMOP VEQUAL?!-MIMOP] (TYPE VECTOR)>
		    <TYPE? ELTYPE120 <TYPE-CODE ATOM> - PHRASE256>
		    <LOOP (ELTYPE120 VALUE) (ADDVAL17 LENGTH VALUE)>
TAG294
		    <NTHUV ADDVAL17 1 = ELTYPE221>
		    <VEQUAL? ELTYPE221 ELTYPE120 + TAG293>
		    <DEAD ELTYPE221>
		    <RESTUV ADDVAL17 1 = ADDVAL17 (TYPE VECTOR)>
		    <EMPUV? ADDVAL17 - TAG294>
		    <JUMP + PHRASE256>
TAG293
		    <SET ADDVAL17 NXT15>
		    <TYPE RES10 = ELTYPE120>
		    <LOOP (RES10 VALUE) (ELTYPE120 VALUE) (ADDVAL17 VALUE)>
TAG299
		    <NTHL ADDVAL17 1 = ELTYPE221>
		    <TYPE? ELTYPE221 ELTYPE120 - TAG300>
		    <VEQUAL? ELTYPE221 RES10 + TAG301>
		    <DEAD ELTYPE221>
TAG300
		    <RESTL ADDVAL17 1 = ADDVAL17 (TYPE LIST)>
		    <EMPL? ADDVAL17 - TAG299>
		    <SET ADDVAL17 NXT15>
		    <TYPE TEMP40 = ELTYPE120>
		    <LOOP (TEMP40 VALUE) (ELTYPE120 VALUE) (ADDVAL17 VALUE)>
TAG302
		    <NTHL ADDVAL17 1 = ELTYPE221>
		    <TYPE? ELTYPE221 ELTYPE120 - TAG303>
		    <VEQUAL? ELTYPE221 TEMP40 + TAG301>
		    <DEAD ELTYPE221>
TAG303
		    <RESTL ADDVAL17 1 = ADDVAL17 (TYPE LIST)>
		    <EMPL? ADDVAL17 - TAG302>
		    <JUMP + PHRASE256>
TAG301
		    <FRAME 'PARSE-OP>
		    <PUSH NXT15>
		    <PUSH OP-INFO16>
		    <CALL 'PARSE-OP 2>
		    <NTHUV OP-INFO16 4 = ADDVAL17>
		    <NTHR 'L 2 = ELTYPE120 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR ELTYPE120 1 = ELTYPE120 (RECORD-TYPE LBIND)>
		    <TYPE ADDVAL17 = ELTYPE221>
		    <EMPL? ELTYPE120 + TAG308>
		    <LOOP (ADDVAL17 VALUE) (ELTYPE221 VALUE) (ELTYPE120 VALUE)>
TAG310
		    <NTHL ELTYPE120 1 = EMPTY?22>
		    <TYPE? EMPTY?22 ELTYPE221 - TAG311>
		    <VEQUAL? EMPTY?22 ADDVAL17 + TAG309>
		    <DEAD EMPTY?22>
TAG311
		    <RESTL ELTYPE120 1 = ELTYPE120 (TYPE LIST)>
		    <EMPL? ELTYPE120 - TAG310>
TAG308
		    <SET ELTYPE120 %<> (TYPE FALSE)>
		    <JUMP + TAG315>
TAG309
TAG315
		    <VEQUAL? ELTYPE120 0 + BOOL307>
		    <FRAME 'WILL-DIE?>
		    <PUSH TEMP40>
		    <PUSH ELTYPE120>
		    <DEAD ELTYPE120>
		    <CALL 'WILL-DIE? 2 = ELTYPE120>
		    <TYPE? ELTYPE120 <TYPE-CODE FALSE> - PHRASE306>
		    <DEAD ELTYPE120>
BOOL307
		    <SET TEMP40 %<> (TYPE FALSE)>
		    <JUMP + RETURN2>
PHRASE306
		    <FRAME 'FLUSH-TO>
		    <NTHR 'L 2 = ELTYPE120 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR ELTYPE120 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD ELTYPE120>
		    <GEN-LVAL 'CODPTR = STACK>
		    <CALL 'FLUSH-TO 2>
		    <FRAME 'SLOT-COMPARE>
		    <NTHUV ARGVEC23 1 = ELTYPE221>
		    <EQUAL? ELTYPE221 RES10 - PHRASE324>
		    <DEAD ELTYPE221>
		    <SET RES1?31 1 (TYPE FIX)>
		    <SET ELTYPE221 STRUC18>
		    <JUMP + COND323>
PHRASE324
		    <NTHUV ARGVEC23 1 = ADDVAL17>
		    <EQUAL? ADDVAL17 TEMP40 - PHRASE325>
		    <DEAD ADDVAL17>
		    <SET RES2?32 1 (TYPE FIX)>
		    <SET ELTYPE221 STRUC218>
		    <JUMP + COND323>
PHRASE325
		    <NTHUV ARGVEC23 1 = ELTYPE221>
COND323
		    <PUSH ELTYPE221>
		    <DEAD ELTYPE221>
		    <NTHUV ARGVEC23 2 = ELTYPE221>
		    <EQUAL? ELTYPE221 RES10 - PHRASE327>
		    <DEAD ELTYPE221 RES10>
		    <SET RES1?31 2 (TYPE FIX)>
		    <SET ELTYPE221 STRUC18>
		    <DEAD STRUC18>
		    <JUMP + COND326>
PHRASE327
		    <NTHUV ARGVEC23 2 = ADDVAL17>
		    <EQUAL? ADDVAL17 TEMP40 - PHRASE328>
		    <DEAD ADDVAL17 TEMP40>
		    <SET RES2?32 2 (TYPE FIX)>
		    <SET ELTYPE221 STRUC218>
		    <DEAD STRUC218>
		    <JUMP + COND326>
PHRASE328
		    <NTHUV ARGVEC23 2 = ELTYPE221>
		    <DEAD ARGVEC23>
COND326
		    <PUSH ELTYPE221>
		    <DEAD ELTYPE221>
		    <NTHL NXT15 1 = STACK>
		    <DEAD NXT15>
		    <PUSH OP-INFO16>
		    <DEAD OP-INFO16>
		    <EQUAL? RES1?31 1 - PHRASE330>
		    <SET ELTYPE221 OFF19>
		    <JUMP + PHRASE331>
PHRASE330
		    <EQUAL? RES2?32 1 + TAG332>
		    <SET ELTYPE221 %<> (TYPE FALSE)>
		    <JUMP + PHRASE331>
TAG332
		    <SET ELTYPE221 OFF219>
PHRASE331
		    <PUSH ELTYPE221>
		    <DEAD ELTYPE221>
		    <EQUAL? RES1?31 1 - PHRASE334>
		    <SET ELTYPE221 STYPE112>
		    <JUMP + PHRASE335>
PHRASE334
		    <EQUAL? RES2?32 1 + TAG336>
		    <SET ELTYPE221 %<> (TYPE FALSE)>
		    <JUMP + PHRASE335>
TAG336
		    <SET ELTYPE221 STYPE234>
PHRASE335
		    <PUSH ELTYPE221>
		    <DEAD ELTYPE221>
		    <EQUAL? RES1?31 2 - PHRASE338>
		    <SET ELTYPE221 OFF19>
		    <DEAD OFF19>
		    <JUMP + PHRASE339>
PHRASE338
		    <EQUAL? RES2?32 2 + TAG340>
		    <SET ELTYPE221 %<> (TYPE FALSE)>
		    <JUMP + PHRASE339>
TAG340
		    <SET ELTYPE221 OFF219>
		    <DEAD OFF219>
PHRASE339
		    <PUSH ELTYPE221>
		    <DEAD ELTYPE221>
		    <EQUAL? RES1?31 2 - PHRASE342>
		    <DEAD RES1?31>
		    <SET ELTYPE221 STYPE112>
		    <DEAD STYPE112>
		    <JUMP + PHRASE343>
PHRASE342
		    <EQUAL? RES2?32 2 + TAG344>
		    <DEAD RES2?32>
		    <SET ELTYPE221 %<> (TYPE FALSE)>
		    <JUMP + PHRASE343>
TAG344
		    <SET ELTYPE221 STYPE234>
		    <DEAD STYPE234>
PHRASE343
		    <PUSH ELTYPE221>
		    <DEAD ELTYPE221>
		    <CALL 'SLOT-COMPARE 8>
		    <SET TEMP40 'CONDITIONAL-BRANCH (TYPE ATOM)>
		    <JUMP + PHRASE345>
PHRASE256
		    <NTH1 NXT15 = ELTYPE221>
		    <SET TEMP40 [GRTR?!-MIMOP LESS?!-MIMOP VEQUAL?!-MIMOP] (TYPE VECTOR)>
		    <TYPE? ELTYPE221 <TYPE-CODE ATOM> - TAG347>
		    <LOOP (ELTYPE221 VALUE) (TEMP40 LENGTH VALUE)>
TAG349
		    <NTHUV TEMP40 1 = ADDVAL17>
		    <VEQUAL? ADDVAL17 ELTYPE221 + TAG348>
		    <DEAD ADDVAL17>
		    <RESTUV TEMP40 1 = TEMP40 (TYPE VECTOR)>
		    <EMPUV? TEMP40 - TAG349>
TAG347
		    <SET TEMP40 %<> (TYPE FALSE)>
		    <JUMP + PHRASE345>
TAG348
		    <FRAME 'PARSE-OP>
		    <PUSH NXT15>
		    <PUSH OP-INFO16>
		    <CALL 'PARSE-OP 2>
		    <NTHUV ARGVEC23 1 = ELTYPE221>
		    <EQUAL? ELTYPE221 RES10 + TAG353>
		    <DEAD ELTYPE221>
		    <NTHUV ARGVEC23 2 = ELTYPE221>
		    <EQUAL? ELTYPE221 RES10 + TAG353>
		    <DEAD ELTYPE221>
		    <SET TEMP40 %<> (TYPE FALSE)>
		    <JUMP + PHRASE345>
TAG353
		    <FRAME 'WILL-DIE?>
		    <PUSH RES10>
		    <NTHR 'L 2 = ELTYPE221 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR ELTYPE221 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD ELTYPE221>
		    <CALL 'WILL-DIE? 2 = TEMP40>
		    <TYPE? TEMP40 <TYPE-CODE FALSE> + PHRASE345>
		    <NTHUV OP-INFO16 4 = ELTYPE221>
		    <NTHR 'L 2 = ADDVAL17 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR ADDVAL17 1 = ADDVAL17 (RECORD-TYPE LBIND)>
		    <TYPE ELTYPE221 = EMPTY?22>
		    <EMPL? ADDVAL17 + TAG358>
		    <LOOP (ELTYPE221 VALUE) (EMPTY?22 VALUE) (ADDVAL17 VALUE)>
TAG360
		    <NTHL ADDVAL17 1 = TEMP40>
		    <TYPE? TEMP40 EMPTY?22 - TAG361>
		    <VEQUAL? TEMP40 ELTYPE221 + TAG359>
		    <DEAD TEMP40>
TAG361
		    <RESTL ADDVAL17 1 = ADDVAL17 (TYPE LIST)>
		    <EMPL? ADDVAL17 - TAG360>
TAG358
		    <SET ELTYPE120 %<> (TYPE FALSE)>
		    <JUMP + TAG365>
TAG359
		    <SET ELTYPE120 ADDVAL17>
		    <DEAD ADDVAL17>
TAG365
		    <SET TEMP40 ELTYPE120>
		    <VEQUAL? TEMP40 0 + PHRASE345>
		    <FRAME 'WILL-DIE?>
		    <PUSH RES10>
		    <PUSH ELTYPE120>
		    <DEAD ELTYPE120>
		    <CALL 'WILL-DIE? 2 = TEMP40>
		    <TYPE? TEMP40 <TYPE-CODE FALSE> + PHRASE345>
		    <NTHUV ARGVEC23 1 = ADDVAL17>
		    <EQUAL? ADDVAL17 RES10 - PHRASE368>
		    <DEAD ADDVAL17>
		    <SET RES1?31 'T (TYPE ATOM)>
		    <JUMP + PHRASE369>
PHRASE368
		    <NTHUV ARGVEC23 2 = ADDVAL17>
		    <EQUAL? ADDVAL17 RES10 - PHRASE369>
		    <DEAD ADDVAL17 RES10>
		    <SET RES2?32 'T (TYPE ATOM)>
PHRASE369
		    <FRAME 'FLUSH-TO>
		    <NTHR 'L 2 = ADDVAL17 (RECORD-TYPE ATOM) (TYPE LBIND)>
		    <NTHR ADDVAL17 1 = STACK (RECORD-TYPE LBIND)>
		    <DEAD ADDVAL17>
		    <GEN-LVAL 'CODPTR = STACK>
		    <CALL 'FLUSH-TO 2>
		    <FRAME 'SLOT-COMPARE>
		    <VEQUAL? RES1?31 0 + PHRASE377>
		    <SET EMPTY?22 STRUC18>
		    <JUMP + COND376>
PHRASE377
		    <NTHUV ARGVEC23 1 = EMPTY?22>
COND376
		    <PUSH EMPTY?22>
		    <DEAD EMPTY?22>
		    <VEQUAL? RES2?32 0 + PHRASE379>
		    <SET EMPTY?22 STRUC18>
		    <DEAD STRUC18>
		    <JUMP + COND378>
PHRASE379
		    <NTHUV ARGVEC23 2 = EMPTY?22>
		    <DEAD ARGVEC23>
COND378
		    <PUSH EMPTY?22>
		    <DEAD EMPTY?22>
		    <NTHL NXT15 1 = STACK>
		    <DEAD NXT15>
		    <PUSH OP-INFO16>
		    <DEAD OP-INFO16>
		    <SET EMPTY?22 RES1?31>
		    <VEQUAL? EMPTY?22 0 + PHRASE381>
		    <SET EMPTY?22 OFF19>
PHRASE381
		    <PUSH EMPTY?22>
		    <DEAD EMPTY?22>
		    <SET EMPTY?22 RES1?31>
		    <DEAD RES1?31>
		    <VEQUAL? EMPTY?22 0 + PHRASE383>
		    <SET EMPTY?22 STYPE112>
PHRASE383
		    <PUSH EMPTY?22>
		    <DEAD EMPTY?22>
		    <SET EMPTY?22 RES2?32>
		    <VEQUAL? EMPTY?22 0 + PHRASE385>
		    <SET EMPTY?22 OFF19>
		    <DEAD OFF19>
PHRASE385
		    <PUSH EMPTY?22>
		    <DEAD EMPTY?22>
		    <SET EMPTY?22 RES2?32>
		    <DEAD RES2?32>
		    <VEQUAL? EMPTY?22 0 + PHRASE387>
		    <SET EMPTY?22 STYPE112>
		    <DEAD STYPE112>
PHRASE387
		    <PUSH EMPTY?22>
		    <DEAD EMPTY?22>
		    <CALL 'SLOT-COMPARE 8>
		    <SET TEMP40 'CONDITIONAL-BRANCH (TYPE ATOM)>
PHRASE345
RETURN2
		    <UNBIND TEMP3>
		    <DEAD TEMP3>
		    <ADJ -9>
		    <RETURN TEMP40>
		    <DEAD TEMP40>
		    <END NTH-LOOK-AHEAD>

#WORD *26755014622*
		    <GFCN FLUSH-TO ("VALUE" FIX LIST LIST) NL4 OL5>
		    <TEMP TEMP6:FIX TEMP7:FIX>
		    <INTGO>
		    <LENL OL5 = TEMP6 (TYPE FIX)>
		    <DEAD OL5>
		    <LENL NL4 = TEMP7 (TYPE FIX)>
		    <DEAD NL4>
		    <SUB TEMP6 TEMP7 = TEMP6 (TYPE FIX)>
		    <DEAD TEMP7>
		    <SETG 'FLUSH-NEXT TEMP6>
		    <RETURN TEMP6>
		    <DEAD TEMP6>
		    <END FLUSH-TO>

#WORD *21313102610*
		    <GFCN GET-NEXT-INST ("VALUE" ANY LIST) LL4>
		    <TEMP FROB8 TEMP13>
		    <INTGO>
		    <LOOP>
AGAIN9
		    <INTGO>
		    <FRAME 'GETPROP>
		    <NTHL LL4 1 = FROB8>
		    <PUSH FROB8>
		    <PUSH 'DONE>
		    <CALL 'GETPROP 2 = TEMP13>
		    <TYPE? TEMP13 <TYPE-CODE FALSE> - PHRASE11>
		    <DEAD TEMP13>
		    <RESTL LL4 1 = TEMP13 (TYPE LIST)>
		    <DEAD LL4>
		    <GEN-SET 'L TEMP13>
		    <DEAD TEMP13>
		    <RETURN FROB8>
		    <DEAD FROB8>
PHRASE11
		    <RESTL LL4 1 = LL4 (TYPE LIST)>
		    <EMPL? LL4 - AGAIN9 (TYPE LIST)>
		    <RETURN %<>>
		    <END GET-NEXT-INST>

#WORD *6217733304*
		    <GFCN PARSE-OP ("VALUE" OP-INFO FORM OP-INFO) FRM4 OP-INFO5>
		    <TEMP ARGVEC6:VECTOR (RES?7 %<>) (BRANCH?9 %<>) TEMP21:LIST X22 TEMP35>
		    <INTGO>
		    <NTHUV OP-INFO5 1 = ARGVEC6 (TYPE VECTOR)>
		    <PUTUV OP-INFO5 3 %<>>
		    <PUTUV OP-INFO5 4 %<>>
		    <PUTUV OP-INFO5 2 'T>
		    <RESTL FRM4 1 = TEMP21 (TYPE LIST)>
		    <DEAD FRM4>
		    <CHTYPE TEMP21 <TYPE-CODE LIST> = TEMP21>
		    <LOOP>
MAP11
		    <INTGO>
		    <EMPL? TEMP21 + MAPAP14>
		    <NTHL TEMP21 1 = X22>
		    <TYPE? X22 <TYPE-CODE LIST> - BOOL25>
		    <EMPL? X22 - PHRASE24 (TYPE LIST)>
BOOL25
		    <VEQUAL? RES?7 0 + PHRASE27>
		    <SET RES?7 %<> (TYPE FALSE)>
		    <PUTUV OP-INFO5 2 X22>
		    <DEAD X22>
		    <JUMP + PHRASE37>
PHRASE27
		    <VEQUAL? BRANCH?9 0 + PHRASE28>
		    <SET BRANCH?9 %<> (TYPE FALSE)>
		    <PUTUV OP-INFO5 4 X22>
		    <DEAD X22>
		    <JUMP + PHRASE37>
PHRASE28
		    <EQUAL? X22 '- + BOOL30>
		    <EQUAL? X22 '+ - PHRASE29>
BOOL30
		    <PUTUV OP-INFO5 5 X22>
		    <DEAD X22>
		    <SET BRANCH?9 'T (TYPE ATOM)>
		    <JUMP + PHRASE37>
PHRASE29
		    <TYPE? X22 <TYPE-CODE RES-IND> - PHRASE31>
		    <SET RES?7 'T (TYPE ATOM)>
		    <JUMP + PHRASE37>
PHRASE31
		    <EMPUV? ARGVEC6 + PHRASE37 (TYPE VECTOR)>
		    <PUTUV ARGVEC6 1 X22>
		    <DEAD X22>
		    <RESTUV ARGVEC6 1 = ARGVEC6 (TYPE VECTOR)>
		    <JUMP + PHRASE37>
PHRASE24
		    <NTHL X22 1 = TEMP35>
		    <EQUAL? TEMP35 'TYPE + BOOL34>
		    <DEAD TEMP35>
		    <NTHL X22 1 = TEMP35>
		    <EQUAL? TEMP35 'STRUCTURE-TYPE - PHRASE33>
		    <DEAD TEMP35>
BOOL34
		    <PUTUV OP-INFO5 3 X22>
		    <DEAD X22>
		    <JUMP + PHRASE37>
PHRASE33
		    <NTHL X22 1 = TEMP35>
		    <EQUAL? TEMP35 'BRANCH-FALSE - PHRASE36>
		    <DEAD TEMP35>
		    <RESTL X22 1 = TEMP35 (TYPE LIST)>
		    <DEAD X22>
		    <NTHL TEMP35 1 = TEMP35>
		    <PUTUV OP-INFO5 4 TEMP35>
		    <DEAD TEMP35>
		    <PUTUV OP-INFO5 5 '- (TYPE ATOM)>
		    <JUMP + PHRASE37>
PHRASE36
		    <NTHL X22 1 = TEMP35>
		    <EQUAL? TEMP35 'BRANCH-TRUE - PHRASE37>
		    <DEAD TEMP35>
		    <RESTL X22 1 = TEMP35 (TYPE LIST)>
		    <DEAD X22>
		    <NTHL TEMP35 1 = TEMP35>
		    <PUTUV OP-INFO5 4 TEMP35>
		    <DEAD TEMP35>
		    <PUTUV OP-INFO5 5 '+ (TYPE ATOM)>
PHRASE37
		    <RESTL TEMP21 1 = TEMP21 (TYPE LIST)>
		    <JUMP + MAP11>
MAPAP14
		    <RETURN OP-INFO5>
		    <DEAD OP-INFO5>
		    <END PARSE-OP>

#WORD *15432537321*
		    <GFCN WILL-DIE? ("VALUE" <OR ATOM FALSE> ANY "OPTIONAL" LIST ATOM) ARG7 MIML8 BEG-LABEL9>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5 OPT6>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <PUSH 'T>
OPT6
		    <TEMP TEMP17 TEMP25 TEMP27:FIX ITM33 NXT32 XP104 X105 LABEL13>
		    <INTGO>
		    <TYPE? MIML8 <TYPE-CODE UNBOUND> - TAG15>
		    <GEN-LVAL 'CODPTR = MIML8>
TAG15
		    <GEN-LVAL 'CODPTR = TEMP17>
		    <EQUAL? TEMP17 MIML8 - PHRASE23>
		    <GVAL 'FLUSH-NEXT = TEMP17>
		    <JUMP + COND22>
PHRASE23
		    <GVAL 'FLUSH-NEXT = TEMP25>
		    <FRAME 'LENGTH>
		    <PUSH TEMP17>
		    <DEAD TEMP17>
		    <CALL 'LENGTH 1 = TEMP27>
		    <LENL MIML8 = TEMP17 (TYPE FIX)>
		    <SUB TEMP27 TEMP17 = TEMP27 (TYPE FIX)>
		    <DEAD TEMP17>
		    <SUB TEMP25 TEMP27 = TEMP17 (TYPE FIX)>
		    <DEAD TEMP25 TEMP27>
COND22
		    <SET TEMP27 TEMP17>
		    <DEAD TEMP17>
		    <GVAL 'LOOKAHEAD? = TEMP17>
		    <TYPE? TEMP17 <TYPE-CODE FALSE> + EXIT31>
		    <LOOP>
AGAIN36
		    <INTGO>
		    <EMPL? MIML8 - PHRASE38 (TYPE LIST)>
		    <RETURN 'T>
PHRASE38
		    <EMPL? MIML8 + TAG41>
		    <RESTL MIML8 1 = TEMP25 (TYPE LIST)>
		    <EMPL? TEMP25 - PHRASE53>
		    <DEAD TEMP25>
TAG41
		    <NTHL MIML8 1 = ITM33>
		    <TYPE? ITM33 <TYPE-CODE FORM> - TAG47>
		    <NTHL ITM33 1 = TEMP25>
		    <EQUAL? TEMP25 'JUMP!-MIMOP + PHRASE53>
		    <DEAD TEMP25>
		    <SET TEMP25 ITM33>
		    <LOOP (TEMP25 VALUE)>
TAG45
		    <NTHL TEMP25 1 = TEMP17>
		    <TYPE? TEMP17 <TYPE-CODE ATOM> - TAG46>
		    <VEQUAL? TEMP17 '+ + PHRASE53>
		    <DEAD TEMP17>
TAG46
		    <RESTL TEMP25 1 = TEMP25 (TYPE LIST)>
		    <EMPL? TEMP25 - TAG45>
		    <SET TEMP25 ITM33>
		    <LOOP (TEMP25 VALUE)>
TAG48
		    <NTHL TEMP25 1 = TEMP17>
		    <TYPE? TEMP17 <TYPE-CODE ATOM> - TAG49>
		    <VEQUAL? TEMP17 '- + PHRASE53>
		    <DEAD TEMP17>
TAG49
		    <RESTL TEMP25 1 = TEMP25 (TYPE LIST)>
		    <EMPL? TEMP25 - TAG48>
TAG47
		    <TYPE? ITM33 <TYPE-CODE FORM> - PHRASE51>
		    <NTHL ITM33 1 = TEMP25>
		    <EQUAL? TEMP25 'RETURN!-MIMOP - PHRASE51>
		    <DEAD TEMP25>
		    <RESTL ITM33 1 = TEMP25 (TYPE LIST)>
		    <DEAD ITM33>
		    <NTHL TEMP25 1 = TEMP25>
		    <EQUAL? TEMP25 ARG7 - PHRASE51>
		    <DEAD TEMP25>
		    <RETURN %<>>
PHRASE51
		    <RETURN 'T>
PHRASE53
		    <NTHL MIML8 1 = NXT32>
		    <TYPE? NXT32 <TYPE-CODE ATOM> - PHRASE68>
		    <FRAME 'GET-LREF>
		    <PUSH NXT32>
		    <PUSH 'T>
		    <CALL 'GET-LREF 2 = ITM33>
		    <NTHUV ITM33 7 = TEMP25 (TYPE LIST)>
		    <TYPE? ARG7 <TYPE-CODE VARTBL> - PHRASE57>
		    <EMPL? TEMP25 + PHRASE57>
		    <LOOP (ARG7 VALUE) (TEMP25 VALUE)>
TAG59
		    <NTHL TEMP25 1 = TEMP17>
		    <VEQUAL? TEMP17 ARG7 + TAG58>
		    <DEAD TEMP17>
		    <RESTL TEMP25 1 = TEMP25 (TYPE LIST)>
		    <EMPL? TEMP25 - TAG59>
		    <JUMP + PHRASE57>
TAG58
		    <RETURN %<>>
PHRASE57
		    <NTHUV ITM33 8 = TEMP25 (TYPE LIST)>
		    <TYPE? ARG7 <TYPE-CODE VARTBL> - PHRASE61>
		    <EMPL? TEMP25 + PHRASE61>
		    <LOOP (ARG7 VALUE) (TEMP25 VALUE)>
TAG63
		    <NTHL TEMP25 1 = TEMP17>
		    <VEQUAL? TEMP17 ARG7 + TAG62>
		    <DEAD TEMP17>
		    <RESTL TEMP25 1 = TEMP25 (TYPE LIST)>
		    <EMPL? TEMP25 - TAG63>
		    <JUMP + PHRASE61>
TAG62
		    <RETURN 'T>
PHRASE61
		    <FRAME 'WILL-DIE?>
		    <PUSH ARG7>
		    <RESTL MIML8 1 = STACK (TYPE LIST)>
		    <DEAD MIML8>
		    <PUSH NXT32>
		    <DEAD NXT32>
		    <CALL 'WILL-DIE? 3 = TEMP25>
		    <TYPE? TEMP25 <TYPE-CODE FALSE> + PHRASE66>
		    <DEAD TEMP25>
		    <NTHUV ITM33 8 = TEMP25 (TYPE LIST)>
		    <CONS ARG7 TEMP25 = TEMP25>
		    <DEAD ARG7>
		    <PUTUV ITM33 8 TEMP25 (TYPE LIST)>
		    <DEAD ITM33 TEMP25>
		    <RETURN 'T>
PHRASE66
		    <NTHUV ITM33 7 = TEMP25 (TYPE LIST)>
		    <CONS ARG7 TEMP25 = TEMP25>
		    <DEAD ARG7>
		    <PUTUV ITM33 7 TEMP25 (TYPE LIST)>
		    <DEAD ITM33 TEMP25>
		    <RETURN %<>>
PHRASE68
		    <TYPE? NXT32 <TYPE-CODE FORM> - PHRASE188>
		    <SUB TEMP27 1 = TEMP27 (TYPE FIX)>
		    <LESS? TEMP27 0 - PHRASE188 (TYPE FIX)>
		    <FRAME 'GETPROP>
		    <PUSH NXT32>
		    <PUSH 'DONE>
		    <CALL 'GETPROP 2 = TEMP25>
		    <TYPE? TEMP25 <TYPE-CODE FALSE> - PHRASE188>
		    <DEAD TEMP25>
		    <NTHL NXT32 1 = ITM33>
		    <EQUAL? ITM33 'DEAD!-MIMOP - PHRASE75>
		    <RESTL NXT32 1 = TEMP25 (TYPE LIST)>
		    <DEAD NXT32>
		    <CHTYPE TEMP25 <TYPE-CODE LIST> = TEMP25>
		    <TYPE ARG7 = TEMP17>
		    <EMPL? TEMP25 + PHRASE188>
		    <LOOP (ARG7 VALUE) (TEMP17 VALUE) (TEMP25 VALUE)>
TAG79
		    <NTHL TEMP25 1 = ITM33>
		    <TYPE? ITM33 TEMP17 - TAG80>
		    <VEQUAL? ITM33 ARG7 + TAG78>
		    <DEAD ITM33>
TAG80
		    <RESTL TEMP25 1 = TEMP25 (TYPE LIST)>
		    <EMPL? TEMP25 - TAG79>
		    <JUMP + PHRASE188>
TAG78
		    <RETURN 'T>
PHRASE75
		    <EQUAL? ITM33 'RETURN!-MIMOP - PHRASE82>
		    <RESTL NXT32 1 = TEMP25 (TYPE LIST)>
		    <DEAD NXT32>
		    <NTHL TEMP25 1 = TEMP25>
		    <EQUAL? TEMP25 ARG7 + TAG83>
		    <DEAD TEMP25>
		    <RETURN 'T>
TAG83
		    <RETURN %<>>
PHRASE82
		    <EQUAL? ITM33 'END!-MIMOP - PHRASE85>
		    <RETURN 'T>
PHRASE85
		    <EQUAL? ITM33 'SET!-MIMOP - PHRASE86>
		    <RESTL NXT32 1 = TEMP25 (TYPE LIST)>
		    <NTHL TEMP25 1 = TEMP25>
		    <EQUAL? TEMP25 ARG7 - PHRASE88>
		    <DEAD TEMP25>
		    <RETURN 'T>
PHRASE88
		    <RESTL NXT32 1 = TEMP25 (TYPE LIST)>
		    <DEAD NXT32>
		    <RESTL TEMP25 1 = TEMP25 (TYPE LIST)>
		    <NTHL TEMP25 1 = TEMP25>
		    <EQUAL? TEMP25 ARG7 - PHRASE188>
		    <DEAD TEMP25>
		    <RETURN %<>>
PHRASE86
		    <EQUAL? ITM33 'SETLR!-MIMOP - PHRASE90>
		    <RESTL NXT32 1 = TEMP25 (TYPE LIST)>
		    <NTHL TEMP25 1 = TEMP25>
		    <EQUAL? TEMP25 ARG7 - PHRASE90>
		    <DEAD TEMP25>
		    <RETURN 'T>
PHRASE90
		    <EQUAL? ITM33 'JUMP!-MIMOP - PHRASE94>
		    <SET TEMP17 'T (TYPE ATOM)>
		    <JUMP + PHRASE95>
PHRASE94
		    <SET TEMP17 %<> (TYPE FALSE)>
PHRASE95
		    <CHTYPE NXT32 <TYPE-CODE LIST> = TEMP25>
		    <LOOP>
MAP97
		    <INTGO>
		    <EMPL? TEMP25 + MAPAP100>
		    <SET XP104 TEMP25>
		    <NTHL XP104 1 = X105>
		    <TYPE? X105 <TYPE-CODE RES-IND> - PHRASE111>
		    <RESTL XP104 1 = TEMP25 (TYPE LIST)>
		    <DEAD XP104>
		    <NTHL TEMP25 1 = X105>
		    <DEAD TEMP25>
		    <EQUAL? X105 ARG7 - MAPAP100>
		    <DEAD X105>
		    <RETURN 'T>
PHRASE111
		    <EQUAL? X105 ARG7 - PHRASE112>
		    <DEAD X105>
		    <RETURN %<>>
PHRASE112
		    <RESTL TEMP25 1 = TEMP25 (TYPE LIST)>
		    <JUMP + MAP97>
MAPAP100
		    <EQUAL? ITM33 'DISPATCH!-MIMOP - PHRASE114>
		    <RESTL NXT32 1 = TEMP17 (TYPE LIST)>
		    <DEAD NXT32>
		    <RESTL TEMP17 1 = TEMP17 (TYPE LIST)>
		    <RESTL TEMP17 1 = X105 (TYPE LIST)>
		    <DEAD TEMP17>
		    <CHTYPE X105 <TYPE-CODE LIST> = X105>
		    <LOOP>
MAP116
		    <INTGO>
		    <EMPL? X105 + PHRASE188>
		    <NTHL X105 1 = TEMP25>
		    <EQUAL? TEMP25 BEG-LABEL9 + PHRASE144>
		    <SET XP104 MIML8>
		    <TYPE TEMP25 = TEMP17>
		    <EMPL? XP104 + TAG127>
		    <LOOP (TEMP25 VALUE) (TEMP17 VALUE) (XP104 VALUE)>
TAG129
		    <NTHL XP104 1 = NXT32>
		    <TYPE? NXT32 TEMP17 - TAG130>
		    <VEQUAL? NXT32 TEMP25 + TAG128>
		    <DEAD NXT32>
TAG130
		    <RESTL XP104 1 = XP104 (TYPE LIST)>
		    <EMPL? XP104 - TAG129>
TAG127
		    <SET XP104 %<> (TYPE FALSE)>
TAG128
		    <VEQUAL? XP104 0 + PHRASE126>
		    <FRAME 'GET-LREF>
		    <PUSH TEMP25>
		    <DEAD TEMP25>
		    <PUSH 'T>
		    <CALL 'GET-LREF 2 = ITM33>
		    <NTHUV ITM33 7 = TEMP17 (TYPE LIST)>
		    <TYPE? ARG7 <TYPE-CODE VARTBL> - PHRASE134>
		    <EMPL? TEMP17 + PHRASE134>
		    <LOOP (ARG7 VALUE) (TEMP17 VALUE)>
TAG136
		    <NTHL TEMP17 1 = NXT32>
		    <VEQUAL? NXT32 ARG7 + TAG135>
		    <DEAD NXT32>
		    <RESTL TEMP17 1 = TEMP17 (TYPE LIST)>
		    <EMPL? TEMP17 - TAG136>
		    <JUMP + PHRASE134>
TAG135
		    <RETURN %<>>
PHRASE134
		    <NTHUV ITM33 8 = TEMP17 (TYPE LIST)>
		    <TYPE? ARG7 <TYPE-CODE VARTBL> - TAG138>
		    <EMPL? TEMP17 + TAG138>
		    <LOOP (ARG7 VALUE) (TEMP17 VALUE)>
TAG139
		    <NTHL TEMP17 1 = NXT32>
		    <VEQUAL? NXT32 ARG7 + PHRASE144>
		    <DEAD NXT32>
		    <RESTL TEMP17 1 = TEMP17 (TYPE LIST)>
		    <EMPL? TEMP17 - TAG139>
TAG138
		    <FRAME 'WILL-DIE?>
		    <PUSH ARG7>
		    <RESTL XP104 1 = STACK (TYPE LIST)>
		    <DEAD XP104>
		    <CALL 'WILL-DIE? 2 = TEMP17>
		    <TYPE? TEMP17 <TYPE-CODE FALSE> + PHRASE141>
		    <DEAD TEMP17>
		    <NTHUV ITM33 8 = TEMP17 (TYPE LIST)>
		    <CONS ARG7 TEMP17 = TEMP17>
		    <PUTUV ITM33 8 TEMP17 (TYPE LIST)>
		    <DEAD ITM33 TEMP17>
		    <JUMP + PHRASE144>
PHRASE141
		    <NTHUV ITM33 7 = TEMP17 (TYPE LIST)>
		    <CONS ARG7 TEMP17 = TEMP17>
		    <DEAD ARG7>
		    <PUTUV ITM33 7 TEMP17 (TYPE LIST)>
		    <DEAD ITM33 TEMP17>
		    <RETURN %<>>
PHRASE126
		    <RETURN %<>>
PHRASE144
		    <RESTL X105 1 = X105 (TYPE LIST)>
		    <JUMP + MAP116>
PHRASE114
		    <EQUAL? ITM33 'ICALL!-MIMOP - BOOL147>
		    <SET XP104 NXT32>
		    <DEAD NXT32>
		    <JUMP + BOOL146>
BOOL147
		    <RESTL NXT32 1 = NXT32 (TYPE LIST)>
		    <CHTYPE NXT32 <TYPE-CODE LIST> = NXT32>
		    <SET X105 NXT32>
		    <EMPL? X105 + TAG148>
		    <LOOP (X105 VALUE)>
TAG150
		    <NTHL X105 1 = TEMP25>
		    <TYPE? TEMP25 <TYPE-CODE ATOM> - TAG151>
		    <VEQUAL? TEMP25 '+ + TAG149>
		    <DEAD TEMP25>
TAG151
		    <RESTL X105 1 = X105 (TYPE LIST)>
		    <EMPL? X105 - TAG150>
TAG148
		    <SET XP104 %<> (TYPE FALSE)>
		    <JUMP + TAG152>
TAG149
		    <SET XP104 X105>
		    <DEAD X105>
TAG152
		    <VEQUAL? XP104 0 - BOOL146>
		    <SET X105 NXT32>
		    <EMPL? X105 + TAG153>
		    <LOOP (X105 VALUE)>
TAG155
		    <NTHL X105 1 = TEMP25>
		    <TYPE? TEMP25 <TYPE-CODE ATOM> - TAG156>
		    <VEQUAL? TEMP25 '- + TAG154>
		    <DEAD TEMP25>
TAG156
		    <RESTL X105 1 = X105 (TYPE LIST)>
		    <EMPL? X105 - TAG155>
TAG153
		    <SET XP104 %<> (TYPE FALSE)>
		    <JUMP + TAG157>
TAG154
		    <SET XP104 X105>
		    <DEAD X105>
TAG157
		    <VEQUAL? XP104 0 - BOOL146>
		    <EQUAL? ITM33 'NTHR!-MIMOP - PHRASE188>
		    <DEAD ITM33>
		    <SET ITM33 NXT32>
		    <DEAD NXT32>
		    <LOOP (ITM33 VALUE)>
TAG159
		    <RESTL ITM33 1 = X105 (TYPE LIST)>
		    <EMPL? X105 + TAG160>
		    <SET ITM33 X105>
		    <DEAD X105>
		    <JUMP + TAG159>
TAG160
		    <NTHL ITM33 1 = ITM33>
		    <TYPE? ITM33 <TYPE-CODE LIST> - PHRASE188>
		    <NTHL ITM33 1 = X105>
		    <EQUAL? X105 'BRANCH-FALSE - PHRASE188>
		    <DEAD X105>
		    <RESTL ITM33 1 = XP104 (TYPE LIST)>
		    <DEAD ITM33>
BOOL146
		    <RESTL XP104 1 = NXT32 (TYPE LIST)>
		    <DEAD XP104>
		    <NTHL NXT32 1 = LABEL13>
		    <DEAD NXT32>
		    <SET NXT32 MIML8>
		    <TYPE LABEL13 = X105>
		    <LOOP (LABEL13 VALUE) (X105 VALUE) (NXT32 VALUE)>
TAG165
		    <NTHL NXT32 1 = TEMP25>
		    <TYPE? TEMP25 X105 - TAG166>
		    <VEQUAL? TEMP25 LABEL13 + TAG164>
		    <DEAD TEMP25>
TAG166
		    <RESTL NXT32 1 = NXT32 (TYPE LIST)>
		    <EMPL? NXT32 - TAG165>
		    <SET XP104 %<> (TYPE FALSE)>
		    <JUMP + TAG167>
TAG164
		    <SET XP104 NXT32>
		    <DEAD NXT32>
TAG167
		    <VEQUAL? XP104 0 + PHRASE162>
		    <FRAME 'GET-LREF>
		    <PUSH LABEL13>
		    <PUSH 'T>
		    <CALL 'GET-LREF 2 = ITM33>
		    <EQUAL? LABEL13 BEG-LABEL9 - PHRASE170>
		    <DEAD LABEL13>
		    <VEQUAL? TEMP17 0 + PHRASE188>
		    <DEAD TEMP17>
		    <RETURN 'T>
PHRASE170
		    <NTHUV ITM33 7 = NXT32 (TYPE LIST)>
		    <TYPE? ARG7 <TYPE-CODE VARTBL> - PHRASE173>
		    <EMPL? NXT32 + PHRASE173>
		    <LOOP (ARG7 VALUE) (NXT32 VALUE)>
TAG175
		    <NTHL NXT32 1 = X105>
		    <VEQUAL? X105 ARG7 + TAG174>
		    <DEAD X105>
		    <RESTL NXT32 1 = NXT32 (TYPE LIST)>
		    <EMPL? NXT32 - TAG175>
		    <JUMP + PHRASE173>
TAG174
		    <RETURN %<>>
PHRASE173
		    <NTHUV ITM33 8 = NXT32 (TYPE LIST)>
		    <TYPE? ARG7 <TYPE-CODE VARTBL> - PHRASE177>
		    <EMPL? NXT32 + PHRASE177>
		    <LOOP (ARG7 VALUE) (NXT32 VALUE)>
TAG179
		    <NTHL NXT32 1 = X105>
		    <VEQUAL? X105 ARG7 + TAG178>
		    <DEAD X105>
		    <RESTL NXT32 1 = NXT32 (TYPE LIST)>
		    <EMPL? NXT32 - TAG179>
		    <JUMP + PHRASE177>
TAG178
		    <VEQUAL? TEMP17 0 + PHRASE188>
		    <DEAD TEMP17>
		    <RETURN 'T>
PHRASE177
		    <FRAME 'WILL-DIE?>
		    <PUSH ARG7>
		    <RESTL XP104 1 = STACK (TYPE LIST)>
		    <DEAD XP104>
		    <CALL 'WILL-DIE? 2 = NXT32>
		    <TYPE? NXT32 <TYPE-CODE FALSE> + PHRASE183>
		    <DEAD NXT32>
		    <NTHUV ITM33 8 = NXT32 (TYPE LIST)>
		    <CONS ARG7 NXT32 = NXT32>
		    <PUTUV ITM33 8 NXT32 (TYPE LIST)>
		    <DEAD ITM33 NXT32>
		    <VEQUAL? TEMP17 0 + PHRASE188>
		    <DEAD TEMP17>
		    <RETURN 'T>
PHRASE183
		    <NTHUV ITM33 7 = NXT32 (TYPE LIST)>
		    <CONS ARG7 NXT32 = NXT32>
		    <DEAD ARG7>
		    <PUTUV ITM33 7 NXT32 (TYPE LIST)>
		    <DEAD ITM33 NXT32>
		    <RETURN %<>>
PHRASE162
		    <RETURN %<>>
PHRASE188
		    <RESTL MIML8 1 = MIML8 (TYPE LIST)>
		    <JUMP + AGAIN36>
EXIT31
		    <RETURN TEMP17>
		    <DEAD TEMP17>
		    <END WILL-DIE?>

\

#WORD *4313145257*
		    <GFCN NTH-AOS-PUT-GEN ("VALUE" <OR ATOM !<FALSE>> ATOM <OR ATOM FALSE> ANY ANY ANY ANY ANY ANY ANY ANY ANY ANY ANY ANY ANY) NTHINS4 INCINS5 PUTINS6 STRUC17 OFFSET18 STRUC29 OFFSET210 AMOUNT11 CODELIST12 ILDB?13 IDPB?14 STYPE115 STYPE216 ELTYPE117 ELTYPE218>
		    <TEMP TEMP26 ADDRTUP121:TUPLE ADDRTUP222:TUPLE (SELF?24 %<>) TEMP48 TEMP86 SAC220>
		    <INTGO>
		    <USBLOCK <TYPE-CODE TUPLE> 4 = ADDRTUP121>
		    <SET TEMP26 ADDRTUP121>
		    <LOOP (TEMP26 VALUE LENGTH)>
ISTR27
		    <EMPUV? TEMP26 + ISTRE28>
		    <PUTUV TEMP26 1 %<>>
		    <RESTUV TEMP26 1 = TEMP26>
		    <JUMP + ISTR27>
ISTRE28
		    <USBLOCK <TYPE-CODE TUPLE> 4 = ADDRTUP222>
		    <SET TEMP26 ADDRTUP222>
		    <LOOP (TEMP26 VALUE LENGTH)>
ISTR29
		    <EMPUV? TEMP26 + ISTRE30>
		    <PUTUV TEMP26 1 %<>>
		    <RESTUV TEMP26 1 = TEMP26>
		    <JUMP + ISTR29>
ISTRE30
		    <EQUAL? STRUC17 STRUC29 + TAG32>
		    <SET TEMP26 %<> (TYPE FALSE)>
		    <JUMP + TAG36>
TAG32
		    <EQUAL? OFFSET18 OFFSET210 + TAG33>
		    <SET TEMP26 %<> (TYPE FALSE)>
		    <JUMP + TAG36>
TAG33
		    <TYPE? ILDB?13 <TYPE-CODE FALSE> + TAG34>
		    <SET TEMP26 %<> (TYPE FALSE)>
		    <JUMP + TAG36>
TAG34
		    <TYPE? IDPB?14 <TYPE-CODE FALSE> - TAG35>
		    <SET TEMP26 'T (TYPE ATOM)>
		    <JUMP + TAG36>
TAG35
		    <SET TEMP26 %<> (TYPE FALSE)>
TAG36
		    <SET SELF?24 TEMP26>
		    <DEAD TEMP26>
		    <TYPE? OFFSET210 <TYPE-CODE FALSE> + TAG56>
		    <TYPE? SELF?24 <TYPE-CODE FALSE> - TAG56>
		    <TYPE? INCINS5 <TYPE-CODE FALSE> + TAG56>
		    <TYPE? ILDB?13 <TYPE-CODE FALSE> + BOOL42>
		    <EQUAL? STYPE115 'VECTOR + BOOL39>
BOOL42
		    <TYPE? IDPB?14 <TYPE-CODE FALSE> + BOOL43>
		    <EQUAL? STYPE216 'VECTOR + BOOL39>
BOOL43
		    <SET TEMP26 [VECTOR LIST UVECTOR] (TYPE VECTOR)>
		    <TYPE? STYPE115 <TYPE-CODE ATOM> - TAG49>
		    <LOOP (STYPE115 VALUE) (TEMP26 LENGTH VALUE)>
TAG46
		    <NTHUV TEMP26 1 = TEMP48>
		    <VEQUAL? TEMP48 STYPE115 + TAG45>
		    <DEAD TEMP48>
		    <RESTUV TEMP26 1 = TEMP26 (TYPE VECTOR)>
		    <EMPUV? TEMP26 - TAG46>
		    <JUMP + TAG49>
TAG45
		    <SET TEMP26 [VECTOR LIST UVECTOR] (TYPE VECTOR)>
		    <TYPE? STYPE216 <TYPE-CODE ATOM> - BOOL39>
		    <LOOP (STYPE216 VALUE) (TEMP26 LENGTH VALUE)>
TAG50
		    <NTHUV TEMP26 1 = TEMP48>
		    <VEQUAL? TEMP48 STYPE216 + TAG49>
		    <DEAD TEMP48>
		    <RESTUV TEMP26 1 = TEMP26 (TYPE VECTOR)>
		    <EMPUV? TEMP26 - TAG50>
		    <JUMP + BOOL39>
TAG49
		    <SET TEMP26 [VECTOR LIST UVECTOR] (TYPE VECTOR)>
		    <TYPE? STYPE216 <TYPE-CODE ATOM> - TAG56>
		    <LOOP (STYPE216 VALUE) (TEMP26 LENGTH VALUE)>
TAG54
		    <NTHUV TEMP26 1 = TEMP48>
		    <VEQUAL? TEMP48 STYPE216 + TAG53>
		    <DEAD TEMP48>
		    <RESTUV TEMP26 1 = TEMP26 (TYPE VECTOR)>
		    <EMPUV? TEMP26 - TAG54>
		    <JUMP + TAG56>
TAG53
		    <SET TEMP26 [VECTOR LIST UVECTOR] (TYPE VECTOR)>
		    <TYPE? STYPE115 <TYPE-CODE ATOM> - BOOL39>
		    <LOOP (STYPE115 VALUE) (TEMP26 LENGTH VALUE)>
TAG57
		    <NTHUV TEMP26 1 = TEMP48>
		    <VEQUAL? TEMP48 STYPE115 + TAG56>
		    <DEAD TEMP48>
		    <RESTUV TEMP26 1 = TEMP26 (TYPE VECTOR)>
		    <EMPUV? TEMP26 - TAG57>
		    <JUMP + BOOL39>
TAG56
		    <TYPE? ILDB?13 <TYPE-CODE FALSE> + TAG65>
		    <TYPE? IDPB?14 <TYPE-CODE FALSE> + TAG65>
		    <EQUAL? STYPE115 STYPE216 + TAG65>
		    <SET TEMP26 [STRING BYTES UVECTOR] (TYPE VECTOR)>
		    <TYPE? STYPE115 <TYPE-CODE ATOM> - BOOL39>
		    <LOOP (STYPE115 VALUE) (TEMP26 LENGTH VALUE)>
TAG63
		    <NTHUV TEMP26 1 = TEMP48>
		    <VEQUAL? TEMP48 STYPE115 + TAG62>
		    <DEAD TEMP48>
		    <RESTUV TEMP26 1 = TEMP26 (TYPE VECTOR)>
		    <EMPUV? TEMP26 - TAG63>
		    <JUMP + BOOL39>
TAG62
		    <SET TEMP26 [STRING BYTES UVECTOR] (TYPE VECTOR)>
		    <TYPE? STYPE216 <TYPE-CODE ATOM> - BOOL39>
		    <LOOP (STYPE216 VALUE) (TEMP26 LENGTH VALUE)>
TAG66
		    <NTHUV TEMP26 1 = TEMP48>
		    <VEQUAL? TEMP48 STYPE216 + TAG65>
		    <DEAD TEMP48>
		    <RESTUV TEMP26 1 = TEMP26 (TYPE VECTOR)>
		    <EMPUV? TEMP26 - TAG66>
		    <JUMP + BOOL39>
TAG65
		    <TYPE? ILDB?13 <TYPE-CODE FALSE> + BOOL68>
		    <TYPE? OFFSET210 <TYPE-CODE FIX> - BOOL39>
BOOL68
		    <TYPE? IDPB?14 <TYPE-CODE FALSE> + PHRASE38>
		    <TYPE? OFFSET18 <TYPE-CODE FIX> + PHRASE38>
BOOL39
		    <SET TEMP26 %<> (TYPE FALSE)>
		    <JUMP + RETURN2>
PHRASE38
		    <TYPE? PUTINS6 <TYPE-CODE FALSE> + PHRASE71>
		    <FRAME 'FLUSH-TO>
		    <PUSH CODELIST12>
		    <DEAD CODELIST12>
		    <GEN-LVAL 'CODPTR = STACK>
		    <CALL 'FLUSH-TO 2>
		    <JUMP + PHRASE75>
PHRASE71
		    <FRAME 'FLUSH-TO>
		    <GEN-LVAL 'CODPTR = TEMP26>
		    <FRAME 'LENGTH>
		    <GEN-LVAL 'CODPTR = STACK>
		    <CALL 'LENGTH 1 = TEMP48>
		    <FRAME 'LENGTH>
		    <PUSH CODELIST12>
		    <DEAD CODELIST12>
		    <CALL 'LENGTH 1 = TEMP86>
		    <SUB TEMP48 TEMP86 = TEMP48 (TYPE FIX)>
		    <DEAD TEMP86>
		    <SUB TEMP48 1 = TEMP48 (TYPE FIX)>
		    <GRTR? TEMP48 0 - RESTL88 (TYPE FIX)>
		    <LOOP (TEMP26 VALUE) (TEMP48 VALUE)>
RESTL87
		    <INTGO>
		    <RESTL TEMP26 1 = TEMP26 (TYPE LIST)>
		    <SUB TEMP48 1 = TEMP48 (TYPE FIX)>
		    <GRTR? TEMP48 0 + RESTL87 (TYPE FIX)>
RESTL88
		    <SET TEMP86 TEMP26>
		    <DEAD TEMP26>
		    <CHTYPE TEMP86 <TYPE-CODE LIST> = STACK>
		    <DEAD TEMP86>
		    <GEN-LVAL 'CODPTR = STACK>
		    <CALL 'FLUSH-TO 2>
PHRASE75
		    <FRAME 'VAR-VALUE-IN-AC?>
		    <PUSH STRUC17>
		    <CALL 'VAR-VALUE-IN-AC? 1 = TEMP26>
		    <TYPE? TEMP26 <TYPE-CODE FALSE> - PHRASE92>
		    <FRAME 'LOAD-VAR>
		    <PUSH STRUC17>
		    <PUSH 'VALUE>
		    <PUSH %<>>
		    <PUSH 'PREF-VAL>
		    <CALL 'LOAD-VAR 4 = TEMP26>
PHRASE92
		    <FRAME 'PROTECT-USE>
		    <PUSH TEMP26>
		    <CALL 'PROTECT-USE 1>
		    <TYPE? PUTINS6 <TYPE-CODE FALSE> + PHRASE102>
		    <TYPE? SELF?24 <TYPE-CODE FALSE> - PHRASE102>
		    <EQUAL? STRUC17 STRUC29 - PHRASE100>
		    <EQUAL? STYPE115 'LIST + PHRASE100>
		    <SET SAC220 TEMP26>
		    <JUMP + PHRASE102>
PHRASE100
		    <FRAME 'VAR-VALUE-IN-AC?>
		    <PUSH STRUC29>
		    <CALL 'VAR-VALUE-IN-AC? 1 = SAC220>
		    <TYPE? SAC220 <TYPE-CODE FALSE> - PHRASE102>
		    <FRAME 'LOAD-VAR>
		    <PUSH STRUC29>
		    <PUSH 'VALUE>
		    <PUSH %<>>
		    <PUSH 'PREF-VAL>
		    <CALL 'LOAD-VAR 4 = SAC220>
		    <FRAME 'PROTECT-USE>
		    <PUSH SAC220>
		    <CALL 'PROTECT-USE 1>
PHRASE102
		    <FRAME 'GET-ADDR>
		    <PUSH ADDRTUP121>
		    <PUSH STRUC17>
		    <PUSH TEMP26>
		    <DEAD TEMP26>
		    <PUSH OFFSET18>
		    <PUSH STYPE115>
		    <PUSH ILDB?13>
		    <PUSH %<>>
		    <TYPE? INCINS5 <TYPE-CODE FALSE> - TAG107>
		    <SET TEMP48 'T (TYPE ATOM)>
		    <JUMP + TAG108>
TAG107
		    <SET TEMP48 %<> (TYPE FALSE)>
TAG108
		    <PUSH TEMP48>
		    <DEAD TEMP48>
		    <CALL 'GET-ADDR 8>
		    <TYPE? PUTINS6 <TYPE-CODE FALSE> + COND112>
		    <TYPE? SELF?24 <TYPE-CODE FALSE> - COND112>
		    <NTHUV ADDRTUP121 3 = TEMP48>
		    <TYPE? TEMP48 <TYPE-CODE FALSE> + PHRASE113>
		    <DEAD TEMP48>
		    <EQUAL? OFFSET18 OFFSET210 - PHRASE113>
		    <DEAD OFFSET18>
		    <VEQUAL? STYPE115 'VECTOR - BOOL116>
		    <EQUAL? STYPE216 'VECTOR + BOOL115>
BOOL116
		    <VEQUAL? STYPE115 'VECTOR + PHRASE113>
		    <EQUAL? STYPE216 'VECTOR + PHRASE113>
BOOL115
		    <FRAME 'GET-ADDR>
		    <PUSH ADDRTUP222>
		    <PUSH STRUC29>
		    <PUSH SAC220>
		    <DEAD SAC220>
		    <PUSH OFFSET210>
		    <DEAD OFFSET210>
		    <PUSH STYPE216>
		    <PUSH IDPB?14>
		    <NTHUV ADDRTUP121 3 = STACK>
		    <TYPE? INCINS5 <TYPE-CODE FALSE> - TAG119>
		    <SET TEMP48 'T (TYPE ATOM)>
		    <JUMP + TAG120>
TAG119
		    <SET TEMP48 %<> (TYPE FALSE)>
TAG120
		    <PUSH TEMP48>
		    <DEAD TEMP48>
		    <CALL 'GET-ADDR 8>
		    <JUMP + COND112>
PHRASE113
		    <FRAME 'GET-ADDR>
		    <PUSH ADDRTUP222>
		    <PUSH STRUC29>
		    <PUSH SAC220>
		    <DEAD SAC220>
		    <PUSH OFFSET210>
		    <DEAD OFFSET210>
		    <PUSH STYPE216>
		    <PUSH IDPB?14>
		    <PUSH %<>>
		    <TYPE? INCINS5 <TYPE-CODE FALSE> - TAG122>
		    <SET TEMP48 'T (TYPE ATOM)>
		    <JUMP + TAG123>
TAG122
		    <SET TEMP48 %<> (TYPE FALSE)>
TAG123
		    <PUSH TEMP48>
		    <DEAD TEMP48>
		    <CALL 'GET-ADDR 8>
COND112
		    <TYPE? INCINS5 <TYPE-CODE FALSE> - PHRASE125>
		    <FRAME 'MOVE-ELT>
		    <PUSH ADDRTUP121>
		    <DEAD ADDRTUP121>
		    <PUSH ADDRTUP222>
		    <DEAD ADDRTUP222>
		    <PUSH STYPE115>
		    <PUSH STYPE216>
		    <PUSH ELTYPE117>
		    <DEAD ELTYPE117>
		    <PUSH ELTYPE218>
		    <DEAD ELTYPE218>
		    <PUSH IDPB?14>
		    <CALL 'MOVE-ELT 7>
		    <JUMP + PHRASE147>
PHRASE125
		    <GVAL 'ARITH = TEMP48>
		    <EMPUV? TEMP48 + PHRASE127>
		    <LOOP (INCINS5 VALUE) (TEMP48 LENGTH VALUE)>
TAG129
		    <NTHUV TEMP48 1 = TEMP26>
		    <VEQUAL? TEMP26 INCINS5 + TAG128>
		    <DEAD TEMP26>
		    <RESTUV TEMP48 1 = TEMP48 (TYPE VECTOR)>
		    <EMPUV? TEMP48 - TAG129>
		    <JUMP + PHRASE127>
TAG128
		    <FRAME 'DO-ARITH>
		    <PUSH INCINS5>
		    <DEAD INCINS5>
		    <PUSH AMOUNT11>
		    <DEAD AMOUNT11>
		    <NTHUV ADDRTUP121 1 = STACK>
		    <DEAD ADDRTUP121>
		    <TYPE? PUTINS6 <TYPE-CODE FALSE> + PHRASE134>
		    <DEAD PUTINS6>
		    <NTHUV ADDRTUP222 1 = TEMP48>
		    <DEAD ADDRTUP222>
		    <JUMP + PHRASE135>
PHRASE134
		    <SET TEMP48 STRUC29>
PHRASE135
		    <PUSH TEMP48>
		    <DEAD TEMP48>
		    <PUSH SELF?24>
		    <DEAD SELF?24>
		    <PUSH STYPE115>
		    <CALL 'DO-ARITH 6>
		    <JUMP + PHRASE147>
PHRASE127
		    <FRAME 'DO-ARITH>
		    <PUSH 'SUB!-MIMOP>
		    <PUSH AMOUNT11>
		    <NTHUV ADDRTUP121 2 = STACK>
		    <NTHUV ADDRTUP222 2 = STACK>
		    <PUSH SELF?24>
		    <PUSH 'WORD>
		    <CALL 'DO-ARITH 6>
		    <TYPE? AMOUNT11 <TYPE-CODE FIX> - PHRASE139>
		    <FRAME 'DO-ARITH>
		    <PUSH 'ADD!-MIMOP>
		    <VEQUAL? INCINS5 'RESTUV!-MIMOP - PHRASE142>
		    <FRAME 'MA-IMM>
		    <LSH AMOUNT11 3 = STACK (TYPE FIX)>
		    <DEAD AMOUNT11>
		    <CALL 'MA-IMM 1 = TEMP48>
		    <JUMP + COND141>
PHRASE142
		    <VEQUAL? INCINS5 'RESTUU!-MIMOP - PHRASE144>
		    <DEAD INCINS5>
		    <FRAME 'MA-IMM>
		    <LSH AMOUNT11 2 = STACK (TYPE FIX)>
		    <DEAD AMOUNT11>
		    <CALL 'MA-IMM 1 = TEMP48>
		    <JUMP + COND141>
PHRASE144
		    <FRAME 'MA-IMM>
		    <PUSH AMOUNT11>
		    <DEAD AMOUNT11>
		    <CALL 'MA-IMM 1 = TEMP48>
COND141
		    <PUSH TEMP48>
		    <DEAD TEMP48>
		    <NTHUV ADDRTUP121 1 = STACK>
		    <DEAD ADDRTUP121>
		    <NTHUV ADDRTUP222 1 = STACK>
		    <DEAD ADDRTUP222>
		    <PUSH SELF?24>
		    <DEAD SELF?24>
		    <PUSH 'VECTOR>
		    <CALL 'DO-ARITH 6>
		    <JUMP + PHRASE147>
PHRASE139
		    <VEQUAL? INCINS5 'RESTUS!-MIMOP + BOOL150>
		    <VEQUAL? INCINS5 'RESTUB!-MIMOP - PHRASE149>
BOOL150
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH AMOUNT11>
		    <DEAD AMOUNT11>
		    <CALL 'VAR-VALUE-ADDRESS 1 = TEMP26>
		    <JUMP + PHRASE160>
PHRASE149
		    <FRAME 'VAR-VALUE-IN-AC?>
		    <PUSH AMOUNT11>
		    <CALL 'VAR-VALUE-IN-AC? 1 = TEMP26>
		    <TYPE? TEMP26 <TYPE-CODE FALSE> + PHRASE152>
		    <FRAME 'MUNG-AC>
		    <PUSH TEMP26>
		    <PUSH 'T>
		    <CALL 'MUNG-AC 2>
		    <NTHUV TEMP26 2 = TEMP48 (TYPE FIX)>
		    <DEAD TEMP26>
		    <OR TEMP48 #WORD *120* = TEMP48>
		    <LSH TEMP48 24 = TEMP48 (TYPE FIX)>
		    <CHTYPE TEMP48 <TYPE-CODE EFF-ADDR> = TEMP26>
		    <DEAD TEMP48>
		    <FRAME 'EMIT>
		    <PUSH 120>
		    <VEQUAL? INCINS5 'RESTUV!-MIMOP - PHRASE157>
		    <DEAD INCINS5>
		    <FRAME 'MA-IMM>
		    <PUSH 3>
		    <CALL 'MA-IMM 1 = TEMP48>
		    <JUMP + COND156>
PHRASE157
		    <FRAME 'MA-IMM>
		    <PUSH 2>
		    <CALL 'MA-IMM 1 = TEMP48>
COND156
		    <PUSH TEMP48>
		    <DEAD TEMP48>
		    <PUSH TEMP26>
		    <PUSH TEMP26>
		    <CALL 'EMIT 4>
		    <JUMP + PHRASE160>
PHRASE152
		    <FRAME 'GET-AC>
		    <PUSH 'PREF-VAL>
		    <CALL 'GET-AC 1 = TEMP26>
		    <FRAME 'EMIT>
		    <PUSH 120>
		    <VEQUAL? INCINS5 'RESTUV!-MIMOP - PHRASE164>
		    <DEAD INCINS5>
		    <FRAME 'MA-IMM>
		    <PUSH 3>
		    <CALL 'MA-IMM 1 = TEMP48>
		    <JUMP + COND163>
PHRASE164
		    <FRAME 'MA-IMM>
		    <PUSH 2>
		    <CALL 'MA-IMM 1 = TEMP48>
COND163
		    <PUSH TEMP48>
		    <DEAD TEMP48>
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH AMOUNT11>
		    <DEAD AMOUNT11>
		    <CALL 'VAR-VALUE-ADDRESS 1 = STACK>
		    <NTHUV TEMP26 2 = TEMP48 (TYPE FIX)>
		    <DEAD TEMP26>
		    <OR TEMP48 #WORD *120* = TEMP48>
		    <LSH TEMP48 24 = TEMP48 (TYPE FIX)>
		    <CHTYPE TEMP48 <TYPE-CODE EFF-ADDR> = TEMP26>
		    <DEAD TEMP48>
		    <PUSH TEMP26>
		    <CALL 'EMIT 4>
PHRASE160
		    <FRAME 'DO-ARITH>
		    <PUSH 'ADD!-MIMOP>
		    <PUSH TEMP26>
		    <DEAD TEMP26>
		    <NTHUV ADDRTUP121 1 = STACK>
		    <DEAD ADDRTUP121>
		    <NTHUV ADDRTUP222 1 = STACK>
		    <DEAD ADDRTUP222>
		    <PUSH SELF?24>
		    <DEAD SELF?24>
		    <PUSH 'VECTOR>
		    <CALL 'DO-ARITH 6>
PHRASE147
		    <TYPE? ILDB?13 <TYPE-CODE FALSE> + PHRASE170>
		    <FRAME 'REST-BLOCK-GEN>
		    <PUSH STRUC17>
		    <DEAD STRUC17>
		    <PUSH 1>
		    <PUSH ILDB?13>
		    <DEAD ILDB?13>
		    <PUSH 0>
		    <PUSH STYPE115>
		    <DEAD STYPE115>
		    <PUSH 'T>
		    <CALL 'REST-BLOCK-GEN 6>
PHRASE170
		    <TYPE? IDPB?14 <TYPE-CODE FALSE> + PHRASE173>
		    <FRAME 'REST-BLOCK-GEN>
		    <PUSH STRUC29>
		    <DEAD STRUC29>
		    <PUSH 1>
		    <PUSH IDPB?14>
		    <DEAD IDPB?14>
		    <PUSH 0>
		    <PUSH STYPE216>
		    <DEAD STYPE216>
		    <PUSH 'T>
		    <CALL 'REST-BLOCK-GEN 6>
PHRASE173
		    <SET TEMP26 'NORMAL (TYPE ATOM)>
RETURN2
		    <ADJ -20>
		    <RETURN TEMP26>
		    <DEAD TEMP26>
		    <END NTH-AOS-PUT-GEN>

#WORD *35420625711*
		    <GFCN MOVE-ELT ("VALUE" ANY TUPLE TUPLE <OR ATOM FALSE> <OR ATOM FALSE> <OR ATOM FALSE> <OR ATOM FALSE> ANY) TUP14 TUP25 ST16 ST27 EL18 EL29 IDPB?10>
		    <TEMP TEMP20 TEMP21 INS11:FIX ADDR112 ADDR213>
		    <INTGO>
		    <SET TEMP20 [VECTOR LIST] (TYPE VECTOR)>
		    <TYPE? ST16 <TYPE-CODE ATOM> - PHRASE15>
		    <LOOP (ST16 VALUE) (TEMP20 LENGTH VALUE)>
TAG18
		    <NTHUV TEMP20 1 = TEMP21>
		    <VEQUAL? TEMP21 ST16 + TAG17>
		    <DEAD TEMP21>
		    <RESTUV TEMP20 1 = TEMP20 (TYPE VECTOR)>
		    <EMPUV? TEMP20 - TAG18>
		    <JUMP + PHRASE15>
TAG17
		    <SET TEMP20 [VECTOR LIST] (TYPE VECTOR)>
		    <TYPE? ST27 <TYPE-CODE ATOM> - PHRASE15>
		    <LOOP (ST27 VALUE) (TEMP20 LENGTH VALUE)>
TAG23
		    <NTHUV TEMP20 1 = TEMP21>
		    <VEQUAL? TEMP21 ST27 + TAG22>
		    <DEAD TEMP21>
		    <RESTUV TEMP20 1 = TEMP20 (TYPE VECTOR)>
		    <EMPUV? TEMP20 - TAG23>
		    <JUMP + PHRASE15>
TAG22
		    <SET INS11 125 (TYPE FIX)>
		    <NTHUV TUP14 4 = ADDR112>
		    <DEAD TUP14>
		    <NTHUV TUP25 4 = ADDR213>
		    <JUMP + PHRASE70>
PHRASE15
		    <NTHUV TUP14 1 = ADDR112>
		    <DEAD TUP14>
		    <NTHUV TUP25 1 = ADDR213>
		    <SET TEMP20 [VECTOR LIST] (TYPE VECTOR)>
		    <TYPE? ST16 <TYPE-CODE ATOM> - PHRASE27>
		    <LOOP (ST16 VALUE) (TEMP20 LENGTH VALUE)>
TAG29
		    <NTHUV TEMP20 1 = TEMP21>
		    <VEQUAL? TEMP21 ST16 + TAG28>
		    <DEAD TEMP21>
		    <RESTUV TEMP20 1 = TEMP20 (TYPE VECTOR)>
		    <EMPUV? TEMP20 - TAG29>
		    <JUMP + PHRASE27>
TAG28
		    <EQUAL? ST27 'UVECTOR - PHRASE32>
		    <SET EL29 'FIX (TYPE ATOM)>
		    <SET INS11 208 (TYPE FIX)>
		    <JUMP + PHRASE70>
PHRASE32
		    <SET TEMP20 [STRING BYTES] (TYPE VECTOR)>
		    <TYPE? ST27 <TYPE-CODE ATOM> - PHRASE70>
		    <LOOP (ST27 VALUE) (TEMP20 LENGTH VALUE)>
TAG35
		    <NTHUV TEMP20 1 = TEMP21>
		    <VEQUAL? TEMP21 ST27 + TAG34>
		    <DEAD TEMP21>
		    <RESTUV TEMP20 1 = TEMP20 (TYPE VECTOR)>
		    <EMPUV? TEMP20 - TAG35>
		    <JUMP + PHRASE70>
TAG34
		    <EQUAL? ST27 'STRING - PHRASE38>
		    <DEAD ST27>
		    <SET EL29 'CHARACTER (TYPE ATOM)>
		    <JUMP + COND37>
PHRASE38
		    <SET EL29 'FIX (TYPE ATOM)>
COND37
		    <SET INS11 246 (TYPE FIX)>
		    <JUMP + PHRASE70>
PHRASE27
		    <EQUAL? ST16 'UVECTOR - PHRASE39>
		    <DEAD ST16>
		    <TYPE? IDPB?10 <TYPE-CODE FALSE> + PHRASE41>
		    <DEAD IDPB?10>
		    <EQUAL? ST27 'VECTOR - PHRASE41>
		    <FRAME 'EMIT>
		    <PUSH 208>
		    <FRAME 'TYPE-WORD>
		    <PUSH 'FIX>
		    <CALL 'TYPE-WORD 1 = STACK>
		    <SET TEMP21 2 (TYPE FIX)>
		    <SET TEMP20 ADDR213>
		    <LOOP (TEMP20 TYPE VALUE LENGTH) (TEMP21 VALUE)>
TAG45
		    <INTGO>
		    <EMPTY? TEMP20 + TAG43>
		    <NTH1 TEMP20 = STACK>
		    <REST1 TEMP20 = TEMP20>
		    <ADD TEMP21 1 = TEMP21 (TYPE FIX)>
		    <JUMP + TAG45>
TAG43
		    <CALL 'EMIT TEMP21>
		    <DEAD TEMP21>
PHRASE41
		    <SET TEMP21 [VECTOR LIST UVECTOR] (TYPE VECTOR)>
		    <TYPE? ST27 <TYPE-CODE ATOM> - PHRASE48>
		    <LOOP (ST27 VALUE) (TEMP21 LENGTH VALUE)>
TAG50
		    <NTHUV TEMP21 1 = TEMP20>
		    <VEQUAL? TEMP20 ST27 + TAG49>
		    <DEAD TEMP20>
		    <RESTUV TEMP21 1 = TEMP21 (TYPE VECTOR)>
		    <EMPUV? TEMP21 - TAG50>
		    <JUMP + PHRASE48>
TAG49
		    <SET EL29 'FIX (TYPE ATOM)>
		    <SET INS11 208 (TYPE FIX)>
		    <JUMP + PHRASE70>
PHRASE48
		    <EQUAL? ST27 'STRING - PHRASE54>
		    <DEAD ST27>
		    <SET EL29 'CHARACTER (TYPE ATOM)>
		    <JUMP + COND53>
PHRASE54
		    <SET EL29 'FIX (TYPE ATOM)>
COND53
		    <SET INS11 246 (TYPE FIX)>
		    <JUMP + PHRASE70>
PHRASE39
		    <TYPE? IDPB?10 <TYPE-CODE FALSE> + PHRASE57>
		    <DEAD IDPB?10>
		    <EQUAL? ST27 'VECTOR - PHRASE57>
		    <FRAME 'EMIT>
		    <PUSH 208>
		    <FRAME 'TYPE-WORD>
		    <PUSH 'FIX>
		    <CALL 'TYPE-WORD 1 = STACK>
		    <SET TEMP20 2 (TYPE FIX)>
		    <SET TEMP21 ADDR213>
		    <LOOP (TEMP21 TYPE VALUE LENGTH) (TEMP20 VALUE)>
TAG61
		    <INTGO>
		    <EMPTY? TEMP21 + TAG59>
		    <NTH1 TEMP21 = STACK>
		    <REST1 TEMP21 = TEMP21>
		    <ADD TEMP20 1 = TEMP20 (TYPE FIX)>
		    <JUMP + TAG61>
TAG59
		    <CALL 'EMIT TEMP20>
		    <DEAD TEMP20>
PHRASE57
		    <SET TEMP20 [VECTOR UVECTOR LIST] (TYPE VECTOR)>
		    <TYPE? ST27 <TYPE-CODE ATOM> - PHRASE64>
		    <LOOP (ST27 VALUE) (TEMP20 LENGTH VALUE)>
TAG66
		    <NTHUV TEMP20 1 = TEMP21>
		    <VEQUAL? TEMP21 ST27 + TAG65>
		    <DEAD TEMP21>
		    <RESTUV TEMP20 1 = TEMP20 (TYPE VECTOR)>
		    <EMPUV? TEMP20 - TAG66>
		    <JUMP + PHRASE64>
TAG65
		    <EQUAL? ST27 'UVECTOR - PHRASE69>
		    <DEAD ST27>
		    <SET EL29 'FIX (TYPE ATOM)>
PHRASE69
		    <SET INS11 154 (TYPE FIX)>
		    <JUMP + PHRASE70>
PHRASE64
		    <EQUAL? ST27 'STRING - PHRASE72>
		    <DEAD ST27>
		    <SET EL29 'CHARACTER (TYPE ATOM)>
		    <JUMP + COND71>
PHRASE72
		    <SET EL29 'FIX (TYPE ATOM)>
COND71
		    <SET INS11 144 (TYPE FIX)>
PHRASE70
		    <FRAME 'EMIT>
		    <PUSH INS11>
		    <DEAD INS11>
		    <SET TEMP21 1 (TYPE FIX)>
		    <SET TEMP20 ADDR112>
		    <DEAD ADDR112>
		    <LOOP (TEMP20 TYPE VALUE LENGTH) (TEMP21 VALUE)>
TAG74
		    <INTGO>
		    <EMPTY? TEMP20 + TAG73>
		    <NTH1 TEMP20 = STACK>
		    <REST1 TEMP20 = TEMP20>
		    <ADD TEMP21 1 = TEMP21 (TYPE FIX)>
		    <JUMP + TAG74>
TAG73
		    <SET TEMP20 ADDR213>
		    <DEAD ADDR213>
		    <LOOP (TEMP20 TYPE VALUE LENGTH) (TEMP21 VALUE)>
TAG76
		    <INTGO>
		    <EMPTY? TEMP20 + TAG75>
		    <NTH1 TEMP20 = STACK>
		    <REST1 TEMP20 = TEMP20>
		    <ADD TEMP21 1 = TEMP21 (TYPE FIX)>
		    <JUMP + TAG76>
TAG75
		    <CALL 'EMIT TEMP21>
		    <DEAD TEMP21>
		    <TYPE? EL29 <TYPE-CODE FALSE> + TAG80>
		    <DEAD EL29>
		    <RETURN %<>>
TAG80
		    <SET TEMP21 EL18>
		    <TYPE? TEMP21 <TYPE-CODE FALSE> + PHRASE82>
		    <FRAME 'EMIT>
		    <PUSH 176>
		    <FRAME 'TYPE-WORD>
		    <PUSH EL18>
		    <DEAD EL18>
		    <CALL 'TYPE-WORD 1 = STACK>
		    <SET INS11 2 (TYPE FIX)>
		    <NTHUV TUP25 2 = TEMP20>
		    <DEAD TUP25>
		    <LOOP (TEMP20 TYPE VALUE LENGTH) (INS11 VALUE)>
TAG87
		    <INTGO>
		    <EMPTY? TEMP20 + TAG83>
		    <NTH1 TEMP20 = STACK>
		    <REST1 TEMP20 = TEMP20>
		    <ADD INS11 1 = INS11 (TYPE FIX)>
		    <JUMP + TAG87>
TAG83
		    <CALL 'EMIT INS11 = TEMP21>
		    <DEAD INS11>
PHRASE82
		    <RETURN TEMP21>
		    <DEAD TEMP21>
		    <END MOVE-ELT>

#WORD *3021426351*
		    <GFCN DO-ARITH ("VALUE" ANY ANY ANY ANY ANY ANY ANY) INS4 AMOUNT5 ADDR16 ADDR27 SELF?8 STYPE19>
		    <TEMP (VAC10 %<>) RAC11 TEMP27 TEMP28 TEMP29>
		    <INTGO>
		    <TYPE? SELF?8 <TYPE-CODE FALSE> + PHRASE13>
		    <SET ADDR27 ADDR16>
PHRASE13
		    <TYPE? ADDR27 <TYPE-CODE VARTBL> - PHRASE15>
		    <FRAME 'VAR-VALUE-IN-AC?>
		    <PUSH ADDR27>
		    <CALL 'VAR-VALUE-IN-AC? 1 = RAC11>
		    <TYPE? RAC11 <TYPE-CODE FALSE> - PHRASE17>
		    <FRAME 'GET-AC>
		    <PUSH 'PREF-VAL>
		    <PUSH 'T>
		    <CALL 'GET-AC 2 = RAC11>
		    <FRAME 'PROTECT>
		    <PUSH RAC11>
		    <CALL 'PROTECT 1>
PHRASE17
		    <FRAME 'DEST-DECL>
		    <PUSH RAC11>
		    <PUSH ADDR27>
		    <GVAL 'FLOATS = TEMP27>
		    <TYPE INS4 = TEMP28>
		    <EMPTY? TEMP27 + PHRASE23>
		    <LOOP (INS4 VALUE) (TEMP28 VALUE) (TEMP27 LENGTH VALUE TYPE)>
TAG25
		    <NTH1 TEMP27 = TEMP29>
		    <TYPE? TEMP29 TEMP28 - TAG26>
		    <VEQUAL? TEMP29 INS4 + TAG24>
		    <DEAD TEMP29>
TAG26
		    <REST1 TEMP27 = TEMP27>
		    <EMPTY? TEMP27 - TAG25>
		    <JUMP + PHRASE23>
TAG24
		    <SET TEMP27 'FLOAT (TYPE ATOM)>
		    <JUMP + PHRASE30>
PHRASE23
		    <SET TEMP27 'FIX (TYPE ATOM)>
PHRASE30
		    <PUSH TEMP27>
		    <DEAD TEMP27>
		    <CALL 'DEST-DECL 3>
PHRASE15
		    <GVAL 'LOGIC = TEMP27>
		    <TYPE INS4 = TEMP28>
		    <EMPUV? TEMP27 + PHRASE32>
		    <LOOP (INS4 VALUE) (TEMP28 VALUE) (TEMP27 LENGTH VALUE)>
TAG34
		    <NTHUV TEMP27 1 = TEMP29>
		    <TYPE? TEMP29 TEMP28 - TAG35>
		    <VEQUAL? TEMP29 INS4 + TAG33>
		    <DEAD TEMP29>
TAG35
		    <RESTUV TEMP27 1 = TEMP27 (TYPE VECTOR)>
		    <EMPUV? TEMP27 - TAG34>
		    <JUMP + PHRASE32>
TAG33
		    <TYPE? AMOUNT5 <TYPE-CODE FIX> - PHRASE37>
		    <EQUAL? INS4 'EQV!-MIMOP - PHRASE39>
		    <XOR AMOUNT5 #WORD *777777777777* = AMOUNT5>
		    <SET INS4 'XOR!-MIMOP (TYPE ATOM)>
		    <JUMP + PHRASE48>
PHRASE39
		    <EQUAL? INS4 'AND!-MIMOP - PHRASE48>
		    <XOR AMOUNT5 #WORD *777777777777* = AMOUNT5>
		    <JUMP + PHRASE48>
PHRASE37
		    <EQUAL? INS4 'EQV!-MIMOP + BOOL42>
		    <EQUAL? INS4 'AND!-MIMOP - PHRASE48>
BOOL42
		    <FRAME 'EMIT>
		    <PUSH 210>
		    <SET TEMP28 2 (TYPE FIX)>
		    <SET TEMP27 ADDR16>
		    <LOOP (TEMP27 TYPE VALUE LENGTH) (TEMP28 VALUE)>
TAG44
		    <INTGO>
		    <EMPTY? TEMP27 + TAG43>
		    <NTH1 TEMP27 = STACK>
		    <REST1 TEMP27 = TEMP27>
		    <ADD TEMP28 1 = TEMP28 (TYPE FIX)>
		    <JUMP + TAG44>
TAG43
		    <FRAME 'GET-AC>
		    <PUSH 'PREF-VAL>
		    <PUSH 'T>
		    <CALL 'GET-AC 2 = VAC10>
		    <PUSH VAC10>
		    <CALL 'EMIT TEMP28>
		    <DEAD TEMP28>
		    <EQUAL? INS4 'EQV!-MIMOP - PHRASE48>
		    <SET INS4 'XOR!-MIMOP (TYPE ATOM)>
PHRASE48
		    <TYPE? VAC10 <TYPE-CODE FALSE> + PHRASE50>
		    <TYPE? ADDR27 <TYPE-CODE VARTBL> - PHRASE52>
		    <FRAME 'EMIT>
		    <EQUAL? INS4 'AND!-MIMOP - PHRASE55>
		    <SET TEMP28 203 (TYPE FIX)>
		    <JUMP + PHRASE57>
PHRASE55
		    <EQUAL? INS4 'XOR!-MIMOP - PHRASE56>
		    <SET TEMP28 205 (TYPE FIX)>
		    <JUMP + PHRASE57>
PHRASE56
		    <EQUAL? INS4 'OR!-MIMOP + TAG58>
		    <DEAD INS4>
		    <SET TEMP28 %<> (TYPE FALSE)>
		    <JUMP + PHRASE57>
TAG58
		    <SET TEMP28 201 (TYPE FIX)>
PHRASE57
		    <PUSH TEMP28>
		    <DEAD TEMP28>
		    <NTHUV VAC10 2 = TEMP28 (TYPE FIX)>
		    <DEAD VAC10>
		    <OR TEMP28 #WORD *120* = TEMP28>
		    <LSH TEMP28 24 = TEMP28 (TYPE FIX)>
		    <CHTYPE TEMP28 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD TEMP28>
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'VAR-VALUE-ADDRESS 1 = TEMP28>
		    <PUSH TEMP28>
		    <DEAD TEMP28>
		    <NTHUV RAC11 2 = TEMP28 (TYPE FIX)>
		    <DEAD RAC11>
		    <OR TEMP28 #WORD *120* = TEMP28>
		    <LSH TEMP28 24 = TEMP28 (TYPE FIX)>
		    <CHTYPE TEMP28 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD TEMP28>
		    <CALL 'EMIT 4 = TEMP28>
		    <RETURN TEMP28>
		    <DEAD TEMP28>
PHRASE52
		    <FRAME 'EMIT>
		    <EQUAL? INS4 'AND!-MIMOP - PHRASE65>
		    <SET TEMP27 203 (TYPE FIX)>
		    <JUMP + PHRASE67>
PHRASE65
		    <EQUAL? INS4 'XOR!-MIMOP - PHRASE66>
		    <SET TEMP27 205 (TYPE FIX)>
		    <JUMP + PHRASE67>
PHRASE66
		    <EQUAL? INS4 'OR!-MIMOP + TAG68>
		    <DEAD INS4>
		    <SET TEMP27 %<> (TYPE FALSE)>
		    <JUMP + PHRASE67>
TAG68
		    <SET TEMP27 201 (TYPE FIX)>
PHRASE67
		    <PUSH TEMP27>
		    <DEAD TEMP27>
		    <NTHUV VAC10 2 = TEMP27 (TYPE FIX)>
		    <DEAD VAC10>
		    <OR TEMP27 #WORD *120* = TEMP27>
		    <LSH TEMP27 24 = TEMP27 (TYPE FIX)>
		    <CHTYPE TEMP27 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD TEMP27>
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'VAR-VALUE-ADDRESS 1 = TEMP27>
		    <PUSH TEMP27>
		    <DEAD TEMP27>
		    <SET TEMP29 3 (TYPE FIX)>
		    <SET TEMP27 ADDR27>
		    <DEAD ADDR27>
		    <LOOP (TEMP27 TYPE VALUE LENGTH) (TEMP29 VALUE)>
TAG72
		    <INTGO>
		    <EMPTY? TEMP27 + TAG63>
		    <NTH1 TEMP27 = STACK>
		    <REST1 TEMP27 = TEMP27>
		    <ADD TEMP29 1 = TEMP29 (TYPE FIX)>
		    <JUMP + TAG72>
TAG63
		    <CALL 'EMIT TEMP29 = TEMP28>
		    <DEAD TEMP29>
		    <RETURN TEMP28>
		    <DEAD TEMP28>
PHRASE50
		    <TYPE? SELF?8 <TYPE-CODE FALSE> + PHRASE74>
		    <DEAD SELF?8>
		    <FRAME 'EMIT>
		    <EQUAL? INS4 'AND!-MIMOP - PHRASE77>
		    <SET TEMP29 202 (TYPE FIX)>
		    <JUMP + PHRASE79>
PHRASE77
		    <EQUAL? INS4 'XOR!-MIMOP - PHRASE78>
		    <SET TEMP29 204 (TYPE FIX)>
		    <JUMP + PHRASE79>
PHRASE78
		    <EQUAL? INS4 'OR!-MIMOP + TAG80>
		    <DEAD INS4>
		    <SET TEMP29 %<> (TYPE FALSE)>
		    <JUMP + PHRASE79>
TAG80
		    <SET TEMP29 200 (TYPE FIX)>
PHRASE79
		    <PUSH TEMP29>
		    <DEAD TEMP29>
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'VAR-VALUE-ADDRESS 1 = TEMP29>
		    <PUSH TEMP29>
		    <DEAD TEMP29>
		    <SET TEMP27 2 (TYPE FIX)>
		    <SET TEMP29 ADDR16>
		    <DEAD ADDR16>
		    <LOOP (TEMP29 TYPE VALUE LENGTH) (TEMP27 VALUE)>
TAG84
		    <INTGO>
		    <EMPTY? TEMP29 + TAG75>
		    <NTH1 TEMP29 = STACK>
		    <REST1 TEMP29 = TEMP29>
		    <ADD TEMP27 1 = TEMP27 (TYPE FIX)>
		    <JUMP + TAG84>
TAG75
		    <CALL 'EMIT TEMP27 = TEMP28>
		    <DEAD TEMP27>
		    <RETURN TEMP28>
		    <DEAD TEMP28>
PHRASE74
		    <TYPE? ADDR27 <TYPE-CODE VARTBL> - PHRASE88>
		    <FRAME 'EMIT>
		    <EQUAL? INS4 'AND!-MIMOP - PHRASE91>
		    <SET TEMP27 203 (TYPE FIX)>
		    <JUMP + PHRASE93>
PHRASE91
		    <EQUAL? INS4 'XOR!-MIMOP - PHRASE92>
		    <SET TEMP27 205 (TYPE FIX)>
		    <JUMP + PHRASE93>
PHRASE92
		    <EQUAL? INS4 'OR!-MIMOP + TAG94>
		    <DEAD INS4>
		    <SET TEMP27 %<> (TYPE FALSE)>
		    <JUMP + PHRASE93>
TAG94
		    <SET TEMP27 201 (TYPE FIX)>
PHRASE93
		    <PUSH TEMP27>
		    <DEAD TEMP27>
		    <SET TEMP29 3 (TYPE FIX)>
		    <SET TEMP27 ADDR16>
		    <DEAD ADDR16>
		    <LOOP (TEMP27 TYPE VALUE LENGTH) (TEMP29 VALUE)>
TAG95
		    <INTGO>
		    <EMPTY? TEMP27 + PHRASE98>
		    <NTH1 TEMP27 = STACK>
		    <REST1 TEMP27 = TEMP27>
		    <ADD TEMP29 1 = TEMP29 (TYPE FIX)>
		    <JUMP + TAG95>
PHRASE98
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'VAR-VALUE-ADDRESS 1 = VAC10>
		    <PUSH VAC10>
		    <DEAD VAC10>
		    <NTHUV RAC11 2 = VAC10 (TYPE FIX)>
		    <DEAD RAC11>
		    <OR VAC10 #WORD *120* = VAC10>
		    <LSH VAC10 24 = VAC10 (TYPE FIX)>
		    <CHTYPE VAC10 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD VAC10>
		    <CALL 'EMIT TEMP29 = TEMP28>
		    <DEAD TEMP29>
		    <RETURN TEMP28>
		    <DEAD TEMP28>
PHRASE88
		    <FRAME 'EMIT>
		    <EQUAL? INS4 'AND!-MIMOP - PHRASE104>
		    <SET TEMP29 203 (TYPE FIX)>
		    <JUMP + PHRASE106>
PHRASE104
		    <EQUAL? INS4 'XOR!-MIMOP - PHRASE105>
		    <SET TEMP29 205 (TYPE FIX)>
		    <JUMP + PHRASE106>
PHRASE105
		    <EQUAL? INS4 'OR!-MIMOP + TAG107>
		    <DEAD INS4>
		    <SET TEMP29 %<> (TYPE FALSE)>
		    <JUMP + PHRASE106>
TAG107
		    <SET TEMP29 201 (TYPE FIX)>
PHRASE106
		    <PUSH TEMP29>
		    <DEAD TEMP29>
		    <SET TEMP27 2 (TYPE FIX)>
		    <SET TEMP29 ADDR16>
		    <DEAD ADDR16>
		    <LOOP (TEMP29 TYPE VALUE LENGTH) (TEMP27 VALUE)>
TAG108
		    <INTGO>
		    <EMPTY? TEMP29 + PHRASE111>
		    <NTH1 TEMP29 = STACK>
		    <REST1 TEMP29 = TEMP29>
		    <ADD TEMP27 1 = TEMP27 (TYPE FIX)>
		    <JUMP + TAG108>
PHRASE111
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'VAR-VALUE-ADDRESS 1 = VAC10>
		    <PUSH VAC10>
		    <DEAD VAC10>
		    <SET TEMP29 ADDR27>
		    <DEAD ADDR27>
		    <LOOP (TEMP29 TYPE VALUE LENGTH) (TEMP27 VALUE)>
TAG113
		    <INTGO>
		    <EMPTY? TEMP29 + TAG109>
		    <NTH1 TEMP29 = STACK>
		    <REST1 TEMP29 = TEMP29>
		    <ADD TEMP27 1 = TEMP27 (TYPE FIX)>
		    <JUMP + TAG113>
TAG109
		    <CALL 'EMIT TEMP27 = TEMP28>
		    <DEAD TEMP27>
		    <RETURN TEMP28>
		    <DEAD TEMP28>
PHRASE32
		    <TYPE? SELF?8 <TYPE-CODE FALSE> + PHRASE115>
		    <EQUAL? AMOUNT5 1 - PHRASE115>
		    <FRAME 'EMIT>
		    <FRAME 'PICK-ARITH>
		    <PUSH INS4>
		    <DEAD INS4>
		    <PUSH STYPE19>
		    <DEAD STYPE19>
		    <PUSH 1>
		    <CALL 'PICK-ARITH 3 = STACK>
		    <SET VAC10 1 (TYPE FIX)>
		    <SET TEMP27 ADDR16>
		    <DEAD ADDR16>
		    <LOOP (TEMP27 TYPE VALUE LENGTH) (VAC10 VALUE)>
TAG119
		    <INTGO>
		    <EMPTY? TEMP27 + TAG117>
		    <NTH1 TEMP27 = STACK>
		    <REST1 TEMP27 = TEMP27>
		    <ADD VAC10 1 = VAC10 (TYPE FIX)>
		    <JUMP + TAG119>
TAG117
		    <CALL 'EMIT VAC10 = TEMP28>
		    <DEAD VAC10>
		    <RETURN TEMP28>
		    <DEAD TEMP28>
PHRASE115
		    <TYPE? SELF?8 <TYPE-CODE FALSE> + PHRASE121>
		    <DEAD SELF?8>
		    <FRAME 'EMIT>
		    <FRAME 'PICK-ARITH>
		    <PUSH INS4>
		    <DEAD INS4>
		    <PUSH STYPE19>
		    <DEAD STYPE19>
		    <PUSH 2>
		    <CALL 'PICK-ARITH 3 = STACK>
		    <TYPE? AMOUNT5 <TYPE-CODE FIX> - PHRASE125>
		    <FRAME 'MA-IMM>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'MA-IMM 1 = VAC10>
		    <JUMP + COND124>
PHRASE125
		    <TYPE? AMOUNT5 <TYPE-CODE FLOAT> - PHRASE127>
		    <FRAME 'FLOAT-IMM>
		    <FRAME 'FLOATCONVERT>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'FLOATCONVERT 1 = STACK>
		    <CALL 'FLOAT-IMM 1 = VAC10>
		    <JUMP + COND124>
PHRASE127
		    <TYPE? AMOUNT5 <TYPE-CODE VARTBL> - PHRASE130>
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'VAR-VALUE-ADDRESS 1 = VAC10>
		    <JUMP + COND124>
PHRASE130
		    <SET VAC10 AMOUNT5>
		    <DEAD AMOUNT5>
COND124
		    <PUSH VAC10>
		    <DEAD VAC10>
		    <SET TEMP27 2 (TYPE FIX)>
		    <SET VAC10 ADDR16>
		    <DEAD ADDR16>
		    <LOOP (VAC10 TYPE VALUE LENGTH) (TEMP27 VALUE)>
TAG132
		    <INTGO>
		    <EMPTY? VAC10 + TAG122>
		    <NTH1 VAC10 = STACK>
		    <REST1 VAC10 = VAC10>
		    <ADD TEMP27 1 = TEMP27 (TYPE FIX)>
		    <JUMP + TAG132>
TAG122
		    <CALL 'EMIT TEMP27 = TEMP28>
		    <DEAD TEMP27>
		    <RETURN TEMP28>
		    <DEAD TEMP28>
PHRASE121
		    <TYPE? ADDR27 <TYPE-CODE VARTBL> - PHRASE136>
		    <FRAME 'EMIT>
		    <FRAME 'PICK-ARITH>
		    <PUSH INS4>
		    <DEAD INS4>
		    <PUSH STYPE19>
		    <DEAD STYPE19>
		    <PUSH 3>
		    <CALL 'PICK-ARITH 3 = STACK>
		    <TYPE? AMOUNT5 <TYPE-CODE FIX> - PHRASE140>
		    <FRAME 'MA-IMM>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'MA-IMM 1 = TEMP27>
		    <JUMP + COND139>
PHRASE140
		    <TYPE? AMOUNT5 <TYPE-CODE FLOAT> - PHRASE142>
		    <FRAME 'FLOAT-IMM>
		    <FRAME 'FLOATCONVERT>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'FLOATCONVERT 1 = STACK>
		    <CALL 'FLOAT-IMM 1 = TEMP27>
		    <JUMP + COND139>
PHRASE142
		    <TYPE? AMOUNT5 <TYPE-CODE VARTBL> - PHRASE145>
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'VAR-VALUE-ADDRESS 1 = TEMP27>
		    <JUMP + COND139>
PHRASE145
		    <SET TEMP27 AMOUNT5>
		    <DEAD AMOUNT5>
COND139
		    <PUSH TEMP27>
		    <DEAD TEMP27>
		    <SET VAC10 3 (TYPE FIX)>
		    <SET TEMP27 ADDR16>
		    <DEAD ADDR16>
		    <LOOP (TEMP27 TYPE VALUE LENGTH) (VAC10 VALUE)>
TAG147
		    <INTGO>
		    <EMPTY? TEMP27 + TAG137>
		    <NTH1 TEMP27 = STACK>
		    <REST1 TEMP27 = TEMP27>
		    <ADD VAC10 1 = VAC10 (TYPE FIX)>
		    <JUMP + TAG147>
TAG137
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH ADDR27>
		    <DEAD ADDR27>
		    <CALL 'VAR-VALUE-ADDRESS 1 = STACK>
		    <CALL 'EMIT VAC10 = TEMP28>
		    <DEAD VAC10>
		    <RETURN TEMP28>
		    <DEAD TEMP28>
PHRASE136
		    <FRAME 'EMIT>
		    <FRAME 'PICK-ARITH>
		    <PUSH INS4>
		    <DEAD INS4>
		    <PUSH STYPE19>
		    <DEAD STYPE19>
		    <PUSH 3>
		    <CALL 'PICK-ARITH 3 = STACK>
		    <TYPE? AMOUNT5 <TYPE-CODE FIX> - PHRASE154>
		    <FRAME 'MA-IMM>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'MA-IMM 1 = VAC10>
		    <JUMP + COND153>
PHRASE154
		    <TYPE? AMOUNT5 <TYPE-CODE FLOAT> - PHRASE156>
		    <FRAME 'FLOAT-IMM>
		    <FRAME 'FLOATCONVERT>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'FLOATCONVERT 1 = STACK>
		    <CALL 'FLOAT-IMM 1 = VAC10>
		    <JUMP + COND153>
PHRASE156
		    <TYPE? AMOUNT5 <TYPE-CODE VARTBL> - PHRASE159>
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH AMOUNT5>
		    <DEAD AMOUNT5>
		    <CALL 'VAR-VALUE-ADDRESS 1 = VAC10>
		    <JUMP + COND153>
PHRASE159
		    <SET VAC10 AMOUNT5>
		    <DEAD AMOUNT5>
COND153
		    <PUSH VAC10>
		    <DEAD VAC10>
		    <SET TEMP27 2 (TYPE FIX)>
		    <SET VAC10 ADDR16>
		    <DEAD ADDR16>
		    <LOOP (VAC10 TYPE VALUE LENGTH) (TEMP27 VALUE)>
TAG161
		    <INTGO>
		    <EMPTY? VAC10 + TAG151>
		    <NTH1 VAC10 = STACK>
		    <REST1 VAC10 = VAC10>
		    <ADD TEMP27 1 = TEMP27 (TYPE FIX)>
		    <JUMP + TAG161>
TAG151
		    <SET VAC10 ADDR27>
		    <DEAD ADDR27>
		    <LOOP (VAC10 TYPE VALUE LENGTH) (TEMP27 VALUE)>
TAG163
		    <INTGO>
		    <EMPTY? VAC10 + TAG162>
		    <NTH1 VAC10 = STACK>
		    <REST1 VAC10 = VAC10>
		    <ADD TEMP27 1 = TEMP27 (TYPE FIX)>
		    <JUMP + TAG163>
TAG162
		    <CALL 'EMIT TEMP27 = TEMP28>
		    <DEAD TEMP27>
		    <RETURN TEMP28>
		    <DEAD TEMP28>
		    <END DO-ARITH>

<SETG ADDS [[,INST-INCB ,INST-INCW ,INST-INCL] [,INST-ADDB2 ,INST-ADDW2 ,INST-ADDL2] [,INST-ADDB3 ,INST-ADDW3 ,INST-ADDL3]]>

<SETG SUBS [[,INST-DECB ,INST-DECW ,INST-DECL] [,INST-SUBB2 ,INST-SUBW2 ,INST-SUBL2] [,INST-SUBB3 ,INST-SUBW3 ,INST-SUBL3]]>

<SETG MULS [[] [,INST-MULB2 ,INST-MULW2 ,INST-MULL2] [,INST-MULB3 ,INST-MULW3 ,INST-MULL3]]>

<SETG DIVS [[] [,INST-DIVB2 ,INST-DIVW2 ,INST-DIVL2] [,INST-DIVB3 ,INST-DIVW3 ,INST-DIVL3]]>

<SETG FLOAT-OPS [[] [,INST-ADDF2 ,INST-SUBF2 ,INST-MULF2 ,INST-DIVF2] [,INST-ADDF3 ,INST-SUBF3 ,INST-MULF3 ,INST-DIVF3]]>

<GDECL (LOGIC) VECTOR (FLOAT-OPS ADDS SUBS MULS DIVS) <VECTOR [REST VECTOR]>>

<SETG LOGIC '[AND!-MIMOP OR!-MIMOP XOR!-MIMOP EQV!-MIMOP]>

<SETG FLOATS '[ADDF!-MIMOP SUBF!-MIMOP MULF!-MIMOP DIVF!-MIMOP]>

#WORD *37057362232*
		    <GFCN PICK-ARITH ("VALUE" ANY ATOM ATOM FIX) OP4 STYPE5 NUMOPS6>
		    <TEMP TEMP10 TV7:VECTOR TEMP20>
		    <INTGO>
		    <VEQUAL? OP4 'ADD!-MIMOP - PHRASE9>
		    <GVAL 'ADDS = TEMP10>
		    <NTHUV TEMP10 NUMOPS6 = TV7 (TYPE VECTOR)>
		    <DEAD TEMP10 NUMOPS6>
		    <JUMP + PHRASE14>
PHRASE9
		    <VEQUAL? OP4 'SUB!-MIMOP - PHRASE11>
		    <GVAL 'SUBS = TEMP10>
		    <NTHUV TEMP10 NUMOPS6 = TV7 (TYPE VECTOR)>
		    <DEAD TEMP10 NUMOPS6>
		    <JUMP + PHRASE14>
PHRASE11
		    <VEQUAL? OP4 'MUL!-MIMOP - PHRASE12>
		    <GVAL 'MULS = TEMP10>
		    <NTHUV TEMP10 NUMOPS6 = TV7 (TYPE VECTOR)>
		    <DEAD TEMP10 NUMOPS6>
		    <JUMP + PHRASE14>
PHRASE12
		    <VEQUAL? OP4 'DIV!-MIMOP - PHRASE13>
		    <GVAL 'DIVS = TEMP10>
		    <NTHUV TEMP10 NUMOPS6 = TV7 (TYPE VECTOR)>
		    <DEAD TEMP10 NUMOPS6>
		    <JUMP + PHRASE14>
PHRASE13
		    <GVAL 'FLOAT-OPS = TEMP10>
		    <NTHUV TEMP10 NUMOPS6 = TV7 (TYPE VECTOR)>
		    <DEAD TEMP10 NUMOPS6>
PHRASE14
		    <GVAL 'FLOATS = TEMP10>
		    <EMPTY? TEMP10 + PHRASE16>
		    <LOOP (OP4 VALUE) (TEMP10 LENGTH VALUE TYPE)>
TAG18
		    <NTH1 TEMP10 = TEMP20>
		    <TYPE? TEMP20 <TYPE-CODE ATOM> - TAG19>
		    <VEQUAL? TEMP20 OP4 + TAG17>
		    <DEAD TEMP20>
TAG19
		    <REST1 TEMP10 = TEMP10>
		    <EMPTY? TEMP10 - TAG18>
		    <JUMP + PHRASE16>
TAG17
		    <VEQUAL? OP4 'ADDF!-MIMOP - PHRASE22>
		    <NTHUV TV7 1 = TEMP10>
		    <DEAD TV7>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
PHRASE22
		    <VEQUAL? OP4 'SUBF!-MIMOP - PHRASE23>
		    <NTHUV TV7 2 = TEMP10>
		    <DEAD TV7>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
PHRASE23
		    <VEQUAL? OP4 'MULF!-MIMOP - PHRASE24>
		    <NTHUV TV7 3 = TEMP10>
		    <DEAD TV7>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
PHRASE24
		    <VEQUAL? OP4 'DIVF!-MIMOP + TAG26>
		    <DEAD OP4>
		    <RETURN %<>>
TAG26
		    <NTHUV TV7 4 = TEMP10>
		    <DEAD TV7>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
PHRASE16
		    <SET TEMP20 [VECTOR UVECTOR LIST] (TYPE VECTOR)>
		    <LOOP (STYPE5 VALUE) (TEMP20 LENGTH VALUE)>
TAG29
		    <NTHUV TEMP20 1 = TEMP10>
		    <VEQUAL? TEMP10 STYPE5 + TAG28>
		    <DEAD TEMP10>
		    <RESTUV TEMP20 1 = TEMP20 (TYPE VECTOR)>
		    <EMPUV? TEMP20 - TAG29>
		    <JUMP + PHRASE27>
TAG28
		    <NTHUV TV7 3 = TEMP10>
		    <DEAD TV7>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
PHRASE27
		    <VEQUAL? STYPE5 'WORD - PHRASE32>
		    <DEAD STYPE5>
		    <NTHUV TV7 2 = TEMP10>
		    <DEAD TV7>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
PHRASE32
		    <NTHUV TV7 1 = TEMP10>
		    <DEAD TV7>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
		    <END PICK-ARITH>

#WORD *22506507732*
		    <GFCN GET-ADDR ("VALUE" <TUPLE <LIST <OR EFF-ADDR LADDR>> [2 ANY]> <TUPLE [3 ANY]> ANY AC <OR FIX VARTBL> ATOM ANY "OPTIONAL" ANY ANY) TUP7 STRUC8 SAC9 OFFSET10 STYPE11 AINC?12 RIDXAC13 FULL?14>
		    <OPT-DISPATCH 6 %<> OPT4 OPT5 OPT6>
OPT4
		    <PUSH %<>>
OPT5
		    <PUSH %<>>
OPT6
		    <TEMP TEMP25 IDXAC15 TEMP70>
		    <INTGO>
		    <VEQUAL? STYPE11 'LIST - PHRASE17>
		    <EQUAL? OFFSET10 1 + PHRASE17>
		    <TYPE? OFFSET10 <TYPE-CODE FIX> - PHRASE20>
		    <FRAME 'LIST-REST-CONSTANT-GEN>
		    <PUSH STRUC8>
		    <DEAD STRUC8>
		    <SUB OFFSET10 1 = STACK (TYPE FIX)>
		    <DEAD OFFSET10>
		    <CALL 'LIST-REST-CONSTANT-GEN 2 = SAC9>
		    <JUMP + COND19>
PHRASE20
		    <FRAME 'LIST-REST-VAR-GEN>
		    <PUSH STRUC8>
		    <DEAD STRUC8>
		    <PUSH OFFSET10>
		    <DEAD OFFSET10>
		    <PUSH 'NTH>
		    <CALL 'LIST-REST-VAR-GEN 3 = SAC9>
COND19
		    <SET OFFSET10 1 (TYPE FIX)>
PHRASE17
		    <TYPE? AINC?12 <TYPE-CODE FALSE> + PHRASE24>
		    <DEAD AINC?12>
		    <NTHUV SAC9 2 = TEMP25 (TYPE FIX)>
		    <DEAD SAC9>
		    <OR TEMP25 #WORD *200* = TEMP25>
		    <LSH TEMP25 24 = TEMP25 (TYPE FIX)>
		    <CHTYPE TEMP25 <TYPE-CODE EFF-ADDR> = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <PUTUV TUP7 1 TEMP25>
		    <DEAD TEMP25>
		    <RETURN TUP7>
		    <DEAD TUP7>
PHRASE24
		    <TYPE? OFFSET10 <TYPE-CODE FIX> - PHRASE26>
		    <VEQUAL? OFFSET10 1 - PHRASE28 (TYPE FIX)>
		    <VEQUAL? STYPE11 'VECTOR + BOOL33>
		    <VEQUAL? STYPE11 'LIST - PHRASE32>
		    <DEAD STYPE11>
BOOL33
		    <NTHUV SAC9 2 = TEMP25 (TYPE FIX)>
		    <OR TEMP25 #WORD *140* = TEMP25>
		    <LSH TEMP25 24 = TEMP25 (TYPE FIX)>
		    <CHTYPE TEMP25 <TYPE-CODE EFF-ADDR> = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <PUTUV TUP7 4 TEMP25>
		    <DEAD TEMP25>
		    <FRAME 'MA-DISP>
		    <PUSH SAC9>
		    <PUSH 2>
		    <CALL 'MA-DISP 2 = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <PUTUV TUP7 2 TEMP25>
		    <DEAD TEMP25>
		    <FRAME 'MA-DISP>
		    <PUSH SAC9>
		    <DEAD SAC9>
		    <PUSH 4>
		    <CALL 'MA-DISP 2 = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <PUTUV TUP7 1 TEMP25>
		    <DEAD TEMP25>
		    <RETURN TUP7>
		    <DEAD TUP7>
PHRASE32
		    <NTHUV SAC9 2 = TEMP25 (TYPE FIX)>
		    <DEAD SAC9>
		    <OR TEMP25 #WORD *140* = TEMP25>
		    <LSH TEMP25 24 = TEMP25 (TYPE FIX)>
		    <CHTYPE TEMP25 <TYPE-CODE EFF-ADDR> = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <PUTUV TUP7 1 TEMP25>
		    <DEAD TEMP25>
		    <RETURN TUP7>
		    <DEAD TUP7>
PHRASE28
		    <VEQUAL? STYPE11 'VECTOR - PHRASE39>
		    <FRAME 'MA-DISP>
		    <PUSH SAC9>
		    <SUB OFFSET10 1 = TEMP25 (TYPE FIX)>
		    <LSH TEMP25 3 = STACK (TYPE FIX)>
		    <DEAD TEMP25>
		    <CALL 'MA-DISP 2 = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <PUTUV TUP7 4 TEMP25>
		    <DEAD TEMP25>
		    <FRAME 'MA-DISP>
		    <PUSH SAC9>
		    <SUB OFFSET10 1 = TEMP25 (TYPE FIX)>
		    <LSH TEMP25 3 = TEMP25 (TYPE FIX)>
		    <ADD TEMP25 2 = STACK (TYPE FIX)>
		    <DEAD TEMP25>
		    <CALL 'MA-DISP 2 = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <PUTUV TUP7 2 TEMP25>
		    <DEAD TEMP25>
		    <FRAME 'MA-DISP>
		    <PUSH SAC9>
		    <DEAD SAC9>
		    <SUB OFFSET10 1 = TEMP25 (TYPE FIX)>
		    <DEAD OFFSET10>
		    <LSH TEMP25 3 = TEMP25 (TYPE FIX)>
		    <ADD TEMP25 4 = STACK (TYPE FIX)>
		    <DEAD TEMP25>
		    <CALL 'MA-DISP 2 = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <PUTUV TUP7 1 TEMP25>
		    <DEAD TEMP25>
		    <RETURN TUP7>
		    <DEAD TUP7>
PHRASE39
		    <VEQUAL? STYPE11 'UVECTOR - PHRASE43>
		    <DEAD STYPE11>
		    <FRAME 'MA-DISP>
		    <PUSH SAC9>
		    <DEAD SAC9>
		    <SUB OFFSET10 1 = TEMP25 (TYPE FIX)>
		    <DEAD OFFSET10>
		    <LSH TEMP25 2 = STACK (TYPE FIX)>
		    <DEAD TEMP25>
		    <CALL 'MA-DISP 2 = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <PUTUV TUP7 1 TEMP25>
		    <DEAD TEMP25>
		    <RETURN TUP7>
		    <DEAD TUP7>
PHRASE43
		    <FRAME 'MA-DISP>
		    <PUSH SAC9>
		    <DEAD SAC9>
		    <SUB OFFSET10 1 = STACK (TYPE FIX)>
		    <DEAD OFFSET10>
		    <CALL 'MA-DISP 2 = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <PUTUV TUP7 1 TEMP25>
		    <DEAD TEMP25>
		    <RETURN TUP7>
		    <DEAD TUP7>
PHRASE26
		    <TYPE? RIDXAC13 <TYPE-CODE FALSE> - PHRASE49>
		    <FRAME 'VAR-VALUE-IN-AC?>
		    <PUSH OFFSET10>
		    <CALL 'VAR-VALUE-IN-AC? 1 = IDXAC15>
		    <TYPE? IDXAC15 <TYPE-CODE FALSE> - PHRASE49>
		    <VEQUAL? STYPE11 'VECTOR - BOOL54>
		    <TYPE? FULL?14 <TYPE-CODE FALSE> + PHRASE53>
		    <DEAD FULL?14>
BOOL54
		    <FRAME 'LOAD-VAR>
		    <PUSH OFFSET10>
		    <DEAD OFFSET10>
		    <PUSH 'VALUE>
		    <PUSH %<>>
		    <PUSH 'PREF-VAL>
		    <CALL 'LOAD-VAR 4 = IDXAC15>
		    <JUMP + PHRASE56>
PHRASE53
		    <FRAME 'GET-AC>
		    <PUSH 'PREF-VAL>
		    <CALL 'GET-AC 1 = IDXAC15>
		    <FRAME 'EMIT>
		    <PUSH 120>
		    <FRAME 'MA-IMM>
		    <PUSH 1>
		    <CALL 'MA-IMM 1 = STACK>
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH OFFSET10>
		    <DEAD OFFSET10>
		    <CALL 'VAR-VALUE-ADDRESS 1 = STACK>
		    <NTHUV IDXAC15 2 = TEMP25 (TYPE FIX)>
		    <OR TEMP25 #WORD *120* = TEMP25>
		    <LSH TEMP25 24 = TEMP25 (TYPE FIX)>
		    <CHTYPE TEMP25 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD TEMP25>
		    <CALL 'EMIT 4>
PHRASE56
		    <FRAME 'PROTECT-USE>
		    <PUSH IDXAC15>
		    <CALL 'PROTECT-USE 1>
		    <PUTUV TUP7 3 IDXAC15>
		    <JUMP + PHRASE62>
PHRASE49
		    <TYPE? RIDXAC13 <TYPE-CODE FALSE> - PHRASE62>
		    <DEAD RIDXAC13>
		    <TYPE? FULL?14 <TYPE-CODE FALSE> - PHRASE62>
		    <DEAD FULL?14>
		    <VEQUAL? STYPE11 'VECTOR - PHRASE62>
		    <FRAME 'EMIT>
		    <PUSH 120>
		    <FRAME 'MA-IMM>
		    <PUSH 1>
		    <CALL 'MA-IMM 1 = STACK>
		    <NTHUV IDXAC15 2 = TEMP25 (TYPE FIX)>
		    <OR TEMP25 #WORD *120* = TEMP25>
		    <LSH TEMP25 24 = TEMP25 (TYPE FIX)>
		    <CHTYPE TEMP25 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD TEMP25>
		    <NTHUV IDXAC15 2 = TEMP25 (TYPE FIX)>
		    <OR TEMP25 #WORD *120* = TEMP25>
		    <LSH TEMP25 24 = TEMP25 (TYPE FIX)>
		    <CHTYPE TEMP25 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD TEMP25>
		    <CALL 'EMIT 4>
		    <FRAME 'MUNG-AC>
		    <PUSH IDXAC15>
		    <PUSH 'T>
		    <CALL 'MUNG-AC 2>
		    <PUTUV TUP7 3 IDXAC15>
PHRASE62
		    <VEQUAL? STYPE11 'VECTOR - PHRASE68>
		    <NTHUV IDXAC15 2 = TEMP25 (TYPE FIX)>
		    <OR TEMP25 #WORD *100* = TEMP25>
		    <LSH TEMP25 24 = TEMP25 (TYPE FIX)>
		    <CHTYPE TEMP25 <TYPE-CODE EFF-ADDR> = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <FRAME 'MA-DISP>
		    <PUSH SAC9>
		    <PUSH -8>
		    <CALL 'MA-DISP 2 = TEMP70>
		    <CONS TEMP70 () = TEMP70>
		    <PUTREST TEMP25 TEMP70>
		    <DEAD TEMP70>
		    <PUTUV TUP7 4 TEMP25>
		    <DEAD TEMP25>
		    <NTHUV IDXAC15 2 = TEMP25 (TYPE FIX)>
		    <OR TEMP25 #WORD *100* = TEMP25>
		    <LSH TEMP25 24 = TEMP25 (TYPE FIX)>
		    <CHTYPE TEMP25 <TYPE-CODE EFF-ADDR> = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <FRAME 'MA-DISP>
		    <PUSH SAC9>
		    <PUSH -6>
		    <CALL 'MA-DISP 2 = TEMP70>
		    <CONS TEMP70 () = TEMP70>
		    <PUTREST TEMP25 TEMP70>
		    <DEAD TEMP70>
		    <PUTUV TUP7 2 TEMP25>
		    <DEAD TEMP25>
		    <NTHUV IDXAC15 2 = TEMP25 (TYPE FIX)>
		    <DEAD IDXAC15>
		    <OR TEMP25 #WORD *100* = TEMP25>
		    <LSH TEMP25 24 = TEMP25 (TYPE FIX)>
		    <CHTYPE TEMP25 <TYPE-CODE EFF-ADDR> = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <FRAME 'MA-DISP>
		    <PUSH SAC9>
		    <DEAD SAC9>
		    <PUSH -4>
		    <CALL 'MA-DISP 2 = TEMP70>
		    <CONS TEMP70 () = TEMP70>
		    <PUTREST TEMP25 TEMP70>
		    <DEAD TEMP70>
		    <PUTUV TUP7 1 TEMP25>
		    <DEAD TEMP25>
		    <RETURN TUP7>
		    <DEAD TUP7>
PHRASE68
		    <VEQUAL? STYPE11 'UVECTOR - PHRASE73>
		    <DEAD STYPE11>
		    <NTHUV IDXAC15 2 = TEMP25 (TYPE FIX)>
		    <DEAD IDXAC15>
		    <OR TEMP25 #WORD *100* = TEMP25>
		    <LSH TEMP25 24 = TEMP25 (TYPE FIX)>
		    <CHTYPE TEMP25 <TYPE-CODE EFF-ADDR> = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <FRAME 'MA-DISP>
		    <PUSH SAC9>
		    <DEAD SAC9>
		    <PUSH -4>
		    <CALL 'MA-DISP 2 = TEMP70>
		    <CONS TEMP70 () = TEMP70>
		    <PUTREST TEMP25 TEMP70>
		    <DEAD TEMP70>
		    <PUTUV TUP7 1 TEMP25>
		    <DEAD TEMP25>
		    <RETURN TUP7>
		    <DEAD TUP7>
PHRASE73
		    <NTHUV IDXAC15 2 = TEMP25 (TYPE FIX)>
		    <DEAD IDXAC15>
		    <OR TEMP25 #WORD *100* = TEMP25>
		    <LSH TEMP25 24 = TEMP25 (TYPE FIX)>
		    <CHTYPE TEMP25 <TYPE-CODE EFF-ADDR> = TEMP25>
		    <CONS TEMP25 () = TEMP25>
		    <FRAME 'MA-DISP>
		    <PUSH SAC9>
		    <DEAD SAC9>
		    <PUSH -1>
		    <CALL 'MA-DISP 2 = TEMP70>
		    <CONS TEMP70 () = TEMP70>
		    <PUTREST TEMP25 TEMP70>
		    <DEAD TEMP70>
		    <PUTUV TUP7 1 TEMP25>
		    <DEAD TEMP25>
		    <RETURN TUP7>
		    <DEAD TUP7>
		    <END GET-ADDR>

\

#WORD *13731633355*
		    <GFCN ILDB-LOOKAHEAD ("VALUE" ANY <LIST [REST <OR ATOM FORM>]>) L4>
		    <TEMP TEMP7 TEMP14:LIST LL19:LIST FROB20 REST?22 PUT?23 INS21 TEMP43>
		    <INTGO>
		    <GVAL 'LOOKAHEAD? = TEMP7>
		    <TYPE? TEMP7 <TYPE-CODE FALSE> + MAPEX11>
		    <SET TEMP7 %<> (TYPE FALSE)>
		    <SET TEMP14 L4 (TYPE LIST)>
		    <DEAD L4>
		    <LOOP>
MAP9
		    <INTGO>
		    <EMPL? TEMP14 + MAPAP12>
		    <SET LL19 TEMP14>
		    <NTHL LL19 1 = FROB20>
		    <SET REST?22 %<> (TYPE FALSE)>
		    <SET PUT?23 %<> (TYPE FALSE)>
		    <TYPE? FROB20 <TYPE-CODE FORM> + TAG28>
		    <SET TEMP7 %<> (TYPE FALSE)>
		    <JUMP + PHRASE46>
TAG28
		    <FRAME 'GETPROP>
		    <PUSH FROB20>
		    <PUSH 'DONE>
		    <CALL 'GETPROP 2 = TEMP7>
		    <TYPE? TEMP7 <TYPE-CODE FALSE> + TAG32>
		    <DEAD TEMP7>
		    <SET TEMP7 %<> (TYPE FALSE)>
		    <JUMP + PHRASE46>
TAG32
		    <NTHL FROB20 1 = INS21>
		    <EQUAL? INS21 'SETLR!-MIMOP - PHRASE34>
		    <RESTL LL19 1 = TEMP7 (TYPE LIST)>
		    <EMPL? TEMP7 - TAG38 (TYPE LIST)>
		    <DEAD TEMP7>
		    <SET TEMP7 %<> (TYPE FALSE)>
		    <JUMP + PHRASE46>
TAG38
		    <RESTL LL19 1 = TEMP7 (TYPE LIST)>
		    <NTHL TEMP7 1 = REST?22>
		    <DEAD TEMP7>
		    <TYPE? REST?22 <TYPE-CODE FORM> + TAG39>
		    <SET TEMP7 %<> (TYPE FALSE)>
		    <JUMP + PHRASE46>
TAG39
		    <NTHL REST?22 1 = TEMP7>
		    <EQUAL? TEMP7 'PUSH!-MIMOP + TAG41>
		    <DEAD TEMP7>
		    <SET TEMP7 %<> (TYPE FALSE)>
		    <JUMP + PHRASE46>
TAG41
		    <RESTL REST?22 1 = TEMP7 (TYPE LIST)>
		    <NTHL TEMP7 1 = TEMP7>
		    <RESTL FROB20 1 = TEMP43 (TYPE LIST)>
		    <NTHL TEMP43 1 = TEMP43>
		    <EQUAL? TEMP7 TEMP43 + TAG42>
		    <DEAD TEMP7>
		    <SET TEMP7 %<> (TYPE FALSE)>
		    <JUMP + PHRASE46>
TAG42
		    <FRAME 'WILL-DIE?>
		    <RESTL FROB20 1 = TEMP43 (TYPE LIST)>
		    <NTHL TEMP43 1 = STACK>
		    <DEAD TEMP43>
		    <RESTL LL19 1 = TEMP43 (TYPE LIST)>
		    <DEAD LL19>
		    <RESTL TEMP43 1 = STACK (TYPE LIST)>
		    <DEAD TEMP43>
		    <CALL 'WILL-DIE? 2 = TEMP7>
		    <TYPE? TEMP7 <TYPE-CODE FALSE> + PHRASE46>
		    <RESTL FROB20 1 = TEMP43 (TYPE LIST)>
		    <DEAD FROB20>
		    <PUTL TEMP43 1 'STACK>
		    <DEAD TEMP43>
		    <FRAME 'PUTPROP>
		    <PUSH REST?22>
		    <DEAD REST?22>
		    <PUSH 'DONE>
		    <PUSH 'T>
		    <CALL 'PUTPROP 3 = TEMP7>
		    <JUMP + PHRASE46>
PHRASE34
		    <GVAL 'RESTU = TEMP43>
		    <TYPE? INS21 <TYPE-CODE ATOM> - TAG49>
		    <EMPUV? TEMP43 + TAG49>
		    <LOOP (INS21 VALUE) (TEMP43 LENGTH VALUE)>
TAG51
		    <NTHUV TEMP43 1 = TEMP7>
		    <VEQUAL? TEMP7 INS21 + TAG50>
		    <DEAD TEMP7>
		    <RESTUV TEMP43 1 = TEMP43 (TYPE VECTOR)>
		    <EMPUV? TEMP43 - TAG51>
TAG49
		    <SET REST?22 %<> (TYPE FALSE)>
		    <JUMP + TAG53>
TAG50
		    <SET REST?22 TEMP43>
		    <DEAD TEMP43>
TAG53
		    <VEQUAL? REST?22 0 - TAG60>
		    <GVAL 'PUTU = TEMP43>
		    <TYPE? INS21 <TYPE-CODE ATOM> - TAG54>
		    <EMPUV? TEMP43 + TAG54>
		    <LOOP (INS21 VALUE) (TEMP43 LENGTH VALUE)>
TAG56
		    <NTHUV TEMP43 1 = TEMP7>
		    <VEQUAL? TEMP7 INS21 + TAG55>
		    <DEAD TEMP7>
		    <RESTUV TEMP43 1 = TEMP43 (TYPE VECTOR)>
		    <EMPUV? TEMP43 - TAG56>
TAG54
		    <SET PUT?23 %<> (TYPE FALSE)>
		    <JUMP + TAG58>
TAG55
		    <SET PUT?23 TEMP43>
		    <DEAD TEMP43>
TAG58
		    <VEQUAL? PUT?23 0 - TAG60>
		    <GVAL 'NTHU = TEMP7>
		    <TYPE? INS21 <TYPE-CODE ATOM> - TAG59>
		    <EMPUV? TEMP7 + TAG59>
		    <LOOP (INS21 VALUE) (TEMP7 LENGTH VALUE)>
TAG61
		    <NTHUV TEMP7 1 = TEMP43>
		    <VEQUAL? TEMP43 INS21 + TAG60>
		    <DEAD TEMP43>
		    <RESTUV TEMP7 1 = TEMP7 (TYPE VECTOR)>
		    <EMPUV? TEMP7 - TAG61>
TAG59
		    <SET TEMP7 %<> (TYPE FALSE)>
		    <JUMP + PHRASE46>
TAG60
		    <RESTL FROB20 1 = TEMP43 (TYPE LIST)>
		    <DEAD FROB20>
		    <RESTL TEMP43 1 = TEMP43 (TYPE LIST)>
		    <NTHL TEMP43 1 = TEMP43>
		    <EQUAL? TEMP43 1 + TAG63>
		    <DEAD TEMP43>
		    <SET TEMP7 %<> (TYPE FALSE)>
		    <JUMP + PHRASE46>
TAG63
		    <FRAME 'ILDB-LOOKAHEAD-ONE>
		    <PUSH LL19>
		    <DEAD LL19>
		    <PUSH REST?22>
		    <DEAD REST?22>
		    <PUSH PUT?23>
		    <DEAD PUT?23>
		    <CALL 'ILDB-LOOKAHEAD-ONE 3 = TEMP7>
PHRASE46
		    <RESTL TEMP14 1 = TEMP14 (TYPE LIST)>
		    <JUMP + MAP9>
MAPAP12
MAPEX11
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END ILDB-LOOKAHEAD>

#WORD *20406063640*
		    <GFCN ILDB-LOOKAHEAD-ONE ("VALUE" <OR ATOM FALSE> <LIST [REST <OR ATOM FORM>]> ANY ANY) L4 REST?5 PUT?6>
		    <TEMP OP-INFO7 ARGVEC8:VECTOR TEMP15 OTHOP12 PUTOP13 STRUC9 RES10 TEMP26 TEMP28:LIST TEMP40 TEMP48 TEMP52 TEMP59>
		    <INTGO>
		    <GVAL 'OP-INFO = OP-INFO7>
		    <NTHUV OP-INFO7 1 = ARGVEC8 (TYPE VECTOR)>
		    <FRAME 'PARSE-OP>
		    <NTHL L4 1 = STACK (TYPE FORM)>
		    <PUSH OP-INFO7>
		    <CALL 'PARSE-OP 2>
		    <NTHL L4 1 = TEMP15>
		    <NTH1 TEMP15 = TEMP15>
		    <FRAME 'GETPROP>
		    <PUSH TEMP15>
		    <PUSH 'PAIR>
		    <CALL 'GETPROP 2 = OTHOP12>
		    <FRAME 'GETPROP>
		    <PUSH TEMP15>
		    <PUSH 'PUT-PAIR>
		    <CALL 'GETPROP 2 = PUTOP13>
		    <NTHUV ARGVEC8 1 = STRUC9>
		    <NTHUV OP-INFO7 2 = RES10>
		    <SET TEMP26 %<> (TYPE FALSE)>
		    <RESTL L4 1 = TEMP28 (TYPE LIST)>
		    <LOOP>
MAP19
		    <INTGO>
		    <EMPL? TEMP28 + MAPAP22>
		    <SET TEMP26 TEMP28>
		    <NTHL TEMP26 1 = TEMP26>
		    <TYPE? TEMP26 <TYPE-CODE ATOM> - PHRASE34>
		    <RETURN 'T>
PHRASE34
		    <NTHL TEMP26 1 = TEMP40>
		    <EQUAL? TEMP40 OTHOP12 + BOOL39>
		    <DEAD TEMP40>
		    <TYPE? PUT?6 <TYPE-CODE FALSE> - BOOL42>
		    <TYPE? REST?5 <TYPE-CODE FALSE> + PHRASE37>
BOOL42
		    <NTHL TEMP26 1 = TEMP40>
		    <EQUAL? TEMP40 PUTOP13 - PHRASE37>
		    <DEAD TEMP40>
BOOL39
		    <RESTL TEMP26 1 = TEMP40 (TYPE LIST)>
		    <NTHL TEMP40 1 = TEMP40>
		    <EQUAL? TEMP40 STRUC9 - PHRASE37>
		    <DEAD TEMP40>
		    <RESTL TEMP26 1 = TEMP40 (TYPE LIST)>
		    <RESTL TEMP40 1 = TEMP40 (TYPE LIST)>
		    <NTHL TEMP40 1 = TEMP40>
		    <EQUAL? TEMP40 1 - PHRASE37>
		    <DEAD TEMP40>
		    <GVAL 'RESTU = TEMP40>
		    <TYPE? TEMP15 <TYPE-CODE ATOM> - PHRASE44>
		    <EMPUV? TEMP40 + PHRASE44>
		    <LOOP (TEMP15 VALUE) (TEMP40 LENGTH VALUE)>
TAG46
		    <NTHUV TEMP40 1 = TEMP48>
		    <VEQUAL? TEMP48 TEMP15 + TAG45>
		    <DEAD TEMP48>
		    <RESTUV TEMP40 1 = TEMP40 (TYPE VECTOR)>
		    <EMPUV? TEMP40 - TAG46>
		    <JUMP + PHRASE44>
TAG45
		    <NTHR TEMP15 3 = TEMP40 (RECORD-TYPE ATOM)>
		    <DEAD TEMP15>
		    <RESTUS TEMP40 4 = TEMP15 (TYPE STRING)>
		    <DEAD TEMP40>
		    <JUMP + COND43>
PHRASE44
		    <NTHR TEMP15 3 = TEMP40 (RECORD-TYPE ATOM)>
		    <DEAD TEMP15>
		    <RESTUS TEMP40 3 = TEMP15 (TYPE STRING)>
		    <DEAD TEMP40>
COND43
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP15 "UV" - PHRASE50>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP40 TEMP15>
		    <SET TEMP48 "UV" (TYPE STRING)>
		    <LENUS TEMP40 = OTHOP12 (TYPE FIX)>
		    <VEQUAL? OTHOP12 2 - PHRASE50>
		    <LOOP (TEMP40 VALUE LENGTH) (TEMP48 VALUE LENGTH) (OTHOP12 VALUE)>
TAG54
		    <NTHUS TEMP40 1 = TEMP52>
		    <NTHUS TEMP48 1 = PUTOP13>
		    <VEQUAL? TEMP52 PUTOP13 - PHRASE50>
		    <DEAD TEMP52>
		    <RESTUS TEMP40 1 = TEMP40 (TYPE STRING)>
		    <RESTUS TEMP48 1 = TEMP48 (TYPE STRING)>
		    <SUB OTHOP12 1 = OTHOP12 (TYPE FIX)>
		    <GRTR? OTHOP12 0 + TAG54 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <SET TEMP15 (STRUCTURE-TYPE VECTOR) (TYPE LIST)>
		    <JUMP + PHRASE61>
PHRASE50
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP15 "UU" - PHRASE55>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP48 TEMP15>
		    <SET TEMP40 "UU" (TYPE STRING)>
		    <LENUS TEMP48 = PUTOP13 (TYPE FIX)>
		    <VEQUAL? PUTOP13 2 - PHRASE55>
		    <LOOP (TEMP48 VALUE LENGTH) (TEMP40 VALUE LENGTH) (PUTOP13 VALUE)>
TAG57
		    <NTHUS TEMP48 1 = TEMP52>
		    <NTHUS TEMP40 1 = OTHOP12>
		    <VEQUAL? TEMP52 OTHOP12 - PHRASE55>
		    <DEAD TEMP52>
		    <RESTUS TEMP48 1 = TEMP48 (TYPE STRING)>
		    <RESTUS TEMP40 1 = TEMP40 (TYPE STRING)>
		    <SUB PUTOP13 1 = PUTOP13 (TYPE FIX)>
		    <GRTR? PUTOP13 0 + TAG57 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <SET TEMP15 (STRUCTURE-TYPE UVECTOR) (TYPE LIST)>
		    <JUMP + PHRASE61>
PHRASE55
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TEMP15 "US" - PHRASE58>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP40 TEMP15>
		    <DEAD TEMP15>
		    <SET TEMP48 "US" (TYPE STRING)>
		    <LENUS TEMP40 = OTHOP12 (TYPE FIX)>
		    <VEQUAL? OTHOP12 2 - PHRASE58>
		    <LOOP (TEMP40 VALUE LENGTH) (TEMP48 VALUE LENGTH) (OTHOP12 VALUE)>
TAG60
		    <NTHUS TEMP40 1 = TEMP52>
		    <NTHUS TEMP48 1 = TEMP59>
		    <VEQUAL? TEMP52 TEMP59 - PHRASE58>
		    <DEAD TEMP52 TEMP59>
		    <RESTUS TEMP40 1 = TEMP40 (TYPE STRING)>
		    <RESTUS TEMP48 1 = TEMP48 (TYPE STRING)>
		    <SUB OTHOP12 1 = OTHOP12 (TYPE FIX)>
		    <GRTR? OTHOP12 0 + TAG60 (TYPE FIX)>
		    <ENDIF "STRING-EQUAL?">
		    <SET TEMP15 (STRUCTURE-TYPE STRING) (TYPE LIST)>
		    <JUMP + PHRASE61>
PHRASE58
		    <SET TEMP15 (STRUCTURE-TYPE BYTES) (TYPE LIST)>
PHRASE61
		    <FRAME 'PARSE-OP>
		    <PUSH TEMP26>
		    <PUSH OP-INFO7>
		    <CALL 'PARSE-OP 2>
		    <TYPE? PUT?6 <TYPE-CODE FALSE> - TAG66>
		    <NTHL TEMP26 1 = TEMP48>
		    <GVAL 'PUTU = TEMP40>
		    <TYPE? TEMP48 <TYPE-CODE ATOM> - PHRASE64>
		    <EMPUV? TEMP40 + PHRASE64>
		    <LOOP (TEMP48 VALUE) (TEMP40 LENGTH VALUE)>
TAG67
		    <NTHUV TEMP40 1 = TEMP59>
		    <VEQUAL? TEMP59 TEMP48 + TAG66>
		    <DEAD TEMP59>
		    <RESTUV TEMP40 1 = TEMP40 (TYPE VECTOR)>
		    <EMPUV? TEMP40 - TAG67>
		    <JUMP + PHRASE64>
TAG66
		    <FRAME 'FORM>
		    <PUSH 'IDPB!-MIMOP>
		    <PUSH STRUC9>
		    <DEAD STRUC9>
		    <TYPE? PUT?6 <TYPE-CODE FALSE> + PHRASE71>
		    <FRAME 'NTH>
		    <NTHL L4 1 = STACK>
		    <PUSH 4>
		    <CALL 'NTH 2 = TEMP40>
		    <JUMP + COND70>
PHRASE71
		    <NTHUV ARGVEC8 3 = TEMP40>
		    <DEAD ARGVEC8>
COND70
		    <PUSH TEMP40>
		    <DEAD TEMP40>
		    <TYPE? PUT?6 <TYPE-CODE FALSE> + PHRASE74>
		    <DEAD PUT?6>
		    <NTHUV OP-INFO7 2 = TEMP40>
		    <DEAD OP-INFO7>
		    <JUMP + COND73>
PHRASE74
		    <SET TEMP40 RES10>
		    <DEAD RES10>
COND73
		    <PUSH TEMP40>
		    <DEAD TEMP40>
		    <PUSH TEMP15>
		    <DEAD TEMP15>
		    <CALL 'FORM 5 = TEMP40>
		    <PUTL L4 1 TEMP40>
		    <DEAD L4 TEMP40>
		    <FRAME 'PUTPROP>
		    <PUSH TEMP26>
		    <DEAD TEMP26>
		    <PUSH 'DONE>
		    <PUSH 'T>
		    <CALL 'PUTPROP 3>
		    <RETURN 'T>
PHRASE64
		    <FRAME 'FORM>
		    <PUSH 'ILDB!-MIMOP>
		    <PUSH STRUC9>
		    <DEAD STRUC9>
		    <TYPE? REST?5 <TYPE-CODE FALSE> + PHRASE79>
		    <NTHUV OP-INFO7 2 = TEMP40>
		    <JUMP + COND78>
PHRASE79
		    <SET TEMP40 RES10>
COND78
		    <PUSH TEMP40>
		    <DEAD TEMP40>
		    <TYPE? REST?5 <TYPE-CODE FALSE> + PHRASE81>
		    <DEAD REST?5>
		    <SET TEMP40 RES10>
		    <DEAD RES10>
		    <JUMP + COND80>
PHRASE81
		    <NTHUV OP-INFO7 2 = TEMP40>
		    <DEAD OP-INFO7>
COND80
		    <PUSH TEMP40>
		    <DEAD TEMP40>
		    <PUSH TEMP15>
		    <DEAD TEMP15>
		    <CALL 'FORM 5 = TEMP40>
		    <PUTL L4 1 TEMP40>
		    <DEAD L4 TEMP40>
		    <FRAME 'PUTPROP>
		    <PUSH TEMP26>
		    <DEAD TEMP26>
		    <PUSH 'DONE>
		    <PUSH 'T>
		    <CALL 'PUTPROP 3>
		    <RETURN 'T>
PHRASE37
		    <SET TEMP48 TEMP26>
		    <TYPE STRUC9 = TEMP59>
		    <LOOP (STRUC9 VALUE) (TEMP59 VALUE) (TEMP48 VALUE)>
TAG86
		    <NTHL TEMP48 1 = TEMP52>
		    <TYPE? TEMP52 TEMP59 - TAG87>
		    <VEQUAL? TEMP52 STRUC9 + BOOL84>
		    <DEAD TEMP52>
TAG87
		    <RESTL TEMP48 1 = TEMP48 (TYPE LIST)>
		    <EMPL? TEMP48 - TAG86>
		    <SET TEMP48 TEMP26>
		    <LOOP (TEMP48 VALUE)>
TAG89
		    <NTHL TEMP48 1 = TEMP59>
		    <TYPE? TEMP59 <TYPE-CODE ATOM> - TAG90>
		    <VEQUAL? TEMP59 '+ + BOOL84>
		    <DEAD TEMP59>
TAG90
		    <RESTL TEMP48 1 = TEMP48 (TYPE LIST)>
		    <EMPL? TEMP48 - TAG89>
		    <SET TEMP48 TEMP26>
		    <LOOP (TEMP48 VALUE)>
TAG92
		    <NTHL TEMP48 1 = TEMP59>
		    <TYPE? TEMP59 <TYPE-CODE ATOM> - TAG93>
		    <VEQUAL? TEMP59 '- + BOOL84>
		    <DEAD TEMP59>
TAG93
		    <RESTL TEMP48 1 = TEMP48 (TYPE LIST)>
		    <EMPL? TEMP48 - TAG92>
		    <FRAME 'PARSE-OP>
		    <PUSH TEMP26>
		    <DEAD TEMP26>
		    <PUSH OP-INFO7>
		    <CALL 'PARSE-OP 2>
		    <NTHUV OP-INFO7 4 = TEMP26>
		    <TYPE? TEMP26 <TYPE-CODE FALSE> + PHRASE83>
BOOL84
		    <RETURN 'T>
PHRASE83
		    <RESTL TEMP28 1 = TEMP28 (TYPE LIST)>
		    <JUMP + MAP19>
MAPAP22
		    <RETURN TEMP26>
		    <DEAD TEMP26>
		    <END ILDB-LOOKAHEAD-ONE>

"Generate ILDB/IDPB-like stuff.  Call with NTH/PUT inst, structure,
 result of nth/put, result of rest, flag, new value for put"

#WORD *34270440762*
		    <GFCN IDPB-GEN ("VALUE" ATOM ANY ANY ANY ANY) STRUC4 ELVAL5 STRES6 HINT7>
		    <TEMP TEMP9:ATOM>
		    <INTGO>
		    <FRAME 'ILDB-GEN>
		    <PUSH STRUC4>
		    <DEAD STRUC4>
		    <PUSH ELVAL5>
		    <DEAD ELVAL5>
		    <PUSH STRES6>
		    <DEAD STRES6>
		    <PUSH HINT7>
		    <DEAD HINT7>
		    <PUSH 'T>
		    <CALL 'ILDB-GEN 5 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END IDPB-GEN>

#WORD *22623136231*
		    <GFCN ILDB-GEN ("VALUE" ATOM VARTBL ANY ANY ANY "OPTIONAL" ANY) STRUC6 ELVAL7 STRES8 HINT9 PUT?10>
		    <OPT-DISPATCH 4 %<> OPT4 OPT5>
OPT4
		    <PUSH %<>>
OPT5
		    <TEMP (ELTAC15 %<>) (DOUBLE?16 %<>) (NO-TYPE?21 %<>) TEMP28 VINS12:FIX EHINT11 TEMP46 VAC19 ELAC14>
		    <INTGO>
		    <TYPE? ELVAL7 <TYPE-CODE ATOM> + TAG26>
		    <TYPE? ELVAL7 <TYPE-CODE VARTBL> - PHRASE24>
TAG26
		    <FRAME 'NTH-LOOK-AHEAD>
		    <PUSH 'ILDB!-MIMOP>
		    <PUSH STRUC6>
		    <PUSH STRES8>
		    <PUSH ELVAL7>
		    <PUSH %<>>
		    <PUSH HINT9>
		    <CALL 'NTH-LOOK-AHEAD 6 = TEMP28>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> + PHRASE24>
		    <DEAD TEMP28>
		    <RETURN 'NORMAL>
PHRASE24
		    <FRAME 'PARSE-HINT>
		    <PUSH HINT9>
		    <DEAD HINT9>
		    <PUSH 'STRUCTURE-TYPE>
		    <CALL 'PARSE-HINT 2 = HINT9>
		    <EQUAL? HINT9 'VECTOR - PHRASE31>
		    <SET DOUBLE?16 'T (TYPE ATOM)>
		    <SET VINS12 125 (TYPE FIX)>
		    <SET EHINT11 %<> (TYPE FALSE)>
		    <JUMP + COND37>
PHRASE31
		    <EQUAL? HINT9 'UVECTOR - PHRASE32>
		    <SET VINS12 208 (TYPE FIX)>
		    <SET EHINT11 'FIX (TYPE ATOM)>
		    <JUMP + COND37>
PHRASE32
		    <EQUAL? HINT9 'BYTES - PHRASE33>
		    <SET EHINT11 'FIX (TYPE ATOM)>
		    <TYPE? PUT?10 <TYPE-CODE FALSE> + PHRASE35>
		    <SET VINS12 144 (TYPE FIX)>
		    <JUMP + COND37>
PHRASE35
		    <SET VINS12 154 (TYPE FIX)>
		    <JUMP + COND37>
PHRASE33
		    <EQUAL? HINT9 'STRING - COND37>
		    <DEAD HINT9>
		    <SET EHINT11 'CHARACTER (TYPE ATOM)>
		    <TYPE? PUT?10 <TYPE-CODE FALSE> + PHRASE38>
		    <SET VINS12 144 (TYPE FIX)>
		    <JUMP + COND37>
PHRASE38
		    <SET VINS12 154 (TYPE FIX)>
COND37
		    <FRAME 'VAR-VALUE-IN-AC?>
		    <PUSH STRUC6>
		    <CALL 'VAR-VALUE-IN-AC? 1 = TEMP28>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> - PHRASE40>
		    <FRAME 'LOAD-VAR>
		    <PUSH STRUC6>
		    <PUSH 'VALUE>
		    <PUSH %<>>
		    <PUSH 'PREF-VAL>
		    <CALL 'LOAD-VAR 4 = TEMP28>
PHRASE40
		    <FRAME 'PROTECT>
		    <PUSH TEMP28>
		    <CALL 'PROTECT 1>
		    <GVAL 'AC-0 = TEMP46>
		    <EQUAL? TEMP46 TEMP28 + PHRASE45>
		    <DEAD TEMP46>
		    <FRAME 'PROTECT>
		    <FRAME 'PREV-AC>
		    <PUSH TEMP28>
		    <DEAD TEMP28>
		    <CALL 'PREV-AC 1 = STACK>
		    <CALL 'PROTECT 1>
PHRASE45
		    <TYPE? PUT?10 <TYPE-CODE FALSE> + PHRASE50>
		    <TYPE? ELVAL7 <TYPE-CODE VARTBL> - PHRASE52>
		    <FRAME 'FIND-CACHE-VAR>
		    <PUSH ELVAL7>
		    <CALL 'FIND-CACHE-VAR 1 = ELTAC15>
		    <TYPE? ELTAC15 <TYPE-CODE FALSE> + PHRASE54>
		    <VEQUAL? DOUBLE?16 0 + PHRASE57>
		    <NTHUV ELTAC15 9 = TEMP28>
		    <JUMP + COND56>
PHRASE57
		    <SET TEMP28 %<> (TYPE FALSE)>
COND56
		    <NTHUV ELTAC15 6 = VAC19>
		    <VEQUAL? DOUBLE?16 0 + BOOL60>
		    <TYPE? VAC19 <TYPE-CODE FALSE> + BOOL61>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> + BOOL61>
		    <FRAME 'NEXT-AC>
		    <PUSH TEMP28>
		    <CALL 'NEXT-AC 1 = TEMP46>
		    <EQUAL? VAC19 TEMP46 + BOOL60>
		    <DEAD TEMP46>
BOOL61
		    <TYPE? VAC19 <TYPE-CODE FALSE> - PHRASE59>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> - PHRASE59>
BOOL60
		    <VEQUAL? DOUBLE?16 0 + PHRASE65>
		    <FRAME 'VAR-TYPE-ADDRESS>
		    <PUSH ELVAL7>
		    <CALL 'VAR-TYPE-ADDRESS 1 = VAC19>
		    <JUMP + PHRASE120>
PHRASE65
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH ELVAL7>
		    <CALL 'VAR-VALUE-ADDRESS 1 = VAC19>
		    <JUMP + PHRASE120>
PHRASE59
		    <TYPE? TEMP28 <TYPE-CODE FALSE> + BOOL71>
		    <NTHUV ELTAC15 4 = TEMP46>
		    <TYPE? TEMP46 <TYPE-CODE FALSE> + PHRASE69>
		    <DEAD TEMP46>
BOOL71
		    <TYPE? VAC19 <TYPE-CODE FALSE> + BOOL72>
		    <DEAD VAC19>
		    <NTHUV ELTAC15 2 = TEMP46>
		    <TYPE? TEMP46 <TYPE-CODE FALSE> + PHRASE69>
		    <DEAD TEMP46>
BOOL72
		    <FRAME 'ADDR-VAR-TYPE>
		    <PUSH ELVAL7>
		    <CALL 'ADDR-VAR-TYPE 1 = VAC19>
		    <JUMP + PHRASE120>
PHRASE69
		    <TYPE? ELTAC15 <TYPE-CODE FALSE> + PHRASE76>
		    <NTHUV ELTAC15 4 = TEMP46>
		    <DEAD ELTAC15>
		    <TYPE? TEMP46 <TYPE-CODE FALSE> - PHRASE76>
		    <DEAD TEMP46>
		    <TYPE? TEMP28 <TYPE-CODE FALSE> - PHRASE76>
		    <DEAD TEMP28>
		    <FRAME 'VARTBL-DECL>
		    <PUSH ELVAL7>
		    <CALL 'VARTBL-DECL 1 = TEMP46>
		    <TYPE? TEMP46 <TYPE-CODE FALSE> + PHRASE76>
		    <DEAD TEMP46>
		    <FRAME 'TYPE-WORD>
		    <FRAME 'VARTBL-DECL>
		    <PUSH ELVAL7>
		    <CALL 'VARTBL-DECL 1 = STACK>
		    <CALL 'TYPE-WORD 1 = NO-TYPE?21>
		    <JUMP + PHRASE81>
PHRASE76
		    <FRAME 'VAR-TYPE-ADDRESS>
		    <PUSH ELVAL7>
		    <CALL 'VAR-TYPE-ADDRESS 1 = NO-TYPE?21>
PHRASE81
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH ELVAL7>
		    <CALL 'VAR-VALUE-ADDRESS 1 = VAC19>
		    <JUMP + PHRASE120>
PHRASE54
		    <VEQUAL? DOUBLE?16 0 + PHRASE84>
		    <FRAME 'VAR-TYPE-ADDRESS>
		    <PUSH ELVAL7>
		    <CALL 'VAR-TYPE-ADDRESS 1 = VAC19>
		    <JUMP + PHRASE120>
PHRASE84
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH ELVAL7>
		    <CALL 'VAR-VALUE-ADDRESS 1 = VAC19>
		    <JUMP + PHRASE120>
PHRASE52
		    <VEQUAL? DOUBLE?16 0 + PHRASE87>
		    <FRAME 'ADDR-TYPE-MQUOTE>
		    <PUSH ELVAL7>
		    <CALL 'ADDR-TYPE-MQUOTE 1 = VAC19>
		    <JUMP + PHRASE120>
PHRASE87
		    <FRAME 'MA-IMM>
		    <PUSH ELVAL7>
		    <CALL 'MA-IMM 1 = VAC19>
		    <JUMP + PHRASE120>
PHRASE50
		    <EQUAL? ELVAL7 'STACK - PHRASE90>
		    <VEQUAL? DOUBLE?16 0 - PHRASE92>
		    <FRAME 'EMIT-PUSH>
		    <FRAME 'TYPE-WORD>
		    <PUSH EHINT11>
		    <CALL 'TYPE-WORD 1 = STACK>
		    <PUSH 'LONG>
		    <CALL 'EMIT-PUSH 2>
PHRASE92
		    <GVAL 'AC-TP = TEMP46>
		    <NTHUV TEMP46 2 = TEMP46 (TYPE FIX)>
		    <OR TEMP46 #WORD *200* = TEMP46>
		    <LSH TEMP46 24 = TEMP46 (TYPE FIX)>
		    <CHTYPE TEMP46 <TYPE-CODE EFF-ADDR> = ELAC14>
		    <DEAD TEMP46>
		    <JUMP + PHRASE120>
PHRASE90
		    <EQUAL? ELVAL7 STRUC6 - PHRASE95>
		    <VEQUAL? DOUBLE?16 0 + PHRASE97>
		    <FRAME 'GET-AC>
		    <PUSH 'DOUBLE>
		    <PUSH 'T>
		    <CALL 'GET-AC 2 = ELAC14>
		    <JUMP + PHRASE120>
PHRASE97
		    <FRAME 'GET-AC>
		    <PUSH 'PREF-VAL>
		    <PUSH 'T>
		    <CALL 'GET-AC 2 = ELAC14>
		    <JUMP + PHRASE120>
PHRASE95
		    <FRAME 'VAR-VALUE-IN-AC?>
		    <PUSH ELVAL7>
		    <CALL 'VAR-VALUE-IN-AC? 1 = ELAC14>
		    <TYPE? ELAC14 <TYPE-CODE FALSE> + BOOL104>
		    <VEQUAL? DOUBLE?16 0 + PHRASE100>
		    <FRAME 'VAR-TYPE-WORD-IN-AC?>
		    <PUSH ELVAL7>
		    <CALL 'VAR-TYPE-WORD-IN-AC? 1 = ELTAC15>
		    <TYPE? ELTAC15 <TYPE-CODE FALSE> + BOOL104>
		    <FRAME 'NEXT-AC>
		    <PUSH ELTAC15>
		    <CALL 'NEXT-AC 1 = TEMP46>
		    <EQUAL? TEMP46 ELAC14 + PHRASE100>
		    <DEAD TEMP46>
BOOL104
		    <FRAME 'DEAD-VAR>
		    <PUSH ELVAL7>
		    <CALL 'DEAD-VAR 1>
		    <VEQUAL? DOUBLE?16 0 + PHRASE109>
		    <FRAME 'GET-AC>
		    <PUSH 'DOUBLE>
		    <PUSH 'T>
		    <CALL 'GET-AC 2 = ELAC14>
		    <JUMP + PHRASE120>
PHRASE109
		    <FRAME 'GET-AC>
		    <PUSH 'PREF-VAL>
		    <PUSH 'T>
		    <CALL 'GET-AC 2 = ELAC14>
		    <JUMP + PHRASE120>
PHRASE100
		    <FRAME 'DEAD-VAR>
		    <PUSH ELVAL7>
		    <CALL 'DEAD-VAR 1>
		    <VEQUAL? DOUBLE?16 0 + PHRASE115>
		    <FRAME 'STORE-AC>
		    <PUSH ELTAC15>
		    <PUSH 'T>
		    <FRAME 'FIND-CACHE-VAR>
		    <PUSH ELVAL7>
		    <CALL 'FIND-CACHE-VAR 1 = STACK>
		    <CALL 'STORE-AC 3>
		    <FRAME 'STORE-AC>
		    <PUSH ELAC14>
		    <DEAD ELAC14>
		    <PUSH 'T>
		    <FRAME 'FIND-CACHE-VAR>
		    <PUSH ELVAL7>
		    <CALL 'FIND-CACHE-VAR 1 = STACK>
		    <CALL 'STORE-AC 3>
		    <SET ELAC14 ELTAC15>
		    <DEAD ELTAC15>
		    <JUMP + PHRASE120>
PHRASE115
		    <FRAME 'STORE-AC>
		    <PUSH ELAC14>
		    <PUSH 'T>
		    <FRAME 'FIND-CACHE-VAR>
		    <PUSH ELVAL7>
		    <CALL 'FIND-CACHE-VAR 1 = STACK>
		    <CALL 'STORE-AC 3>
PHRASE120
		    <FRAME 'REST-BLOCK-GEN>
		    <PUSH STRUC6>
		    <DEAD STRUC6>
		    <PUSH 1>
		    <PUSH STRES8>
		    <DEAD STRES8>
		    <PUSH 0>
		    <PUSH %<>>
		    <PUSH VINS12>
		    <DEAD VINS12>
		    <TYPE? PUT?10 <TYPE-CODE FALSE> + PHRASE125>
		    <SET TEMP46 VAC19>
		    <DEAD VAC19>
		    <JUMP + COND124>
PHRASE125
		    <SET TEMP46 ELAC14>
COND124
		    <PUSH TEMP46>
		    <DEAD TEMP46>
		    <PUSH PUT?10>
		    <PUSH NO-TYPE?21>
		    <DEAD NO-TYPE?21>
		    <CALL 'REST-BLOCK-GEN 9>
		    <TYPE? PUT?10 <TYPE-CODE FALSE> - PHRASE135>
		    <DEAD PUT?10>
		    <EQUAL? ELVAL7 'STACK + PHRASE135>
		    <VEQUAL? DOUBLE?16 0 + PHRASE130>
		    <DEAD DOUBLE?16>
		    <FRAME 'DEST-PAIR>
		    <FRAME 'NEXT-AC>
		    <PUSH ELAC14>
		    <CALL 'NEXT-AC 1 = STACK>
		    <PUSH ELAC14>
		    <PUSH ELVAL7>
		    <CALL 'DEST-PAIR 3>
		    <JUMP + COND129>
PHRASE130
		    <FRAME 'LINK-VAR-TO-AC>
		    <PUSH ELVAL7>
		    <PUSH ELAC14>
		    <PUSH 'VALUE>
		    <PUSH %<>>
		    <CALL 'LINK-VAR-TO-AC 4>
COND129
		    <TYPE? EHINT11 <TYPE-CODE FALSE> + PHRASE135>
		    <FRAME 'DEST-DECL>
		    <PUSH ELAC14>
		    <DEAD ELAC14>
		    <PUSH ELVAL7>
		    <DEAD ELVAL7>
		    <PUSH EHINT11>
		    <DEAD EHINT11>
		    <CALL 'DEST-DECL 3>
PHRASE135
		    <RETURN 'NORMAL>
		    <END ILDB-GEN>

\

#WORD *21110472311*
		    <GFCN NTH-LENGTH-GEN ("VALUE" ATOM ANY ANY ANY ANY ANY) CINS4 STRUC5 OFF6 STYPE7 RES8>
		    <TEMP TEMP12 TUP10:TUPLE RAC11 TEMP26:FIX>
		    <INTGO>
		    <USBLOCK <TYPE-CODE TUPLE> 5 = TUP10>
		    <SET TEMP12 TUP10>
		    <LOOP (TEMP12 VALUE LENGTH)>
ISTR13
		    <EMPUV? TEMP12 + ISTRE14>
		    <PUTUV TEMP12 1 %<>>
		    <RESTUV TEMP12 1 = TEMP12>
		    <JUMP + ISTR13>
ISTRE14
		    <FRAME 'VAR-VALUE-IN-AC?>
		    <PUSH STRUC5>
		    <CALL 'VAR-VALUE-IN-AC? 1 = TEMP12>
		    <TYPE? TEMP12 <TYPE-CODE FALSE> - PHRASE16>
		    <FRAME 'LOAD-VAR>
		    <PUSH STRUC5>
		    <PUSH 'VALUE>
		    <PUSH %<>>
		    <PUSH 'PREF-VAL>
		    <CALL 'LOAD-VAR 4 = TEMP12>
PHRASE16
		    <FRAME 'PROTECT-USE>
		    <PUSH TEMP12>
		    <CALL 'PROTECT-USE 1>
		    <FRAME 'GET-ADDR>
		    <PUSH TUP10>
		    <PUSH STRUC5>
		    <DEAD STRUC5>
		    <PUSH TEMP12>
		    <DEAD TEMP12>
		    <PUSH OFF6>
		    <DEAD OFF6>
		    <PUSH STYPE7>
		    <DEAD STYPE7>
		    <PUSH %<>>
		    <PUSH %<>>
		    <PUSH 'T>
		    <CALL 'GET-ADDR 8>
		    <FRAME 'VAR-VALUE-IN-AC?>
		    <PUSH RES8>
		    <CALL 'VAR-VALUE-IN-AC? 1 = RAC11>
		    <TYPE? RAC11 <TYPE-CODE FALSE> - PHRASE22>
		    <FRAME 'GET-AC>
		    <PUSH 'PREF-VAL>
		    <PUSH 'T>
		    <CALL 'GET-AC 2 = RAC11>
PHRASE22
		    <FRAME 'EMIT>
		    <PUSH 176>
		    <SET TEMP26 2 (TYPE FIX)>
		    <NTHUV TUP10 2 = TEMP12>
		    <DEAD TUP10>
		    <LOOP (TEMP12 TYPE VALUE LENGTH) (TEMP26 VALUE)>
TAG27
		    <INTGO>
		    <EMPTY? TEMP12 + TAG25>
		    <NTH1 TEMP12 = STACK>
		    <REST1 TEMP12 = TEMP12>
		    <ADD TEMP26 1 = TEMP26 (TYPE FIX)>
		    <JUMP + TAG27>
TAG25
		    <NTHUV RAC11 2 = TEMP12 (TYPE FIX)>
		    <OR TEMP12 #WORD *120* = TEMP12>
		    <LSH TEMP12 24 = TEMP12 (TYPE FIX)>
		    <CHTYPE TEMP12 <TYPE-CODE EFF-ADDR> = STACK>
		    <DEAD TEMP12>
		    <CALL 'EMIT TEMP26>
		    <DEAD TEMP26>
		    <FRAME 'LINK-VAR-TO-AC>
		    <PUSH RES8>
		    <PUSH RAC11>
		    <PUSH 'VALUE>
		    <PUSH %<>>
		    <CALL 'LINK-VAR-TO-AC 4>
		    <FRAME 'DEST-DECL>
		    <PUSH RAC11>
		    <DEAD RAC11>
		    <PUSH RES8>
		    <DEAD RES8>
		    <PUSH 'FIX>
		    <CALL 'DEST-DECL 3>
		    <ADJ -12>
		    <RETURN 'NORMAL>
		    <END NTH-LENGTH-GEN>

#WORD *1201315533*
		    <GFCN NTH-LENGTH-COMP-GEN ("VALUE" ATOM ANY ANY ANY ANY ANY ANY OP-INFO) CINS4 STRUC5 OFF6 STYPE7 AMT8 CMPINS9 OP-INFO10>
		    <TEMP TEMP13 TUP12:TUPLE TEMP27>
		    <INTGO>
		    <USBLOCK <TYPE-CODE TUPLE> 5 = TUP12>
		    <SET TEMP13 TUP12>
		    <LOOP (TEMP13 VALUE LENGTH)>
ISTR14
		    <EMPUV? TEMP13 + ISTRE15>
		    <PUTUV TEMP13 1 %<>>
		    <RESTUV TEMP13 1 = TEMP13>
		    <JUMP + ISTR14>
ISTRE15
		    <FRAME 'VAR-VALUE-IN-AC?>
		    <PUSH STRUC5>
		    <CALL 'VAR-VALUE-IN-AC? 1 = TEMP13>
		    <TYPE? TEMP13 <TYPE-CODE FALSE> - PHRASE17>
		    <FRAME 'LOAD-VAR>
		    <PUSH STRUC5>
		    <PUSH 'VALUE>
		    <PUSH %<>>
		    <PUSH 'PREF-VAL>
		    <CALL 'LOAD-VAR 4 = TEMP13>
PHRASE17
		    <FRAME 'PROTECT-USE>
		    <PUSH TEMP13>
		    <CALL 'PROTECT-USE 1>
		    <FRAME 'GET-ADDR>
		    <PUSH TUP12>
		    <PUSH STRUC5>
		    <DEAD STRUC5>
		    <PUSH TEMP13>
		    <DEAD TEMP13>
		    <PUSH OFF6>
		    <DEAD OFF6>
		    <PUSH STYPE7>
		    <DEAD STYPE7>
		    <PUSH %<>>
		    <PUSH %<>>
		    <PUSH 'T>
		    <CALL 'GET-ADDR 8>
		    <EQUAL? AMT8 0 - PHRASE23>
		    <EQUAL? CMPINS9 'EMPL?!-MIMOP - PHRASE25>
		    <FRAME 'EMIT>
		    <PUSH 213>
		    <SET TEMP27 1 (TYPE FIX)>
		    <NTHUV TUP12 1 = TEMP13>
		    <DEAD TUP12>
		    <LOOP (TEMP13 TYPE VALUE LENGTH) (TEMP27 VALUE)>
TAG28
		    <INTGO>
		    <EMPTY? TEMP13 + TAG26>
		    <NTH1 TEMP13 = STACK>
		    <REST1 TEMP13 = TEMP13>
		    <ADD TEMP27 1 = TEMP27 (TYPE FIX)>
		    <JUMP + TAG28>
TAG26
		    <CALL 'EMIT TEMP27>
		    <DEAD TEMP27>
		    <JUMP + PHRASE38>
PHRASE25
		    <FRAME 'EMIT>
		    <PUSH 181>
		    <SET TEMP13 1 (TYPE FIX)>
		    <NTHUV TUP12 2 = TEMP27>
		    <DEAD TUP12>
		    <LOOP (TEMP27 TYPE VALUE LENGTH) (TEMP13 VALUE)>
TAG31
		    <INTGO>
		    <EMPTY? TEMP27 + TAG30>
		    <NTH1 TEMP27 = STACK>
		    <REST1 TEMP27 = TEMP27>
		    <ADD TEMP13 1 = TEMP13 (TYPE FIX)>
		    <JUMP + TAG31>
TAG30
		    <CALL 'EMIT TEMP13>
		    <DEAD TEMP13>
		    <JUMP + PHRASE38>
PHRASE23
		    <TYPE? AMT8 <TYPE-CODE FIX> - PHRASE33>
		    <FRAME 'EMIT>
		    <PUSH 177>
		    <SET TEMP27 2 (TYPE FIX)>
		    <NTHUV TUP12 2 = TEMP13>
		    <DEAD TUP12>
		    <LOOP (TEMP13 TYPE VALUE LENGTH) (TEMP27 VALUE)>
TAG35
		    <INTGO>
		    <EMPTY? TEMP13 + TAG34>
		    <NTH1 TEMP13 = STACK>
		    <REST1 TEMP13 = TEMP13>
		    <ADD TEMP27 1 = TEMP27 (TYPE FIX)>
		    <JUMP + TAG35>
TAG34
		    <FRAME 'MA-IMM>
		    <PUSH AMT8>
		    <DEAD AMT8>
		    <CALL 'MA-IMM 1 = STACK>
		    <CALL 'EMIT TEMP27>
		    <DEAD TEMP27>
		    <JUMP + PHRASE38>
PHRASE33
		    <FRAME 'EMIT>
		    <PUSH 177>
		    <SET TEMP13 2 (TYPE FIX)>
		    <NTHUV TUP12 2 = TEMP27>
		    <DEAD TUP12>
		    <LOOP (TEMP27 TYPE VALUE LENGTH) (TEMP13 VALUE)>
TAG40
		    <INTGO>
		    <EMPTY? TEMP27 + TAG39>
		    <NTH1 TEMP27 = STACK>
		    <REST1 TEMP27 = TEMP27>
		    <ADD TEMP13 1 = TEMP13 (TYPE FIX)>
		    <JUMP + TAG40>
TAG39
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH AMT8>
		    <DEAD AMT8>
		    <CALL 'VAR-VALUE-ADDRESS 1 = STACK>
		    <CALL 'EMIT TEMP13>
		    <DEAD TEMP13>
PHRASE38
		    <FRAME 'GEN-TEST-INST>
		    <FRAME 'COMPUTE-DIRECTION>
		    <NTHUV OP-INFO10 5 = STACK (TYPE ATOM)>
		    <GVAL 'EMPU = TEMP13>
		    <TYPE? CMPINS9 <TYPE-CODE ATOM> - PHRASE46>
		    <EMPUV? TEMP13 + PHRASE46>
		    <LOOP (CMPINS9 VALUE) (TEMP13 LENGTH VALUE)>
TAG48
		    <NTHUV TEMP13 1 = TEMP27>
		    <VEQUAL? TEMP27 CMPINS9 + TAG47>
		    <DEAD TEMP27>
		    <RESTUV TEMP13 1 = TEMP13 (TYPE VECTOR)>
		    <EMPUV? TEMP13 - TAG48>
		    <JUMP + PHRASE46>
TAG47
		    <SET TEMP13 2 (TYPE FIX)>
		    <JUMP + PHRASE53>
PHRASE46
		    <EQUAL? CMPINS9 'EMPL?!-MIMOP - PHRASE50>
		    <SET TEMP13 2 (TYPE FIX)>
		    <JUMP + PHRASE53>
PHRASE50
		    <EQUAL? CMPINS9 'VEQUAL?!-MIMOP - PHRASE51>
		    <SET TEMP13 2 (TYPE FIX)>
		    <JUMP + PHRASE53>
PHRASE51
		    <EQUAL? CMPINS9 'LESS?!-MIMOP - PHRASE52>
		    <SET TEMP13 1 (TYPE FIX)>
		    <JUMP + PHRASE53>
PHRASE52
		    <EQUAL? CMPINS9 'GRTR?!-MIMOP + TAG54>
		    <DEAD CMPINS9>
		    <SET TEMP13 %<> (TYPE FALSE)>
		    <JUMP + PHRASE53>
TAG54
		    <SET TEMP13 3 (TYPE FIX)>
PHRASE53
		    <PUSH TEMP13>
		    <DEAD TEMP13>
		    <CALL 'COMPUTE-DIRECTION 2 = STACK>
		    <NTHUV OP-INFO10 4 = STACK>
		    <DEAD OP-INFO10>
		    <PUSH %<>>
		    <CALL 'GEN-TEST-INST 3>
		    <ADJ -12>
		    <RETURN 'CONDITIONAL-BRANCH>
		    <END NTH-LENGTH-COMP-GEN>

#WORD *35332202437*
		    <GFCN SLOT-COMPARE ("VALUE" ATOM ANY ANY ANY ANY ANY ANY ANY ANY) STRUC14 STRUC25 CMPINS6 OP-INFO7 OFF18 STYPE19 OFF210 STYPE211>
		    <TEMP (SAC112 %<>) (SAC213 %<>) TEMP19 ADDR114 ADDR215 (SHORT?16 %<>) TEMP30>
		    <INTGO>
		    <USBLOCK <TYPE-CODE TUPLE> 5 = ADDR114>
		    <SET TEMP19 ADDR114>
		    <LOOP (TEMP19 VALUE LENGTH)>
ISTR20
		    <EMPUV? TEMP19 + ISTRE21>
		    <PUTUV TEMP19 1 %<>>
		    <RESTUV TEMP19 1 = TEMP19>
		    <JUMP + ISTR20>
ISTRE21
		    <USBLOCK <TYPE-CODE TUPLE> 5 = ADDR215>
		    <SET TEMP19 ADDR215>
		    <LOOP (TEMP19 VALUE LENGTH)>
ISTR22
		    <EMPUV? TEMP19 + ISTRE23>
		    <PUTUV TEMP19 1 %<>>
		    <RESTUV TEMP19 1 = TEMP19>
		    <JUMP + ISTR22>
ISTRE23
		    <SET TEMP19 [STRING BYTES] (TYPE VECTOR)>
		    <TYPE? STYPE19 <TYPE-CODE ATOM> - TAG27>
		    <LOOP (STYPE19 VALUE) (TEMP19 LENGTH VALUE)>
TAG28
		    <NTHUV TEMP19 1 = TEMP30>
		    <VEQUAL? TEMP30 STYPE19 + TAG31>
		    <DEAD TEMP30>
		    <RESTUV TEMP19 1 = TEMP19 (TYPE VECTOR)>
		    <EMPUV? TEMP19 - TAG28>
TAG27
		    <SET TEMP19 [STRING BYTES] (TYPE VECTOR)>
		    <TYPE? STYPE211 <TYPE-CODE ATOM> - PHRASE25>
		    <LOOP (STYPE211 VALUE) (TEMP19 LENGTH VALUE)>
TAG32
		    <NTHUV TEMP19 1 = TEMP30>
		    <VEQUAL? TEMP30 STYPE211 + TAG31>
		    <DEAD TEMP30>
		    <RESTUV TEMP19 1 = TEMP19 (TYPE VECTOR)>
		    <EMPUV? TEMP19 - TAG32>
		    <JUMP + PHRASE25>
TAG31
		    <SET SHORT?16 'T (TYPE ATOM)>
PHRASE25
		    <TYPE? OFF210 <TYPE-CODE FALSE> + PHRASE39>
		    <TYPE? OFF18 <TYPE-CODE FALSE> - PHRASE39>
		    <SET OFF18 OFF210>
		    <DEAD OFF210>
		    <SET OFF210 %<> (TYPE FALSE)>
		    <SET STYPE19 STYPE211>
		    <DEAD STYPE211>
		    <SET STYPE211 %<> (TYPE FALSE)>
		    <SET TEMP19 STRUC25>
		    <DEAD STRUC25>
		    <SET STRUC25 STRUC14>
		    <DEAD STRUC14>
		    <SET STRUC14 TEMP19>
		    <DEAD TEMP19>
		    <EQUAL? CMPINS6 'GRTR?!-MIMOP - PHRASE38>
		    <SET CMPINS6 'LESS?!-MIMOP (TYPE ATOM)>
		    <JUMP + PHRASE39>
PHRASE38
		    <EQUAL? CMPINS6 'LESS?!-MIMOP - PHRASE39>
		    <SET CMPINS6 'GRTR?!-MIMOP (TYPE ATOM)>
PHRASE39
		    <TYPE? OFF18 <TYPE-CODE FALSE> + PHRASE42>
		    <FRAME 'VAR-VALUE-IN-AC?>
		    <PUSH STRUC14>
		    <CALL 'VAR-VALUE-IN-AC? 1 = SAC112>
		    <TYPE? SAC112 <TYPE-CODE FALSE> - PHRASE44>
		    <FRAME 'LOAD-VAR>
		    <PUSH STRUC14>
		    <PUSH 'VALUE>
		    <PUSH %<>>
		    <PUSH 'PREF-VAL>
		    <CALL 'LOAD-VAR 4 = SAC112>
PHRASE44
		    <FRAME 'PROTECT-USE>
		    <PUSH SAC112>
		    <CALL 'PROTECT-USE 1>
PHRASE42
		    <TYPE? OFF210 <TYPE-CODE FALSE> + PHRASE57>
		    <EQUAL? STRUC14 STRUC25 + PHRASE51>
		    <FRAME 'VAR-VALUE-IN-AC?>
		    <PUSH STRUC25>
		    <CALL 'VAR-VALUE-IN-AC? 1 = SAC213>
		    <TYPE? SAC213 <TYPE-CODE FALSE> - PHRASE53>
		    <FRAME 'LOAD-VAR>
		    <PUSH STRUC25>
		    <PUSH 'VALUE>
		    <PUSH %<>>
		    <PUSH 'PREF-VAL>
		    <CALL 'LOAD-VAR 4 = SAC213>
PHRASE53
		    <FRAME 'PROTECT-USE>
		    <PUSH SAC213>
		    <CALL 'PROTECT-USE 1>
		    <JUMP + PHRASE57>
PHRASE51
		    <SET SAC213 SAC112>
PHRASE57
		    <TYPE? OFF18 <TYPE-CODE FALSE> + PHRASE59>
		    <FRAME 'GET-ADDR>
		    <PUSH ADDR114>
		    <PUSH STRUC14>
		    <PUSH SAC112>
		    <DEAD SAC112>
		    <PUSH OFF18>
		    <PUSH STYPE19>
		    <PUSH %<>>
		    <CALL 'GET-ADDR 6>
		    <JUMP + PHRASE75>
PHRASE59
		    <TYPE? STRUC14 <TYPE-CODE VARTBL> - PHRASE61>
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH STRUC14>
		    <CALL 'VAR-VALUE-ADDRESS 1 = ADDR114>
		    <JUMP + PHRASE75>
PHRASE61
		    <FRAME 'FIX-CONSTANT?>
		    <PUSH STRUC14>
		    <CALL 'FIX-CONSTANT? 1 = TEMP19>
		    <TYPE? TEMP19 <TYPE-CODE FALSE> + PHRASE63>
		    <DEAD TEMP19>
		    <TYPE? STRUC14 <TYPE-CODE FLOAT> + PHRASE66>
		    <FRAME 'MA-IMM>
		    <PUSH STRUC14>
		    <CALL 'MA-IMM 1 = ADDR114>
		    <JUMP + PHRASE75>
PHRASE66
		    <FRAME 'FLOAT-IMM>
		    <FRAME 'FLOATCONVERT>
		    <PUSH STRUC14>
		    <CALL 'FLOATCONVERT 1 = STACK>
		    <CALL 'FLOAT-IMM 1 = ADDR114>
		    <JUMP + PHRASE75>
PHRASE63
		    <FRAME 'PRIMTYPE>
		    <PUSH STRUC14>
		    <CALL 'PRIMTYPE 1 = TEMP19>
		    <VEQUAL? TEMP19 'LIST - PHRASE71>
		    <DEAD TEMP19>
		    <EMPTY? STRUC14 - PHRASE71>
		    <SET STRUC14 0 (TYPE FIX)>
		    <FRAME 'MA-IMM>
		    <PUSH 0>
		    <CALL 'MA-IMM 1 = ADDR114>
		    <JUMP + PHRASE75>
PHRASE71
		    <FRAME 'ADDR-VALUE-MQUOTE>
		    <PUSH STRUC14>
		    <CALL 'ADDR-VALUE-MQUOTE 1 = ADDR114>
PHRASE75
		    <TYPE? OFF210 <TYPE-CODE FALSE> - PHRASE78>
		    <TYPE? STRUC25 <TYPE-CODE VARTBL> - PHRASE80>
		    <FRAME 'VAR-VALUE-ADDRESS>
		    <PUSH STRUC25>
		    <CALL 'VAR-VALUE-ADDRESS 1 = ADDR215>
		    <JUMP + PHRASE102>
PHRASE80
		    <FRAME 'FIX-CONSTANT?>
		    <PUSH STRUC25>
		    <CALL 'FIX-CONSTANT? 1 = TEMP19>
		    <TYPE? TEMP19 <TYPE-CODE FALSE> + PHRASE82>
		    <DEAD TEMP19>
		    <TYPE? STRUC25 <TYPE-CODE FLOAT> + PHRASE85>
		    <FRAME 'MA-IMM>
		    <PUSH STRUC25>
		    <CALL 'MA-IMM 1 = ADDR215>
		    <JUMP + PHRASE102>
PHRASE85
		    <FRAME 'FLOAT-IMM>
		    <FRAME 'FLOATCONVERT>
		    <PUSH STRUC25>
		    <CALL 'FLOATCONVERT 1 = STACK>
		    <CALL 'FLOAT-IMM 1 = ADDR215>
		    <JUMP + PHRASE102>
PHRASE82
		    <FRAME 'PRIMTYPE>
		    <PUSH STRUC25>
		    <CALL 'PRIMTYPE 1 = TEMP19>
		    <VEQUAL? TEMP19 'LIST - PHRASE90>
		    <DEAD TEMP19>
		    <EMPTY? STRUC25 - PHRASE90>
		    <SET STRUC25 0 (TYPE FIX)>
		    <FRAME 'MA-IMM>
		    <PUSH 0>
		    <CALL 'MA-IMM 1 = ADDR215>
		    <JUMP + PHRASE102>
PHRASE90
		    <FRAME 'ADDR-VALUE-MQUOTE>
		    <PUSH STRUC25>
		    <CALL 'ADDR-VALUE-MQUOTE 1 = ADDR215>
		    <JUMP + PHRASE102>
PHRASE78
		    <FRAME 'NTH>
		    <PUSH ADDR114>
		    <PUSH 3>
		    <CALL 'NTH 2 = TEMP19>
		    <TYPE? TEMP19 <TYPE-CODE FALSE> + PHRASE96>
		    <DEAD TEMP19>
		    <EQUAL? OFF18 OFF210 - PHRASE96>
		    <DEAD OFF18>
		    <TYPE? OFF210 <TYPE-CODE VARTBL> - PHRASE96>
		    <EQUAL? STYPE19 STYPE211 + BOOL99>
		    <DEAD STYPE19>
		    <VEQUAL? SHORT?16 0 + PHRASE96>
BOOL99
		    <FRAME 'GET-ADDR>
		    <PUSH ADDR215>
		    <PUSH STRUC25>
		    <PUSH SAC213>
		    <DEAD SAC213>
		    <PUSH OFF210>
		    <DEAD OFF210>
		    <PUSH STYPE211>
		    <DEAD STYPE211>
		    <PUSH %<>>
		    <FRAME 'NTH>
		    <PUSH ADDR114>
		    <PUSH 3>
		    <CALL 'NTH 2 = STACK>
		    <CALL 'GET-ADDR 7>
		    <JUMP + PHRASE102>
PHRASE96
		    <FRAME 'GET-ADDR>
		    <PUSH ADDR215>
		    <PUSH STRUC25>
		    <PUSH SAC213>
		    <DEAD SAC213>
		    <PUSH OFF210>
		    <DEAD OFF210>
		    <PUSH STYPE211>
		    <DEAD STYPE211>
		    <PUSH %<>>
		    <CALL 'GET-ADDR 6>
PHRASE102
		    <EQUAL? STRUC14 0 + BOOL106>
		    <EQUAL? STRUC25 0 - PHRASE105>
BOOL106
		    <FRAME 'EMIT>
		    <VEQUAL? SHORT?16 0 + PHRASE109>
		    <DEAD SHORT?16>
		    <SET TEMP19 149 (TYPE FIX)>
		    <JUMP + COND108>
PHRASE109
		    <SET TEMP19 213 (TYPE FIX)>
COND108
		    <PUSH TEMP19>
		    <DEAD TEMP19>
		    <SET TEMP30 1 (TYPE FIX)>
		    <EQUAL? STRUC14 0 - PHRASE111>
		    <DEAD STRUC14>
		    <NTHUV ADDR215 1 = TEMP19>
		    <DEAD ADDR215>
		    <JUMP + COND110>
PHRASE111
		    <NTHUV ADDR114 1 = TEMP19>
		    <DEAD ADDR114>
COND110
		    <LOOP (TEMP19 TYPE VALUE LENGTH) (TEMP30 VALUE)>
TAG112
		    <INTGO>
		    <EMPTY? TEMP19 + TAG107>
		    <NTH1 TEMP19 = STACK>
		    <REST1 TEMP19 = TEMP19>
		    <ADD TEMP30 1 = TEMP30 (TYPE FIX)>
		    <JUMP + TAG112>
TAG107
		    <CALL 'EMIT TEMP30>
		    <DEAD TEMP30>
		    <JUMP + PHRASE132>
PHRASE105
		    <EQUAL? STRUC14 0.0 + BOOL115>
		    <EQUAL? STRUC25 0.0 - PHRASE114>
BOOL115
		    <FRAME 'EMIT>
		    <PUSH 83>
		    <SET TEMP19 1 (TYPE FIX)>
		    <EQUAL? STRUC14 0.0 - PHRASE118>
		    <DEAD STRUC14>
		    <NTHUV ADDR215 1 = TEMP30>
		    <DEAD ADDR215>
		    <JUMP + COND117>
PHRASE118
		    <NTHUV ADDR114 1 = TEMP30>
		    <DEAD ADDR114>
COND117
		    <LOOP (TEMP30 TYPE VALUE LENGTH) (TEMP19 VALUE)>
TAG119
		    <INTGO>
		    <EMPTY? TEMP30 + TAG116>
		    <NTH1 TEMP30 = STACK>
		    <REST1 TEMP30 = TEMP30>
		    <ADD TEMP19 1 = TEMP19 (TYPE FIX)>
		    <JUMP + TAG119>
TAG116
		    <CALL 'EMIT TEMP19>
		    <DEAD TEMP19>
		    <JUMP + PHRASE132>
PHRASE114
		    <TYPE? STRUC14 <TYPE-CODE FLOAT> + BOOL122>
		    <DEAD STRUC14>
		    <TYPE? STRUC25 <TYPE-CODE FLOAT> - PHRASE121>
		    <DEAD STRUC25>
BOOL122
		    <FRAME 'EMIT>
		    <PUSH 81>
		    <SET TEMP30 1 (TYPE FIX)>
		    <TYPE? ADDR114 <TYPE-CODE TUPLE> - PHRASE125>
		    <NTHUV ADDR114 1 = TEMP19>
		    <DEAD ADDR114>
		    <JUMP + COND124>
PHRASE125
		    <CONS ADDR114 () = TEMP19>
		    <DEAD ADDR114>
COND124
		    <LOOP (TEMP19 TYPE VALUE LENGTH) (TEMP30 VALUE)>
TAG126
		    <INTGO>
		    <EMPTY? TEMP19 + TAG123>
		    <NTH1 TEMP19 = STACK>
		    <REST1 TEMP19 = TEMP19>
		    <ADD TEMP30 1 = TEMP30 (TYPE FIX)>
		    <JUMP + TAG126>
TAG123
		    <TYPE? ADDR215 <TYPE-CODE TUPLE> - PHRASE129>
		    <NTHUV ADDR215 1 = TEMP19>
		    <DEAD ADDR215>
		    <JUMP + COND128>
PHRASE129
		    <CONS ADDR215 () = TEMP19>
		    <DEAD ADDR215>
COND128
		    <LOOP (TEMP19 TYPE VALUE LENGTH) (TEMP30 VALUE)>
TAG130
		    <INTGO>
		    <EMPTY? TEMP19 + TAG127>
		    <NTH1 TEMP19 = STACK>
		    <REST1 TEMP19 = TEMP19>
		    <ADD TEMP30 1 = TEMP30 (TYPE FIX)>
		    <JUMP + TAG130>
TAG127
		    <CALL 'EMIT TEMP30>
		    <DEAD TEMP30>
		    <JUMP + PHRASE132>
PHRASE121
		    <FRAME 'EMIT>
		    <VEQUAL? SHORT?16 0 + PHRASE135>
		    <DEAD SHORT?16>
		    <SET TEMP30 145 (TYPE FIX)>
		    <JUMP + PHRASE136>
PHRASE135
		    <SET TEMP30 209 (TYPE FIX)>
PHRASE136
		    <PUSH TEMP30>
		    <DEAD TEMP30>
		    <SET SAC112 1 (TYPE FIX)>
		    <TYPE? ADDR114 <TYPE-CODE TUPLE> - PHRASE139>
		    <NTHUV ADDR114 1 = TEMP30>
		    <DEAD ADDR114>
		    <JUMP + COND138>
PHRASE139
		    <CONS ADDR114 () = TEMP30>
		    <DEAD ADDR114>
COND138
		    <LOOP (TEMP30 TYPE VALUE LENGTH) (SAC112 VALUE)>
TAG140
		    <INTGO>
		    <EMPTY? TEMP30 + TAG133>
		    <NTH1 TEMP30 = STACK>
		    <REST1 TEMP30 = TEMP30>
		    <ADD SAC112 1 = SAC112 (TYPE FIX)>
		    <JUMP + TAG140>
TAG133
		    <TYPE? ADDR215 <TYPE-CODE TUPLE> - PHRASE143>
		    <NTHUV ADDR215 1 = TEMP30>
		    <DEAD ADDR215>
		    <JUMP + COND142>
PHRASE143
		    <CONS ADDR215 () = TEMP30>
		    <DEAD ADDR215>
COND142
		    <LOOP (TEMP30 TYPE VALUE LENGTH) (SAC112 VALUE)>
TAG144
		    <INTGO>
		    <EMPTY? TEMP30 + TAG141>
		    <NTH1 TEMP30 = STACK>
		    <REST1 TEMP30 = TEMP30>
		    <ADD SAC112 1 = SAC112 (TYPE FIX)>
		    <JUMP + TAG144>
TAG141
		    <CALL 'EMIT SAC112>
		    <DEAD SAC112>
PHRASE132
		    <FRAME 'GEN-TEST-INST>
		    <FRAME 'COMPUTE-DIRECTION>
		    <NTHUV OP-INFO7 5 = STACK (TYPE ATOM)>
		    <EQUAL? CMPINS6 'VEQUAL?!-MIMOP - PHRASE149>
		    <SET SAC112 2 (TYPE FIX)>
		    <JUMP + PHRASE151>
PHRASE149
		    <EQUAL? CMPINS6 'LESS?!-MIMOP - PHRASE150>
		    <SET SAC112 1 (TYPE FIX)>
		    <JUMP + PHRASE151>
PHRASE150
		    <EQUAL? CMPINS6 'GRTR?!-MIMOP + TAG152>
		    <DEAD CMPINS6>
		    <SET SAC112 %<> (TYPE FALSE)>
		    <JUMP + PHRASE151>
TAG152
		    <SET SAC112 3 (TYPE FIX)>
PHRASE151
		    <PUSH SAC112>
		    <DEAD SAC112>
		    <CALL 'COMPUTE-DIRECTION 2 = STACK>
		    <NTHUV OP-INFO7 4 = STACK>
		    <DEAD OP-INFO7>
		    <PUSH %<>>
		    <CALL 'GEN-TEST-INST 3>
		    <ADJ -24>
		    <RETURN 'CONDITIONAL-BRANCH>
		    <END SLOT-COMPARE>
